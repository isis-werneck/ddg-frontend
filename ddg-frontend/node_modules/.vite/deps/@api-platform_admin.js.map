{
  "version": 3,
  "sources": ["../../lodash.isplainobject/index.js", "../../graphql/utilities/getIntrospectionQuery.js", "../../graphql/language/kinds.js", "../../graphql/utilities/getOperationAST.js", "../../graphql/jsutils/isObjectLike.js", "../../graphql/jsutils/invariant.js", "../../graphql/language/location.js", "../../graphql/language/printLocation.js", "../../graphql/error/GraphQLError.js", "../../graphql/utilities/getOperationRootType.js", "../../graphql/error/syntaxError.js", "../../graphql/language/ast.js", "../../graphql/language/directiveLocation.js", "../../graphql/language/characterClasses.js", "../../graphql/language/blockString.js", "../../graphql/language/tokenKind.js", "../../graphql/language/lexer.js", "../../graphql/jsutils/devAssert.js", "../../graphql/jsutils/inspect.js", "../../graphql/jsutils/instanceOf.js", "../../graphql/language/source.js", "../../graphql/language/parser.js", "../../graphql/jsutils/isIterableObject.js", "../../graphql/jsutils/isPromise.js", "../../graphql/jsutils/memoize3.js", "../../graphql/jsutils/Path.js", "../../graphql/jsutils/promiseForObject.js", "../../graphql/jsutils/promiseReduce.js", "../../graphql/jsutils/toError.js", "../../graphql/error/locatedError.js", "../../graphql/jsutils/didYouMean.js", "../../graphql/jsutils/identityFunc.js", "../../graphql/jsutils/keyMap.js", "../../graphql/jsutils/keyValMap.js", "../../graphql/jsutils/mapValue.js", "../../graphql/jsutils/naturalCompare.js", "../../graphql/jsutils/suggestionList.js", "../../graphql/jsutils/toObjMap.js", "../../graphql/language/printString.js", "../../graphql/language/visitor.js", "../../graphql/language/printer.js", "../../graphql/utilities/valueFromASTUntyped.js", "../../graphql/type/assertName.js", "../../graphql/type/definition.js", "../../graphql/type/scalars.js", "../../graphql/utilities/astFromValue.js", "../../graphql/type/introspection.js", "../../graphql/utilities/typeComparators.js", "../../graphql/type/directives.js", "../../graphql/type/schema.js", "../../graphql/type/validate.js", "../../graphql/utilities/typeFromAST.js", "../../graphql/jsutils/printPathArray.js", "../../graphql/utilities/coerceInputValue.js", "../../graphql/utilities/valueFromAST.js", "../../graphql/execution/values.js", "../../graphql/execution/collectFields.js", "../../graphql/execution/execute.js", "../../graphql/utilities/introspectionFromSchema.js", "../../graphql/utilities/buildClientSchema.js", "../../graphql/utilities/TypeInfo.js", "../../graphql/language/predicates.js", "../../graphql/validation/rules/ExecutableDefinitionsRule.js", "../../graphql/validation/rules/FieldsOnCorrectTypeRule.js", "../../graphql/validation/rules/FragmentsOnCompositeTypesRule.js", "../../graphql/validation/rules/KnownArgumentNamesRule.js", "../../graphql/validation/rules/KnownDirectivesRule.js", "../../graphql/validation/rules/KnownFragmentNamesRule.js", "../../graphql/validation/rules/KnownTypeNamesRule.js", "../../graphql/validation/rules/LoneAnonymousOperationRule.js", "../../graphql/validation/rules/LoneSchemaDefinitionRule.js", "../../graphql/validation/rules/MaxIntrospectionDepthRule.js", "../../graphql/validation/rules/NoFragmentCyclesRule.js", "../../graphql/validation/rules/NoUndefinedVariablesRule.js", "../../graphql/validation/rules/NoUnusedFragmentsRule.js", "../../graphql/validation/rules/NoUnusedVariablesRule.js", "../../graphql/utilities/sortValueNode.js", "../../graphql/validation/rules/OverlappingFieldsCanBeMergedRule.js", "../../graphql/validation/rules/PossibleFragmentSpreadsRule.js", "../../graphql/validation/rules/PossibleTypeExtensionsRule.js", "../../graphql/validation/rules/ProvidedRequiredArgumentsRule.js", "../../graphql/validation/rules/ScalarLeafsRule.js", "../../graphql/validation/rules/SingleFieldSubscriptionsRule.js", "../../graphql/jsutils/groupBy.js", "../../graphql/validation/rules/UniqueArgumentDefinitionNamesRule.js", "../../graphql/validation/rules/UniqueArgumentNamesRule.js", "../../graphql/validation/rules/UniqueDirectiveNamesRule.js", "../../graphql/validation/rules/UniqueDirectivesPerLocationRule.js", "../../graphql/validation/rules/UniqueEnumValueNamesRule.js", "../../graphql/validation/rules/UniqueFieldDefinitionNamesRule.js", "../../graphql/validation/rules/UniqueFragmentNamesRule.js", "../../graphql/validation/rules/UniqueInputFieldNamesRule.js", "../../graphql/validation/rules/UniqueOperationNamesRule.js", "../../graphql/validation/rules/UniqueOperationTypesRule.js", "../../graphql/validation/rules/UniqueTypeNamesRule.js", "../../graphql/validation/rules/UniqueVariableNamesRule.js", "../../graphql/validation/rules/ValuesOfCorrectTypeRule.js", "../../graphql/validation/rules/VariablesAreInputTypesRule.js", "../../graphql/validation/rules/VariablesInAllowedPositionRule.js", "../../graphql/validation/specifiedRules.js", "../../graphql/validation/ValidationContext.js", "../../graphql/validation/validate.js", "../../graphql/utilities/extendSchema.js", "../../graphql/utilities/buildASTSchema.js", "../../graphql/utilities/lexicographicSortSchema.js", "../../graphql/utilities/printSchema.js", "../../graphql/utilities/concatAST.js", "../../graphql/utilities/separateOperations.js", "../../graphql/utilities/stripIgnoredCharacters.js", "../../graphql/utilities/assertValidName.js", "../../graphql/utilities/findBreakingChanges.js", "../../graphql/utilities/index.js", "../../rdf-canonize/lib/IdentifierIssuer.js", "../../setimmediate/setImmediate.js", "../../rdf-canonize/lib/MessageDigest-browser.js", "../../rdf-canonize/lib/Permuter.js", "../../rdf-canonize/lib/NQuads.js", "../../rdf-canonize/lib/URDNA2015.js", "../../rdf-canonize/lib/URGNA2012.js", "../../rdf-canonize/lib/URDNA2015Sync.js", "../../rdf-canonize/lib/URGNA2012Sync.js", "browser-external:rdf-canonize-native", "../../rdf-canonize/lib/index.js", "../../rdf-canonize/index.js", "../../jsonld/lib/types.js", "../../jsonld/lib/graphTypes.js", "../../jsonld/lib/JsonLdError.js", "../../jsonld/lib/util.js", "../../jsonld/lib/constants.js", "../../jsonld/lib/RequestQueue.js", "../../jsonld/lib/url.js", "../../jsonld/lib/documentLoaders/xhr.js", "../../jsonld/lib/platform-browser.js", "../../jsonld/node_modules/yallist/iterator.js", "../../jsonld/node_modules/yallist/yallist.js", "../../jsonld/node_modules/lru-cache/index.js", "../../jsonld/lib/ResolvedContext.js", "../../jsonld/lib/ContextResolver.js", "../../jsonld/lib/NQuads.js", "../../jsonld/lib/events.js", "../../jsonld/lib/context.js", "../../jsonld/lib/expand.js", "../../jsonld/lib/nodeMap.js", "../../jsonld/lib/flatten.js", "../../jsonld/lib/fromRdf.js", "../../canonicalize/lib/canonicalize.js", "../../jsonld/lib/toRdf.js", "../../jsonld/lib/frame.js", "../../jsonld/lib/compact.js", "../../jsonld/lib/JsonLdProcessor.js", "../../jsonld/lib/jsonld.js", "../../lodash.get/index.js", "../../inflection/lib/inflection.js", "../../@api-platform/admin/src/core/AdminGuesser.tsx", "../../@api-platform/admin/src/core/AdminResourcesGuesser.tsx", "../../@api-platform/admin/src/core/ResourceGuesser.tsx", "../../@api-platform/admin/src/list/ListGuesser.tsx", "../../@api-platform/admin/src/field/FieldGuesser.tsx", "../../@api-platform/admin/src/introspection/Introspecter.tsx", "../../@api-platform/admin/src/introspection/SchemaAnalyzerContext.ts", "../../@api-platform/admin/src/introspection/useIntrospect.ts", "../../@api-platform/admin/src/introspection/ResourcesIntrospecter.tsx", "../../@api-platform/admin/src/field/EnumField.tsx", "../../@api-platform/admin/src/list/FilterGuesser.tsx", "../../@api-platform/admin/src/input/InputGuesser.tsx", "../../@api-platform/admin/src/getIdentifierValue.ts", "../../@api-platform/admin/src/mercure/useMercureSubscription.ts", "../../@api-platform/admin/src/mercure/createSubscription.ts", "../../@api-platform/admin/src/mercure/manager.ts", "../../@api-platform/admin/src/dataProvider/adminDataProvider.ts", "../../@api-platform/admin/src/dataProvider/restDataProvider.ts", "../../@api-platform/admin/src/removeTrailingSlash.ts", "../../@api-platform/admin/src/dataProvider/useUpdateCache.ts", "../../@api-platform/admin/src/useDisplayOverrideCode.ts", "../../@api-platform/admin/src/create/CreateGuesser.tsx", "../../@api-platform/admin/src/useOnSubmit.ts", "../../@api-platform/admin/src/edit/EditGuesser.tsx", "../../@api-platform/admin/src/show/ShowGuesser.tsx", "../../@api-platform/admin/src/introspection/getRoutesAndResourcesFromNodes.tsx", "../../@api-platform/admin/src/introspection/IntrospectionContext.ts", "../../@api-platform/admin/src/layout/Error.tsx", "../../@api-platform/admin/src/layout/LogoError.tsx", "../../@api-platform/admin/src/layout/Layout.tsx", "../../@api-platform/admin/src/layout/AppBar.tsx", "../../@api-platform/admin/src/layout/Logo.tsx", "../../@api-platform/admin/src/layout/LoginPage.tsx", "../../@api-platform/admin/src/layout/themes.ts", "../../@api-platform/admin/src/introspection/useIntrospection.ts", "../../@api-platform/admin/src/hydra/dataProvider.ts", "../../@api-platform/api-doc-parser/src/utils/assignSealed.ts", "../../@api-platform/api-doc-parser/src/Api.ts", "../../@api-platform/api-doc-parser/src/Field.ts", "../../@api-platform/api-doc-parser/src/Operation.ts", "../../@api-platform/api-doc-parser/src/Parameter.ts", "../../@api-platform/api-doc-parser/src/Resource.ts", "../../@api-platform/api-doc-parser/src/graphql/parseGraphQl.ts", "../../@api-platform/api-doc-parser/src/hydra/fetchJsonLd.ts", "../../@api-platform/api-doc-parser/src/hydra/parseHydraDocumentation.ts", "../../@api-platform/api-doc-parser/src/hydra/fetchResource.ts", "../../@api-platform/api-doc-parser/src/hydra/getParameters.ts", "../../@api-platform/api-doc-parser/src/hydra/getType.ts", "../../jsonref/dist/errors.js", "../../jsonref/dist/utils.js", "../../jsonref/dist/meta.js", "../../jsonref/dist/pointer.js", "../../jsonref/dist/ref.js", "../../jsonref/dist/index.js", "../../@api-platform/api-doc-parser/src/openapi3/handleJson.ts", "../../@api-platform/api-doc-parser/src/utils/getResources.ts", "../../@api-platform/api-doc-parser/src/openapi3/getType.ts", "../../@api-platform/api-doc-parser/src/openapi3/parseOpenApi3Documentation.ts", "../../@api-platform/api-doc-parser/src/swagger/handleJson.ts", "../../@api-platform/admin/src/hydra/fetchHydra.ts", "../../@api-platform/admin/src/introspection/schemaAnalyzer.ts", "../../@api-platform/admin/src/hydra/HydraAdmin.tsx", "../../@api-platform/admin/src/hydra/schemaAnalyzer.ts", "../../@api-platform/admin/src/openapi/dataProvider.ts", "../../@api-platform/admin/src/openapi/OpenApiAdmin.tsx", "../../@api-platform/admin/src/openapi/schemaAnalyzer.ts"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getIntrospectionQuery = getIntrospectionQuery;\n\n/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nfunction getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    oneOf: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  const oneOf = optionsWithDefault.oneOf ? 'isOneOf' : '';\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      ${oneOf}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Kind = void 0;\n\n/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\nexports.Kind = Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (exports.Kind = Kind = {}));\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationAST = getOperationAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\nfunction getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isObjectLike = isObjectLike;\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nfunction isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.invariant = invariant;\n\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getLocation = getLocation;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || (0, _invariant.invariant)(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printLocation = printLocation;\nexports.printSourceLocation = printSourceLocation;\n\nvar _location = require('./location.js');\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    (0, _location.getLocation)(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLError = void 0;\nexports.formatError = formatError;\nexports.printError = printError;\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _location = require('../language/location.js');\n\nvar _printLocation = require('../language/printLocation.js');\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => (0, _location.getLocation)(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) =>\n            (0, _location.getLocation)(loc.source, loc.start),\n          );\n    const originalExtensions = (0, _isObjectLike.isObjectLike)(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + (0, _printLocation.printLocation)(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output +=\n          '\\n\\n' +\n          (0, _printLocation.printSourceLocation)(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nexports.GraphQLError = GraphQLError;\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nfunction printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nfunction formatError(error) {\n  return error.toJSON();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getOperationRootType = getOperationRootType;\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nfunction getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for mutations.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new _GraphQLError.GraphQLError(\n        'Schema is not configured for subscriptions.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return subscriptionType;\n  }\n\n  throw new _GraphQLError.GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.syntaxError = syntaxError;\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\nfunction syntaxError(source, position, description) {\n  return new _GraphQLError.GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Token =\n  exports.QueryDocumentKeys =\n  exports.OperationTypeNode =\n  exports.Location =\n    void 0;\nexports.isNode = isNode;\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nclass Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexports.Location = Location;\n\nclass Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\nexports.Token = Token;\n\n/**\n * @internal\n */\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nexports.QueryDocumentKeys = QueryDocumentKeys;\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nfunction isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\nexports.OperationTypeNode = OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DirectiveLocation = void 0;\n\n/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\nexports.DirectiveLocation = DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (exports.DirectiveLocation = DirectiveLocation = {}));\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isDigit = isDigit;\nexports.isLetter = isLetter;\nexports.isNameContinue = isNameContinue;\nexports.isNameStart = isNameStart;\nexports.isWhiteSpace = isWhiteSpace;\n\n/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nfunction isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nfunction isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nfunction isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.dedentBlockStringLines = dedentBlockStringLines;\nexports.isPrintableAsBlockString = isPrintableAsBlockString;\nexports.printBlockString = printBlockString;\n\nvar _characterClasses = require('./characterClasses.js');\n\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nfunction dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (\n    i < str.length &&\n    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))\n  ) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nfunction isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every(\n        (line) =>\n          line.length === 0 ||\n          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),\n      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine =\n    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TokenKind = void 0;\n\n/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\nexports.TokenKind = TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (exports.TokenKind = TokenKind = {}));\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Lexer = void 0;\nexports.isPunctuatorTokenKind = isPunctuatorTokenKind;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _blockString = require('./blockString.js');\n\nvar _characterClasses = require('./characterClasses.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\nclass Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new _ast.Token(\n      _tokenKind.TokenKind.SOF,\n      0,\n      0,\n      0,\n      0,\n    );\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== _tokenKind.TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === _tokenKind.TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexports.Lexer = Lexer;\n\nfunction isPunctuatorTokenKind(kind) {\n  return (\n    kind === _tokenKind.TokenKind.BANG ||\n    kind === _tokenKind.TokenKind.DOLLAR ||\n    kind === _tokenKind.TokenKind.AMP ||\n    kind === _tokenKind.TokenKind.PAREN_L ||\n    kind === _tokenKind.TokenKind.PAREN_R ||\n    kind === _tokenKind.TokenKind.SPREAD ||\n    kind === _tokenKind.TokenKind.COLON ||\n    kind === _tokenKind.TokenKind.EQUALS ||\n    kind === _tokenKind.TokenKind.AT ||\n    kind === _tokenKind.TokenKind.BRACKET_L ||\n    kind === _tokenKind.TokenKind.BRACKET_R ||\n    kind === _tokenKind.TokenKind.BRACE_L ||\n    kind === _tokenKind.TokenKind.PIPE ||\n    kind === _tokenKind.TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return _tokenKind.TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new _ast.Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BANG,\n          position,\n          position + 1,\n        );\n\n      case 0x0024:\n        // $\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.DOLLAR,\n          position,\n          position + 1,\n        );\n\n      case 0x0026:\n        // &\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AMP,\n          position,\n          position + 1,\n        );\n\n      case 0x0028:\n        // (\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_L,\n          position,\n          position + 1,\n        );\n\n      case 0x0029:\n        // )\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PAREN_R,\n          position,\n          position + 1,\n        );\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(\n            lexer,\n            _tokenKind.TokenKind.SPREAD,\n            position,\n            position + 3,\n          );\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.COLON,\n          position,\n          position + 1,\n        );\n\n      case 0x003d:\n        // =\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.EQUALS,\n          position,\n          position + 1,\n        );\n\n      case 0x0040:\n        // @\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.AT,\n          position,\n          position + 1,\n        );\n\n      case 0x005b:\n        // [\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_L,\n          position,\n          position + 1,\n        );\n\n      case 0x005d:\n        // ]\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACKET_R,\n          position,\n          position + 1,\n        );\n\n      case 0x007b:\n        // {\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_L,\n          position,\n          position + 1,\n        );\n\n      case 0x007c:\n        // |\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.PIPE,\n          position,\n          position + 1,\n        );\n\n      case 0x007d:\n        // }\n        return createToken(\n          lexer,\n          _tokenKind.TokenKind.BRACE_R,\n          position,\n          position + 1,\n        );\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if ((0, _characterClasses.isDigit)(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if ((0, _characterClasses.isNameStart)(code)) {\n      return readName(lexer, position);\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, _tokenKind.TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if ((0, _characterClasses.isDigit)(code)) {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || (0, _characterClasses.isNameStart)(code)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!(0, _characterClasses.isDigit)(firstCode)) {\n    throw (0, _syntaxError.syntaxError)(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while ((0, _characterClasses.isDigit)(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(\n        lexer,\n        _tokenKind.TokenKind.STRING,\n        start,\n        position + 1,\n        value,\n      );\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        _tokenKind.TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        (0, _blockString.dedentBlockStringLines)(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw (0, _syntaxError.syntaxError)(\n    lexer.source,\n    position,\n    'Unterminated string.',\n  );\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if ((0, _characterClasses.isNameContinue)(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    _tokenKind.TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.devAssert = devAssert;\n\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.inspect = inspect;\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nfunction inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.instanceOf = void 0;\n\nvar _inspect = require('./inspect.js');\n\n/* c8 ignore next 3 */\nconst isProduction =\n  globalThis.process && // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nconst instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  isProduction\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = (0, _inspect.inspect)(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\nexports.instanceOf = instanceOf;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Source = void 0;\nexports.isSource = isSource;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nclass Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,\n      );\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      (0, _devAssert.devAssert)(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexports.Source = Source;\n\nfunction isSource(source) {\n  return (0, _instanceOf.instanceOf)(source, Source);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.Parser = void 0;\nexports.parse = parse;\nexports.parseConstValue = parseConstValue;\nexports.parseType = parseType;\nexports.parseValue = parseValue;\n\nvar _syntaxError = require('../error/syntaxError.js');\n\nvar _ast = require('./ast.js');\n\nvar _directiveLocation = require('./directiveLocation.js');\n\nvar _kinds = require('./kinds.js');\n\nvar _lexer = require('./lexer.js');\n\nvar _source = require('./source.js');\n\nvar _tokenKind = require('./tokenKind.js');\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nfunction parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nfunction parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nfunction parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nfunction parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(_tokenKind.TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(_tokenKind.TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nclass Parser {\n  constructor(source, options = {}) {\n    const sourceObj = (0, _source.isSource)(source)\n      ? source\n      : new _source.Source(source);\n    this._lexer = new _lexer.Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(_tokenKind.TokenKind.NAME);\n    return this.node(token, {\n      kind: _kinds.Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: this.many(\n        _tokenKind.TokenKind.SOF,\n        this.parseDefinition,\n        _tokenKind.TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: _kinds.Kind.OPERATION_DEFINITION,\n        operation: _ast.OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(_tokenKind.TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(_tokenKind.TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return _ast.OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return _ast.OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return _ast.OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type:\n        (this.expectToken(_tokenKind.TokenKind.COLON),\n        this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: _kinds.Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.SELECTION_SET,\n      selections: this.many(\n        _tokenKind.TokenKind.BRACE_L,\n        this.parseSelection,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(_tokenKind.TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      item,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: _kinds.Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case _tokenKind.TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case _tokenKind.TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case _tokenKind.TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.INT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: _kinds.Kind.FLOAT,\n          value: token.value,\n        });\n\n      case _tokenKind.TokenKind.STRING:\n      case _tokenKind.TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case _tokenKind.TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: _kinds.Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: _kinds.Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: _kinds.Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case _tokenKind.TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(_tokenKind.TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === _tokenKind.TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw (0, _syntaxError.syntaxError)(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: _kinds.Kind.STRING,\n      value: token.value,\n      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.LIST,\n      values: this.any(\n        _tokenKind.TokenKind.BRACKET_L,\n        item,\n        _tokenKind.TokenKind.BRACKET_R,\n      ),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.OBJECT,\n      fields: this.any(\n        _tokenKind.TokenKind.BRACE_L,\n        item,\n        _tokenKind.TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(_tokenKind.TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(_tokenKind.TokenKind.AT);\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(_tokenKind.TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: _kinds.Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {\n      return this.node(start, {\n        kind: _kinds.Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: _kinds.Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return (\n      this.peek(_tokenKind.TokenKind.STRING) ||\n      this.peek(_tokenKind.TokenKind.BLOCK_STRING)\n    );\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(_tokenKind.TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)\n      ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      _tokenKind.TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      _tokenKind.TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(_tokenKind.TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: _kinds.Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(\n      _tokenKind.TokenKind.PIPE,\n      this.parseDirectiveLocation,\n    );\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (\n      Object.prototype.hasOwnProperty.call(\n        _directiveLocation.DirectiveLocation,\n        name.value,\n      )\n    ) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new _ast.Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw (0, _syntaxError.syntaxError)(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return (0, _syntaxError.syntaxError)(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== _tokenKind.TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw (0, _syntaxError.syntaxError)(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nexports.Parser = Parser;\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return (0, _lexer.isPunctuatorTokenKind)(kind) ? `\"${kind}\"` : kind;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isIterableObject = isIterableObject;\n\n/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nfunction isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isPromise = isPromise;\n\n/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nfunction isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.memoize3 = memoize3;\n\n/**\n * Memoizes the provided three-argument function.\n */\nfunction memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.addPath = addPath;\nexports.pathToArray = pathToArray;\n\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nfunction pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseForObject = promiseForObject;\n\n/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nfunction promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.promiseReduce = promiseReduce;\n\nvar _isPromise = require('./isPromise.js');\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nfunction promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = (0, _isPromise.isPromise)(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toError = toError;\n\nvar _inspect = require('./inspect.js');\n\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\nfunction toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.locatedError = locatedError;\n\nvar _toError = require('../jsutils/toError.js');\n\nvar _GraphQLError = require('./GraphQLError.js');\n\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nfunction locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new _GraphQLError.GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.didYouMean = didYouMean;\nconst MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.identityFunc = identityFunc;\n\n/**\n * Returns the first argument it receives.\n */\nfunction identityFunc(x) {\n  return x;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyMap = keyMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nfunction keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.keyValMap = keyValMap;\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nfunction keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.mapValue = mapValue;\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nfunction mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.naturalCompare = naturalCompare;\n\n/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\n\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.suggestionList = suggestionList;\n\nvar _naturalCompare = require('./naturalCompare.js');\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nfunction suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0\n      ? distanceDiff\n      : (0, _naturalCompare.naturalCompare)(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.toObjMap = toObjMap;\n\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printString = printString;\n\n/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nfunction printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.BREAK = void 0;\nexports.getEnterLeaveForKind = getEnterLeaveForKind;\nexports.getVisitFn = getVisitFn;\nexports.visit = visit;\nexports.visitInParallel = visitInParallel;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _ast = require('./ast.js');\n\nvar _kinds = require('./kinds.js');\n\nconst BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexports.BREAK = BREAK;\n\nfunction visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      (0, _ast.isNode)(node) ||\n        (0, _devAssert.devAssert)(\n          false,\n          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,\n        );\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if ((0, _ast.isNode)(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nfunction visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(_kinds.Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nfunction getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.print = print;\n\nvar _blockString = require('./blockString.js');\n\nvar _printString = require('./printString.js');\n\nvar _visitor = require('./visitor.js');\n\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction print(ast) {\n  return (0, _visitor.visit)(ast, printDocASTReducer);\n}\n\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString\n        ? (0, _blockString.printBlockString)(value)\n        : (0, _printString.printString)(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromASTUntyped = valueFromASTUntyped;\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.NULL:\n      return null;\n\n    case _kinds.Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case _kinds.Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.BOOLEAN:\n      return valueNode.value;\n\n    case _kinds.Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case _kinds.Kind.OBJECT:\n      return (0, _keyValMap.keyValMap)(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case _kinds.Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertEnumValueName = assertEnumValueName;\nexports.assertName = assertName;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _characterClasses = require('../language/characterClasses.js');\n\n/**\n * Upholds the spec rules about naming.\n */\nfunction assertName(name) {\n  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new _GraphQLError.GraphQLError(\n      'Expected name to be a non-empty string.',\n    );\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {\n      throw new _GraphQLError.GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {\n    throw new _GraphQLError.GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nfunction assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new _GraphQLError.GraphQLError(\n      `Enum values cannot be named: ${name}`,\n    );\n  }\n\n  return assertName(name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLUnionType =\n  exports.GraphQLScalarType =\n  exports.GraphQLObjectType =\n  exports.GraphQLNonNull =\n  exports.GraphQLList =\n  exports.GraphQLInterfaceType =\n  exports.GraphQLInputObjectType =\n  exports.GraphQLEnumType =\n    void 0;\nexports.argsToArgsConfig = argsToArgsConfig;\nexports.assertAbstractType = assertAbstractType;\nexports.assertCompositeType = assertCompositeType;\nexports.assertEnumType = assertEnumType;\nexports.assertInputObjectType = assertInputObjectType;\nexports.assertInputType = assertInputType;\nexports.assertInterfaceType = assertInterfaceType;\nexports.assertLeafType = assertLeafType;\nexports.assertListType = assertListType;\nexports.assertNamedType = assertNamedType;\nexports.assertNonNullType = assertNonNullType;\nexports.assertNullableType = assertNullableType;\nexports.assertObjectType = assertObjectType;\nexports.assertOutputType = assertOutputType;\nexports.assertScalarType = assertScalarType;\nexports.assertType = assertType;\nexports.assertUnionType = assertUnionType;\nexports.assertWrappingType = assertWrappingType;\nexports.defineArguments = defineArguments;\nexports.getNamedType = getNamedType;\nexports.getNullableType = getNullableType;\nexports.isAbstractType = isAbstractType;\nexports.isCompositeType = isCompositeType;\nexports.isEnumType = isEnumType;\nexports.isInputObjectType = isInputObjectType;\nexports.isInputType = isInputType;\nexports.isInterfaceType = isInterfaceType;\nexports.isLeafType = isLeafType;\nexports.isListType = isListType;\nexports.isNamedType = isNamedType;\nexports.isNonNullType = isNonNullType;\nexports.isNullableType = isNullableType;\nexports.isObjectType = isObjectType;\nexports.isOutputType = isOutputType;\nexports.isRequiredArgument = isRequiredArgument;\nexports.isRequiredInputField = isRequiredInputField;\nexports.isScalarType = isScalarType;\nexports.isType = isType;\nexports.isUnionType = isUnionType;\nexports.isWrappingType = isWrappingType;\nexports.resolveObjMapThunk = resolveObjMapThunk;\nexports.resolveReadonlyArrayThunk = resolveReadonlyArrayThunk;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _identityFunc = require('../jsutils/identityFunc.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _valueFromASTUntyped = require('../utilities/valueFromASTUntyped.js');\n\nvar _assertName = require('./assertName.js');\n\nfunction isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\n\nfunction assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nfunction isScalarType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLScalarType);\n}\n\nfunction assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Scalar type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLObjectType);\n}\n\nfunction assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInterfaceType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInterfaceType);\n}\n\nfunction assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isUnionType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLUnionType);\n}\n\nfunction assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Union type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isEnumType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLEnumType);\n}\n\nfunction assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Enum type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isInputObjectType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLInputObjectType);\n}\n\nfunction assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(\n        type,\n      )} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isListType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLList);\n}\n\nfunction assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL List type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction isNonNullType(type) {\n  return (0, _instanceOf.instanceOf)(type, GraphQLNonNull);\n}\n\nfunction assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Non-Null type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nfunction isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\n\nfunction assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL input type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nfunction isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\n\nfunction assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL output type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nfunction isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\n\nfunction assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL leaf type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nfunction isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\n\nfunction assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL abstract type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(ofType)} to be a GraphQL type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexports.GraphQLList = GraphQLList;\n\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `Expected ${(0, _inspect.inspect)(\n          ofType,\n        )} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexports.GraphQLNonNull = GraphQLNonNull;\n\nfunction isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\n\nfunction assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL wrapping type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\n\nfunction assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL nullable type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nfunction isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\n\nfunction assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL named type.`,\n    );\n  }\n\n  return type;\n}\n\nfunction getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : _identityFunc.identityFunc;\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : _identityFunc.identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) =>\n            parseValue(\n              (0, _valueFromASTUntyped.valueFromASTUntyped)(node, variables),\n            );\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${(0, _inspect.inspect)(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        (0, _devAssert.devAssert)(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLScalarType = GraphQLScalarType;\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLObjectType = GraphQLObjectType;\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${(0, _inspect.inspect)(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: (0, _assertName.assertName)(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: (0, _toObjMap.toObjMap)(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return (0, _isObjectLike.isObjectLike)(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return (0, _mapValue.mapValue)(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nfunction argsToArgsConfig(args) {\n  return (0, _keyValMap.keyValMap)(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\n\nfunction isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInterfaceType = GraphQLInterfaceType;\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLUnionType = GraphQLUnionType;\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values =\n      typeof config.values === 'function'\n        ? config.values\n        : defineEnumValues(this.name, config.values);\n    this._valueLookup = null;\n    this._nameLookup = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    if (typeof this._values === 'function') {\n      this._values = defineEnumValues(this.name, this._values());\n    }\n\n    return this._values;\n  }\n\n  getValue(name) {\n    if (this._nameLookup === null) {\n      this._nameLookup = (0, _keyMap.keyMap)(\n        this.getValues(),\n        (value) => value.name,\n      );\n    }\n\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    if (this._valueLookup === null) {\n      this._valueLookup = new Map(\n        this.getValues().map((enumValue) => [enumValue.value, enumValue]),\n      );\n    }\n\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${(0, _inspect.inspect)(\n          outputValue,\n        )}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = (0, _inspect.inspect)(inputValue);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== _kinds.Kind.ENUM) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = (0, _printer.print)(valueNode);\n      throw new _GraphQLError.GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = (0, _keyValMap.keyValMap)(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLEnumType = GraphQLEnumType;\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = (0, _suggestionList.suggestionList)(\n    unknownValueStr,\n    allNames,\n  );\n  return (0, _didYouMean.didYouMean)('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${(0, _inspect.inspect)(\n            valueConfig,\n          )}.`,\n      );\n    return {\n      name: (0, _assertName.assertEnumValueName)(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6, _config$isOneOf;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this.isOneOf =\n      (_config$isOneOf = config.isOneOf) !== null && _config$isOneOf !== void 0\n        ? _config$isOneOf\n        : false;\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = (0, _mapValue.mapValue)(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      isOneOf: this.isOneOf,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLInputObjectType = GraphQLInputObjectType;\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: (0, _assertName.assertName)(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nfunction isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLString =\n  exports.GraphQLInt =\n  exports.GraphQLID =\n  exports.GraphQLFloat =\n  exports.GraphQLBoolean =\n  exports.GRAPHQL_MIN_INT =\n  exports.GRAPHQL_MAX_INT =\n    void 0;\nexports.isSpecifiedScalarType = isSpecifiedScalarType;\nexports.specifiedScalarTypes = void 0;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('./definition.js');\n\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\nconst GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexports.GRAPHQL_MAX_INT = GRAPHQL_MAX_INT;\nconst GRAPHQL_MIN_INT = -2147483648;\nexports.GRAPHQL_MIN_INT = GRAPHQL_MIN_INT;\nconst GraphQLInt = new _definition.GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          (0, _inspect.inspect)(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non-integer value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new _GraphQLError.GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexports.GraphQLInt = GraphQLInt;\nconst GraphQLFloat = new _definition.GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          coercedValue,\n        )}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.FLOAT &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        `Float cannot represent non numeric value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexports.GraphQLFloat = GraphQLFloat;\nconst GraphQLString = new _definition.GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `String cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.STRING) {\n      throw new _GraphQLError.GraphQLError(\n        `String cannot represent a non string value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLString = GraphQLString;\nconst GraphQLBoolean = new _definition.GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n        coercedValue,\n      )}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(\n          inputValue,\n        )}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== _kinds.Kind.BOOLEAN) {\n      throw new _GraphQLError.GraphQLError(\n        `Boolean cannot represent a non boolean value: ${(0, _printer.print)(\n          valueNode,\n        )}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLBoolean = GraphQLBoolean;\nconst GraphQLID = new _definition.GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new _GraphQLError.GraphQLError(\n      `ID cannot represent value: ${(0, _inspect.inspect)(inputValue)}`,\n    );\n  },\n\n  parseLiteral(valueNode) {\n    if (\n      valueNode.kind !== _kinds.Kind.STRING &&\n      valueNode.kind !== _kinds.Kind.INT\n    ) {\n      throw new _GraphQLError.GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          (0, _printer.print)(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexports.GraphQLID = GraphQLID;\nconst specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexports.specifiedScalarTypes = specifiedScalarTypes;\n\nfunction isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if ((0, _isObjectLike.isObjectLike)(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!(0, _isObjectLike.isObjectLike)(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.astFromValue = astFromValue;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n  if ((0, _definition.isNonNullType)(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      _kinds.Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: _kinds.Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: _kinds.Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: _kinds.Kind.OBJECT_FIELD,\n          name: {\n            kind: _kinds.Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: _kinds.Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: _kinds.Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: _kinds.Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: _kinds.Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if ((0, _definition.isEnumType)(type)) {\n        return {\n          kind: _kinds.Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === _scalars.GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: _kinds.Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: _kinds.Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(\n      `Cannot convert value to AST: ${(0, _inspect.inspect)(serialized)}.`,\n    );\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionTypes =\n  exports.__TypeKind =\n  exports.__Type =\n  exports.__Schema =\n  exports.__InputValue =\n  exports.__Field =\n  exports.__EnumValue =\n  exports.__DirectiveLocation =\n  exports.__Directive =\n  exports.TypeNameMetaFieldDef =\n  exports.TypeMetaFieldDef =\n  exports.TypeKind =\n  exports.SchemaMetaFieldDef =\n    void 0;\nexports.isIntrospectionType = isIntrospectionType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _astFromValue = require('../utilities/astFromValue.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\nconst __Schema = new _definition.GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n      ),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__Directive),\n        ),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\n\nexports.__Schema = __Schema;\n\nconst __Directive = new _definition.GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__DirectiveLocation),\n        ),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\n\nexports.__Directive = __Directive;\n\nconst __DirectiveLocation = new _definition.GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: _directiveLocation.DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: _directiveLocation.DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: _directiveLocation.DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: _directiveLocation.DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: _directiveLocation.DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: _directiveLocation.DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: _directiveLocation.DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: _directiveLocation.DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: _directiveLocation.DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: _directiveLocation.DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: _directiveLocation.DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: _directiveLocation.DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\n\nexports.__DirectiveLocation = __DirectiveLocation;\n\nconst __Type = new _definition.GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new _definition.GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if ((0, _definition.isScalarType)(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if ((0, _definition.isObjectType)(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if ((0, _definition.isInterfaceType)(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if ((0, _definition.isUnionType)(type)) {\n          return TypeKind.UNION;\n        }\n\n        if ((0, _definition.isEnumType)(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if ((0, _definition.isInputObjectType)(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if ((0, _definition.isListType)(type)) {\n          return TypeKind.LIST;\n        }\n\n        if ((0, _definition.isNonNullType)(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false ||\n          (0, _invariant.invariant)(\n            false,\n            `Unexpected type: \"${(0, _inspect.inspect)(type)}\".`,\n          );\n      },\n    },\n    name: {\n      type: _scalars.GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__Field),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (\n          (0, _definition.isObjectType)(type) ||\n          (0, _definition.isInterfaceType)(type)\n        ) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if ((0, _definition.isAbstractType)(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__EnumValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isEnumType)(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new _definition.GraphQLList(\n        new _definition.GraphQLNonNull(__InputValue),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if ((0, _definition.isInputObjectType)(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n    isOneOf: {\n      type: _scalars.GraphQLBoolean,\n      resolve: (type) => {\n        if ((0, _definition.isInputObjectType)(type)) {\n          return type.isOneOf;\n        }\n      },\n    },\n  }),\n});\n\nexports.__Type = __Type;\n\nconst __Field = new _definition.GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new _definition.GraphQLNonNull(\n        new _definition.GraphQLList(\n          new _definition.GraphQLNonNull(__InputValue),\n        ),\n      ),\n      args: {\n        includeDeprecated: {\n          type: _scalars.GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\n\nexports.__Field = __Field;\n\nconst __InputValue = new _definition.GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new _definition.GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: _scalars.GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = (0, _astFromValue.astFromValue)(defaultValue, type);\n        return valueAST ? (0, _printer.print)(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\n\nexports.__InputValue = __InputValue;\n\nconst __EnumValue = new _definition.GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: _scalars.GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\n\nexports.__EnumValue = __EnumValue;\nvar TypeKind;\nexports.TypeKind = TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (exports.TypeKind = TypeKind = {}));\n\nconst __TypeKind = new _definition.GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexports.__TypeKind = __TypeKind;\nconst SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new _definition.GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.SchemaMetaFieldDef = SchemaMetaFieldDef;\nconst TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeMetaFieldDef = TypeMetaFieldDef;\nconst TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexports.TypeNameMetaFieldDef = TypeNameMetaFieldDef;\nconst introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexports.introspectionTypes = introspectionTypes;\n\nfunction isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.doTypesOverlap = doTypesOverlap;\nexports.isEqualType = isEqualType;\nexports.isTypeSubTypeOf = isTypeSubTypeOf;\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nfunction isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (\n    (0, _definition.isNonNullType)(typeA) &&\n    (0, _definition.isNonNullType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (\n    (0, _definition.isListType)(typeA) &&\n    (0, _definition.isListType)(typeB)\n  ) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nfunction isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if ((0, _definition.isNonNullType)(superType)) {\n    if ((0, _definition.isNonNullType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isNonNullType)(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if ((0, _definition.isListType)(superType)) {\n    if ((0, _definition.isListType)(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if ((0, _definition.isListType)(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    (0, _definition.isAbstractType)(superType) &&\n    ((0, _definition.isInterfaceType)(maybeSubType) ||\n      (0, _definition.isObjectType)(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nfunction doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(typeA)) {\n    if ((0, _definition.isAbstractType)(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if ((0, _definition.isAbstractType)(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSpecifiedByDirective =\n  exports.GraphQLSkipDirective =\n  exports.GraphQLOneOfDirective =\n  exports.GraphQLIncludeDirective =\n  exports.GraphQLDirective =\n  exports.GraphQLDeprecatedDirective =\n  exports.DEFAULT_DEPRECATION_REASON =\n    void 0;\nexports.assertDirective = assertDirective;\nexports.isDirective = isDirective;\nexports.isSpecifiedDirective = isSpecifiedDirective;\nexports.specifiedDirectives = void 0;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _directiveLocation = require('../language/directiveLocation.js');\n\nvar _assertName = require('./assertName.js');\n\nvar _definition = require('./definition.js');\n\nvar _scalars = require('./scalars.js');\n\n/**\n * Test if the given value is a GraphQL directive.\n */\nfunction isDirective(directive) {\n  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);\n}\n\nfunction assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = (0, _assertName.assertName)(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} locations must be an Array.`,\n      );\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = (0, _definition.defineArguments)(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: (0, _definition.argsToArgsConfig)(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexports.GraphQLDirective = GraphQLDirective;\n\n/**\n * Used to conditionally include fields or fragments.\n */\nconst GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexports.GraphQLIncludeDirective = GraphQLIncludeDirective;\nconst GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD,\n    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,\n    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexports.GraphQLSkipDirective = GraphQLSkipDirective;\nconst DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;\nconst GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,\n    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,\n    _directiveLocation.DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: _scalars.GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;\nconst GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [_directiveLocation.DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * Used to indicate an Input Object is a OneOf Input Object.\n */\n\nexports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;\nconst GraphQLOneOfDirective = new GraphQLDirective({\n  name: 'oneOf',\n  description:\n    'Indicates exactly one field must be supplied and this field must not be `null`.',\n  locations: [_directiveLocation.DirectiveLocation.INPUT_OBJECT],\n  args: {},\n});\n/**\n * The full list of specified directives.\n */\n\nexports.GraphQLOneOfDirective = GraphQLOneOfDirective;\nconst specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n  GraphQLOneOfDirective,\n]);\nexports.specifiedDirectives = specifiedDirectives;\n\nfunction isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.GraphQLSchema = void 0;\nexports.assertSchema = assertSchema;\nexports.isSchema = isSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _instanceOf = require('../jsutils/instanceOf.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _toObjMap = require('../jsutils/toObjMap.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\n/**\n * Test if the given value is a GraphQL schema.\n */\nfunction isSchema(schema) {\n  return (0, _instanceOf.instanceOf)(schema, GraphQLSchema);\n}\n\nfunction assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(\n      `Expected ${(0, _inspect.inspect)(schema)} to be a GraphQL schema.`,\n    );\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nclass GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    (0, _isObjectLike.isObjectLike)(config) ||\n      (0, _devAssert.devAssert)(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      (0, _devAssert.devAssert)(\n        false,\n        `\"types\" must be Array if provided but got: ${(0, _inspect.inspect)(\n          config.types,\n        )}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      (0, _devAssert.devAssert)(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${(0, _inspect.inspect)(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : _directives.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if ((0, _directives.isDirective)(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(_introspection.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        (0, _devAssert.devAssert)(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if ((0, _definition.isInterfaceType)(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if ((0, _definition.isObjectType)(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if ((0, _definition.isInterfaceType)(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case _ast.OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case _ast.OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case _ast.OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return (0, _definition.isUnionType)(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if ((0, _definition.isUnionType)(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nexports.GraphQLSchema = GraphQLSchema;\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = (0, _definition.getNamedType)(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if ((0, _definition.isUnionType)(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (\n      (0, _definition.isObjectType)(namedType) ||\n      (0, _definition.isInterfaceType)(namedType)\n    ) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if ((0, _definition.isInputObjectType)(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSchema = assertValidSchema;\nexports.validateSchema = validateSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _typeComparators = require('../utilities/typeComparators.js');\n\nvar _definition = require('./definition.js');\n\nvar _directives = require('./directives.js');\n\nvar _introspection = require('./introspection.js');\n\nvar _schema = require('./schema.js');\n\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\nfunction validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  (0, _schema.assertSchema)(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nfunction assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new _GraphQLError.GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!(0, _definition.isObjectType)(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${(0,\n      _inspect.inspect)(queryType)}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !(0, _definition.isObjectType)(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !(0, _definition.isObjectType)(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${(0, _inspect.inspect)(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        _ast.OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!(0, _directives.isDirective)(directive)) {\n      context.reportError(\n        `Expected directive but got: ${(0, _inspect.inspect)(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!(0, _definition.isNamedType)(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${(0, _inspect.inspect)(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!(0, _introspection.isIntrospectionType)(type)) {\n      validateName(context, type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isInterfaceType)(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if ((0, _definition.isUnionType)(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if ((0, _definition.isEnumType)(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if ((0, _definition.isInputObjectType)(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!(0, _definition.isOutputType)(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!(0, _definition.isInputType)(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${(0, _inspect.inspect)(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (\n        (0, _definition.isRequiredArgument)(arg) &&\n        arg.deprecationReason != null\n      ) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!(0, _definition.isInterfaceType)(iface)) {\n      context.reportError(\n        `Type ${(0, _inspect.inspect)(\n          type,\n        )} must only implement Interface types, ` +\n          `it cannot implement ${(0, _inspect.inspect)(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (\n      !(0, _typeComparators.isTypeSubTypeOf)(\n        context.schema,\n        typeField.type,\n        ifaceField.type,\n      )\n    ) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${(0, _inspect.inspect)(ifaceField.type)} but ${\n            type.name\n          }.${fieldName} ` +\n          `is type ${(0, _inspect.inspect)(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!(0, _typeComparators.isEqualType)(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${(0, _inspect.inspect)(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${(0, _inspect.inspect)(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && (0, _definition.isRequiredArgument)(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!(0, _definition.isObjectType)(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${(0, _inspect.inspect)(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!(0, _definition.isInputType)(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${(0, _inspect.inspect)(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (\n      (0, _definition.isRequiredInputField)(field) &&\n      field.deprecationReason != null\n    ) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n\n    if (inputObj.isOneOf) {\n      validateOneOfInputObjectField(inputObj, field, context);\n    }\n  }\n}\n\nfunction validateOneOfInputObjectField(type, field, context) {\n  if ((0, _definition.isNonNullType)(field.type)) {\n    var _field$astNode4;\n\n    context.reportError(\n      `OneOf input field ${type.name}.${field.name} must be nullable.`,\n      (_field$astNode4 = field.astNode) === null || _field$astNode4 === void 0\n        ? void 0\n        : _field$astNode4.type,\n    );\n  }\n\n  if (field.defaultValue !== undefined) {\n    context.reportError(\n      `OneOf input field ${type.name}.${field.name} cannot have a default value.`,\n      field.astNode,\n    );\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (\n        (0, _definition.isNonNullType)(field.type) &&\n        (0, _definition.isInputObjectType)(field.type.ofType)\n      ) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) =>\n          node.name.value === _directives.GraphQLDeprecatedDirective.name,\n      );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.typeFromAST = typeFromAST;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nfunction typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case _kinds.Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLList(innerType);\n    }\n\n    case _kinds.Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new _definition.GraphQLNonNull(innerType);\n    }\n\n    case _kinds.Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printPathArray = printPathArray;\n\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.coerceInputValue = coerceInputValue;\n\nvar _didYouMean = require('../jsutils/didYouMean.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _suggestionList = require('../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nfunction coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + (0, _inspect.inspect)(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${(0, _printPathArray.printPathArray)(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if ((0, _definition.isNonNullType)(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      (0, _Path.pathToArray)(path),\n      inputValue,\n      new _GraphQLError.GraphQLError(\n        `Expected non-nullable type \"${(0, _inspect.inspect)(\n          type,\n        )}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if ((0, _isIterableObject.isIterableObject)(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = (0, _Path.addPath)(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (!(0, _isObjectLike.isObjectLike)(inputValue)) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(\n          `Expected type \"${type.name}\" to be an object.`,\n        ),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          const typeStr = (0, _inspect.inspect)(field.type);\n          onError(\n            (0, _Path.pathToArray)(path),\n            inputValue,\n            new _GraphQLError.GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        (0, _Path.addPath)(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n          ),\n        );\n      }\n    }\n\n    if (type.isOneOf) {\n      const keys = Object.keys(coercedValue);\n\n      if (keys.length !== 1) {\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Exactly one key must be specified for OneOf type \"${type.name}\".`,\n          ),\n        );\n      }\n\n      const key = keys[0];\n      const value = coercedValue[key];\n\n      if (value === null) {\n        onError(\n          (0, _Path.pathToArray)(path).concat(key),\n          value,\n          new _GraphQLError.GraphQLError(`Field \"${key}\" must be non-null.`),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof _GraphQLError.GraphQLError) {\n        onError((0, _Path.pathToArray)(path), inputValue, error);\n      } else {\n        onError(\n          (0, _Path.pathToArray)(path),\n          inputValue,\n          new _GraphQLError.GraphQLError(\n            `Expected type \"${type.name}\". ` + error.message,\n            {\n              originalError: error,\n            },\n          ),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        (0, _Path.pathToArray)(path),\n        inputValue,\n        new _GraphQLError.GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.valueFromAST = valueFromAST;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\nfunction valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === _kinds.Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && (0, _definition.isNonNullType)(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if ((0, _definition.isNonNullType)(type)) {\n    if (valueNode.kind === _kinds.Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === _kinds.Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if ((0, _definition.isListType)(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === _kinds.Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if ((0, _definition.isNonNullType)(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    if (valueNode.kind !== _kinds.Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = (0, _keyMap.keyMap)(\n      valueNode.fields,\n      (field) => field.name.value,\n    );\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if ((0, _definition.isNonNullType)(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    if (type.isOneOf) {\n      const keys = Object.keys(coercedObj);\n\n      if (keys.length !== 1) {\n        return; // Invalid: not exactly one key, intentionally return no value.\n      }\n\n      if (coercedObj[keys[0]] === null) {\n        return; // Invalid: value not non-null, intentionally return no value.\n      }\n    }\n\n    return coercedObj;\n  }\n\n  if ((0, _definition.isLeafType)(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected input type: ' + (0, _inspect.inspect)(type),\n    );\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === _kinds.Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.getArgumentValues = getArgumentValues;\nexports.getDirectiveValues = getDirectiveValues;\nexports.getVariableValues = getVariableValues;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printPathArray = require('../jsutils/printPathArray.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _coerceInputValue = require('../utilities/coerceInputValue.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _valueFromAST = require('../utilities/valueFromAST.js');\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new _GraphQLError.GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);\n\n    if (!(0, _definition.isInputType)(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = (0, _printer.print)(varDefNode.type);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(\n          varDefNode.defaultValue,\n          varType,\n        );\n      } else if ((0, _definition.isNonNullType)(varType)) {\n        const varTypeStr = (0, _inspect.inspect)(varType);\n        onError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && (0, _definition.isNonNullType)(varType)) {\n      const varTypeStr = (0, _inspect.inspect)(varType);\n      onError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = (0, _coerceInputValue.coerceInputValue)(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` +\n          (0, _inspect.inspect)(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${(0, _printPathArray.printPathArray)(\n            path,\n          )}\"`;\n        }\n\n        onError(\n          new _GraphQLError.GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = (0, _keyMap.keyMap)(\n    argumentNodes,\n    (arg) => arg.name.value,\n  );\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if ((0, _definition.isNonNullType)(argType)) {\n        throw new _GraphQLError.GraphQLError(\n          `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n            argType,\n          )}\" ` + 'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === _kinds.Kind.NULL;\n\n    if (valueNode.kind === _kinds.Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if ((0, _definition.isNonNullType)(argType)) {\n          throw new _GraphQLError.GraphQLError(\n            `Argument \"${name}\" of required type \"${(0, _inspect.inspect)(\n              argType,\n            )}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && (0, _definition.isNonNullType)(argType)) {\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" of non-null type \"${(0, _inspect.inspect)(\n          argType,\n        )}\" ` + 'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = (0, _valueFromAST.valueFromAST)(\n      valueNode,\n      argType,\n      variableValues,\n    );\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new _GraphQLError.GraphQLError(\n        `Argument \"${name}\" has invalid value ${(0, _printer.print)(\n          valueNode,\n        )}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nfunction getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.collectFields = collectFields;\nexports.collectSubfields = collectSubfields;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _typeFromAST = require('../utilities/typeFromAST.js');\n\nvar _values = require('./values.js');\n\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\nfunction collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nfunction collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSkipDirective,\n    node,\n    variableValues,\n  );\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = (0, _values.getDirectiveValues)(\n    _directives.GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = (0, _typeFromAST.typeFromAST)(\n    schema,\n    typeConditionNode,\n  );\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if ((0, _definition.isAbstractType)(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidExecutionArguments = assertValidExecutionArguments;\nexports.buildExecutionContext = buildExecutionContext;\nexports.buildResolveInfo = buildResolveInfo;\nexports.defaultTypeResolver = exports.defaultFieldResolver = void 0;\nexports.execute = execute;\nexports.executeSync = executeSync;\nexports.getFieldDef = getFieldDef;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _isIterableObject = require('../jsutils/isIterableObject.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _isPromise = require('../jsutils/isPromise.js');\n\nvar _memoize = require('../jsutils/memoize3.js');\n\nvar _Path = require('../jsutils/Path.js');\n\nvar _promiseForObject = require('../jsutils/promiseForObject.js');\n\nvar _promiseReduce = require('../jsutils/promiseReduce.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _locatedError = require('../error/locatedError.js');\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _collectFields = require('./collectFields.js');\n\nvar _values = require('./values.js');\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0, _memoize.memoize3)(\n  (exeContext, returnType, fieldNodes) =>\n    (0, _collectFields.collectSubfields)(\n      exeContext.schema,\n      exeContext.fragments,\n      exeContext.variableValues,\n      returnType,\n      fieldNodes,\n    ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    (0, _devAssert.devAssert)(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if ((0, _isPromise.isPromise)(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nfunction executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if ((0, _isPromise.isPromise)(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n  document || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    (0, _isObjectLike.isObjectLike)(rawVariableValues) ||\n    (0, _devAssert.devAssert)(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nfunction buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new _GraphQLError.GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [\n        new _GraphQLError.GraphQLError(\n          `Unknown operation named \"${operationName}\".`,\n        ),\n      ];\n    }\n\n    return [new _GraphQLError.GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = (0, _values.getVariableValues)(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = (0, _collectFields.collectFields)(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case _ast.OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return (0, _promiseReduce.promiseReduce)(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if ((0, _isPromise.isPromise)(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  try {\n    for (const [responseName, fieldNodes] of fields.entries()) {\n      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result !== undefined) {\n        results[responseName] = result;\n\n        if ((0, _isPromise.isPromise)(result)) {\n          containsPromise = true;\n        }\n      }\n    }\n  } catch (error) {\n    if (containsPromise) {\n      // Ensure that any promises returned by other fields are handled, as they may also reject.\n      return (0, _promiseForObject.promiseForObject)(results).finally(() => {\n        throw error;\n      });\n    }\n\n    throw error;\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return (0, _promiseForObject.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = (0, _values.getArgumentValues)(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if ((0, _isPromise.isPromise)(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if ((0, _isPromise.isPromise)(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = (0, _locatedError.locatedError)(\n          rawError,\n          fieldNodes,\n          (0, _Path.pathToArray)(path),\n        );\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = (0, _locatedError.locatedError)(\n      rawError,\n      fieldNodes,\n      (0, _Path.pathToArray)(path),\n    );\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if ((0, _definition.isNonNullType)(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if ((0, _definition.isNonNullType)(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if ((0, _definition.isListType)(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if ((0, _definition.isLeafType)(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if ((0, _definition.isAbstractType)(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if ((0, _definition.isObjectType)(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Cannot complete value of unexpected output type: ' +\n        (0, _inspect.inspect)(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!(0, _isIterableObject.isIterableObject)(result)) {\n    throw new _GraphQLError.GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = (0, _Path.addPath)(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if ((0, _isPromise.isPromise)(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if ((0, _isPromise.isPromise)(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = (0, _locatedError.locatedError)(\n            rawError,\n            fieldNodes,\n            (0, _Path.pathToArray)(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = (0, _locatedError.locatedError)(\n        rawError,\n        fieldNodes,\n        (0, _Path.pathToArray)(itemPath),\n      );\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${(0, _inspect.inspect)(returnType)}.serialize(${(0,\n      _inspect.inspect)(result)})\\` to ` +\n        `return non-nullable value, returned: ${(0, _inspect.inspect)(\n          serializedResult,\n        )}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if ((0, _isPromise.isPromise)(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if ((0, _definition.isObjectType)(runtimeTypeName)) {\n    throw new _GraphQLError.GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${(0, _inspect.inspect)(result)}, received \"${(0,\n        _inspect.inspect)(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!(0, _definition.isObjectType)(runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new _GraphQLError.GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if ((0, _isPromise.isPromise)(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new _GraphQLError.GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${(0,\n    _inspect.inspect)(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n  // First, look for `__typename`.\n  if (\n    (0, _isObjectLike.isObjectLike)(value) &&\n    typeof value.__typename === 'string'\n  ) {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if ((0, _isPromise.isPromise)(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexports.defaultTypeResolver = defaultTypeResolver;\n\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n  // ensure source is a value for which property access is acceptable.\n  if ((0, _isObjectLike.isObjectLike)(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexports.defaultFieldResolver = defaultFieldResolver;\n\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  } else if (\n    fieldName === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.introspectionFromSchema = introspectionFromSchema;\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _execute = require('../execution/execute.js');\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\nfunction introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    oneOf: true,\n    ...options,\n  };\n  const document = (0, _parser.parse)(\n    (0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults),\n  );\n  const result = (0, _execute.executeSync)({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || (0, _invariant.invariant)(false);\n  return result.data;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildClientSchema = buildClientSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _isObjectLike = require('../jsutils/isObjectLike.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\nfunction buildClientSchema(introspection, options) {\n  ((0, _isObjectLike.isObjectLike)(introspection) &&\n    (0, _isObjectLike.isObjectLike)(introspection.__schema)) ||\n    (0, _devAssert.devAssert)(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${(0,\n      _inspect.inspect)(introspection)}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = (0, _keyValMap.keyValMap)(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [\n    ..._scalars.specifiedScalarTypes,\n    ..._introspection.introspectionTypes,\n  ]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new _schema.GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === _introspection.TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new _definition.GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new _definition.GraphQLNonNull(\n        (0, _definition.assertNullableType)(nullableType),\n      );\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(\n        `Unknown type reference: ${(0, _inspect.inspect)(typeRef)}.`,\n      );\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return (0, _definition.assertObjectType)(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return (0, _definition.assertInterfaceType)(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case _introspection.TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case _introspection.TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case _introspection.TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case _introspection.TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case _introspection.TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case _introspection.TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = (0, _inspect.inspect)(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new _definition.GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === _introspection.TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = (0, _inspect.inspect)(\n        implementingIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new _definition.GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new _definition.GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = (0, _inspect.inspect)(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = (0, _inspect.inspect)(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: (0, _keyValMap.keyValMap)(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = (0, _inspect.inspect)(\n        inputObjectIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new _definition.GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n      isOneOf: inputObjectIntrospection.isOneOf,\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${(0, _inspect.inspect)(\n          typeIntrospection,\n        )}.`,\n      );\n    }\n\n    return (0, _keyValMap.keyValMap)(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!(0, _definition.isOutputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = (0, _inspect.inspect)(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return (0, _keyValMap.keyValMap)(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!(0, _definition.isInputType)(type)) {\n      const typeStr = (0, _inspect.inspect)(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? (0, _valueFromAST.valueFromAST)(\n            (0, _parser.parseValue)(inputValueIntrospection.defaultValue),\n            type,\n          )\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = (0, _inspect.inspect)(\n        directiveIntrospection,\n      );\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new _directives.GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.TypeInfo = void 0;\nexports.visitWithTypeInfo = visitWithTypeInfo;\n\nvar _ast = require('../language/ast.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\nclass TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if ((0, _definition.isInputType)(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isCompositeType)(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if ((0, _definition.isOutputType)(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET: {\n        const namedType = (0, _definition.getNamedType)(this.getType());\n\n        this._parentTypeStack.push(\n          (0, _definition.isCompositeType)(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(fieldType) ? fieldType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(\n          (0, _definition.isObjectType)(rootType) ? rootType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST)\n          : (0, _definition.getNamedType)(this.getType());\n\n        this._typeStack.push(\n          (0, _definition.isOutputType)(outputType) ? outputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.VARIABLE_DEFINITION: {\n        const inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(argType) ? argType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.LIST: {\n        const listType = (0, _definition.getNullableType)(this.getInputType());\n        const itemType = (0, _definition.isListType)(listType)\n          ? listType.ofType\n          : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(itemType) ? itemType : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.OBJECT_FIELD: {\n        const objectType = (0, _definition.getNamedType)(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if ((0, _definition.isInputObjectType)(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          (0, _definition.isInputType)(inputFieldType)\n            ? inputFieldType\n            : undefined,\n        );\n\n        break;\n      }\n\n      case _kinds.Kind.ENUM: {\n        const enumType = (0, _definition.getNamedType)(this.getInputType());\n        let enumValue;\n\n        if ((0, _definition.isEnumType)(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case _kinds.Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case _kinds.Kind.OPERATION_DEFINITION:\n      case _kinds.Kind.INLINE_FRAGMENT:\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case _kinds.Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.LIST:\n      case _kinds.Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case _kinds.Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\nexports.TypeInfo = TypeInfo;\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === _introspection.SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.SchemaMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return _introspection.TypeMetaFieldDef;\n  }\n\n  if (\n    name === _introspection.TypeNameMetaFieldDef.name &&\n    (0, _definition.isCompositeType)(parentType)\n  ) {\n    return _introspection.TypeNameMetaFieldDef;\n  }\n\n  if (\n    (0, _definition.isObjectType)(parentType) ||\n    (0, _definition.isInterfaceType)(parentType)\n  ) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nfunction visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if ((0, _ast.isNode)(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.isConstValueNode = isConstValueNode;\nexports.isDefinitionNode = isDefinitionNode;\nexports.isExecutableDefinitionNode = isExecutableDefinitionNode;\nexports.isSelectionNode = isSelectionNode;\nexports.isTypeDefinitionNode = isTypeDefinitionNode;\nexports.isTypeExtensionNode = isTypeExtensionNode;\nexports.isTypeNode = isTypeNode;\nexports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;\nexports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;\nexports.isValueNode = isValueNode;\n\nvar _kinds = require('./kinds.js');\n\nfunction isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\n\nfunction isExecutableDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.OPERATION_DEFINITION ||\n    node.kind === _kinds.Kind.FRAGMENT_DEFINITION\n  );\n}\n\nfunction isSelectionNode(node) {\n  return (\n    node.kind === _kinds.Kind.FIELD ||\n    node.kind === _kinds.Kind.FRAGMENT_SPREAD ||\n    node.kind === _kinds.Kind.INLINE_FRAGMENT\n  );\n}\n\nfunction isValueNode(node) {\n  return (\n    node.kind === _kinds.Kind.VARIABLE ||\n    node.kind === _kinds.Kind.INT ||\n    node.kind === _kinds.Kind.FLOAT ||\n    node.kind === _kinds.Kind.STRING ||\n    node.kind === _kinds.Kind.BOOLEAN ||\n    node.kind === _kinds.Kind.NULL ||\n    node.kind === _kinds.Kind.ENUM ||\n    node.kind === _kinds.Kind.LIST ||\n    node.kind === _kinds.Kind.OBJECT\n  );\n}\n\nfunction isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === _kinds.Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === _kinds.Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== _kinds.Kind.VARIABLE)\n  );\n}\n\nfunction isTypeNode(node) {\n  return (\n    node.kind === _kinds.Kind.NAMED_TYPE ||\n    node.kind === _kinds.Kind.LIST_TYPE ||\n    node.kind === _kinds.Kind.NON_NULL_TYPE\n  );\n}\n\nfunction isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === _kinds.Kind.DIRECTIVE_DEFINITION\n  );\n}\n\nfunction isTypeDefinitionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.UNION_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\n\nfunction isTypeSystemExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node)\n  );\n}\n\nfunction isTypeExtensionNode(node) {\n  return (\n    node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.UNION_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nfunction ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {\n          const defName =\n            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n            definition.kind === _kinds.Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `The ${defName} definition is not executable.`,\n              {\n                nodes: definition,\n              },\n            ),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FieldsOnCorrectTypeRule = FieldsOnCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _naturalCompare = require('../../jsutils/naturalCompare.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nfunction FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = (0, _didYouMean.didYouMean)(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = (0, _didYouMean.didYouMean)(\n              getSuggestedFieldNames(type, fieldName),\n            );\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!(0, _definition.isAbstractType)(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (\n        (0, _definition.isInterfaceType)(typeA) &&\n        schema.isSubType(typeA, typeB)\n      ) {\n        return -1;\n      }\n\n      if (\n        (0, _definition.isInterfaceType)(typeB) &&\n        schema.isSubType(typeB, typeA)\n      ) {\n        return 1;\n      }\n\n      return (0, _naturalCompare.naturalCompare)(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type)\n  ) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return (0, _suggestionList.suggestionList)(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nfunction FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = (0, _typeFromAST.typeFromAST)(\n          context.getSchema(),\n          typeCondition,\n        );\n\n        if (type && !(0, _definition.isCompositeType)(type)) {\n          const typeStr = (0, _printer.print)(typeCondition);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.typeCondition,\n      );\n\n      if (type && !(0, _definition.isCompositeType)(type)) {\n        const typeStr = (0, _printer.print)(node.typeCondition);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownArgumentNamesOnDirectivesRule = KnownArgumentNamesOnDirectivesRule;\nexports.KnownArgumentNamesRule = KnownArgumentNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nfunction KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = (0, _suggestionList.suggestionList)(\n          argName,\n          knownArgsNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = (0, _suggestionList.suggestionList)(\n              argName,\n              knownArgs,\n            );\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  (0, _didYouMean.didYouMean)(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownDirectivesRule = KnownDirectivesRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _ast = require('../../language/ast.js');\n\nvar _directiveLocation = require('../../language/directiveLocation.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nfunction KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || (0, _invariant.invariant)(false);\n\n  switch (appliedTo.kind) {\n    case _kinds.Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case _kinds.Kind.FIELD:\n      return _directiveLocation.DirectiveLocation.FIELD;\n\n    case _kinds.Kind.FRAGMENT_SPREAD:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD;\n\n    case _kinds.Kind.INLINE_FRAGMENT:\n      return _directiveLocation.DirectiveLocation.INLINE_FRAGMENT;\n\n    case _kinds.Kind.FRAGMENT_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case _kinds.Kind.VARIABLE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION;\n\n    case _kinds.Kind.SCHEMA_DEFINITION:\n    case _kinds.Kind.SCHEMA_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCHEMA;\n\n    case _kinds.Kind.SCALAR_TYPE_DEFINITION:\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.SCALAR;\n\n    case _kinds.Kind.OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.OBJECT;\n\n    case _kinds.Kind.FIELD_DEFINITION:\n      return _directiveLocation.DirectiveLocation.FIELD_DEFINITION;\n\n    case _kinds.Kind.INTERFACE_TYPE_DEFINITION:\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INTERFACE;\n\n    case _kinds.Kind.UNION_TYPE_DEFINITION:\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.UNION;\n\n    case _kinds.Kind.ENUM_TYPE_DEFINITION:\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.ENUM;\n\n    case _kinds.Kind.ENUM_VALUE_DEFINITION:\n      return _directiveLocation.DirectiveLocation.ENUM_VALUE;\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return _directiveLocation.DirectiveLocation.INPUT_OBJECT;\n\n    case _kinds.Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || (0, _invariant.invariant)(false);\n      return parentNode.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION\n        : _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(appliedTo.kind),\n        );\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case _ast.OperationTypeNode.QUERY:\n      return _directiveLocation.DirectiveLocation.QUERY;\n\n    case _ast.OperationTypeNode.MUTATION:\n      return _directiveLocation.DirectiveLocation.MUTATION;\n\n    case _ast.OperationTypeNode.SUBSCRIPTION:\n      return _directiveLocation.DirectiveLocation.SUBSCRIPTION;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownFragmentNamesRule = KnownFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nfunction KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown fragment \"${fragmentName}\".`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.KnownTypeNamesRule = KnownTypeNamesRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _introspection = require('../../type/introspection.js');\n\nvar _scalars = require('../../type/scalars.js');\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nfunction KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = (0, _suggestionList.suggestionList)(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Unknown type \"${typeName}\".` +\n              (0, _didYouMean.didYouMean)(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nconst standardTypeNames = [\n  ..._scalars.specifiedScalarTypes,\n  ..._introspection.introspectionTypes,\n].map((type) => type.name);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    ((0, _predicates.isTypeSystemDefinitionNode)(value) ||\n      (0, _predicates.isTypeSystemExtensionNode)(value))\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nfunction LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === _kinds.Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.LoneSchemaDefinitionRule = LoneSchemaDefinitionRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nfunction LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            'Must provide only one schema definition.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.MaxIntrospectionDepthRule = MaxIntrospectionDepthRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nconst MAX_LISTS_DEPTH = 3;\n\nfunction MaxIntrospectionDepthRule(context) {\n  /**\n   * Counts the depth of list fields in \"__Type\" recursively and\n   * returns `true` if the limit has been reached.\n   */\n  function checkDepth(node, visitedFragments = Object.create(null), depth = 0) {\n    if (node.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n      const fragmentName = node.name.value;\n\n      if (visitedFragments[fragmentName] === true) {\n        // Fragment cycles are handled by `NoFragmentCyclesRule`.\n        return false;\n      }\n\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        // Missing fragments checks are handled by `KnownFragmentNamesRule`.\n        return false;\n      } // Rather than following an immutable programming pattern which has\n      // significant memory and garbage collection overhead, we've opted to\n      // take a mutable approach for efficiency's sake. Importantly visiting a\n      // fragment twice is fine, so long as you don't do one visit inside the\n      // other.\n\n      try {\n        visitedFragments[fragmentName] = true;\n        return checkDepth(fragment, visitedFragments, depth);\n      } finally {\n        visitedFragments[fragmentName] = undefined;\n      }\n    }\n\n    if (\n      node.kind === _kinds.Kind.FIELD && // check all introspection lists\n      (node.name.value === 'fields' ||\n        node.name.value === 'interfaces' ||\n        node.name.value === 'possibleTypes' ||\n        node.name.value === 'inputFields')\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      depth++;\n\n      if (depth >= MAX_LISTS_DEPTH) {\n        return true;\n      }\n    } // handles fields and inline fragments\n\n    if ('selectionSet' in node && node.selectionSet) {\n      for (const child of node.selectionSet.selections) {\n        if (checkDepth(child, visitedFragments, depth)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    Field(node) {\n      if (node.name.value === '__schema' || node.name.value === '__type') {\n        if (checkDepth(node)) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              'Maximum introspection depth exceeded',\n              {\n                nodes: [node],\n              },\n            ),\n          );\n          return false;\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoFragmentCyclesRule = NoFragmentCyclesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nfunction NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUndefinedVariablesRule = NoUndefinedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nfunction NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedFragmentsRule = NoUnusedFragmentsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nfunction NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Fragment \"${fragName}\" is never used.`,\n                {\n                  nodes: fragmentDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.NoUnusedVariablesRule = NoUnusedVariablesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nfunction NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.sortValueNode = sortValueNode;\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\nfunction sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case _kinds.Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case _kinds.Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case _kinds.Kind.INT:\n    case _kinds.Kind.FLOAT:\n    case _kinds.Kind.STRING:\n    case _kinds.Kind.BOOLEAN:\n    case _kinds.Kind.NULL:\n    case _kinds.Kind.ENUM:\n    case _kinds.Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      (0, _naturalCompare.naturalCompare)(fieldA.name.value, fieldB.name.value),\n    );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.OverlappingFieldsCanBeMergedRule = OverlappingFieldsCanBeMergedRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _sortValueNode = require('../../utilities/sortValueNode.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nfunction OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      (0, _definition.isObjectType)(parentType1) &&\n      (0, _definition.isObjectType)(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (!sameArguments(node1, node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${(0, _inspect.inspect)(\n          type1,\n        )}\" and \"${(0, _inspect.inspect)(type2)}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      (0, _definition.getNamedType)(type1),\n      selectionSet1,\n      (0, _definition.getNamedType)(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(node1, node2) {\n  const args1 = node1.arguments;\n  const args2 = node2.arguments;\n\n  if (args1 === undefined || args1.length === 0) {\n    return args2 === undefined || args2.length === 0;\n  }\n\n  if (args2 === undefined || args2.length === 0) {\n    return false;\n  }\n  /* c8 ignore next */\n\n  if (args1.length !== args2.length) {\n    /* c8 ignore next */\n    return false;\n    /* c8 ignore next */\n  }\n\n  const values2 = new Map(args2.map(({ name, value }) => [name.value, value]));\n  return args1.every((arg1) => {\n    const value1 = arg1.value;\n    const value2 = values2.get(arg1.name.value);\n\n    if (value2 === undefined) {\n      return false;\n    }\n\n    return stringifyValue(value1) === stringifyValue(value2);\n  });\n}\n\nfunction stringifyValue(value) {\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(value));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if ((0, _definition.isListType)(type1)) {\n    return (0, _definition.isListType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isListType)(type2)) {\n    return true;\n  }\n\n  if ((0, _definition.isNonNullType)(type1)) {\n    return (0, _definition.isNonNullType)(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if ((0, _definition.isNonNullType)(type2)) {\n    return true;\n  }\n\n  if (\n    (0, _definition.isLeafType)(type1) ||\n    (0, _definition.isLeafType)(type2)\n  ) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = (0, _typeFromAST.typeFromAST)(\n    context.getSchema(),\n    fragment.typeCondition,\n  );\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case _kinds.Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (\n          (0, _definition.isObjectType)(parentType) ||\n          (0, _definition.isInterfaceType)(parentType)\n        ) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case _kinds.Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case _kinds.Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleFragmentSpreadsRule = PossibleFragmentSpreadsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nfunction PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        (0, _definition.isCompositeType)(fragType) &&\n        (0, _definition.isCompositeType)(parentType) &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !(0, _typeComparators.doTypesOverlap)(\n          context.getSchema(),\n          fragType,\n          parentType,\n        )\n      ) {\n        const parentTypeStr = (0, _inspect.inspect)(parentType);\n        const fragTypeStr = (0, _inspect.inspect)(fragType);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = (0, _typeFromAST.typeFromAST)(\n      context.getSchema(),\n      frag.typeCondition,\n    );\n\n    if ((0, _definition.isCompositeType)(type)) {\n      return type;\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nfunction PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Cannot extend non-${kindStr} type \"${typeName}\".`,\n            {\n              nodes: defNode ? [defNode, node] : node,\n            },\n          ),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = (0, _suggestionList.suggestionList)(\n        typeName,\n        allTypeNames,\n      );\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            (0, _didYouMean.didYouMean)(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\n\nconst defKindToExtKind = {\n  [_kinds.Kind.SCALAR_TYPE_DEFINITION]: _kinds.Kind.SCALAR_TYPE_EXTENSION,\n  [_kinds.Kind.OBJECT_TYPE_DEFINITION]: _kinds.Kind.OBJECT_TYPE_EXTENSION,\n  [_kinds.Kind.INTERFACE_TYPE_DEFINITION]: _kinds.Kind.INTERFACE_TYPE_EXTENSION,\n  [_kinds.Kind.UNION_TYPE_DEFINITION]: _kinds.Kind.UNION_TYPE_EXTENSION,\n  [_kinds.Kind.ENUM_TYPE_DEFINITION]: _kinds.Kind.ENUM_TYPE_EXTENSION,\n  [_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION]:\n    _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return _kinds.Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return _kinds.Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return _kinds.Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return _kinds.Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case _kinds.Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case _kinds.Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case _kinds.Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case _kinds.Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false ||\n        (0, _invariant.invariant)(\n          false,\n          'Unexpected kind: ' + (0, _inspect.inspect)(kind),\n        );\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ProvidedRequiredArgumentsOnDirectivesRule =\n  ProvidedRequiredArgumentsOnDirectivesRule;\nexports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nfunction ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (\n            !providedArgs.has(argDef.name) &&\n            (0, _definition.isRequiredArgument)(argDef)\n          ) {\n            const argTypeStr = (0, _inspect.inspect)(argDef.type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nfunction ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(\n      directive.args.filter(_definition.isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = (0, _definition.isType)(argDef.type)\n                ? (0, _inspect.inspect)(argDef.type)\n                : (0, _printer.print)(argDef.type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return (\n    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ScalarLeafsRule = ScalarLeafsRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nfunction ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = (0, _inspect.inspect)(type);\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = (0, _inspect.inspect)(type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.SingleFieldSubscriptionsRule = SingleFieldSubscriptionsRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _collectFields = require('../../execution/collectFields.js');\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nfunction SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = (0, _collectFields.collectFields)(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.groupBy = groupBy;\n\n/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nfunction groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentDefinitionNamesRule = UniqueArgumentDefinitionNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nfunction UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueArgumentNamesRule = UniqueArgumentNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nfunction UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = (0, _groupBy.groupBy)(\n      argumentNodes,\n      (arg) => arg.name.value,\n    );\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nfunction UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _predicates = require('../../language/predicates.js');\n\nvar _directives = require('../../type/directives.js');\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nfunction UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : _directives.specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === _kinds.Kind.SCHEMA_DEFINITION ||\n        node.kind === _kinds.Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (\n        (0, _predicates.isTypeDefinitionNode)(node) ||\n        (0, _predicates.isTypeExtensionNode)(node)\n      ) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new _GraphQLError.GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nfunction UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (\n        (0, _definition.isEnumType)(existingType) &&\n        existingType.getValue(valueName)\n      ) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFieldDefinitionNamesRule = UniqueFieldDefinitionNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nfunction UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (\n    (0, _definition.isObjectType)(type) ||\n    (0, _definition.isInterfaceType)(type) ||\n    (0, _definition.isInputObjectType)(type)\n  ) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nfunction UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;\n\nvar _invariant = require('../../jsutils/invariant.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nfunction UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || (0, _invariant.invariant)(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationNamesRule = UniqueOperationNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nfunction UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueOperationTypesRule = UniqueOperationTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nfunction UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueTypeNamesRule = UniqueTypeNamesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nfunction UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `There can be only one type named \"${typeName}\".`,\n          {\n            nodes: [knownTypeNames[typeName], node.name],\n          },\n        ),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.UniqueVariableNamesRule = UniqueVariableNamesRule;\n\nvar _groupBy = require('../../jsutils/groupBy.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nfunction UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = (0, _groupBy.groupBy)(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValuesOfCorrectTypeRule = ValuesOfCorrectTypeRule;\n\nvar _didYouMean = require('../../jsutils/didYouMean.js');\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _keyMap = require('../../jsutils/keyMap.js');\n\nvar _suggestionList = require('../../jsutils/suggestionList.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nfunction ValuesOfCorrectTypeRule(context) {\n  let variableDefinitions = {};\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefinitions = {};\n      },\n    },\n\n    VariableDefinition(definition) {\n      variableDefinitions[definition.variable.name.value] = definition;\n    },\n\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = (0, _definition.getNullableType)(\n        context.getParentInputType(),\n      );\n\n      if (!(0, _definition.isListType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = (0, _definition.getNamedType)(context.getInputType());\n\n      if (!(0, _definition.isInputObjectType)(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = (0, _keyMap.keyMap)(\n        node.fields,\n        (field) => field.name.value,\n      );\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && (0, _definition.isRequiredInputField)(fieldDef)) {\n          const typeStr = (0, _inspect.inspect)(fieldDef.type);\n          context.reportError(\n            new _GraphQLError.GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n\n      if (type.isOneOf) {\n        validateOneOfInputObject(\n          context,\n          node,\n          type,\n          fieldNodeMap,\n          variableDefinitions,\n        );\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = (0, _definition.getNamedType)(\n        context.getParentInputType(),\n      );\n      const fieldType = context.getInputType();\n\n      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {\n        const suggestions = (0, _suggestionList.suggestionList)(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              (0, _didYouMean.didYouMean)(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if ((0, _definition.isNonNullType)(type)) {\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Expected value of type \"${(0, _inspect.inspect)(\n              type,\n            )}\", found ${(0, _printer.print)(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = (0, _definition.getNamedType)(locationType);\n\n  if (!(0, _definition.isLeafType)(type)) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n    context.reportError(\n      new _GraphQLError.GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n          node,\n        )}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = (0, _inspect.inspect)(locationType);\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = (0, _inspect.inspect)(locationType);\n\n    if (error instanceof _GraphQLError.GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${(0, _printer.print)(\n            node,\n          )}; ` + error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n\nfunction validateOneOfInputObject(\n  context,\n  node,\n  type,\n  fieldNodeMap,\n  variableDefinitions,\n) {\n  var _fieldNodeMap$keys$;\n\n  const keys = Object.keys(fieldNodeMap);\n  const isNotExactlyOneField = keys.length !== 1;\n\n  if (isNotExactlyOneField) {\n    context.reportError(\n      new _GraphQLError.GraphQLError(\n        `OneOf Input Object \"${type.name}\" must specify exactly one key.`,\n        {\n          nodes: [node],\n        },\n      ),\n    );\n    return;\n  }\n\n  const value =\n    (_fieldNodeMap$keys$ = fieldNodeMap[keys[0]]) === null ||\n    _fieldNodeMap$keys$ === void 0\n      ? void 0\n      : _fieldNodeMap$keys$.value;\n  const isNullLiteral = !value || value.kind === _kinds.Kind.NULL;\n  const isVariable =\n    (value === null || value === void 0 ? void 0 : value.kind) ===\n    _kinds.Kind.VARIABLE;\n\n  if (isNullLiteral) {\n    context.reportError(\n      new _GraphQLError.GraphQLError(\n        `Field \"${type.name}.${keys[0]}\" must be non-null.`,\n        {\n          nodes: [node],\n        },\n      ),\n    );\n    return;\n  }\n\n  if (isVariable) {\n    const variableName = value.name.value;\n    const definition = variableDefinitions[variableName];\n    const isNullableVariable =\n      definition.type.kind !== _kinds.Kind.NON_NULL_TYPE;\n\n    if (isNullableVariable) {\n      context.reportError(\n        new _GraphQLError.GraphQLError(\n          `Variable \"${variableName}\" must be non-nullable to be used for OneOf Input Object \"${type.name}\".`,\n          {\n            nodes: [node],\n          },\n        ),\n      );\n    }\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesAreInputTypesRule = VariablesAreInputTypesRule;\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _printer = require('../../language/printer.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nfunction VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = (0, _typeFromAST.typeFromAST)(\n        context.getSchema(),\n        node.type,\n      );\n\n      if (type !== undefined && !(0, _definition.isInputType)(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = (0, _printer.print)(node.type);\n        context.reportError(\n          new _GraphQLError.GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;\n\nvar _inspect = require('../../jsutils/inspect.js');\n\nvar _GraphQLError = require('../../error/GraphQLError.js');\n\nvar _kinds = require('../../language/kinds.js');\n\nvar _definition = require('../../type/definition.js');\n\nvar _typeComparators = require('../../utilities/typeComparators.js');\n\nvar _typeFromAST = require('../../utilities/typeFromAST.js');\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nfunction VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = (0, _inspect.inspect)(varType);\n              const typeStr = (0, _inspect.inspect)(type);\n              context.reportError(\n                new _GraphQLError.GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (\n    (0, _definition.isNonNullType)(locationType) &&\n    !(0, _definition.isNonNullType)(varType)\n  ) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return (0, _typeComparators.isTypeSubTypeOf)(\n      schema,\n      varType,\n      nullableLocationType,\n    );\n  }\n\n  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.specifiedSDLRules =\n  exports.specifiedRules =\n  exports.recommendedRules =\n    void 0;\n\nvar _ExecutableDefinitionsRule = require('./rules/ExecutableDefinitionsRule.js');\n\nvar _FieldsOnCorrectTypeRule = require('./rules/FieldsOnCorrectTypeRule.js');\n\nvar _FragmentsOnCompositeTypesRule = require('./rules/FragmentsOnCompositeTypesRule.js');\n\nvar _KnownArgumentNamesRule = require('./rules/KnownArgumentNamesRule.js');\n\nvar _KnownDirectivesRule = require('./rules/KnownDirectivesRule.js');\n\nvar _KnownFragmentNamesRule = require('./rules/KnownFragmentNamesRule.js');\n\nvar _KnownTypeNamesRule = require('./rules/KnownTypeNamesRule.js');\n\nvar _LoneAnonymousOperationRule = require('./rules/LoneAnonymousOperationRule.js');\n\nvar _LoneSchemaDefinitionRule = require('./rules/LoneSchemaDefinitionRule.js');\n\nvar _MaxIntrospectionDepthRule = require('./rules/MaxIntrospectionDepthRule.js');\n\nvar _NoFragmentCyclesRule = require('./rules/NoFragmentCyclesRule.js');\n\nvar _NoUndefinedVariablesRule = require('./rules/NoUndefinedVariablesRule.js');\n\nvar _NoUnusedFragmentsRule = require('./rules/NoUnusedFragmentsRule.js');\n\nvar _NoUnusedVariablesRule = require('./rules/NoUnusedVariablesRule.js');\n\nvar _OverlappingFieldsCanBeMergedRule = require('./rules/OverlappingFieldsCanBeMergedRule.js');\n\nvar _PossibleFragmentSpreadsRule = require('./rules/PossibleFragmentSpreadsRule.js');\n\nvar _PossibleTypeExtensionsRule = require('./rules/PossibleTypeExtensionsRule.js');\n\nvar _ProvidedRequiredArgumentsRule = require('./rules/ProvidedRequiredArgumentsRule.js');\n\nvar _ScalarLeafsRule = require('./rules/ScalarLeafsRule.js');\n\nvar _SingleFieldSubscriptionsRule = require('./rules/SingleFieldSubscriptionsRule.js');\n\nvar _UniqueArgumentDefinitionNamesRule = require('./rules/UniqueArgumentDefinitionNamesRule.js');\n\nvar _UniqueArgumentNamesRule = require('./rules/UniqueArgumentNamesRule.js');\n\nvar _UniqueDirectiveNamesRule = require('./rules/UniqueDirectiveNamesRule.js');\n\nvar _UniqueDirectivesPerLocationRule = require('./rules/UniqueDirectivesPerLocationRule.js');\n\nvar _UniqueEnumValueNamesRule = require('./rules/UniqueEnumValueNamesRule.js');\n\nvar _UniqueFieldDefinitionNamesRule = require('./rules/UniqueFieldDefinitionNamesRule.js');\n\nvar _UniqueFragmentNamesRule = require('./rules/UniqueFragmentNamesRule.js');\n\nvar _UniqueInputFieldNamesRule = require('./rules/UniqueInputFieldNamesRule.js');\n\nvar _UniqueOperationNamesRule = require('./rules/UniqueOperationNamesRule.js');\n\nvar _UniqueOperationTypesRule = require('./rules/UniqueOperationTypesRule.js');\n\nvar _UniqueTypeNamesRule = require('./rules/UniqueTypeNamesRule.js');\n\nvar _UniqueVariableNamesRule = require('./rules/UniqueVariableNamesRule.js');\n\nvar _ValuesOfCorrectTypeRule = require('./rules/ValuesOfCorrectTypeRule.js');\n\nvar _VariablesAreInputTypesRule = require('./rules/VariablesAreInputTypesRule.js');\n\nvar _VariablesInAllowedPositionRule = require('./rules/VariablesInAllowedPositionRule.js');\n\n// Spec Section: \"Executable Definitions\"\n// Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n// Spec Section: \"Fragments on Composite Types\"\n// Spec Section: \"Argument Names\"\n// Spec Section: \"Directives Are Defined\"\n// Spec Section: \"Fragment spread target defined\"\n// Spec Section: \"Fragment Spread Type Existence\"\n// Spec Section: \"Lone Anonymous Operation\"\n// SDL-specific validation rules\n// TODO: Spec Section\n// Spec Section: \"Fragments must not form cycles\"\n// Spec Section: \"All Variable Used Defined\"\n// Spec Section: \"Fragments must be used\"\n// Spec Section: \"All Variables Used\"\n// Spec Section: \"Field Selection Merging\"\n// Spec Section: \"Fragment spread is possible\"\n// Spec Section: \"Argument Optionality\"\n// Spec Section: \"Leaf Field Selections\"\n// Spec Section: \"Subscriptions with Single Root Field\"\n// Spec Section: \"Argument Uniqueness\"\n// Spec Section: \"Directives Are Unique Per Location\"\n// Spec Section: \"Fragment Name Uniqueness\"\n// Spec Section: \"Input Object Field Uniqueness\"\n// Spec Section: \"Operation Name Uniqueness\"\n// Spec Section: \"Variable Uniqueness\"\n// Spec Section: \"Value Type Correctness\"\n// Spec Section: \"Variables are Input Types\"\n// Spec Section: \"All Variable Usages Are Allowed\"\n\n/**\n * Technically these aren't part of the spec but they are strongly encouraged\n * validation rules.\n */\nconst recommendedRules = Object.freeze([\n  _MaxIntrospectionDepthRule.MaxIntrospectionDepthRule,\n]);\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\n\nexports.recommendedRules = recommendedRules;\nconst specifiedRules = Object.freeze([\n  _ExecutableDefinitionsRule.ExecutableDefinitionsRule,\n  _UniqueOperationNamesRule.UniqueOperationNamesRule,\n  _LoneAnonymousOperationRule.LoneAnonymousOperationRule,\n  _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule,\n  _VariablesAreInputTypesRule.VariablesAreInputTypesRule,\n  _ScalarLeafsRule.ScalarLeafsRule,\n  _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule,\n  _UniqueFragmentNamesRule.UniqueFragmentNamesRule,\n  _KnownFragmentNamesRule.KnownFragmentNamesRule,\n  _NoUnusedFragmentsRule.NoUnusedFragmentsRule,\n  _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule,\n  _NoFragmentCyclesRule.NoFragmentCyclesRule,\n  _UniqueVariableNamesRule.UniqueVariableNamesRule,\n  _NoUndefinedVariablesRule.NoUndefinedVariablesRule,\n  _NoUnusedVariablesRule.NoUnusedVariablesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule,\n  _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule,\n  _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n  ...recommendedRules,\n]);\n/**\n * @internal\n */\n\nexports.specifiedRules = specifiedRules;\nconst specifiedSDLRules = Object.freeze([\n  _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule,\n  _UniqueOperationTypesRule.UniqueOperationTypesRule,\n  _UniqueTypeNamesRule.UniqueTypeNamesRule,\n  _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule,\n  _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule,\n  _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule,\n  _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule,\n  _KnownTypeNamesRule.KnownTypeNamesRule,\n  _KnownDirectivesRule.KnownDirectivesRule,\n  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,\n  _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule,\n  _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule,\n  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,\n  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,\n  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule,\n]);\nexports.specifiedSDLRules = specifiedSDLRules;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.ValidationContext =\n  exports.SDLValidationContext =\n  exports.ASTValidationContext =\n    void 0;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nclass ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === _kinds.Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\n\nexports.ASTValidationContext = ASTValidationContext;\n\nclass SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\n\nexports.SDLValidationContext = SDLValidationContext;\n\nclass ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new _TypeInfo.TypeInfo(this._schema);\n      (0, _visitor.visit)(\n        node,\n        (0, _TypeInfo.visitWithTypeInfo)(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n\nexports.ValidationContext = ValidationContext;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidSDL = assertValidSDL;\nexports.assertValidSDLExtension = assertValidSDLExtension;\nexports.validate = validate;\nexports.validateSDL = validateSDL;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _visitor = require('../language/visitor.js');\n\nvar _validate = require('../type/validate.js');\n\nvar _TypeInfo = require('../utilities/TypeInfo.js');\n\nvar _specifiedRules = require('./specifiedRules.js');\n\nvar _ValidationContext = require('./ValidationContext.js');\n\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\nfunction validate(\n  schema,\n  documentAST,\n  rules = _specifiedRules.specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new _TypeInfo.TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  (0, _validate.assertValidSchema)(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new _ValidationContext.ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new _GraphQLError.GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = (0, _visitor.visitInParallel)(\n    rules.map((rule) => rule(context)),\n  ); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    (0, _visitor.visit)(\n      documentAST,\n      (0, _TypeInfo.visitWithTypeInfo)(typeInfo, visitor),\n    );\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nfunction validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = _specifiedRules.specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new _ValidationContext.SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  (0, _visitor.visit)(documentAST, (0, _visitor.visitInParallel)(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nfunction assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.extendSchema = extendSchema;\nexports.extendSchemaImpl = extendSchemaImpl;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _mapValue = require('../jsutils/mapValue.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _predicates = require('../language/predicates.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _values = require('../execution/values.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nfunction extendSchema(schema, documentAST, options) {\n  (0, _schema.assertSchema)(schema);\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDLExtension)(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new _schema.GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nfunction extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === _kinds.Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === _kinds.Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if ((0, _predicates.isTypeDefinitionNode)(def)) {\n      typeDefs.push(def);\n    } else if ((0, _predicates.isTypeExtensionNode)(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    }\n\n    if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      args: (0, _mapValue.mapValue)(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (\n      (0, _introspection.isIntrospectionType)(type) ||\n      (0, _scalars.isSpecifiedScalarType)(type)\n    ) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if ((0, _definition.isScalarType)(type)) {\n      return extendScalarType(type);\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      return extendObjectType(type);\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      return extendUnionType(type);\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      return extendEnumType(type);\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new _definition.GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new _definition.GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new _definition.GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new _definition.GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new _definition.GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...(0, _mapValue.mapValue)(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new _definition.GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && (0, _mapValue.mapValue)(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === _kinds.Kind.LIST_TYPE) {\n      return new _definition.GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === _kinds.Kind.NON_NULL_TYPE) {\n      return new _definition.GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new _directives.GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: (0, _valueFromAST.valueFromAST)(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: (0, _valueFromAST.valueFromAST)(\n            field.defaultValue,\n            type,\n          ),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case _kinds.Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new _definition.GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new _definition.GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n          isOneOf: isOneOf(astNode),\n        });\n      }\n    }\n  }\n}\n\nconst stdTypeMap = (0, _keyMap.keyMap)(\n  [..._scalars.specifiedScalarTypes, ..._introspection.introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = (0, _values.getDirectiveValues)(\n    _directives.GraphQLDeprecatedDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = (0, _values.getDirectiveValues)(\n    _directives.GraphQLSpecifiedByDirective,\n    node,\n  ); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n/**\n * Given an input object node, returns if the node should be OneOf.\n */\n\nfunction isOneOf(node) {\n  return Boolean(\n    (0, _values.getDirectiveValues)(_directives.GraphQLOneOfDirective, node),\n  );\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.buildASTSchema = buildASTSchema;\nexports.buildSchema = buildSchema;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _parser = require('../language/parser.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _schema = require('../type/schema.js');\n\nvar _validate = require('../validation/validate.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nfunction buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||\n    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    (0, _validate.assertValidSDL)(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = (0, _extendSchema.extendSchemaImpl)(\n    emptySchemaConfig,\n    documentAST,\n    options,\n  );\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ..._directives.specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new _schema.GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nfunction buildSchema(source, options) {\n  const document = (0, _parser.parse)(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.lexicographicSortSchema = lexicographicSortSchema;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyValMap = require('../jsutils/keyValMap.js');\n\nvar _naturalCompare = require('../jsutils/naturalCompare.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _schema = require('../type/schema.js');\n\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\nfunction lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = (0, _keyValMap.keyValMap)(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new _schema.GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if ((0, _definition.isListType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLList(replaceType(type.ofType));\n    } else if ((0, _definition.isNonNullType)(type)) {\n      // @ts-expect-error\n      return new _definition.GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new _directives.GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (\n      (0, _definition.isScalarType)(type) ||\n      (0, _introspection.isIntrospectionType)(type)\n    ) {\n      return type;\n    }\n\n    if ((0, _definition.isObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isInterfaceType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if ((0, _definition.isUnionType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if ((0, _definition.isEnumType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if ((0, _definition.isInputObjectType)(type)) {\n      const config = type.toConfig();\n      return new _definition.GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false ||\n      (0, _invariant.invariant)(\n        false,\n        'Unexpected type: ' + (0, _inspect.inspect)(type),\n      );\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(_naturalCompare.naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return (0, _naturalCompare.naturalCompare)(key1, key2);\n  });\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.printIntrospectionSchema = printIntrospectionSchema;\nexports.printSchema = printSchema;\nexports.printType = printType;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _blockString = require('../language/blockString.js');\n\nvar _kinds = require('../language/kinds.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _directives = require('../type/directives.js');\n\nvar _introspection = require('../type/introspection.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nfunction printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !(0, _directives.isSpecifiedDirective)(n),\n    isDefinedType,\n  );\n}\n\nfunction printIntrospectionSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    _directives.isSpecifiedDirective,\n    _introspection.isIntrospectionType,\n  );\n}\n\nfunction isDefinedType(type) {\n  return (\n    !(0, _scalars.isSpecifiedScalarType)(type) &&\n    !(0, _introspection.isIntrospectionType)(type)\n  );\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction printType(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return printScalar(type);\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return printObject(type);\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return printInterface(type);\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return printUnion(type);\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return printEnum(type);\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return (\n    printDescription(type) +\n    `input ${type.name}` +\n    (type.isOneOf ? ' @oneOf' : '') +\n    printBlock(fields)\n  );\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = (0, _astFromValue.astFromValue)(\n    arg.defaultValue,\n    arg.type,\n  );\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {\n    const astValue = (0, _printer.print)({\n      kind: _kinds.Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = (0, _printer.print)({\n    kind: _kinds.Kind.STRING,\n    value: description,\n    block: (0, _blockString.isPrintableAsBlockString)(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.concatAST = concatAST;\n\nvar _kinds = require('../language/kinds.js');\n\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\nfunction concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: _kinds.Kind.DOCUMENT,\n    definitions,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.separateOperations = separateOperations;\n\nvar _kinds = require('../language/kinds.js');\n\nvar _visitor = require('../language/visitor.js');\n\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\nfunction separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case _kinds.Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case _kinds.Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: _kinds.Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === _kinds.Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  (0, _visitor.visit)(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.stripIgnoredCharacters = stripIgnoredCharacters;\n\nvar _blockString = require('../language/blockString.js');\n\nvar _lexer = require('../language/lexer.js');\n\nvar _source = require('../language/source.js');\n\nvar _tokenKind = require('../language/tokenKind.js');\n\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\nfunction stripIgnoredCharacters(source) {\n  const sourceObj = (0, _source.isSource)(source)\n    ? source\n    : new _source.Source(source);\n  const body = sourceObj.body;\n  const lexer = new _lexer.Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== _tokenKind.TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !(0, _lexer.isPunctuatorTokenKind)(\n      currentToken.kind,\n    );\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (\n        isNonPunctuator ||\n        currentToken.kind === _tokenKind.TokenKind.SPREAD\n      ) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === _tokenKind.TokenKind.BLOCK_STRING) {\n      strippedBody += (0, _blockString.printBlockString)(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.assertValidName = assertValidName;\nexports.isValidNameError = isValidNameError;\n\nvar _devAssert = require('../jsutils/devAssert.js');\n\nvar _GraphQLError = require('../error/GraphQLError.js');\n\nvar _assertName = require('../type/assertName.js');\n\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\nfunction assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nfunction isValidNameError(name) {\n  typeof name === 'string' ||\n    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new _GraphQLError.GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    (0, _assertName.assertName)(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nexports.DangerousChangeType = exports.BreakingChangeType = void 0;\nexports.findBreakingChanges = findBreakingChanges;\nexports.findDangerousChanges = findDangerousChanges;\n\nvar _inspect = require('../jsutils/inspect.js');\n\nvar _invariant = require('../jsutils/invariant.js');\n\nvar _keyMap = require('../jsutils/keyMap.js');\n\nvar _printer = require('../language/printer.js');\n\nvar _definition = require('../type/definition.js');\n\nvar _scalars = require('../type/scalars.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _sortValueNode = require('./sortValueNode.js');\n\nvar BreakingChangeType;\nexports.BreakingChangeType = BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(\n  BreakingChangeType || (exports.BreakingChangeType = BreakingChangeType = {}),\n);\n\nvar DangerousChangeType;\nexports.DangerousChangeType = DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(\n  DangerousChangeType ||\n    (exports.DangerousChangeType = DangerousChangeType = {}),\n);\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nfunction findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nfunction findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if ((0, _definition.isRequiredArgument)(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: (0, _scalars.isSpecifiedScalarType)(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (\n      (0, _definition.isEnumType)(oldType) &&\n      (0, _definition.isEnumType)(newType)\n    ) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isUnionType)(oldType) &&\n      (0, _definition.isUnionType)(newType)\n    ) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isInputObjectType)(oldType) &&\n      (0, _definition.isInputObjectType)(newType)\n    ) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (\n      (0, _definition.isObjectType)(oldType) &&\n      (0, _definition.isObjectType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (\n      (0, _definition.isInterfaceType)(oldType) &&\n      (0, _definition.isInterfaceType)(newType)\n    ) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if ((0, _definition.isRequiredInputField)(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if ((0, _definition.isRequiredArgument)(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      ((0, _definition.isListType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      (0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    ((0, _definition.isNamedType)(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    ((0, _definition.isNonNullType)(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if ((0, _definition.isListType)(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      (0, _definition.isListType)(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if ((0, _definition.isNonNullType)(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      ((0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!(0, _definition.isNonNullType)(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if ((0, _definition.isScalarType)(type)) {\n    return 'a Scalar type';\n  }\n\n  if ((0, _definition.isObjectType)(type)) {\n    return 'an Object type';\n  }\n\n  if ((0, _definition.isInterfaceType)(type)) {\n    return 'an Interface type';\n  }\n\n  if ((0, _definition.isUnionType)(type)) {\n    return 'a Union type';\n  }\n\n  if ((0, _definition.isEnumType)(type)) {\n    return 'an Enum type';\n  }\n\n  if ((0, _definition.isInputObjectType)(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false ||\n    (0, _invariant.invariant)(\n      false,\n      'Unexpected type: ' + (0, _inspect.inspect)(type),\n    );\n}\n\nfunction stringifyValue(value, type) {\n  const ast = (0, _astFromValue.astFromValue)(value, type);\n  ast != null || (0, _invariant.invariant)(false);\n  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = (0, _keyMap.keyMap)(oldArray, ({ name }) => name);\n  const newMap = (0, _keyMap.keyMap)(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true,\n});\nObject.defineProperty(exports, 'BreakingChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.BreakingChangeType;\n  },\n});\nObject.defineProperty(exports, 'DangerousChangeType', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.DangerousChangeType;\n  },\n});\nObject.defineProperty(exports, 'TypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.TypeInfo;\n  },\n});\nObject.defineProperty(exports, 'assertValidName', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.assertValidName;\n  },\n});\nObject.defineProperty(exports, 'astFromValue', {\n  enumerable: true,\n  get: function () {\n    return _astFromValue.astFromValue;\n  },\n});\nObject.defineProperty(exports, 'buildASTSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildASTSchema;\n  },\n});\nObject.defineProperty(exports, 'buildClientSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildClientSchema.buildClientSchema;\n  },\n});\nObject.defineProperty(exports, 'buildSchema', {\n  enumerable: true,\n  get: function () {\n    return _buildASTSchema.buildSchema;\n  },\n});\nObject.defineProperty(exports, 'coerceInputValue', {\n  enumerable: true,\n  get: function () {\n    return _coerceInputValue.coerceInputValue;\n  },\n});\nObject.defineProperty(exports, 'concatAST', {\n  enumerable: true,\n  get: function () {\n    return _concatAST.concatAST;\n  },\n});\nObject.defineProperty(exports, 'doTypesOverlap', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.doTypesOverlap;\n  },\n});\nObject.defineProperty(exports, 'extendSchema', {\n  enumerable: true,\n  get: function () {\n    return _extendSchema.extendSchema;\n  },\n});\nObject.defineProperty(exports, 'findBreakingChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findBreakingChanges;\n  },\n});\nObject.defineProperty(exports, 'findDangerousChanges', {\n  enumerable: true,\n  get: function () {\n    return _findBreakingChanges.findDangerousChanges;\n  },\n});\nObject.defineProperty(exports, 'getIntrospectionQuery', {\n  enumerable: true,\n  get: function () {\n    return _getIntrospectionQuery.getIntrospectionQuery;\n  },\n});\nObject.defineProperty(exports, 'getOperationAST', {\n  enumerable: true,\n  get: function () {\n    return _getOperationAST.getOperationAST;\n  },\n});\nObject.defineProperty(exports, 'getOperationRootType', {\n  enumerable: true,\n  get: function () {\n    return _getOperationRootType.getOperationRootType;\n  },\n});\nObject.defineProperty(exports, 'introspectionFromSchema', {\n  enumerable: true,\n  get: function () {\n    return _introspectionFromSchema.introspectionFromSchema;\n  },\n});\nObject.defineProperty(exports, 'isEqualType', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isEqualType;\n  },\n});\nObject.defineProperty(exports, 'isTypeSubTypeOf', {\n  enumerable: true,\n  get: function () {\n    return _typeComparators.isTypeSubTypeOf;\n  },\n});\nObject.defineProperty(exports, 'isValidNameError', {\n  enumerable: true,\n  get: function () {\n    return _assertValidName.isValidNameError;\n  },\n});\nObject.defineProperty(exports, 'lexicographicSortSchema', {\n  enumerable: true,\n  get: function () {\n    return _lexicographicSortSchema.lexicographicSortSchema;\n  },\n});\nObject.defineProperty(exports, 'printIntrospectionSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printIntrospectionSchema;\n  },\n});\nObject.defineProperty(exports, 'printSchema', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printSchema;\n  },\n});\nObject.defineProperty(exports, 'printType', {\n  enumerable: true,\n  get: function () {\n    return _printSchema.printType;\n  },\n});\nObject.defineProperty(exports, 'separateOperations', {\n  enumerable: true,\n  get: function () {\n    return _separateOperations.separateOperations;\n  },\n});\nObject.defineProperty(exports, 'stripIgnoredCharacters', {\n  enumerable: true,\n  get: function () {\n    return _stripIgnoredCharacters.stripIgnoredCharacters;\n  },\n});\nObject.defineProperty(exports, 'typeFromAST', {\n  enumerable: true,\n  get: function () {\n    return _typeFromAST.typeFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromAST', {\n  enumerable: true,\n  get: function () {\n    return _valueFromAST.valueFromAST;\n  },\n});\nObject.defineProperty(exports, 'valueFromASTUntyped', {\n  enumerable: true,\n  get: function () {\n    return _valueFromASTUntyped.valueFromASTUntyped;\n  },\n});\nObject.defineProperty(exports, 'visitWithTypeInfo', {\n  enumerable: true,\n  get: function () {\n    return _TypeInfo.visitWithTypeInfo;\n  },\n});\n\nvar _getIntrospectionQuery = require('./getIntrospectionQuery.js');\n\nvar _getOperationAST = require('./getOperationAST.js');\n\nvar _getOperationRootType = require('./getOperationRootType.js');\n\nvar _introspectionFromSchema = require('./introspectionFromSchema.js');\n\nvar _buildClientSchema = require('./buildClientSchema.js');\n\nvar _buildASTSchema = require('./buildASTSchema.js');\n\nvar _extendSchema = require('./extendSchema.js');\n\nvar _lexicographicSortSchema = require('./lexicographicSortSchema.js');\n\nvar _printSchema = require('./printSchema.js');\n\nvar _typeFromAST = require('./typeFromAST.js');\n\nvar _valueFromAST = require('./valueFromAST.js');\n\nvar _valueFromASTUntyped = require('./valueFromASTUntyped.js');\n\nvar _astFromValue = require('./astFromValue.js');\n\nvar _TypeInfo = require('./TypeInfo.js');\n\nvar _coerceInputValue = require('./coerceInputValue.js');\n\nvar _concatAST = require('./concatAST.js');\n\nvar _separateOperations = require('./separateOperations.js');\n\nvar _stripIgnoredCharacters = require('./stripIgnoredCharacters.js');\n\nvar _typeComparators = require('./typeComparators.js');\n\nvar _assertValidName = require('./assertValidName.js');\n\nvar _findBreakingChanges = require('./findBreakingChanges.js');\n", "/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n", "(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nrequire('setimmediate');\n\nconst crypto = self.crypto || self.msCrypto;\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    // check if crypto.subtle is available\n    // check is here rather than top-level to only fail if class is used\n    if(!(crypto && crypto.subtle)) {\n      throw new Error('crypto.subtle not found.');\n    }\n    if(algorithm === 'sha256') {\n      this.algorithm = {name: 'SHA-256'};\n    } else if(algorithm === 'sha1') {\n      this.algorithm = {name: 'SHA-1'};\n    } else {\n      throw new Error(`Unsupported algorithm \"${algorithm}\".`);\n    }\n    this._content = '';\n  }\n\n  update(msg) {\n    this._content += msg;\n  }\n\n  async digest() {\n    const data = new TextEncoder().encode(this._content);\n    const buffer = new Uint8Array(\n      await crypto.subtle.digest(this.algorithm, data));\n    // return digest in hex\n    let hex = '';\n    for(let i = 0; i < buffer.length; ++i) {\n      hex += buffer[i].toString(16).padStart(2, '0');\n    }\n    return hex;\n  }\n};\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class Permuter {\n  /**\n   * A Permuter iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.current = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.dir = new Map();\n    for(let i = 0; i < list.length; ++i) {\n      this.dir.set(list[i], true);\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation to return it\n    const {current, dir} = this;\n    const rval = current.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = current.length;\n    for(let i = 0; i < length; ++i) {\n      const element = current[i];\n      const left = dir.get(element);\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > current[i - 1]) ||\n        (!left && i < (length - 1) && element > current[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = dir.get(k) ? pos - 1 : pos + 1;\n      current[pos] = current[swap];\n      current[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(const element of current) {\n        if(element > k) {\n          dir.set(element, !dir.get(element));\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// eslint-disable-next-line no-unused-vars\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nconst TYPE_NAMED_NODE = 'NamedNode';\nconst TYPE_BLANK_NODE = 'BlankNode';\nconst TYPE_LITERAL = 'Literal';\nconst TYPE_DEFAULT_GRAPH = 'DefaultGraph';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {subject: null, predicate: null, object: null, graph: null};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: TYPE_NAMED_NODE, value: match[1]};\n      } else {\n        quad.subject = {termType: TYPE_BLANK_NODE, value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: TYPE_NAMED_NODE, value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: TYPE_NAMED_NODE, value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: TYPE_BLANK_NODE, value: match[5]};\n      } else {\n        quad.object = {\n          termType: TYPE_LITERAL,\n          value: undefined,\n          datatype: {\n            termType: TYPE_NAMED_NODE\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: TYPE_NAMED_NODE,\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: TYPE_BLANK_NODE,\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: TYPE_DEFAULT_GRAPH,\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts RDF quad components to an N-Quad string (a single quad).\n   *\n   * @param {Object} s - N-Quad subject component.\n   * @param {Object} p - N-Quad predicate component.\n   * @param {Object} o - N-Quad object component.\n   * @param {Object} g - N-Quad graph component.\n   *\n   * @return {string} the N-Quad.\n   */\n  static serializeQuadComponents(s, p, o, g) {\n    let nquad = '';\n\n    // subject can only be NamedNode or BlankNode\n    if(s.termType === TYPE_NAMED_NODE) {\n      nquad += `<${s.value}>`;\n    } else {\n      nquad += `${s.value}`;\n    }\n\n    // predicate can only be NamedNode\n    nquad += ` <${p.value}> `;\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === TYPE_NAMED_NODE) {\n      nquad += `<${o.value}>`;\n    } else if(o.termType === TYPE_BLANK_NODE) {\n      nquad += o.value;\n    } else {\n      nquad += `\"${_escape(o.value)}\"`;\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += `@${o.language}`;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += `^^<${o.datatype.value}>`;\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === TYPE_NAMED_NODE) {\n      nquad += ` <${g.value}>`;\n    } else if(g.termType === TYPE_BLANK_NODE) {\n      nquad += ` ${g.value}`;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    return NQuads.serializeQuadComponents(\n      quad.subject, quad.predicate, quad.object, quad.graph);\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': TYPE_BLANK_NODE,\n      IRI: TYPE_NAMED_NODE,\n      literal: TYPE_LITERAL\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === TYPE_LITERAL) {\n            newComponent.datatype = {\n              termType: TYPE_NAMED_NODE\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: TYPE_DEFAULT_GRAPH,\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ?\n              TYPE_BLANK_NODE : TYPE_NAMED_NODE,\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  // compare subject and object types first as it is the quickest check\n  if(!(t1.subject.termType === t2.subject.termType &&\n    t1.object.termType === t2.object.termType)) {\n    return false;\n  }\n  // compare values\n  if(!(t1.subject.value === t2.subject.value &&\n    t1.predicate.value === t2.predicate.value &&\n    t1.object.value === t2.object.value)) {\n    return false;\n  }\n  if(t1.object.termType !== TYPE_LITERAL) {\n    // no `datatype` or `language` to check\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.language === t2.object.language) &&\n    (t1.object.datatype.value === t2.object.datatype.value)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor({\n    createMessageDigest = () => new MessageDigest('sha256'),\n    canonicalIdMap = new Map(),\n    maxDeepIterations = Infinity\n  } = {}) {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n', canonicalIdMap);\n    this.createMessageDigest = createMessageDigest;\n    this.maxDeepIterations = maxDeepIterations;\n    this.quads = null;\n    this.deepIterations = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.deepIterations = new Map();\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize away the copy here.\n      const nQuad = NQuads.serializeQuadComponents(\n        this._componentWithCanonicalId(quad.subject),\n        quad.predicate,\n        this._componentWithCanonicalId(quad.object),\n        this._componentWithCanonicalId(quad.graph)\n      );\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(nQuad);\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = this.createMessageDigest();\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = this.createMessageDigest();\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    const deepIterations = this.deepIterations.get(id) || 0;\n    if(deepIterations > this.maxDeepIterations) {\n      throw new Error(\n        `Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);\n    }\n    this.deepIterations.set(id, deepIterations + 1);\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = this.createMessageDigest();\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  // canonical ids for 7.1\n  _componentWithCanonicalId(component) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      // create new BlankNode\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst MessageDigest = require('./MessageDigest');\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.createMessageDigest = () => new MessageDigest('sha1');\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n", "/*!\n * Copyright (c) 2016-2022 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\n// FIXME: do not import; convert to requiring a\n// hash factory\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015Sync {\n  constructor({\n    createMessageDigest = () => new MessageDigest('sha256'),\n    canonicalIdMap = new Map(),\n    maxDeepIterations = Infinity\n  } = {}) {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n', canonicalIdMap);\n    this.createMessageDigest = createMessageDigest;\n    this.maxDeepIterations = maxDeepIterations;\n    this.quads = null;\n    this.deepIterations = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    this.deepIterations = new Map();\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    for(const id of nonNormalized) {\n      // steps 5.3.1 and 5.3.2:\n      this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize away the copy here.\n      const nQuad = NQuads.serializeQuadComponents(\n        this._componentWithCanonicalId({component: quad.subject}),\n        quad.predicate,\n        this._componentWithCanonicalId({component: quad.object}),\n        this._componentWithCanonicalId({component: quad.graph})\n      );\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(nQuad);\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = this.createMessageDigest();\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = this.createMessageDigest();\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    const deepIterations = this.deepIterations.get(id) || 0;\n    if(deepIterations > this.maxDeepIterations) {\n      throw new Error(\n        `Maximum deep iterations (${this.maxDeepIterations}) exceeded.`);\n    }\n    this.deepIterations.set(id, deepIterations + 1);\n\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = this.createMessageDigest();\n    const hashToRelated = this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // or graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.subject, position: 's',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.object, position: 'o',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.graph, position: 'g',\n        id, issuer, hashToRelated\n      });\n    }\n\n    return hashToRelated;\n  }\n\n  _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  // canonical ids for 7.1\n  _componentWithCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      // create new BlankNode\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n", "/*!\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst MessageDigest = require('./MessageDigest');\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.createMessageDigest = () => new MessageDigest('sha1');\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"rdf-canonize-native\" has been externalized for browser compatibility. Cannot access \"rdf-canonize-native.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2023 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\n// return a dataset from input dataset or legacy dataset\nfunction _inputToDataset(input/*, options*/) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(input)) {\n    return exports.NQuads.legacyDatasetToQuads(input);\n  }\n  return input;\n}\n\n// expose helpers\nexports.NQuads = require('./NQuads');\nexports.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\nexports._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param {Array|object|string} input - The input to canonize given as a\n *   dataset or legacy dataset.\n * @param {object} options - The options to use:\n *   {string} algorithm - The canonicalization algorithm to use, `URDNA2015` or\n *     `URGNA2012`.\n *   {Function} [createMessageDigest] - A factory function for creating a\n *     `MessageDigest` interface that overrides the built-in message digest\n *     implementation used by the canonize algorithm; note that using a hash\n *     algorithm (or HMAC algorithm) that differs from the one specified by\n *     the canonize algorithm will result in different output.\n *   {Map} [canonicalIdMap] - An optional Map to be populated by the canonical\n *     identifier issuer with the bnode identifier mapping generated by the\n *     canonicalization algorithm.\n *   {boolean} [useNative=false] - Use native implementation.\n *   {number} [maxDeepIterations=Infinity] - The maximum number of times to run\n *     deep comparison algorithms (such as the N-Degree Hash Quads algorithm\n *     used in URDNA2015) before bailing out and throwing an error; this is a\n *     useful setting for preventing wasted CPU cycles or DoS when canonizing\n *     meaningless or potentially malicious datasets, a recommended value is\n *     `1`.\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\nexports.canonize = async function(input, options) {\n  const dataset = _inputToDataset(input, options);\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    if(options.createMessageDigest) {\n      throw new Error(\n        '\"createMessageDigest\" cannot be used with \"useNative\".');\n    }\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    if(options.createMessageDigest) {\n      throw new Error(\n        '\"createMessageDigest\" cannot be used with \"URGNA2012\".');\n    }\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param {Array|object|string} input - The input to canonize given as a\n *   dataset or legacy dataset.\n * @param {object} options - The options to use:\n *   {string} algorithm - The canonicalization algorithm to use, `URDNA2015` or\n *     `URGNA2012`.\n *   {Function} [createMessageDigest] - A factory function for creating a\n *     `MessageDigest` interface that overrides the built-in message digest\n *     implementation used by the canonize algorithm; note that using a hash\n *     algorithm (or HMAC algorithm) that differs from the one specified by\n *     the canonize algorithm will result in different output.\n *   {boolean} [useNative=false] - Use native implementation.\n *   {number} [maxDeepIterations=Infinity] - The maximum number of times to run\n *     deep comparison algorithms (such as the N-Degree Hash Quads algorithm\n *     used in URDNA2015) before bailing out and throwing an error; this is a\n *     useful setting for preventing wasted CPU cycles or DoS when canonizing\n *     meaningless or potentially malicious datasets, a recommended value is\n *     `1`.\n *\n * @return the RDF dataset in canonical form.\n */\nexports._canonizeSync = function(input, options) {\n  const dataset = _inputToDataset(input, options);\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    if(options.createMessageDigest) {\n      throw new Error(\n        '\"createMessageDigest\" cannot be used with \"useNative\".');\n    }\n    return rdfCanonizeNative.canonizeSync(dataset, options);\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    if(options.createMessageDigest) {\n      throw new Error(\n        '\"createMessageDigest\" cannot be used with \"URGNA2012\".');\n    }\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n", "/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key that is not a string OR begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      const id = v['@id'];\n      return !types.isString(id) || id.indexOf('_:') === 0;\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n", "/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\nconst REGEX_KEYWORD = /^@[a-zA-Z]+$/;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\napi.REGEX_BCP47 = REGEX_BCP47;\napi.REGEX_KEYWORD = REGEX_KEYWORD;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result.rel || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n", "/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([a-zA-Z][a-zA-Z0-9+-.]*):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\n\nconst REGEX_LINK_HEADER = /(^|(\\r\\n))link:/i;\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          headers: an object (map) of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\nmodule.exports = ({\n  secure,\n  headers = {},\n  xhr\n} = {headers: {}}) => {\n  headers = buildHeaders(headers);\n  const queue = new RequestQueue();\n  return queue.wrapLoader(loader);\n\n  async function loader(url) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && url.indexOf('https') !== 0) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n\n    let req;\n    try {\n      req = await _get(xhr, url, headers);\n    } catch(e) {\n      throw new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url, cause: e});\n    }\n\n    if(req.status >= 400) {\n      throw new JsonLdError(\n        'URL could not be dereferenced: ' + req.statusText,\n        'jsonld.LoadDocumentError', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: req.status\n        });\n    }\n\n    let doc = {contextUrl: null, documentUrl: url, document: req.response};\n    let alternate = null;\n\n    // handle Link Header (avoid unsafe header warning by existence testing)\n    const contentType = req.getResponseHeader('Content-Type');\n    let linkHeader;\n    if(REGEX_LINK_HEADER.test(req.getAllResponseHeaders())) {\n      linkHeader = req.getResponseHeader('Link');\n    }\n    if(linkHeader && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(linkHeader);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one ' +\n          'associated HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders.alternate;\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '').match(/^application\\/(\\w*\\+)?json$/)) {\n        doc = await loader(prependBase(url, alternate.target));\n      }\n    }\n\n    return doc;\n  }\n};\n\nfunction _get(xhr, url, headers) {\n  xhr = xhr || XMLHttpRequest;\n  const req = new xhr();\n  return new Promise((resolve, reject) => {\n    req.onload = () => resolve(req);\n    req.onerror = err => reject(err);\n    req.open('GET', url, true);\n    for(const k in headers) {\n      req.setRequestHeader(k, headers[k]);\n    }\n    req.send();\n  });\n}\n", "/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst xhrLoader = require('./documentLoaders/xhr');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup browser document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  if(typeof XMLHttpRequest !== 'undefined') {\n    jsonld.documentLoaders.xhr = xhrLoader;\n    // use xhr document loader by default\n    jsonld.useDocumentLoader('xhr');\n  }\n};\n\n/**\n * Setup browser globals.\n *\n * @param jsonld the jsonld api.\n */\napi.setupGlobals = function(jsonld) {\n  // setup browser global JsonLdProcessor\n  if(typeof globalThis.JsonLdProcessor === 'undefined') {\n    Object.defineProperty(globalThis, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: jsonld.JsonLdProcessor\n    });\n  }\n};\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", "/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n", "/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n", "/*\n * Copyright (c) 2020 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray\n} = require('./types');\n\nconst {\n  asArray: _asArray\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n// default handler, store as null or an array\n// exposed to allow fast external pre-handleEvent() checks\napi.defaultEventHandler = null;\n\n/**\n * Setup event handler.\n *\n * Return an array event handler constructed from an optional safe mode\n * handler, an optional options event handler, and an optional default handler.\n *\n * @param {object} options - processing options\n *   {function|object|array} [eventHandler] - an event handler.\n *\n * @return an array event handler.\n */\napi.setupEventHandler = ({options = {}}) => {\n  // build in priority order\n  const eventHandler = [].concat(\n    options.safe ? api.safeEventHandler : [],\n    options.eventHandler ? _asArray(options.eventHandler) : [],\n    api.defaultEventHandler ? api.defaultEventHandler : []\n  );\n  // null if no handlers\n  return eventHandler.length === 0 ? null : eventHandler;\n};\n\n/**\n * Handle an event.\n *\n * Top level APIs have a common 'eventHandler' option. This option can be a\n * function, array of functions, object mapping event.code to functions (with a\n * default to call next()), or any combination of such handlers. Handlers will\n * be called with an object with an 'event' entry and a 'next' function. Custom\n * handlers should process the event as appropriate. The 'next()' function\n * should be called to let the next handler process the event.\n *\n * NOTE: Only call this function if options.eventHandler is set and is an\n * array of hanlers. This is an optimization. Callers are expected to check\n * for an event handler before constructing events and calling this function.\n *\n * @param {object} event - event structure:\n *   {string} code - event code\n *   {string} level - severity level, one of: ['warning']\n *   {string} message - human readable message\n *   {object} details - event specific details\n * @param {object} options - processing options\n *   {array} eventHandler - an event handler array.\n */\napi.handleEvent = ({\n  event,\n  options\n}) => {\n  _handle({event, handlers: options.eventHandler});\n};\n\nfunction _handle({event, handlers}) {\n  let doNext = true;\n  for(let i = 0; doNext && i < handlers.length; ++i) {\n    doNext = false;\n    const handler = handlers[i];\n    if(_isArray(handler)) {\n      doNext = _handle({event, handlers: handler});\n    } else if(typeof handler === 'function') {\n      handler({event, next: () => {\n        doNext = true;\n      }});\n    } else if(typeof handler === 'object') {\n      if(event.code in handler) {\n        handler[event.code]({event, next: () => {\n          doNext = true;\n        }});\n      } else {\n        doNext = true;\n      }\n    } else {\n      throw new JsonLdError(\n        'Invalid event handler.',\n        'jsonld.InvalidEventHandler',\n        {event});\n    }\n  }\n  return doNext;\n}\n\nconst _notSafeEventCodes = new Set([\n  'empty object',\n  'free-floating scalar',\n  'invalid @language value',\n  'invalid property',\n  // NOTE: spec edge case\n  'null @id value',\n  'null @value value',\n  'object with only @id',\n  'object with only @language',\n  'object with only @list',\n  'object with only @value',\n  'relative @id reference',\n  'relative @type reference',\n  'relative @vocab reference',\n  'reserved @id value',\n  'reserved @reverse value',\n  'reserved term',\n  // toRDF\n  'blank node predicate',\n  'relative graph reference',\n  'relative object reference',\n  'relative predicate reference',\n  'relative subject reference',\n  // toRDF / fromRDF\n  'rdfDirection not set'\n]);\n\n// safe handler that rejects unsafe warning conditions\napi.safeEventHandler = function safeEventHandler({event, next}) {\n  // fail on all unsafe warnings\n  if(event.level === 'warning' && _notSafeEventCodes.has(event.code)) {\n    throw new JsonLdError(\n      'Safe mode validation error.',\n      'jsonld.ValidationError',\n      {event}\n    );\n  }\n  next();\n};\n\n// logs all events and continues\napi.logEventHandler = function logEventHandler({event, next}) {\n  console.log(`EVENT: ${event.message}`, {event});\n  next();\n};\n\n// log 'warning' level events\napi.logWarningEventHandler = function logWarningEventHandler({event, next}) {\n  if(event.level === 'warning') {\n    console.warn(`WARNING: ${event.message}`, {event});\n  }\n  next();\n};\n\n// fallback to throw errors for any unhandled events\napi.unhandledEventHandler = function unhandledEventHandler({event}) {\n  throw new JsonLdError(\n    'No handler for event.',\n    'jsonld.UnhandledEvent',\n    {event}\n  );\n};\n\n/**\n * Set default event handler.\n *\n * By default, all event are unhandled. It is recommended to pass in an\n * eventHandler into each call. However, this call allows using a default\n * eventHandler when one is not otherwise provided.\n *\n * @param {object} options - default handler options:\n *   {function|object|array} eventHandler - a default event handler.\n *     falsey to unset.\n */\napi.setDefaultEventHandler = function({eventHandler} = {}) {\n  api.defaultEventHandler = eventHandler ? _asArray(eventHandler) : null;\n};\n", "/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  handleEvent: _handleEvent\n} = require('./events');\n\nconst {\n  REGEX_BCP47,\n  REGEX_KEYWORD,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // event handler for capturing events to replay when using a cached context\n  const events = [];\n  const eventCaptureHandler = [\n    ({event, next}) => {\n      events.push(event);\n      next();\n    }\n  ];\n  // chain to original handler\n  if(options.eventHandler) {\n    eventCaptureHandler.push(options.eventHandler);\n  }\n  // store original options to use when replaying events\n  const originalOptions = options;\n  // shallow clone options with event capture handler\n  options = {...options, eventHandler: eventCaptureHandler};\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected && Object.keys(activeCtx.protected).length !== 0) {\n        throw new JsonLdError(\n          'Tried to nullify a context with protected terms outside of ' +\n          'a term definition.',\n          'jsonld.SyntaxError',\n          {code: 'invalid context nullification'});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      if(originalOptions.eventHandler) {\n        // replay events with original non-capturing options\n        for(const event of processed.events) {\n          _handleEvent({event, options: originalOptions});\n        }\n      }\n\n      rval = activeCtx = processed.context;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        const vocab = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n        if(!_isAbsoluteIri(vocab)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'relative @vocab reference',\n                level: 'warning',\n                message: 'Relative @vocab reference found.',\n                details: {\n                  vocab\n                }\n              },\n              options\n            });\n          }\n        }\n        rval['@vocab'] = vocab;\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        if(!value.match(REGEX_BCP47)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'invalid @language value',\n                level: 'warning',\n                message: '@language value must be valid BCP47.',\n                details: {\n                  language: value\n                }\n              },\n              options\n            });\n          }\n        }\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, {\n      context: rval,\n      events\n    });\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(REGEX_KEYWORD)) {\n    if(options.eventHandler) {\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code: 'reserved term',\n          level: 'warning',\n          message:\n            'Terms beginning with \"@\" are ' +\n            'reserved for future use and dropped.',\n          details: {\n            term\n          }\n        },\n        options\n      });\n    }\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(reverse.match(REGEX_KEYWORD)) {\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'reserved @reverse value',\n            level: 'warning',\n            message:\n              '@reverse values beginning with \"@\" are ' +\n              'reserved for future use and dropped.',\n            details: {\n              reverse\n            }\n          },\n          options\n        });\n      }\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(REGEX_KEYWORD)) {\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'reserved @id value',\n            level: 'warning',\n            message:\n              '@id values beginning with \"@\" are ' +\n              'reserved for future use and dropped.',\n            details: {\n              id\n            }\n          },\n          options\n        });\n      }\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/) !== null);\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; tried to redefine a protected term.',\n        'jsonld.SyntaxError',\n        {code: 'protected term redefinition', context: localCtx, term});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(REGEX_KEYWORD)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // A flag that captures whether the iri being expanded is\n  // the value for an @type\n  //let typeExpansion = false;\n\n  //if(options !== undefined && options.typeExpansion !== undefined) {\n  //  typeExpansion = options.typeExpansion;\n  //}\n\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    // prepend vocab\n    const prependedResult = activeCtx['@vocab'] + value;\n    // FIXME: needed? may be better as debug event.\n    /*\n    if(options && options.eventHandler) {\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code: 'prepending @vocab during expansion',\n          level: 'info',\n          message: 'Prepending @vocab during expansion.',\n          details: {\n            type: '@vocab',\n            vocab: activeCtx['@vocab'],\n            value,\n            result: prependedResult,\n            typeExpansion\n          }\n        },\n        options\n      });\n    }\n    */\n    // the null case preserves value as potentially relative\n    value = prependedResult;\n  } else if(relativeTo.base) {\n    // prepend base\n    let prependedResult;\n    let base;\n    if('@base' in activeCtx) {\n      if(activeCtx['@base']) {\n        base = prependBase(options.base, activeCtx['@base']);\n        prependedResult = prependBase(base, value);\n      } else {\n        base = activeCtx['@base'];\n        prependedResult = value;\n      }\n    } else {\n      base = options.base;\n      prependedResult = prependBase(options.base, value);\n    }\n    // FIXME: needed? may be better as debug event.\n    /*\n    if(options && options.eventHandler) {\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code: 'prepending @base during expansion',\n          level: 'info',\n          message: 'Prepending @base during expansion.',\n          details: {\n            type: '@base',\n            base,\n            value,\n            result: prependedResult,\n            typeExpansion\n          }\n        },\n        options\n      });\n    }\n    */\n    // the null case preserves value as potentially relative\n    value = prependedResult;\n  }\n\n  // FIXME: duplicate? needed? maybe just enable in a verbose debug mode\n  /*\n  if(!_isAbsoluteIri(value) && options && options.eventHandler) {\n    // emit event indicating a relative IRI was found, which can result in it\n    // being dropped when converting to other RDF representations\n    _handleEvent({\n      event: {\n        type: ['JsonLdEvent'],\n        code: 'relative IRI after expansion',\n        // FIXME: what level?\n        level: 'warning',\n        message: 'Relative IRI after expansion.',\n        details: {\n          relativeIri: value,\n          typeExpansion\n        }\n      },\n      options\n    });\n    // NOTE: relative reference events emitted at calling sites as needed\n  }\n  */\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  REGEX_BCP47,\n  REGEX_KEYWORD,\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst {\n  handleEvent: _handleEvent\n} = require('./events');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      // FIXME\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'free-floating scalar',\n            level: 'warning',\n            message: 'Dropping free-floating scalar not in a list.',\n            details: {\n              value: element\n              //activeProperty\n              //insideList\n            }\n          },\n          options\n        });\n      }\n      return null;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        // FIXME: add debug event?\n        //unmappedValue: element[i],\n        //activeProperty,\n        //parent: element,\n        //index: i,\n        //expandedParent: rval,\n        //insideList\n\n        // NOTE: no-value events emitted at calling sites as needed\n        continue;\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext\n  });\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      // FIXME\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'null @value value',\n            level: 'warning',\n            message: 'Dropping null @value value.',\n            details: {\n              value: rval\n            }\n          },\n          options\n        });\n      }\n      rval = null;\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language\n    // FIXME\n    if(options.eventHandler) {\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code: 'object with only @language',\n          level: 'warning',\n          message: 'Dropping object with only @language.',\n          details: {\n            value: rval\n          }\n        },\n        options\n      });\n    }\n    rval = null;\n  }\n\n  // drop certain top-level objects that do not occur in lists\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null ||\n      expandedActiveProperty === '@graph' ||\n      (_getContextValue(activeCtx, activeProperty, '@container') || [])\n        .includes('@graph')\n    )) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    rval = _dropUnsafeObject({value: rval, count, options});\n  }\n\n  return rval;\n};\n\n/**\n * Drop empty object, top-level @value/@list, or object with only @id\n *\n * @param value Value to check.\n * @param count Number of properties in object.\n * @param options The expansion options.\n *\n * @return null if dropped, value otherwise.\n */\nfunction _dropUnsafeObject({\n  value,\n  count,\n  options\n}) {\n  if(count === 0 || '@value' in value || '@list' in value ||\n    (count === 1 && '@id' in value)) {\n    // FIXME\n    if(options.eventHandler) {\n      // FIXME: one event or diff event for empty, @v/@l, {@id}?\n      let code;\n      let message;\n      if(count === 0) {\n        code = 'empty object';\n        message = 'Dropping empty object.';\n      } else if('@value' in value) {\n        code = 'object with only @value';\n        message = 'Dropping object with only @value.';\n      } else if('@list' in value) {\n        code = 'object with only @list';\n        message = 'Dropping object with only @list.';\n      } else if(count === 1 && '@id' in value) {\n        code = 'object with only @id';\n        message = 'Dropping object with only @id.';\n      }\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code,\n          level: 'warning',\n          message,\n          details: {\n            value\n          }\n        },\n        options\n      });\n    }\n    return null;\n  }\n  return value;\n}\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, {\n        ...options,\n        typeExpansion: true\n      }) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'invalid property',\n            level: 'warning',\n            message: 'Dropping property that did not expand into an ' +\n              'absolute IRI or keyword.',\n            details: {\n              property: key,\n              expandedProperty\n            }\n          },\n          options\n        });\n      }\n      continue;\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v => {\n          if(_isString(v)) {\n            const ve = _expandIri(activeCtx, v, {base: true}, options);\n            if(options.eventHandler) {\n              if(ve === null) {\n                // NOTE: spec edge case\n                // See https://github.com/w3c/json-ld-api/issues/480\n                if(v === null) {\n                  _handleEvent({\n                    event: {\n                      type: ['JsonLdEvent'],\n                      code: 'null @id value',\n                      level: 'warning',\n                      message: 'Null @id found.',\n                      details: {\n                        id: v\n                      }\n                    },\n                    options\n                  });\n                } else {\n                  // matched KEYWORD regex\n                  _handleEvent({\n                    event: {\n                      type: ['JsonLdEvent'],\n                      code: 'reserved @id value',\n                      level: 'warning',\n                      message: 'Reserved @id found.',\n                      details: {\n                        id: v\n                      }\n                    },\n                    options\n                  });\n                }\n              } else if(!_isAbsoluteIri(ve)) {\n                _handleEvent({\n                  event: {\n                    type: ['JsonLdEvent'],\n                    code: 'relative @id reference',\n                    level: 'warning',\n                    message: 'Relative @id reference found.',\n                    details: {\n                      id: v,\n                      expandedId: ve\n                    }\n                  },\n                  options\n                });\n              }\n            }\n            return ve;\n          }\n          return v;\n        }),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true},\n              {...options, typeExpansion: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v => {\n          if(_isString(v)) {\n            const ve = _expandIri(typeScopedContext, v,\n              {base: true, vocab: true},\n              {...options, typeExpansion: true});\n            if(ve !== '@json' && !_isAbsoluteIri(ve)) {\n              if(options.eventHandler) {\n                _handleEvent({\n                  event: {\n                    type: ['JsonLdEvent'],\n                    code: 'relative @type reference',\n                    level: 'warning',\n                    message: 'Relative @type reference found.',\n                    details: {\n                      type: v\n                    }\n                  },\n                  options\n                });\n              }\n            }\n            return ve;\n          }\n          return v;\n        }),\n        {propertyIsArray: !!options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const language of value) {\n        if(_isString(language) && !language.match(REGEX_BCP47)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'invalid @language value',\n                level: 'warning',\n                message: '@language value must be valid BCP47.',\n                details: {\n                  language\n                }\n              },\n              options\n            });\n          }\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty: '@reverse',\n        element: value,\n        options\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(activeCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = expandedProperty === '@list';\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // FIXME: event?\n      //unmappedValue: value,\n      //expandedProperty,\n      //key,\n      continue;\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are in an array\n      expandedValue = _asArray(expandedValue);\n      if(!options.isFrame) {\n        // drop items if needed\n        expandedValue = expandedValue.filter(v => {\n          const count = Object.keys(v).length;\n          return _dropUnsafeObject({value: v, count, options}) !== null;\n        });\n      }\n      if(expandedValue.length === 0) {\n        // all items dropped, skip adding and continue\n        continue;\n      }\n      // convert to graph\n      expandedValue = expandedValue.map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey\n      });\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true},\n      {...options, typeExpansion: true});\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    const expandedValue = _expandIri(activeCtx, value, {base: true}, options);\n    // NOTE: handle spec edge case and avoid invalid {\"@id\": null}\n    if(expandedValue === null && value.match(REGEX_KEYWORD)) {\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'reserved @id value',\n            level: 'warning',\n            message: 'Reserved @id found.',\n            details: {\n              id: activeProperty\n            }\n          },\n          options\n        });\n      }\n    }\n    return {'@id': expandedValue};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        if(!key.match(REGEX_BCP47)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'invalid @language value',\n                level: 'warning',\n                message: '@language value must be valid BCP47.',\n                details: {\n                  language: key\n                }\n              },\n              options\n            });\n          }\n        }\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap({\n  activeCtx, options, activeProperty, value, asGraph, indexKey, propertyIndex\n}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n", "/*\n * Copyright (c) 2017-2023 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n\nconst {\n  REGEX_BCP47,\n  addValue: _addValue\n} = require('./util');\n\nconst {\n  handleEvent: _handleEvent\n} = require('./events');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  options\n) => {\n  const {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  } = options;\n  // FIXME: use Maps?\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n  if(rdfDirection) {\n    if(rdfDirection === 'compound-literal') {\n      throw new JsonLdError(\n        'Unsupported rdfDirection value.',\n        'jsonld.InvalidRdfDirection',\n        {value: rdfDirection});\n    } else if(rdfDirection !== 'i18n-datatype') {\n      throw new JsonLdError(\n        'Unknown rdfDirection value.',\n        'jsonld.InvalidRdfDirection',\n        {value: rdfDirection});\n    }\n  }\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      _addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection, options);\n    _addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        _addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      _addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n * @param rdfDirection text direction mode [null, i18n-datatype]\n * @param options top level API options\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection, options) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    if(!o.language.match(REGEX_BCP47)) {\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'invalid @language value',\n            level: 'warning',\n            message: '@language value must be valid BCP47.',\n            details: {\n              language: o.language\n            }\n          },\n          options\n        });\n      }\n    }\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'invalid @language value',\n                level: 'warning',\n                message: '@language value must be valid BCP47.',\n                details: {\n                  language\n                }\n              },\n              options\n            });\n          }\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n", "/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n", "/*\n * Copyright (c) 2017-2023 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst JsonLdError = require('./JsonLdError');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  handleEvent: _handleEvent\n} = require('./events');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      if(options.eventHandler) {\n        _handleEvent({\n          event: {\n            type: ['JsonLdEvent'],\n            code: 'relative graph reference',\n            level: 'warning',\n            message: 'Relative graph reference found.',\n            details: {\n              graph: graphName\n            }\n          },\n          options\n        });\n      }\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'relative subject reference',\n                level: 'warning',\n                message: 'Relative subject reference found.',\n                details: {\n                  subject: id\n                }\n              },\n              options\n            });\n          }\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'relative predicate reference',\n                level: 'warning',\n                message: 'Relative predicate reference found.',\n                details: {\n                  predicate: property\n                }\n              },\n              options\n            });\n          }\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          if(options.eventHandler) {\n            _handleEvent({\n              event: {\n                type: ['JsonLdEvent'],\n                code: 'blank node predicate',\n                level: 'warning',\n                message: 'Dropping blank node predicate.',\n                details: {\n                  // FIXME: add better issuer API to get reverse mapping\n                  property: issuer.getOldIds()\n                    .find(key => issuer.getId(key) === property)\n                }\n              },\n              options\n            });\n          }\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object = _objectToRDF(\n          item, issuer, dataset, graphTerm, options.rdfDirection, options);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n * @param options the RDF serialization options.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection, options) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(\n      item, issuer, dataset, graphTerm, rdfDirection, options);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(\n      last, issuer, dataset, graphTerm, rdfDirection, options);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n * @param options the RDF serialization options.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(\n  item, issuer, dataset, graphTerm, rdfDirection, options\n) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if('@direction' in item && rdfDirection === 'i18n-datatype') {\n      const language = (item['@language'] || '').toLowerCase();\n      const direction = item['@direction'];\n      const datatype = `https://www.w3.org/ns/i18n#${language}_${direction}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@direction' in item && rdfDirection === 'compound-literal') {\n      throw new JsonLdError(\n        'Unsupported rdfDirection value.',\n        'jsonld.InvalidRdfDirection',\n        {value: rdfDirection});\n    } else if('@direction' in item && rdfDirection) {\n      throw new JsonLdError(\n        'Unknown rdfDirection value.',\n        'jsonld.InvalidRdfDirection',\n        {value: rdfDirection});\n    } else if('@language' in item) {\n      if('@direction' in item && !rdfDirection) {\n        if(options.eventHandler) {\n          // FIXME: only emit once?\n          _handleEvent({\n            event: {\n              type: ['JsonLdEvent'],\n              code: 'rdfDirection not set',\n              level: 'warning',\n              message: 'rdfDirection not set for @direction.',\n              details: {\n                object: object.value\n              }\n            },\n            options\n          });\n        }\n      }\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      if('@direction' in item && !rdfDirection) {\n        if(options.eventHandler) {\n          // FIXME: only emit once?\n          _handleEvent({\n            event: {\n              type: ['JsonLdEvent'],\n              code: 'rdfDirection not set',\n              level: 'warning',\n              message: 'rdfDirection not set for @direction.',\n              details: {\n                object: object.value\n              }\n            },\n            options\n          });\n        }\n      }\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list = _listToRDF(\n      item['@list'], issuer, dataset, graphTerm, rdfDirection, options);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    if(options.eventHandler) {\n      _handleEvent({\n        event: {\n          type: ['JsonLdEvent'],\n          code: 'relative object reference',\n          level: 'warning',\n          message: 'Relative object reference found.',\n          details: {\n            object: object.value\n          }\n        },\n        options\n      });\n    }\n    return null;\n  }\n\n  return object;\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @type must be wildcard, IRI, or @json\n      if(!(types.isObject(type) || url.isAbsolute(type) ||\n          (type === '@json')) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  REGEX_KEYWORD,\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {}\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      const compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options\n      });\n      if(compacted === null) {\n        // FIXME: need event?\n        continue;\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n            // if container is a language map, simplify compacted value to\n            // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        const _iri = _removeBase(_prependBase(base, activeCtx['@base']), iri);\n        return REGEX_KEYWORD.test(_iri) ? `./${_iri}` : _iri;\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n", "/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n", "/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2022 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\nconst {\n  logEventHandler: _logEventHandler,\n  logWarningEventHandler: _logWarningEventHandler,\n  safeEventHandler: _safeEventHandler,\n  setDefaultEventHandler: _setDefaultEventHandler,\n  setupEventHandler: _setupEventHandler,\n  strictEventHandler: _strictEventHandler,\n  unhandledEventHandler: _unhandledEventHandler\n} = require('./events');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false. Some well-formed\n *            and safe-mode checks may be omitted.\n *          [documentLoader(url, options)] the document loader.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * Note: Canonicalization sets `safe` to `true` and `base` to `null` by\n * default in order to produce safe outputs and \"fail closed\" by default. This\n * is different from the other API transformations in this version which\n * allow unsafe defaults (for cryptographic usage) in order to comply with the\n * JSON-LD 1.1 specification.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use (default: `null`).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false. Some well-formed\n *            and safe-mode checks may be omitted.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [rdfDirection] null or 'i18n-datatype' to support RDF\n *             transformation of @direction (default: null).\n *          [safe] true to use safe mode. (default: true).\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : null,\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    safe: true,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *          [rdfDirection] null or 'i18n-datatype' to support RDF\n *             transformation of @direction (default: null).\n *          [safe] true to use safe mode. (default: false)\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false. Some well-formed\n *            and safe-mode checks may be omitted.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [rdfDirection] null or 'i18n-datatype' to support RDF\n *             transformation of @direction (default: null).\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [safe] true to use safe mode. (default: false)\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Events API and handlers */\njsonld.logEventHandler = _logEventHandler;\njsonld.logWarningEventHandler = _logWarningEventHandler;\njsonld.safeEventHandler = _safeEventHandler;\njsonld.setDefaultEventHandler = _setDefaultEventHandler;\njsonld.strictEventHandler = _strictEventHandler;\njsonld.unhandledEventHandler = _unhandledEventHandler;\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  // fail if obsolete options present\n  if(options && 'compactionMap' in options) {\n    throw new JsonLdError(\n      '\"compactionMap\" not supported.',\n      'jsonld.OptionsError');\n  }\n  if(options && 'expansionMap' in options) {\n    throw new JsonLdError(\n      '\"expansionMap\" not supported.',\n      'jsonld.OptionsError');\n  }\n  return Object.assign(\n    {},\n    {documentLoader},\n    defaults,\n    options,\n    {eventHandler: _setupEventHandler({options})}\n  );\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n", "/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "/*!\n * inflection\n * Copyright(c) 2011 Ben Lin <ben@dreamerslab.com>\n * MIT Licensed\n *\n * @fileoverview\n * A port of inflection-js to node.js module.\n */\n\n( function ( root, factory ){\n  if( typeof define === 'function' && define.amd ){\n    define([], factory );\n  }else if( typeof exports === 'object' ){\n    module.exports = factory();\n  }else{\n    root.inflection = factory();\n  }\n}( this, function (){\n\n  /**\n   * @description This is a list of nouns that use the same form for both singular and plural.\n   *              This list should remain entirely in lower case to correctly match Strings.\n   * @private\n   */\n  var uncountable_words = [\n    // 'access',\n    'accommodation',\n    'adulthood',\n    'advertising',\n    'advice',\n    'aggression',\n    'aid',\n    'air',\n    'aircraft',\n    'alcohol',\n    'anger',\n    'applause',\n    'arithmetic',\n    // 'art',\n    'assistance',\n    'athletics',\n    // 'attention',\n\n    'bacon',\n    'baggage',\n    // 'ballet',\n    // 'beauty',\n    'beef',\n    // 'beer',\n    // 'behavior',\n    'biology',\n    // 'billiards',\n    'blood',\n    'botany',\n    // 'bowels',\n    'bread',\n    // 'business',\n    'butter',\n\n    'carbon',\n    'cardboard',\n    'cash',\n    'chalk',\n    'chaos',\n    'chess',\n    'crossroads',\n    'countryside',\n\n    // 'damage',\n    'dancing',\n    // 'danger',\n    'deer',\n    // 'delight',\n    // 'dessert',\n    'dignity',\n    'dirt',\n    // 'distribution',\n    'dust',\n\n    'economics',\n    'education',\n    'electricity',\n    // 'employment',\n    // 'energy',\n    'engineering',\n    'enjoyment',\n    // 'entertainment',\n    'envy',\n    'equipment',\n    'ethics',\n    'evidence',\n    'evolution',\n\n    // 'failure',\n    // 'faith',\n    'fame',\n    'fiction',\n    // 'fish',\n    'flour',\n    'flu',\n    'food',\n    // 'freedom',\n    // 'fruit',\n    'fuel',\n    'fun',\n    // 'funeral',\n    'furniture',\n\n    'gallows',\n    'garbage',\n    'garlic',\n    // 'gas',\n    'genetics',\n    // 'glass',\n    'gold',\n    'golf',\n    'gossip',\n    // 'grass',\n    'gratitude',\n    'grief',\n    // 'ground',\n    'guilt',\n    'gymnastics',\n\n    // 'hair',\n    'happiness',\n    'hardware',\n    'harm',\n    'hate',\n    'hatred',\n    'health',\n    'heat',\n    // 'height',\n    'help',\n    'homework',\n    'honesty',\n    'honey',\n    'hospitality',\n    'housework',\n    'humour',\n    'hunger',\n    'hydrogen',\n\n    'ice',\n    'importance',\n    'inflation',\n    'information',\n    // 'injustice',\n    'innocence',\n    // 'intelligence',\n    'iron',\n    'irony',\n\n    'jam',\n    // 'jealousy',\n    // 'jelly',\n    'jewelry',\n    // 'joy',\n    'judo',\n    // 'juice',\n    // 'justice',\n\n    'karate',\n    // 'kindness',\n    'knowledge',\n\n    // 'labour',\n    'lack',\n    // 'land',\n    'laughter',\n    'lava',\n    'leather',\n    'leisure',\n    'lightning',\n    'linguine',\n    'linguini',\n    'linguistics',\n    'literature',\n    'litter',\n    'livestock',\n    'logic',\n    'loneliness',\n    // 'love',\n    'luck',\n    'luggage',\n\n    'macaroni',\n    'machinery',\n    'magic',\n    // 'mail',\n    'management',\n    'mankind',\n    'marble',\n    'mathematics',\n    'mayonnaise',\n    'measles',\n    // 'meat',\n    // 'metal',\n    'methane',\n    'milk',\n    'minus',\n    'money',\n    // 'moose',\n    'mud',\n    'music',\n    'mumps',\n\n    'nature',\n    'news',\n    'nitrogen',\n    'nonsense',\n    'nurture',\n    'nutrition',\n\n    'obedience',\n    'obesity',\n    // 'oil',\n    'oxygen',\n\n    // 'paper',\n    // 'passion',\n    'pasta',\n    'patience',\n    // 'permission',\n    'physics',\n    'poetry',\n    'pollution',\n    'poverty',\n    // 'power',\n    'pride',\n    // 'production',\n    // 'progress',\n    // 'pronunciation',\n    'psychology',\n    'publicity',\n    'punctuation',\n\n    // 'quality',\n    // 'quantity',\n    'quartz',\n\n    'racism',\n    // 'rain',\n    // 'recreation',\n    'relaxation',\n    'reliability',\n    'research',\n    'respect',\n    'revenge',\n    'rice',\n    'rubbish',\n    'rum',\n\n    'safety',\n    // 'salad',\n    // 'salt',\n    // 'sand',\n    // 'satire',\n    'scenery',\n    'seafood',\n    'seaside',\n    'series',\n    'shame',\n    'sheep',\n    'shopping',\n    // 'silence',\n    'sleep',\n    // 'slang'\n    'smoke',\n    'smoking',\n    'snow',\n    'soap',\n    'software',\n    'soil',\n    // 'sorrow',\n    // 'soup',\n    'spaghetti',\n    // 'speed',\n    'species',\n    // 'spelling',\n    // 'sport',\n    'steam',\n    // 'strength',\n    'stuff',\n    'stupidity',\n    // 'success',\n    // 'sugar',\n    'sunshine',\n    'symmetry',\n\n    // 'tea',\n    'tennis',\n    'thirst',\n    'thunder',\n    'timber',\n    // 'time',\n    // 'toast',\n    // 'tolerance',\n    // 'trade',\n    'traffic',\n    'transportation',\n    // 'travel',\n    'trust',\n\n    // 'understanding',\n    'underwear',\n    'unemployment',\n    'unity',\n    // 'usage',\n\n    'validity',\n    'veal',\n    'vegetation',\n    'vegetarianism',\n    'vengeance',\n    'violence',\n    // 'vision',\n    'vitality',\n\n    'warmth',\n    // 'water',\n    'wealth',\n    'weather',\n    // 'weight',\n    'welfare',\n    'wheat',\n    // 'whiskey',\n    // 'width',\n    'wildlife',\n    // 'wine',\n    'wisdom',\n    // 'wood',\n    // 'wool',\n    // 'work',\n\n    // 'yeast',\n    'yoga',\n\n    'zinc',\n    'zoology'\n  ];\n\n  /**\n   * @description These rules translate from the singular form of a noun to its plural form.\n   * @private\n   */\n\n  var regex = {\n    plural : {\n      men       : new RegExp( '^(m|wom)en$'                    , 'gi' ),\n      people    : new RegExp( '(pe)ople$'                      , 'gi' ),\n      children  : new RegExp( '(child)ren$'                    , 'gi' ),\n      tia       : new RegExp( '([ti])a$'                       , 'gi' ),\n      analyses  : new RegExp( '((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$','gi' ),\n      databases : new RegExp( '(database)s$'                   , 'gi' ),\n      drives    : new RegExp( '(drive)s$'                      , 'gi' ),\n      hives     : new RegExp( '(hi|ti)ves$'                    , 'gi' ),\n      curves    : new RegExp( '(curve)s$'                      , 'gi' ),\n      lrves     : new RegExp( '([lr])ves$'                     , 'gi' ),\n      aves      : new RegExp( '([a])ves$'                      , 'gi' ),\n      foves     : new RegExp( '([^fo])ves$'                    , 'gi' ),\n      movies    : new RegExp( '(m)ovies$'                      , 'gi' ),\n      aeiouyies : new RegExp( '([^aeiouy]|qu)ies$'             , 'gi' ),\n      series    : new RegExp( '(s)eries$'                      , 'gi' ),\n      xes       : new RegExp( '(x|ch|ss|sh)es$'                , 'gi' ),\n      mice      : new RegExp( '([m|l])ice$'                    , 'gi' ),\n      buses     : new RegExp( '(bus)es$'                       , 'gi' ),\n      oes       : new RegExp( '(o)es$'                         , 'gi' ),\n      shoes     : new RegExp( '(shoe)s$'                       , 'gi' ),\n      crises    : new RegExp( '(cris|ax|test)es$'              , 'gi' ),\n      octopuses : new RegExp( '(octop|vir)uses$'               , 'gi' ),\n      aliases   : new RegExp( '(alias|canvas|status|campus)es$', 'gi' ),\n      summonses : new RegExp( '^(summons|bonus)es$'            , 'gi' ),\n      oxen      : new RegExp( '^(ox)en'                        , 'gi' ),\n      matrices  : new RegExp( '(matr)ices$'                    , 'gi' ),\n      vertices  : new RegExp( '(vert|ind)ices$'                , 'gi' ),\n      feet      : new RegExp( '^feet$'                         , 'gi' ),\n      teeth     : new RegExp( '^teeth$'                        , 'gi' ),\n      geese     : new RegExp( '^geese$'                        , 'gi' ),\n      quizzes   : new RegExp( '(quiz)zes$'                     , 'gi' ),\n      whereases : new RegExp( '^(whereas)es$'                  , 'gi' ),\n      criteria  : new RegExp( '^(criteri)a$'                   , 'gi' ),\n      genera    : new RegExp( '^genera$'                       , 'gi' ),\n      ss        : new RegExp( 'ss$'                            , 'gi' ),\n      s         : new RegExp( 's$'                             , 'gi' )\n    },\n\n    singular : {\n      man       : new RegExp( '^(m|wom)an$'                  , 'gi' ),\n      person    : new RegExp( '(pe)rson$'                    , 'gi' ),\n      child     : new RegExp( '(child)$'                     , 'gi' ),\n      drive     : new RegExp( '(drive)$'                     , 'gi' ),\n      ox        : new RegExp( '^(ox)$'                       , 'gi' ),\n      axis      : new RegExp( '(ax|test)is$'                 , 'gi' ),\n      octopus   : new RegExp( '(octop|vir)us$'               , 'gi' ),\n      alias     : new RegExp( '(alias|status|canvas|campus)$', 'gi' ),\n      summons   : new RegExp( '^(summons|bonus)$'            , 'gi' ),\n      bus       : new RegExp( '(bu)s$'                       , 'gi' ),\n      buffalo   : new RegExp( '(buffal|tomat|potat)o$'       , 'gi' ),\n      tium      : new RegExp( '([ti])um$'                    , 'gi' ),\n      sis       : new RegExp( 'sis$'                         , 'gi' ),\n      ffe       : new RegExp( '(?:([^f])fe|([lr])f)$'        , 'gi' ),\n      hive      : new RegExp( '(hi|ti)ve$'                   , 'gi' ),\n      aeiouyy   : new RegExp( '([^aeiouy]|qu)y$'             , 'gi' ),\n      x         : new RegExp( '(x|ch|ss|sh)$'                , 'gi' ),\n      matrix    : new RegExp( '(matr)ix$'                    , 'gi' ),\n      vertex    : new RegExp( '(vert|ind)ex$'                , 'gi' ),\n      mouse     : new RegExp( '([m|l])ouse$'                 , 'gi' ),\n      foot      : new RegExp( '^foot$'                       , 'gi' ),\n      tooth     : new RegExp( '^tooth$'                      , 'gi' ),\n      goose     : new RegExp( '^goose$'                      , 'gi' ),\n      quiz      : new RegExp( '(quiz)$'                      , 'gi' ),\n      whereas   : new RegExp( '^(whereas)$'                  , 'gi' ),\n      criterion : new RegExp( '^(criteri)on$'                , 'gi' ),\n      genus     : new RegExp( '^genus$'                      , 'gi' ),\n      s         : new RegExp( 's$'                           , 'gi' ),\n      common    : new RegExp( '$'                            , 'gi' )\n    }\n  };\n\n  var plural_rules = [\n\n    // do not replace if its already a plural word\n    [ regex.plural.men       ],\n    [ regex.plural.people    ],\n    [ regex.plural.children  ],\n    [ regex.plural.tia       ],\n    [ regex.plural.analyses  ],\n    [ regex.plural.databases ],\n    [ regex.plural.drives    ],\n    [ regex.plural.hives     ],\n    [ regex.plural.curves    ],\n    [ regex.plural.lrves     ],\n    [ regex.plural.foves     ],\n    [ regex.plural.aeiouyies ],\n    [ regex.plural.series    ],\n    [ regex.plural.movies    ],\n    [ regex.plural.xes       ],\n    [ regex.plural.mice      ],\n    [ regex.plural.buses     ],\n    [ regex.plural.oes       ],\n    [ regex.plural.shoes     ],\n    [ regex.plural.crises    ],\n    [ regex.plural.octopuses ],\n    [ regex.plural.aliases   ],\n    [ regex.plural.summonses ],\n    [ regex.plural.oxen      ],\n    [ regex.plural.matrices  ],\n    [ regex.plural.feet      ],\n    [ regex.plural.teeth     ],\n    [ regex.plural.geese     ],\n    [ regex.plural.quizzes   ],\n    [ regex.plural.whereases ],\n    [ regex.plural.criteria  ],\n    [ regex.plural.genera    ],\n\n    // original rule\n    [ regex.singular.man      , '$1en' ],\n    [ regex.singular.person   , '$1ople' ],\n    [ regex.singular.child    , '$1ren' ],\n    [ regex.singular.drive    , '$1s' ],\n    [ regex.singular.ox       , '$1en' ],\n    [ regex.singular.axis     , '$1es' ],\n    [ regex.singular.octopus  , '$1uses' ],\n    [ regex.singular.alias    , '$1es' ],\n    [ regex.singular.summons  , '$1es' ],\n    [ regex.singular.bus      , '$1ses' ],\n    [ regex.singular.buffalo  , '$1oes' ],\n    [ regex.singular.tium     , '$1a' ],\n    [ regex.singular.sis      , 'ses' ],\n    [ regex.singular.ffe      , '$1$2ves' ],\n    [ regex.singular.hive     , '$1ves' ],\n    [ regex.singular.aeiouyy  , '$1ies' ],\n    [ regex.singular.matrix   , '$1ices' ],\n    [ regex.singular.vertex   , '$1ices' ],\n    [ regex.singular.x        , '$1es' ],\n    [ regex.singular.mouse    , '$1ice' ],\n    [ regex.singular.foot     , 'feet' ],\n    [ regex.singular.tooth    , 'teeth' ],\n    [ regex.singular.goose    , 'geese' ],\n    [ regex.singular.quiz     , '$1zes' ],\n    [ regex.singular.whereas  , '$1es' ],\n    [ regex.singular.criterion, '$1a' ],\n    [ regex.singular.genus    , 'genera' ],\n\n    [ regex.singular.s     , 's' ],\n    [ regex.singular.common, 's' ]\n  ];\n\n  /**\n   * @description These rules translate from the plural form of a noun to its singular form.\n   * @private\n   */\n  var singular_rules = [\n\n    // do not replace if its already a singular word\n    [ regex.singular.man     ],\n    [ regex.singular.person  ],\n    [ regex.singular.child   ],\n    [ regex.singular.drive   ],\n    [ regex.singular.ox      ],\n    [ regex.singular.axis    ],\n    [ regex.singular.octopus ],\n    [ regex.singular.alias   ],\n    [ regex.singular.summons ],\n    [ regex.singular.bus     ],\n    [ regex.singular.buffalo ],\n    [ regex.singular.tium    ],\n    [ regex.singular.sis     ],\n    [ regex.singular.ffe     ],\n    [ regex.singular.hive    ],\n    [ regex.singular.aeiouyy ],\n    [ regex.singular.x       ],\n    [ regex.singular.matrix  ],\n    [ regex.singular.mouse   ],\n    [ regex.singular.foot    ],\n    [ regex.singular.tooth   ],\n    [ regex.singular.goose   ],\n    [ regex.singular.quiz    ],\n    [ regex.singular.whereas ],\n    [ regex.singular.criterion ],\n    [ regex.singular.genus ],\n\n    // original rule\n    [ regex.plural.men      , '$1an' ],\n    [ regex.plural.people   , '$1rson' ],\n    [ regex.plural.children , '$1' ],\n    [ regex.plural.databases, '$1'],\n    [ regex.plural.drives   , '$1'],\n    [ regex.plural.genera   , 'genus'],\n    [ regex.plural.criteria , '$1on'],\n    [ regex.plural.tia      , '$1um' ],\n    [ regex.plural.analyses , '$1$2sis' ],\n    [ regex.plural.hives    , '$1ve' ],\n    [ regex.plural.curves   , '$1' ],\n    [ regex.plural.lrves    , '$1f' ],\n    [ regex.plural.aves     , '$1ve' ],\n    [ regex.plural.foves    , '$1fe' ],\n    [ regex.plural.movies   , '$1ovie' ],\n    [ regex.plural.aeiouyies, '$1y' ],\n    [ regex.plural.series   , '$1eries' ],\n    [ regex.plural.xes      , '$1' ],\n    [ regex.plural.mice     , '$1ouse' ],\n    [ regex.plural.buses    , '$1' ],\n    [ regex.plural.oes      , '$1' ],\n    [ regex.plural.shoes    , '$1' ],\n    [ regex.plural.crises   , '$1is' ],\n    [ regex.plural.octopuses, '$1us' ],\n    [ regex.plural.aliases  , '$1' ],\n    [ regex.plural.summonses, '$1' ],\n    [ regex.plural.oxen     , '$1' ],\n    [ regex.plural.matrices , '$1ix' ],\n    [ regex.plural.vertices , '$1ex' ],\n    [ regex.plural.feet     , 'foot' ],\n    [ regex.plural.teeth    , 'tooth' ],\n    [ regex.plural.geese    , 'goose' ],\n    [ regex.plural.quizzes  , '$1' ],\n    [ regex.plural.whereases, '$1' ],\n\n    [ regex.plural.ss, 'ss' ],\n    [ regex.plural.s , '' ]\n  ];\n\n  /**\n   * @description This is a list of words that should not be capitalized for title case.\n   * @private\n   */\n  var non_titlecased_words = [\n    'and', 'or', 'nor', 'a', 'an', 'the', 'so', 'but', 'to', 'of', 'at','by',\n    'from', 'into', 'on', 'onto', 'off', 'out', 'in', 'over', 'with', 'for'\n  ];\n\n  /**\n   * @description These are regular expressions used for converting between String formats.\n   * @private\n   */\n  var id_suffix         = new RegExp( '(_ids|_id)$', 'g' );\n  var underbar          = new RegExp( '_', 'g' );\n  var space_or_underbar = new RegExp( '[\\ _]', 'g' );\n  var uppercase         = new RegExp( '([A-Z])', 'g' );\n  var underbar_prefix   = new RegExp( '^_' );\n\n  var inflector = {\n\n  /**\n   * A helper method that applies rules based replacement to a String.\n   * @private\n   * @function\n   * @param {String} str String to modify and return based on the passed rules.\n   * @param {Array: [RegExp, String]} rules Regexp to match paired with String to use for replacement\n   * @param {Array: [String]} skip Strings to skip if they match\n   * @param {String} override String to return as though this method succeeded (used to conform to APIs)\n   * @returns {String} Return passed String modified by passed rules.\n   * @example\n   *\n   *     this._apply_rules( 'cows', singular_rules ); // === 'cow'\n   */\n    _apply_rules : function ( str, rules, skip, override ){\n      if( override ){\n        str = override;\n      }else{\n        var ignore = ( inflector.indexOf( skip, str.toLowerCase()) > -1 );\n\n        if( !ignore ){\n          var i = 0;\n          var j = rules.length;\n\n          for( ; i < j; i++ ){\n            if( str.match( rules[ i ][ 0 ])){\n              if( rules[ i ][ 1 ] !== undefined ){\n                str = str.replace( rules[ i ][ 0 ], rules[ i ][ 1 ]);\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      return str;\n    },\n\n\n\n  /**\n   * This lets us detect if an Array contains a given element.\n   * @public\n   * @function\n   * @param {Array} arr The subject array.\n   * @param {Object} item Object to locate in the Array.\n   * @param {Number} from_index Starts checking from this position in the Array.(optional)\n   * @param {Function} compare_func Function used to compare Array item vs passed item.(optional)\n   * @returns {Number} Return index position in the Array of the passed item.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.indexOf([ 'hi','there' ], 'guys' ); // === -1\n   *     inflection.indexOf([ 'hi','there' ], 'hi' ); // === 0\n   */\n    indexOf : function ( arr, item, from_index, compare_func ){\n      if( !from_index ){\n        from_index = -1;\n      }\n\n      var index = -1;\n      var i     = from_index;\n      var j     = arr.length;\n\n      for( ; i < j; i++ ){\n        if( arr[ i ]  === item || compare_func && compare_func( arr[ i ], item )){\n          index = i;\n          break;\n        }\n      }\n\n      return index;\n    },\n\n\n\n  /**\n   * This function adds pluralization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {String} plural Overrides normal output with said String.(optional)\n   * @returns {String} Singular English language nouns are returned in plural form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.pluralize( 'person' ); // === 'people'\n   *     inflection.pluralize( 'octopus' ); // === 'octopuses'\n   *     inflection.pluralize( 'Hat' ); // === 'Hats'\n   *     inflection.pluralize( 'person', 'guys' ); // === 'guys'\n   */\n    pluralize : function ( str, plural ){\n      return inflector._apply_rules( str, plural_rules, uncountable_words, plural );\n    },\n\n\n\n  /**\n   * This function adds singularization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {String} singular Overrides normal output with said String.(optional)\n   * @returns {String} Plural English language nouns are returned in singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.singularize( 'people' ); // === 'person'\n   *     inflection.singularize( 'octopuses' ); // === 'octopus'\n   *     inflection.singularize( 'Hats' ); // === 'Hat'\n   *     inflection.singularize( 'guys', 'person' ); // === 'person'\n   */\n    singularize : function ( str, singular ){\n      return inflector._apply_rules( str, singular_rules, uncountable_words, singular );\n    },\n\n\n  /**\n   * This function will pluralize or singularlize a String appropriately based on a number value\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Number} count The number to base pluralization off of.\n   * @param {String} singular Overrides normal output with said String.(optional)\n   * @param {String} plural Overrides normal output with said String.(optional)\n   * @returns {String} English language nouns are returned in the plural or singular form based on the count.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.inflect( 'people' 1 ); // === 'person'\n   *     inflection.inflect( 'octopuses' 1 ); // === 'octopus'\n   *     inflection.inflect( 'Hats' 1 ); // === 'Hat'\n   *     inflection.inflect( 'guys', 1 , 'person' ); // === 'person'\n   *     inflection.inflect( 'inches', 1.5 ); // === 'inches'\n   *     inflection.inflect( 'person', 2 ); // === 'people'\n   *     inflection.inflect( 'octopus', 2 ); // === 'octopuses'\n   *     inflection.inflect( 'Hat', 2 ); // === 'Hats'\n   *     inflection.inflect( 'person', 2, null, 'guys' ); // === 'guys'\n   */\n    inflect : function ( str, count, singular, plural ){\n      count = parseFloat( count, 10 );\n\n      if( isNaN( count )) return str;\n\n      if( count === 1 ){\n        return inflector._apply_rules( str, singular_rules, uncountable_words, singular );\n      }else{\n        return inflector._apply_rules( str, plural_rules, uncountable_words, plural );\n      }\n    },\n\n\n\n  /**\n   * This function adds camelization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)\n   *                                 Passing true will lowercase it.\n   * @returns {String} Lower case underscored words will be returned in camel case.\n   *                  additionally '/' is translated to '::'\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.camelize( 'message_properties' ); // === 'MessageProperties'\n   *     inflection.camelize( 'message_properties', true ); // === 'messageProperties'\n   */\n    camelize : function ( str, low_first_letter ){\n      var str_path = str.split( '/' );\n      var i        = 0;\n      var j        = str_path.length;\n      var str_arr, init_x, k, l, first;\n\n      for( ; i < j; i++ ){\n        str_arr = str_path[ i ].split( '_' );\n        k       = 0;\n        l       = str_arr.length;\n\n        for( ; k < l; k++ ){\n          if( k !== 0 ){\n            str_arr[ k ] = str_arr[ k ].toLowerCase();\n          }\n\n          first = str_arr[ k ].charAt( 0 );\n          first = low_first_letter && i === 0 && k === 0\n            ? first.toLowerCase() : first.toUpperCase();\n          str_arr[ k ] = first + str_arr[ k ].substring( 1 );\n        }\n\n        str_path[ i ] = str_arr.join( '' );\n      }\n\n      return str_path.join( '::' );\n    },\n\n\n\n  /**\n   * This function adds underscore support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} all_upper_case Default is to lowercase and add underscore prefix.(optional)\n   *                  Passing true will return as entered.\n   * @returns {String} Camel cased words are returned as lower cased and underscored.\n   *                  additionally '::' is translated to '/'.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.underscore( 'MessageProperties' ); // === 'message_properties'\n   *     inflection.underscore( 'messageProperties' ); // === 'message_properties'\n   *     inflection.underscore( 'MP', true ); // === 'MP'\n   */\n    underscore : function ( str, all_upper_case ){\n      if( all_upper_case && str === str.toUpperCase()) return str;\n\n      var str_path = str.split( '::' );\n      var i        = 0;\n      var j        = str_path.length;\n\n      for( ; i < j; i++ ){\n        str_path[ i ] = str_path[ i ].replace( uppercase, '_$1' );\n        str_path[ i ] = str_path[ i ].replace( underbar_prefix, '' );\n      }\n\n      return str_path.join( '/' ).toLowerCase();\n    },\n\n\n\n  /**\n   * This function adds humanize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} low_first_letter Default is to capitalize the first letter of the results.(optional)\n   *                                 Passing true will lowercase it.\n   * @returns {String} Lower case underscored words will be returned in humanized form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.humanize( 'message_properties' ); // === 'Message properties'\n   *     inflection.humanize( 'message_properties', true ); // === 'message properties'\n   */\n    humanize : function ( str, low_first_letter ){\n      str = str.toLowerCase();\n      str = str.replace( id_suffix, '' );\n      str = str.replace( underbar, ' ' );\n\n      if( !low_first_letter ){\n        str = inflector.capitalize( str );\n      }\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds capitalization support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} All characters will be lower case and the first will be upper.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.capitalize( 'message_properties' ); // === 'Message_properties'\n   *     inflection.capitalize( 'message properties', true ); // === 'Message properties'\n   */\n    capitalize : function ( str ){\n      str = str.toLowerCase();\n\n      return str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );\n    },\n\n\n\n  /**\n   * This function replaces underscores with dashes in the string.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Replaces all spaces or underscores with dashes.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.dasherize( 'message_properties' ); // === 'message-properties'\n   *     inflection.dasherize( 'Message Properties' ); // === 'Message-Properties'\n   */\n    dasherize : function ( str ){\n      return str.replace( space_or_underbar, '-' );\n    },\n\n\n\n  /**\n   * This function adds titleize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Capitalizes words as you would for a book title.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.titleize( 'message_properties' ); // === 'Message Properties'\n   *     inflection.titleize( 'message properties to keep' ); // === 'Message Properties to Keep'\n   */\n    titleize : function ( str ){\n      str         = str.toLowerCase().replace( underbar, ' ' );\n      var str_arr = str.split( ' ' );\n      var i       = 0;\n      var j       = str_arr.length;\n      var d, k, l;\n\n      for( ; i < j; i++ ){\n        d = str_arr[ i ].split( '-' );\n        k = 0;\n        l = d.length;\n\n        for( ; k < l; k++){\n          if( inflector.indexOf( non_titlecased_words, d[ k ].toLowerCase()) < 0 ){\n            d[ k ] = inflector.capitalize( d[ k ]);\n          }\n        }\n\n        str_arr[ i ] = d.join( '-' );\n      }\n\n      str = str_arr.join( ' ' );\n      str = str.substring( 0, 1 ).toUpperCase() + str.substring( 1 );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds demodulize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Removes module names leaving only class names.(Ruby style)\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.demodulize( 'Message::Bus::Properties' ); // === 'Properties'\n   */\n    demodulize : function ( str ){\n      var str_arr = str.split( '::' );\n\n      return str_arr[ str_arr.length - 1 ];\n    },\n\n\n\n  /**\n   * This function adds tableize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Return camel cased words into their underscored plural form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.tableize( 'MessageBusProperty' ); // === 'message_bus_properties'\n   */\n    tableize : function ( str ){\n      str = inflector.underscore( str );\n      str = inflector.pluralize( str );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds classification support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Underscored plural nouns become the camel cased singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.classify( 'message_bus_properties' ); // === 'MessageBusProperty'\n   */\n    classify : function ( str ){\n      str = inflector.camelize( str );\n      str = inflector.singularize( str );\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds foreign key support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Boolean} drop_id_ubar Default is to seperate id with an underbar at the end of the class name,\n                                 you can pass true to skip it.(optional)\n   * @returns {String} Underscored plural nouns become the camel cased singular form.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.foreign_key( 'MessageBusProperty' ); // === 'message_bus_property_id'\n   *     inflection.foreign_key( 'MessageBusProperty', true ); // === 'message_bus_propertyid'\n   */\n    foreign_key : function ( str, drop_id_ubar ){\n      str = inflector.demodulize( str );\n      str = inflector.underscore( str ) + (( drop_id_ubar ) ? ( '' ) : ( '_' )) + 'id';\n\n      return str;\n    },\n\n\n\n  /**\n   * This function adds ordinalize support to every String object.\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @returns {String} Return all found numbers their sequence like '22nd'.\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.ordinalize( 'the 1 pitch' ); // === 'the 1st pitch'\n   */\n    ordinalize : function ( str ){\n      var str_arr = str.split( ' ' );\n      var i       = 0;\n      var j       = str_arr.length;\n\n      for( ; i < j; i++ ){\n        var k = parseInt( str_arr[ i ], 10 );\n\n        if( !isNaN( k )){\n          var ltd = str_arr[ i ].substring( str_arr[ i ].length - 2 );\n          var ld  = str_arr[ i ].substring( str_arr[ i ].length - 1 );\n          var suf = 'th';\n\n          if( ltd != '11' && ltd != '12' && ltd != '13' ){\n            if( ld === '1' ){\n              suf = 'st';\n            }else if( ld === '2' ){\n              suf = 'nd';\n            }else if( ld === '3' ){\n              suf = 'rd';\n            }\n          }\n\n          str_arr[ i ] += suf;\n        }\n      }\n\n      return str_arr.join( ' ' );\n    },\n\n  /**\n   * This function performs multiple inflection methods on a string\n   * @public\n   * @function\n   * @param {String} str The subject string.\n   * @param {Array} arr An array of inflection methods.\n   * @returns {String}\n   * @example\n   *\n   *     var inflection = require( 'inflection' );\n   *\n   *     inflection.transform( 'all job', [ 'pluralize', 'capitalize', 'dasherize' ]); // === 'All-jobs'\n   */\n    transform : function ( str, arr ){\n      var i = 0;\n      var j = arr.length;\n\n      for( ;i < j; i++ ){\n        var method = arr[ i ];\n\n        if( inflector.hasOwnProperty( method )){\n          str = inflector[ method ]( str );\n        }\n      }\n\n      return str;\n    }\n  };\n\n/**\n * @public\n */\n  inflector.version = '1.13.1';\n\n  return inflector;\n}));\n", "import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  AdminContext,\n  defaultI18nProvider,\n  /* tree-shaking no-side-effects-when-called */ localStorageStore,\n} from 'react-admin';\n\nimport type { ComponentType } from 'react';\nimport type { AdminProps } from 'react-admin';\nimport type { Resource } from '@api-platform/api-doc-parser';\n\nimport { AdminResourcesGuesser } from './AdminResourcesGuesser.js';\nimport IntrospectionContext from '../introspection/IntrospectionContext.js';\nimport SchemaAnalyzerContext from '../introspection/SchemaAnalyzerContext.js';\nimport {\n  Error as DefaultError,\n  Layout,\n  LoginPage,\n  darkTheme as defaultDarkTheme,\n  lightTheme as defaultLightTheme,\n} from '../layout/index.js';\nimport type { ApiPlatformAdminDataProvider, SchemaAnalyzer } from '../types.js';\n\nexport interface AdminGuesserProps extends AdminProps {\n  admin?: ComponentType<AdminProps>;\n  dataProvider: ApiPlatformAdminDataProvider;\n  schemaAnalyzer: SchemaAnalyzer;\n  includeDeprecated?: boolean;\n}\n\nconst defaultStore = localStorageStore();\n\nconst AdminGuesser = ({\n  // Props for SchemaAnalyzerContext\n  schemaAnalyzer,\n  // Props for AdminResourcesGuesser\n  includeDeprecated = false,\n  // Admin props\n  basename,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error = DefaultError as any,\n  store = defaultStore,\n  dataProvider,\n  i18nProvider = defaultI18nProvider,\n  authProvider,\n  queryClient,\n  defaultTheme,\n  layout = Layout,\n  loginPage = LoginPage,\n  loading: loadingPage,\n  theme = defaultLightTheme,\n  darkTheme = defaultDarkTheme,\n  // Other props\n  children,\n  ...rest\n}: AdminGuesserProps) => {\n  const [resources, setResources] = useState<Resource[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [, setError] = useState();\n  const [introspect, setIntrospect] = useState(true);\n\n  useEffect(() => {\n    if (typeof dataProvider.introspect !== 'function') {\n      throw new Error(\n        'The given dataProvider needs to expose an \"introspect\" function returning a parsed API documentation from api-doc-parser',\n      );\n    }\n\n    if (!introspect) {\n      return;\n    }\n\n    dataProvider\n      .introspect()\n      .then(({ data }) => {\n        setResources(data.resources ?? []);\n        setIntrospect(false);\n        setLoading(false);\n      })\n      .catch((err) => {\n        // Allow err to be caught by the error boundary\n        setError(() => {\n          throw err;\n        });\n      });\n  }, [introspect, dataProvider]);\n\n  const introspectionContext = useMemo(\n    () => ({\n      introspect: () => {\n        setLoading(true);\n        setIntrospect(true);\n      },\n    }),\n    [setLoading, setIntrospect],\n  );\n\n  return (\n    <AdminContext\n      i18nProvider={i18nProvider}\n      dataProvider={dataProvider}\n      basename={basename}\n      authProvider={authProvider}\n      store={store}\n      queryClient={queryClient}\n      theme={theme}\n      darkTheme={darkTheme}\n      defaultTheme={defaultTheme}>\n      <IntrospectionContext.Provider value={introspectionContext}>\n        <SchemaAnalyzerContext.Provider value={schemaAnalyzer}>\n          <AdminResourcesGuesser\n            includeDeprecated={includeDeprecated}\n            resources={resources}\n            loading={loading}\n            dataProvider={dataProvider}\n            layout={layout}\n            loginPage={loginPage}\n            loadingPage={loadingPage}\n            theme={theme}\n            error={error}\n            {...rest}>\n            {children}\n          </AdminResourcesGuesser>\n        </SchemaAnalyzerContext.Provider>\n      </IntrospectionContext.Provider>\n    </AdminContext>\n  );\n};\n\nexport default AdminGuesser;\n", "import React from 'react';\nimport { AdminUI, Loading } from 'react-admin';\nimport type { ComponentType } from 'react';\nimport type { AdminProps } from 'react-admin';\nimport type { Resource } from '@api-platform/api-doc-parser';\n\nimport ResourceGuesser from './ResourceGuesser.js';\n\nimport getRoutesAndResourcesFromNodes, {\n  isSingleChildFunction,\n} from '../introspection/getRoutesAndResourcesFromNodes.js';\nimport useDisplayOverrideCode from '../useDisplayOverrideCode.js';\nimport type { ApiPlatformAdminDataProvider, SchemaAnalyzer } from '../types.js';\n\nexport interface AdminGuesserProps extends AdminProps {\n  admin?: ComponentType<AdminProps>;\n  dataProvider: ApiPlatformAdminDataProvider;\n  schemaAnalyzer: SchemaAnalyzer;\n  includeDeprecated?: boolean;\n}\n\ninterface AdminResourcesGuesserProps extends Omit<AdminProps, 'loading'> {\n  admin?: ComponentType<AdminProps>;\n  includeDeprecated: boolean;\n  loading: boolean;\n  loadingPage?: ComponentType;\n  resources: Resource[];\n}\n\nconst getOverrideCode = (resources: Resource[]) => {\n  let code =\n    'If you want to override at least one resource, paste this content in the <AdminGuesser> component of your app:\\n\\n';\n\n  resources.forEach((r) => {\n    code += `<ResourceGuesser name=\"${r.name}\" />\\n`;\n  });\n\n  return code;\n};\n\n/**\n * AdminResourcesGuesser automatically renders an `<AdminUI>` component\n * for resources exposed by a web API documented with Hydra, OpenAPI\n * or any other format supported by `@api-platform/api-doc-parser`.\n *\n * If child components are passed (usually `<ResourceGuesser>` or `<Resource>`\n * components, but it can be any other React component), they are rendered in\n * the given order.\n * If no children are passed, a `<ResourceGuesser>` component is created for\n * each resource type exposed by the API, in the order they are specified in\n * the API documentation.\n */\nexport const AdminResourcesGuesser = ({\n  // Admin props\n  loadingPage: LoadingPage = Loading,\n  admin: AdminEl = AdminUI,\n  // Props\n  children,\n  includeDeprecated,\n  resources,\n  loading,\n  ...rest\n}: AdminResourcesGuesserProps) => {\n  const displayOverrideCode = useDisplayOverrideCode();\n\n  if (loading) {\n    return <LoadingPage />;\n  }\n\n  let adminChildren = children;\n  const { resources: resourceChildren, customRoutes } =\n    getRoutesAndResourcesFromNodes(children);\n  if (\n    !isSingleChildFunction(adminChildren) &&\n    resourceChildren.length === 0 &&\n    resources\n  ) {\n    const guessedResources = includeDeprecated\n      ? resources\n      : resources.filter((r) => !r.deprecated);\n    adminChildren = [\n      ...customRoutes,\n      ...guessedResources.map((r) => (\n        <ResourceGuesser name={r.name} key={r.name} />\n      )),\n    ];\n    displayOverrideCode(getOverrideCode(guessedResources));\n  }\n\n  return (\n    <AdminEl loading={LoadingPage} {...rest}>\n      {adminChildren}\n    </AdminEl>\n  );\n};\n", "import React, { useEffect } from 'react';\nimport {\n  Resource,\n  useResourceDefinition,\n  useResourceDefinitionContext,\n} from 'react-admin';\nimport type { ResourceDefinition, ResourceProps } from 'react-admin';\nimport ListGuesser from '../list/ListGuesser.js';\nimport CreateGuesser from '../create/CreateGuesser.js';\nimport EditGuesser from '../edit/EditGuesser.js';\nimport ShowGuesser from '../show/ShowGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport type {\n  IntrospectedResourceGuesserProps,\n  ResourceGuesserProps,\n} from '../types.js';\n\nexport const IntrospectedResourceGuesser = ({\n  resource,\n  schema,\n  schemaAnalyzer,\n  list = ListGuesser,\n  edit = EditGuesser,\n  create = CreateGuesser,\n  show = ShowGuesser,\n  ...props\n}: IntrospectedResourceGuesserProps) => {\n  const { register } = useResourceDefinitionContext();\n  const registeredDefinition = useResourceDefinition({ resource });\n\n  let hasList = false;\n  let hasEdit = false;\n  let hasCreate = false;\n  let hasShow = false;\n  schema.operations?.forEach((operation) => {\n    if (operation.type === 'list') {\n      hasList = true;\n    }\n    if (operation.type === 'edit') {\n      hasEdit = true;\n    }\n    if (operation.type === 'create') {\n      hasCreate = true;\n    }\n    if (operation.type === 'show') {\n      hasShow = true;\n    }\n  });\n\n  useEffect(() => {\n    if (\n      registeredDefinition.hasList !== hasList ||\n      registeredDefinition.hasEdit !== hasEdit ||\n      registeredDefinition.hasCreate !== hasCreate ||\n      registeredDefinition.hasShow !== hasShow\n    ) {\n      register({\n        name: resource,\n        icon: props.icon,\n        options: props.options,\n        hasList,\n        hasEdit,\n        hasCreate,\n        hasShow,\n      });\n    }\n  }, [\n    register,\n    resource,\n    props.icon,\n    props.options,\n    hasList,\n    hasEdit,\n    hasCreate,\n    hasShow,\n    registeredDefinition,\n  ]);\n\n  return (\n    <Resource\n      {...props}\n      name={resource}\n      create={create}\n      edit={edit}\n      list={list}\n      show={show}\n    />\n  );\n};\n\nconst ResourceGuesser = ({ name, ...props }: ResourceGuesserProps) => (\n  <Introspecter\n    component={IntrospectedResourceGuesser}\n    resource={name}\n    {...props}\n  />\n);\n\nResourceGuesser.raName = 'Resource';\n\nResourceGuesser.registerResource = (\n  props: ResourceProps,\n): ResourceDefinition => ({\n  name: props.name,\n  icon: props.icon,\n  options: props.options,\n  hasList: true,\n  hasEdit: true,\n  hasCreate: true,\n  hasShow: true,\n});\n\nexport default ResourceGuesser;\n", "import React, { useEffect, useState } from 'react';\nimport {\n  Datagrid,\n  DatagridBody,\n  EditButton,\n  List,\n  ShowButton,\n  useResourceContext,\n  useResourceDefinition,\n} from 'react-admin';\nimport type { DatagridBodyProps } from 'react-admin';\nimport type { Field, Resource } from '@api-platform/api-doc-parser';\n\nimport FieldGuesser from '../field/FieldGuesser.js';\nimport FilterGuesser from './FilterGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport useMercureSubscription from '../mercure/useMercureSubscription.js';\nimport useDisplayOverrideCode from '../useDisplayOverrideCode.js';\nimport type {\n  ApiPlatformAdminRecord,\n  IntrospectedListGuesserProps,\n  ListGuesserProps,\n} from '../types.js';\n\nconst getOverrideCode = (schema: Resource, fields: Field[]) => {\n  let code = `If you want to override at least one field, create a ${schema.title}List component with this content:\\n`;\n  code += `\\n`;\n  code += `import { ListGuesser, FieldGuesser } from \"@api-platform/admin\";\\n`;\n  code += `\\n`;\n  code += `export const ${schema.title}List = () => (\\n`;\n  code += `    <ListGuesser>\\n`;\n  fields.forEach((field) => {\n    code += `        <FieldGuesser source=\"${field.name}\" />\\n`;\n  });\n  code += `    </ListGuesser>\\n`;\n  code += `);\\n`;\n  code += `\\n`;\n  code += `Then, update your main admin component:\\n`;\n  code += `\\n`;\n  code += `import { HydraAdmin, ResourceGuesser } from \"@api-platform/admin\";\\n`;\n  code += `import { ${schema.title}List } from './${schema.title}List';\\n`;\n  code += `\\n`;\n  code += `const App = () => (\\n`;\n  code += `    <HydraAdmin entrypoint={...}>\\n`;\n  code += `        <ResourceGuesser name=\"${schema.name}\" list={${schema.title}List} />\\n`;\n  code += `        {/* ... */}\\n`;\n  code += `    </HydraAdmin>\\n`;\n  code += `);\\n`;\n\n  return code;\n};\n\nexport const DatagridBodyWithMercure = (props: DatagridBodyProps) => {\n  const { data } = props;\n  const resource = useResourceContext(props);\n  useMercureSubscription(\n    resource,\n    data?.map((record: ApiPlatformAdminRecord) => record.id),\n  );\n\n  return <DatagridBody {...props} />;\n};\n\nexport const IntrospectedListGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  datagridSx,\n  bulkActionButtons,\n  rowClick,\n  rowStyle,\n  isRowSelectable,\n  isRowExpandable,\n  body = DatagridBodyWithMercure,\n  header,\n  empty,\n  hover,\n  expand,\n  expandSingle,\n  optimized,\n  size,\n  children,\n  ...props\n}: IntrospectedListGuesserProps) => {\n  const { hasShow, hasEdit } = useResourceDefinition(props);\n  const [orderParameters, setOrderParameters] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (schema) {\n      schemaAnalyzer.getOrderParametersFromSchema(schema).then((parameters) => {\n        setOrderParameters(parameters);\n      });\n    }\n  }, [schema, schemaAnalyzer]);\n\n  const displayOverrideCode = useDisplayOverrideCode();\n\n  let fieldChildren = children;\n  if (!fieldChildren) {\n    fieldChildren = readableFields.map((field) => {\n      const orderField = orderParameters.find(\n        (orderParameter) => orderParameter.split('.')[0] === field.name,\n      );\n\n      return (\n        <FieldGuesser\n          key={field.name + (orderField ? `-${orderField}` : '')}\n          source={field.name}\n          sortable={!!orderField}\n          sortBy={orderField}\n          resource={props.resource}\n        />\n      );\n    });\n\n    displayOverrideCode(getOverrideCode(schema, readableFields));\n  }\n\n  return (\n    <List {...props}>\n      <Datagrid\n        bulkActionButtons={bulkActionButtons}\n        rowClick={rowClick}\n        rowStyle={rowStyle}\n        isRowSelectable={isRowSelectable}\n        isRowExpandable={isRowExpandable}\n        body={body}\n        header={header}\n        empty={empty}\n        hover={hover}\n        expand={expand}\n        expandSingle={expandSingle}\n        optimized={optimized}\n        size={size}\n        sx={datagridSx}>\n        {fieldChildren}\n        {hasShow && <ShowButton />}\n        {hasEdit && <EditButton />}\n      </Datagrid>\n    </List>\n  );\n};\n\nconst ListGuesser = ({\n  filters = <FilterGuesser />,\n  ...props\n}: ListGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('ListGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedListGuesser}\n      resource={resource}\n      filters={filters}\n      {...props}\n    />\n  );\n};\n\nexport default ListGuesser;\n", "import React from 'react';\nimport {\n  ArrayField,\n  BooleanField,\n  ChipField,\n  DateField,\n  EmailField,\n  NumberField,\n  ReferenceArrayField,\n  ReferenceField,\n  SimpleList,\n  SingleFieldList,\n  TextField,\n  UrlField,\n  useResourceContext,\n} from 'react-admin';\nimport type {\n  ArrayFieldProps,\n  BooleanFieldProps,\n  DateFieldProps,\n  EmailFieldProps,\n  NumberFieldProps,\n  ReferenceArrayFieldProps,\n  ReferenceFieldProps,\n  SingleFieldListProps,\n  TextFieldProps,\n  UrlFieldProps,\n} from 'react-admin';\nimport type { Field, Resource } from '@api-platform/api-doc-parser';\n\nimport Introspecter from '../introspection/Introspecter.js';\nimport EnumField from './EnumField.js';\nimport type {\n  EnumFieldProps,\n  FieldGuesserProps,\n  FieldProps,\n  IntrospectedFieldGuesserProps,\n  SchemaAnalyzer,\n} from '../types.js';\n\nconst isFieldSortable = (field: Field, schema: Resource) =>\n  !!schema.parameters &&\n  schema.parameters.filter((parameter) => parameter.variable === field.name)\n    .length > 0 &&\n  schema.parameters.filter(\n    (parameter) => parameter.variable === `order[${field.name}]`,\n  ).length > 0;\n\nconst renderField = (\n  field: Field,\n  schemaAnalyzer: SchemaAnalyzer,\n  props: FieldProps,\n) => {\n  if (field.reference !== null && typeof field.reference === 'object') {\n    if (field.maxCardinality === 1) {\n      return (\n        <ReferenceField\n          {...(props as ReferenceFieldProps)}\n          reference={field.reference.name}>\n          <ChipField\n            source={schemaAnalyzer.getFieldNameFromSchema(field.reference)}\n          />\n        </ReferenceField>\n      );\n    }\n\n    const fieldName = schemaAnalyzer.getFieldNameFromSchema(field.reference);\n    const { linkType, ...rest } = props as ReferenceArrayFieldProps &\n      Pick<SingleFieldListProps, 'linkType'>;\n    return (\n      <ReferenceArrayField\n        {...(rest as ReferenceArrayFieldProps)}\n        reference={field.reference.name}>\n        <SingleFieldList linkType={linkType}>\n          <ChipField source={fieldName} key={fieldName} />\n        </SingleFieldList>\n      </ReferenceArrayField>\n    );\n  }\n\n  if (field.embedded !== null && field.maxCardinality !== 1) {\n    return (\n      <ArrayField {...(props as ArrayFieldProps)}>\n        <SimpleList\n          primaryText={(record) => JSON.stringify(record)}\n          linkType={false}\n          // Workaround for forcing the list to display underlying data.\n          total={2}\n        />\n      </ArrayField>\n    );\n  }\n\n  if (field.enum) {\n    return (\n      <EnumField\n        transformEnum={(value) =>\n          Object.entries(field.enum ?? {}).find(([, v]) => v === value)?.[0] ??\n          value\n        }\n        {...(props as EnumFieldProps)}\n      />\n    );\n  }\n\n  const fieldType = schemaAnalyzer.getFieldType(field);\n\n  switch (fieldType) {\n    case 'email':\n      return <EmailField {...(props as EmailFieldProps)} />;\n\n    case 'url':\n      return <UrlField {...(props as UrlFieldProps)} />;\n\n    case 'integer':\n    case 'integer_id':\n    case 'float':\n      return <NumberField {...(props as NumberFieldProps)} />;\n\n    case 'boolean':\n      return <BooleanField {...(props as BooleanFieldProps)} />;\n\n    case 'date':\n    case 'dateTime':\n      return <DateField {...(props as DateFieldProps)} />;\n\n    default:\n      return <TextField {...(props as TextFieldProps)} />;\n  }\n};\n\nexport const IntrospectedFieldGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  ...props\n}: IntrospectedFieldGuesserProps) => {\n  if (!props.source) {\n    // eslint-disable-next-line no-console\n    console.error('FieldGuesser: missing source property.');\n    return null;\n  }\n  const field = fields.find((f) => f.name === props.source);\n\n  if (!field) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `Field \"${props.source}\" not present inside API description for the resource \"${props.resource}\"`,\n    );\n\n    return null;\n  }\n\n  return renderField(field, schemaAnalyzer, {\n    sortable: isFieldSortable(field, schema),\n    ...props,\n    source: props.source,\n  });\n};\n\nconst FieldGuesser = (props: FieldGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('FieldGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedFieldGuesser}\n      resource={resource}\n      includeDeprecated\n      {...props}\n    />\n  );\n};\n\nexport default FieldGuesser;\n", "import React, { useContext, useEffect, useMemo } from 'react';\nimport { useLogoutIfAccessDenied } from 'react-admin';\n\nimport SchemaAnalyzerContext from './SchemaAnalyzerContext.js';\nimport useIntrospect from './useIntrospect.js';\nimport type { IntrospecterProps, SchemaAnalyzer } from '../types.js';\nimport ResourcesIntrospecter from './ResourcesIntrospecter.js';\n\nconst Introspecter = ({\n  component,\n  includeDeprecated = false,\n  resource,\n  ...rest\n}: IntrospecterProps) => {\n  const logoutIfAccessDenied = useLogoutIfAccessDenied();\n  const schemaAnalyzer = useContext<SchemaAnalyzer | null>(\n    SchemaAnalyzerContext,\n  );\n  const schemaAnalyzerProxy = useMemo(() => {\n    if (!schemaAnalyzer) {\n      return null;\n    }\n    return new Proxy(schemaAnalyzer, {\n      get: (target, key: keyof SchemaAnalyzer) => {\n        if (typeof target[key] !== 'function') {\n          return target[key];\n        }\n\n        return (...args: never[]) => {\n          // eslint-disable-next-line prefer-spread,@typescript-eslint/ban-types\n          const result = (target[key] as Function).apply(target, args);\n\n          if (result && typeof result.then === 'function') {\n            return result.catch((e: Error) => {\n              logoutIfAccessDenied(e).then((loggedOut) => {\n                if (loggedOut) {\n                  return;\n                }\n\n                throw e;\n              });\n            });\n          }\n\n          return result;\n        };\n      },\n    });\n  }, [schemaAnalyzer, logoutIfAccessDenied]);\n\n  const { refetch, data, isPending, error } = useIntrospect();\n  const resources = data ? data.data.resources : null;\n\n  useEffect(() => {\n    if (!error && !resources) {\n      refetch();\n    }\n  }, [refetch, error, resources]);\n\n  if (!schemaAnalyzerProxy) {\n    return null;\n  }\n\n  return (\n    <ResourcesIntrospecter\n      {...rest}\n      component={component}\n      schemaAnalyzer={schemaAnalyzerProxy}\n      includeDeprecated={includeDeprecated}\n      resource={resource}\n      resources={resources ?? []}\n      loading={isPending}\n      error={error}\n    />\n  );\n};\n\nexport default Introspecter;\n", "import {\n  /* tree-shaking no-side-effects-when-called */ createContext,\n} from 'react';\nimport type { SchemaAnalyzer } from '../types.js';\n\nconst SchemaAnalyzerContext = createContext<SchemaAnalyzer | null>(null);\n\nexport default SchemaAnalyzerContext;\n", "import { useQuery } from '@tanstack/react-query';\nimport { useDataProvider } from 'react-admin';\nimport type { UseQueryOptions } from '@tanstack/react-query';\nimport type {\n  ApiPlatformAdminDataProvider,\n  IntrospectPayload,\n} from '../types.js';\n\nconst useIntrospect = (options?: UseQueryOptions<IntrospectPayload, Error>) => {\n  const dataProvider = useDataProvider<ApiPlatformAdminDataProvider>();\n\n  return useQuery<IntrospectPayload, Error>({\n    queryKey: ['introspect'],\n    queryFn: () => dataProvider.introspect(),\n    enabled: false,\n    ...options,\n  });\n};\n\nexport default useIntrospect;\n", "import React from 'react';\nimport type { ResourcesIntrospecterProps } from '../types.js';\n\nconst ResourcesIntrospecter = ({\n  component: Component,\n  schemaAnalyzer,\n  includeDeprecated,\n  resource,\n  resources,\n  loading,\n  error,\n  ...rest\n}: ResourcesIntrospecterProps) => {\n  if (loading) {\n    return null;\n  }\n\n  if (error) {\n    if (process.env.NODE_ENV === 'production') {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n\n    throw new Error('API schema is not readable');\n  }\n\n  const schema = resources.find((r) => r.name === resource);\n\n  if (!schema?.fields || !schema?.readableFields || !schema?.writableFields) {\n    if (process.env.NODE_ENV === 'production') {\n      // eslint-disable-next-line no-console\n      console.error(`Resource ${resource} not present inside API description`);\n    }\n\n    throw new Error(`Resource ${resource} not present inside API description`);\n  }\n\n  const fields = includeDeprecated\n    ? schema.fields\n    : schema.fields.filter(({ deprecated }) => !deprecated);\n  const readableFields = includeDeprecated\n    ? schema.readableFields\n    : schema.readableFields.filter(({ deprecated }) => !deprecated);\n  const writableFields = includeDeprecated\n    ? schema.writableFields\n    : schema.writableFields.filter(({ deprecated }) => !deprecated);\n\n  return (\n    <Component\n      schemaAnalyzer={schemaAnalyzer}\n      resource={resource}\n      schema={schema}\n      fields={fields}\n      readableFields={readableFields}\n      writableFields={writableFields}\n      {...rest}\n    />\n  );\n};\n\nexport default ResourcesIntrospecter;\n", "import React from 'react';\nimport {\n  ArrayField,\n  SingleFieldList,\n  TextField,\n  useRecordContext,\n} from 'react-admin';\nimport type { TextFieldProps } from 'react-admin';\nimport type { EnumFieldProps } from '../types.js';\n\nconst EnumField = ({ transformEnum, source, ...props }: EnumFieldProps) => {\n  const record = useRecordContext();\n\n  if (!record || typeof source === 'undefined') {\n    return null;\n  }\n\n  const value = record[source];\n  const enumRecord = {\n    [source]: (Array.isArray(value) ? value : [value]).map((v) => ({\n      value: transformEnum ? transformEnum(v) : v,\n    })),\n  };\n\n  return (\n    <ArrayField source={source} record={enumRecord}>\n      <SingleFieldList linkType={false}>\n        <TextField {...(props as TextFieldProps)} source=\"value\" />\n      </SingleFieldList>\n    </ArrayField>\n  );\n};\n\nEnumField.displayName = 'EnumField';\n\nexport default EnumField;\n", "import React, { useEffect, useState } from 'react';\nimport { Filter, useResourceContext } from 'react-admin';\nimport InputGuesser from '../input/InputGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport type {\n  FilterGuesserProps,\n  FilterParameter,\n  IntrospectedFiterGuesserProps,\n} from '../types.js';\n\n/**\n * Adds filters based on the #ApiFilters attribute\n *\n * @see https://api-platform.com/docs/core/filters/\n */\nexport const IntrospectedFilterGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  ...rest\n}: IntrospectedFiterGuesserProps) => {\n  const [filtersParameters, setFiltersParameters] = useState<FilterParameter[]>(\n    [],\n  );\n\n  useEffect(() => {\n    if (schema) {\n      schemaAnalyzer\n        .getFiltersParametersFromSchema(schema)\n        .then((parameters) => {\n          setFiltersParameters(parameters);\n        });\n    }\n  }, [schema, schemaAnalyzer]);\n\n  if (!filtersParameters.length) {\n    return null;\n  }\n\n  return (\n    <Filter {...rest}>\n      {filtersParameters.map((filter) => (\n        <InputGuesser\n          key={filter.name}\n          source={filter.name}\n          alwaysOn={filter.isRequired}\n        />\n      ))}\n    </Filter>\n  );\n};\n\nconst FilterGuesser = (props: FilterGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('FilterGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedFilterGuesser}\n      resource={resource}\n      {...props}\n    />\n  );\n};\n\nexport default FilterGuesser;\n", "import React from 'react';\nimport {\n  ArrayInput,\n  BooleanInput,\n  DateInput,\n  DateTimeInput,\n  NumberInput,\n  ReferenceArrayInput,\n  ReferenceInput,\n  SelectArrayInput,\n  SelectInput,\n  SimpleFormIterator,\n  TextInput,\n  required,\n  useResourceContext,\n} from 'react-admin';\nimport type {\n  ArrayInputProps,\n  BooleanInputProps,\n  DateInputProps,\n  DateTimeInputProps,\n  NumberInputProps,\n  ReferenceArrayInputProps,\n  ReferenceInputProps,\n  SelectArrayInputProps,\n  SelectInputProps,\n  TextInputProps,\n} from 'react-admin';\nimport isPlainObject from 'lodash.isplainobject';\nimport Introspecter from '../introspection/Introspecter.js';\nimport getIdentifierValue, { isIdentifier } from '../getIdentifierValue.js';\nimport type {\n  InputGuesserProps,\n  IntrospectedInputGuesserProps,\n} from '../types.js';\n\nexport const IntrospectedInputGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  validate,\n  transformEnum,\n  ...props\n}: IntrospectedInputGuesserProps) => {\n  const field = fields.find(({ name }) => name === props.source);\n  if (!field) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `Field ${props.source} not present inside API description for the resource ${props.resource}`,\n    );\n\n    return null;\n  }\n\n  const guessedValidate = !validate && field.required ? [required()] : validate;\n\n  if (field.reference !== null && typeof field.reference === 'object') {\n    if (field.maxCardinality === 1) {\n      const { filter, page, perPage, sort, enableGetChoices, ...rest } =\n        props as ReferenceInputProps;\n\n      return (\n        <ReferenceInput\n          key={field.name}\n          reference={field.reference.name}\n          source={field.name}\n          filter={filter}\n          page={page}\n          perPage={perPage}\n          sort={sort}\n          enableGetChoices={enableGetChoices}>\n          <SelectInput\n            optionText={schemaAnalyzer.getFieldNameFromSchema(field.reference)}\n            validate={guessedValidate}\n            {...(rest as SelectInputProps)}\n          />\n        </ReferenceInput>\n      );\n    }\n\n    const { filter, page, perPage, sort, enableGetChoices, ...rest } =\n      props as ReferenceArrayInputProps;\n\n    return (\n      <ReferenceArrayInput\n        key={field.name}\n        reference={field.reference.name}\n        source={field.name}\n        filter={filter}\n        page={page}\n        perPage={perPage}\n        sort={sort}\n        enableGetChoices={enableGetChoices}>\n        <SelectArrayInput\n          optionText={schemaAnalyzer.getFieldNameFromSchema(field.reference)}\n          validate={guessedValidate}\n          {...(rest as SelectArrayInputProps)}\n        />\n      </ReferenceArrayInput>\n    );\n  }\n\n  let format;\n  let parse;\n  const fieldType = schemaAnalyzer.getFieldType(field);\n\n  if (field.enum) {\n    const choices = Object.entries(field.enum).map(([k, v]) => ({\n      id: v,\n      name: transformEnum ? transformEnum(v) : k,\n    }));\n    return fieldType === 'array' ? (\n      <SelectArrayInput\n        validate={guessedValidate}\n        choices={choices}\n        {...(props as SelectArrayInputProps)}\n      />\n    ) : (\n      <SelectInput\n        validate={guessedValidate}\n        choices={choices}\n        {...(props as SelectInputProps)}\n      />\n    );\n  }\n\n  if (isIdentifier(field, fieldType)) {\n    format = (value: string | number) =>\n      getIdentifierValue(\n        schemaAnalyzer,\n        props.resource,\n        fields,\n        field.name,\n        value,\n      );\n  }\n\n  const formatEmbedded = (value: string | object | null) => {\n    if (value === null) {\n      return '';\n    }\n    if (typeof value === 'string') {\n      return value;\n    }\n\n    return JSON.stringify(value);\n  };\n  const parseEmbedded = (value: string) => {\n    try {\n      const parsed = JSON.parse(value);\n      if (!isPlainObject(parsed)) {\n        return value;\n      }\n      return parsed;\n    } catch (e) {\n      return value;\n    }\n  };\n\n  if (field.embedded !== null) {\n    format = formatEmbedded;\n    parse = parseEmbedded;\n  }\n\n  const { format: formatProp, parse: parseProp } = props;\n\n  switch (fieldType) {\n    case 'array':\n      return (\n        <ArrayInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as ArrayInputProps)}\n          source={field.name}>\n          <SimpleFormIterator>\n            <TextInput\n              source=\"\"\n              label={`resources.${props.resource}.fields.${field.name}`}\n              format={formatProp ?? format}\n              parse={parseProp ?? parse}\n            />\n          </SimpleFormIterator>\n        </ArrayInput>\n      );\n\n    case 'integer':\n    case 'integer_id':\n      return (\n        <NumberInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as NumberInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n\n    case 'float':\n      return (\n        <NumberInput\n          key={field.name}\n          step=\"0.1\"\n          validate={guessedValidate}\n          {...(props as NumberInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n\n    case 'boolean':\n      return (\n        <BooleanInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as BooleanInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n\n    case 'date':\n      return (\n        <DateInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as DateInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n\n    case 'dateTime':\n      return (\n        <DateTimeInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as DateTimeInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n\n    default:\n      return (\n        <TextInput\n          key={field.name}\n          validate={guessedValidate}\n          {...(props as TextInputProps)}\n          format={formatProp ?? format}\n          parse={parseProp ?? parse}\n          source={field.name}\n        />\n      );\n  }\n};\n\nconst InputGuesser = (props: InputGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('guesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedInputGuesser}\n      resource={resource}\n      includeDeprecated\n      {...props}\n    />\n  );\n};\n\nexport default InputGuesser;\n", "import type { Field } from '@api-platform/api-doc-parser';\nimport type { SchemaAnalyzer } from './types.js';\n\nexport const isIdentifier = (field: Field, fieldType: string) =>\n  ['integer_id', 'id'].includes(fieldType) || field.name === 'id';\n\nconst getIdentifierValue = (\n  schemaAnalyzer: SchemaAnalyzer,\n  resource: string,\n  fields: Field[],\n  fieldName: string,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  value: any,\n) => {\n  const prefix = `/${resource}/`;\n\n  if (typeof value === 'string' && value.indexOf(prefix) === 0) {\n    const field = fields.find((fieldObj) => fieldObj.name === fieldName);\n    if (!field) {\n      return value;\n    }\n    const fieldType = schemaAnalyzer.getFieldType(field);\n    if (isIdentifier(field, fieldType)) {\n      const id = value.substring(prefix.length);\n      if (['integer_id', 'integer'].includes(fieldType)) {\n        return parseInt(id, 10);\n      }\n      return id;\n    }\n  }\n\n  return value;\n};\n\nexport default getIdentifierValue;\n", "import { useEffect, useRef } from 'react';\nimport { useDataProvider } from 'react-admin';\nimport type { Identifier } from 'react-admin';\nimport { useUpdateCache } from '../dataProvider/index.js';\nimport type { ApiPlatformAdminDataProvider } from '../types.js';\n\nexport default function useMercureSubscription(\n  resource: string | undefined,\n  idOrIds: Identifier | Identifier[] | undefined,\n) {\n  const dataProvider: ApiPlatformAdminDataProvider = useDataProvider();\n  const updateCache = useUpdateCache();\n\n  const hasShownNoSubscribeWarning = useRef(false);\n\n  useEffect(() => {\n    if (!idOrIds || !resource) {\n      return undefined;\n    }\n    const ids = Array.isArray(idOrIds)\n      ? idOrIds.map((id) => id.toString())\n      : [idOrIds.toString()];\n\n    if (\n      !hasShownNoSubscribeWarning.current &&\n      (dataProvider.subscribe === undefined ||\n        dataProvider.unsubscribe === undefined)\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'subscribe and/or unsubscribe methods were not set in the data provider, Mercure realtime update functionalities will not work. Please use a compatible data provider.',\n      );\n      hasShownNoSubscribeWarning.current = true;\n      return undefined;\n    }\n\n    dataProvider.subscribe(ids, (document) => {\n      updateCache({ resource, id: document.id, data: document });\n    });\n\n    return () => {\n      if (resource) {\n        dataProvider.unsubscribe(resource, ids);\n      }\n    };\n  }, [idOrIds, resource, dataProvider, updateCache]);\n}\n", "import type {\n  ApiPlatformAdminRecord,\n  DataTransformer,\n  MercureOptions,\n  MercureSubscription,\n} from '../types.js';\n\nconst createSubscription = (\n  mercure: MercureOptions,\n  topic: string,\n  callback: (document: ApiPlatformAdminRecord) => void,\n  transformData: DataTransformer = (parsedData) =>\n    parsedData as ApiPlatformAdminRecord,\n): MercureSubscription => {\n  if (mercure.hub === null) {\n    return {\n      subscribed: false,\n      topic,\n      callback,\n      count: 1,\n    };\n  }\n\n  const url = new URL(mercure.hub, window.origin);\n  url.searchParams.append('topic', new URL(topic, mercure.topicUrl).toString());\n\n  if (mercure.jwt !== null) {\n    document.cookie = `mercureAuthorization=${mercure.jwt}; Path=${mercure.hub}; Secure; SameSite=None`;\n  }\n\n  const eventSource = new EventSource(url.toString(), {\n    withCredentials: mercure.jwt !== null,\n  });\n  const eventListener = (event: MessageEvent) => {\n    const document = transformData(JSON.parse(event.data));\n    // this callback is for updating RA's state\n    callback(document);\n  };\n  eventSource.addEventListener('message', eventListener);\n\n  return {\n    subscribed: true,\n    topic,\n    callback,\n    eventSource,\n    eventListener,\n    count: 1,\n  };\n};\n\nexport default createSubscription;\n", "import createSubscription from './createSubscription.js';\nimport type {\n  ApiPlatformAdminRecord,\n  DataTransformer,\n  MercureOptions,\n  MercureSubscription,\n} from '../types.js';\n\n// store mercure subscriptions\nconst subscriptions: Record<string, MercureSubscription> = {};\nlet mercure: MercureOptions | null = null;\nlet dataTransform: DataTransformer = (parsedData) =>\n  parsedData as ApiPlatformAdminRecord;\n\nconst stopSubscription = (sub: MercureSubscription) => {\n  if (sub.subscribed && sub.eventSource && sub.eventListener) {\n    sub.eventSource.removeEventListener('message', sub.eventListener);\n    sub.eventSource.close();\n  }\n};\n\nexport default {\n  subscribe: (\n    resourceId: string,\n    topic: string,\n    callback: (document: ApiPlatformAdminRecord) => void,\n  ) => {\n    if (mercure === null) {\n      return;\n    }\n\n    const sub = subscriptions[resourceId];\n    if (sub !== undefined) {\n      sub.count += 1;\n      return;\n    }\n\n    subscriptions[resourceId] = createSubscription(\n      mercure,\n      topic,\n      callback,\n      dataTransform,\n    );\n  },\n  unsubscribe: (resourceId: string) => {\n    const sub = subscriptions[resourceId];\n    if (sub === undefined) {\n      return;\n    }\n\n    sub.count -= 1;\n\n    if (sub.count <= 0) {\n      stopSubscription(sub);\n      delete subscriptions[resourceId];\n    }\n  },\n  initSubscriptions: () => {\n    const mercureOptions = mercure;\n    if (mercureOptions === null) {\n      return;\n    }\n\n    const subKeys = Object.keys(subscriptions);\n    subKeys.forEach((subKey) => {\n      const sub = subscriptions[subKey];\n      if (sub && !sub.subscribed) {\n        subscriptions[subKey] = createSubscription(\n          mercureOptions,\n          sub.topic,\n          sub.callback,\n          dataTransform,\n        );\n      }\n    });\n  },\n  setMercureOptions: (mercureOptions: MercureOptions | null) => {\n    mercure = mercureOptions;\n  },\n  setDataTransformer: (dataTransformer: DataTransformer) => {\n    dataTransform = dataTransformer;\n  },\n};\n", "import type { Api, Resource } from '@api-platform/api-doc-parser';\nimport { mercureManager } from '../mercure/index.js';\nimport type {\n  ApiDocumentationParserResponse,\n  ApiPlatformAdminDataProviderFactoryParams,\n  ApiPlatformAdminRecord,\n  MercureOptions,\n} from '../types.js';\n\nexport default (\n  factoryParams: Required<ApiPlatformAdminDataProviderFactoryParams>,\n) => {\n  const { entrypoint, docEntrypoint, apiDocumentationParser } = factoryParams;\n  const entrypointUrl = new URL(entrypoint, window.location.href);\n  const docEntrypointUrl = new URL(docEntrypoint, window.location.href);\n  const mercure: MercureOptions | null = factoryParams.mercure\n    ? {\n        hub: null,\n        jwt: null,\n        topicUrl: entrypointUrl,\n        ...(factoryParams.mercure === true ? {} : factoryParams.mercure),\n      }\n    : null;\n  mercureManager.setMercureOptions(mercure);\n\n  let apiSchema: Api & { resources: Resource[] };\n\n  return {\n    introspect: (_resource = '', _params = {}) =>\n      apiSchema\n        ? Promise.resolve({ data: apiSchema })\n        : apiDocumentationParser(docEntrypointUrl.toString())\n            .then(({ api }: ApiDocumentationParserResponse) => {\n              if (api.resources && api.resources.length > 0) {\n                apiSchema = { ...api, resources: api.resources };\n              }\n              return { data: api };\n            })\n            .catch((err) => {\n              const { status, error } = err;\n              let { message } = err;\n              // Note that the `api-doc-parser` rejects with a non-standard error object hence the check\n              if (error?.message) {\n                message = error.message;\n              }\n\n              throw new Error(\n                `Cannot fetch API documentation:\\n${\n                  message\n                    ? `${message}\\nHave you verified that CORS is correctly configured in your API?\\n`\n                    : ''\n                }${status ? `Status: ${status}` : ''}`,\n              );\n            }),\n    subscribe: (\n      resourceIds: string[],\n      callback: (document: ApiPlatformAdminRecord) => void,\n    ) => {\n      resourceIds.forEach((resourceId) => {\n        mercureManager.subscribe(resourceId, resourceId, callback);\n      });\n\n      return Promise.resolve({ data: null });\n    },\n    unsubscribe: (_resource: string, resourceIds: string[]) => {\n      resourceIds.forEach((resourceId) => {\n        mercureManager.unsubscribe(resourceId);\n      });\n\n      return Promise.resolve({ data: null });\n    },\n  };\n};\n", "import { stringify } from 'query-string';\nimport { fetchUtils } from 'react-admin';\nimport type { DataProvider } from 'react-admin';\nimport { removeTrailingSlash } from '../removeTrailingSlash.js';\n\n// Based on https://github.com/marmelab/react-admin/blob/master/packages/ra-data-simple-rest/src/index.ts\n\nexport default (\n  entrypoint: string,\n  httpClient = fetchUtils.fetchJson,\n): DataProvider => {\n  const apiUrl = new URL(entrypoint, window.location.href);\n\n  return {\n    getList: async (resource, params) => {\n      const { page, perPage } = params.pagination ?? { page: 1, perPage: 25 };\n      const { field, order } = params.sort ?? { field: 'id', order: 'DESC' };\n\n      const rangeStart = (page - 1) * perPage;\n      const rangeEnd = page * perPage - 1;\n\n      const query = {\n        sort: JSON.stringify([field, order]),\n        range: JSON.stringify([rangeStart, rangeEnd]),\n        filter: JSON.stringify(params.filter),\n      };\n      const url = `${removeTrailingSlash(\n        apiUrl.toString(),\n      )}/${resource}?${stringify(query)}`;\n      const { json } = await httpClient(url);\n\n      return {\n        data: json,\n        pageInfo: {\n          hasNextPage: true,\n          hasPreviousPage: page > 1,\n        },\n      };\n    },\n\n    getOne: async (resource, params) => {\n      const url = `${removeTrailingSlash(apiUrl.toString())}/${resource}/${\n        params.id\n      }`;\n      const { json } = await httpClient(url);\n\n      return {\n        data: json,\n      };\n    },\n\n    getMany: async (resource, params) => {\n      const query = {\n        filter: JSON.stringify({ id: params.ids }),\n      };\n      const url = `${removeTrailingSlash(\n        apiUrl.toString(),\n      )}/${resource}?${stringify(query)}`;\n      const { json } = await httpClient(url);\n\n      return {\n        data: json,\n      };\n    },\n\n    getManyReference: async (resource, params) => {\n      const { page, perPage } = params.pagination;\n      const { field, order } = params.sort;\n\n      const rangeStart = (page - 1) * perPage;\n      const rangeEnd = page * perPage - 1;\n\n      const query = {\n        sort: JSON.stringify([field, order]),\n        range: JSON.stringify([rangeStart, rangeEnd]),\n        filter: JSON.stringify({\n          ...params.filter,\n          [params.target]: params.id,\n        }),\n      };\n      const url = `${removeTrailingSlash(\n        apiUrl.toString(),\n      )}/${resource}?${stringify(query)}`;\n      const { json } = await httpClient(url);\n\n      return {\n        data: json,\n        pageInfo: {\n          hasNextPage: true,\n          hasPreviousPage: page > 1,\n        },\n      };\n    },\n\n    update: async (resource, params) => {\n      const url = `${removeTrailingSlash(apiUrl.toString())}/${resource}/${\n        params.id\n      }`;\n      const { json } = await httpClient(url, {\n        method: 'PUT',\n        body: JSON.stringify(params.data),\n      });\n\n      return {\n        data: json,\n      };\n    },\n\n    updateMany: async (resource, params) => {\n      const responses = await Promise.all(\n        params.ids.map((id) => {\n          const url = `${removeTrailingSlash(\n            apiUrl.toString(),\n          )}/${resource}/${id}`;\n\n          return httpClient(url, {\n            method: 'PUT',\n            body: JSON.stringify(params.data),\n          });\n        }),\n      );\n\n      return { data: responses.map(({ json }) => json.id) };\n    },\n\n    create: async (resource, params) => {\n      const url = `${removeTrailingSlash(apiUrl.toString())}/${resource}`;\n      const { json } = await httpClient(url, {\n        method: 'POST',\n        body: JSON.stringify(params.data),\n      });\n\n      return {\n        data: json,\n      };\n    },\n\n    delete: async (resource, params) => {\n      const url = `${removeTrailingSlash(apiUrl.toString())}/${resource}/${\n        params.id\n      }`;\n      const { json } = await httpClient(url, {\n        method: 'DELETE',\n      });\n\n      return {\n        data: json,\n      };\n    },\n\n    deleteMany: async (resource, params) => {\n      const responses = await Promise.all(\n        params.ids.map((id) => {\n          const url = `${removeTrailingSlash(\n            apiUrl.toString(),\n          )}/${resource}/${id}`;\n\n          return httpClient(url, {\n            method: 'DELETE',\n          });\n        }),\n      );\n\n      return {\n        data: responses.map(({ json }) => json.id),\n      };\n    },\n  };\n};\n", "export const removeTrailingSlash = (url: string): string => {\n  if (url.endsWith('/')) {\n    return url.slice(0, -1);\n  }\n\n  return url;\n};\n\nexport default removeTrailingSlash;\n", "import { useCallback } from 'react';\nimport type { GetListResult, Identifier } from 'react-admin';\nimport { useQueryClient } from '@tanstack/react-query';\nimport type { ApiPlatformAdminRecord } from '../types.js';\n\nconst useUpdateCache = () => {\n  const queryClient = useQueryClient();\n\n  // From https://github.com/marmelab/react-admin/blob/next/packages/ra-core/src/dataProvider/useUpdate.ts\n  return useCallback(\n    ({\n      resource,\n      id,\n      data,\n    }: {\n      resource: string;\n      id: Identifier;\n      data: ApiPlatformAdminRecord;\n    }) => {\n      const updateColl = (old: ApiPlatformAdminRecord[]) => {\n        const index = old.findIndex(\n          // eslint-disable-next-line eqeqeq\n          (record) => record.id == id,\n        );\n        if (index === -1) {\n          return old;\n        }\n        return [\n          ...old.slice(0, index),\n          { ...old[index], ...data },\n          ...old.slice(index + 1),\n        ];\n      };\n\n      queryClient.setQueryData(\n        [resource, 'getOne', { id: String(id) }],\n        (record: ApiPlatformAdminRecord | undefined) => ({\n          ...record,\n          ...data,\n        }),\n      );\n      queryClient.setQueriesData(\n        { queryKey: [resource, 'getList'] },\n        (res: GetListResult<ApiPlatformAdminRecord> | undefined) =>\n          res?.data\n            ? { data: updateColl(res.data), total: res.total }\n            : { data: [data] },\n      );\n      queryClient.setQueriesData(\n        { queryKey: [resource, 'getMany'] },\n        (coll: ApiPlatformAdminRecord[] | undefined) =>\n          coll && coll.length > 0 ? updateColl(coll) : [data],\n      );\n      queryClient.setQueriesData(\n        { queryKey: [resource, 'getManyReference'] },\n        (res: GetListResult<ApiPlatformAdminRecord> | undefined) =>\n          res?.data\n            ? { data: updateColl(res.data), total: res.total }\n            : { data: [data] },\n      );\n    },\n    [queryClient],\n  );\n};\n\nexport default useUpdateCache;\n", "import { useState } from 'react';\n\nconst useDisplayOverrideCode = () => {\n  const [displayed, setDisplayed] = useState(false);\n\n  return (code: string) => {\n    if (process.env.NODE_ENV === 'production') return;\n\n    if (!displayed) {\n      // eslint-disable-next-line no-console\n      console.info(code);\n      setDisplayed(true);\n    }\n  };\n};\n\nexport default useDisplayOverrideCode;\n", "import React from 'react';\nimport {\n  Create,\n  FormTab,\n  SimpleForm,\n  TabbedForm,\n  useResourceContext,\n} from 'react-admin';\nimport type { Field, Resource } from '@api-platform/api-doc-parser';\n\nimport InputGuesser from '../input/InputGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport useDisplayOverrideCode from '../useDisplayOverrideCode.js';\nimport useOnSubmit from '../useOnSubmit.js';\nimport type {\n  CreateGuesserProps,\n  IntrospectedCreateGuesserProps,\n} from '../types.js';\n\nconst getOverrideCode = (schema: Resource, fields: Field[]) => {\n  let code = `If you want to override at least one input, create a ${schema.title}Create component with this content:\\n`;\n  code += `\\n`;\n  code += `import { CreateGuesser, InputGuesser } from \"@api-platform/admin\";\\n`;\n  code += `\\n`;\n  code += `export const ${schema.title}Create = () => (\\n`;\n  code += `    <CreateGuesser>\\n`;\n  fields.forEach((field) => {\n    code += `        <InputGuesser source=\"${field.name}\" />\\n`;\n  });\n  code += `    </CreateGuesser>\\n`;\n  code += `);\\n`;\n  code += `\\n`;\n  code += `Then, update your main admin component:\\n`;\n  code += `\\n`;\n  code += `import { HydraAdmin, ResourceGuesser } from \"@api-platform/admin\";\\n`;\n  code += `import { ${schema.title}Create } from './${schema.title}Create';\\n`;\n  code += `\\n`;\n  code += `const App = () => (\\n`;\n  code += `    <HydraAdmin entrypoint={...}>\\n`;\n  code += `        <ResourceGuesser name=\"${schema.name}\" create={${schema.title}Create} />\\n`;\n  code += `        {/* ... */}\\n`;\n  code += `    </HydraAdmin>\\n`;\n  code += `);\\n`;\n\n  return code;\n};\n\nexport const IntrospectedCreateGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  resource,\n  mutationOptions,\n  redirect: redirectTo = 'list',\n  mode,\n  defaultValues,\n  transform,\n  validate,\n  toolbar,\n  warnWhenUnsavedChanges,\n  sanitizeEmptyValues = true,\n  formComponent,\n  viewComponent,\n  children,\n  ...props\n}: IntrospectedCreateGuesserProps) => {\n  const save = useOnSubmit({\n    resource,\n    schemaAnalyzer,\n    fields,\n    mutationOptions,\n    transform,\n    redirectTo,\n    children: [],\n  });\n\n  const displayOverrideCode = useDisplayOverrideCode();\n\n  let inputChildren = React.Children.toArray(children);\n  if (inputChildren.length === 0) {\n    inputChildren = writableFields.map((field) => (\n      <InputGuesser key={field.name} source={field.name} />\n    ));\n    displayOverrideCode(getOverrideCode(schema, writableFields));\n  }\n\n  const hasFormTab = inputChildren.some(\n    (child) =>\n      typeof child === 'object' && 'type' in child && child.type === FormTab,\n  );\n  const FormType = hasFormTab ? TabbedForm : SimpleForm;\n\n  return (\n    <Create resource={resource} component={viewComponent} {...props}>\n      <FormType\n        onSubmit={save}\n        mode={mode}\n        defaultValues={defaultValues}\n        validate={validate}\n        toolbar={toolbar}\n        warnWhenUnsavedChanges={warnWhenUnsavedChanges}\n        sanitizeEmptyValues={sanitizeEmptyValues}\n        component={formComponent}>\n        {inputChildren}\n      </FormType>\n    </Create>\n  );\n};\n\nconst CreateGuesser = (props: CreateGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('CreateGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedCreateGuesser}\n      resource={resource}\n      {...props}\n    />\n  );\n};\n\nexport default CreateGuesser;\n", "import { useCallback } from 'react';\nimport { useCreate, useNotify, useRedirect, useUpdate } from 'react-admin';\nimport type { HttpError, RaRecord } from 'react-admin';\nimport { useParams } from 'react-router-dom';\nimport lodashIsPlainObject from 'lodash.isplainobject';\n\nimport getIdentifierValue from './getIdentifierValue.js';\nimport type { SubmissionErrors, UseOnSubmitProps } from './types.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst findFile = (values: any[]): Blob | undefined =>\n  values.find((value) =>\n    Array.isArray(value)\n      ? findFile(value)\n      : lodashIsPlainObject(value) &&\n        Object.values(value).find((val) => val instanceof File),\n  );\n\nconst useOnSubmit = ({\n  resource,\n  schemaAnalyzer,\n  fields,\n  mutationOptions,\n  transform,\n  redirectTo = 'list',\n}: UseOnSubmitProps): ((\n  values: Partial<RaRecord>,\n) => Promise<SubmissionErrors | undefined>) => {\n  const { id: routeId } = useParams<'id'>();\n  const id = decodeURIComponent(routeId ?? '');\n  const [create] = useCreate();\n  const [update] = useUpdate();\n  const notify = useNotify();\n  const redirect = useRedirect();\n\n  return useCallback(\n    async (values: Partial<RaRecord>) => {\n      const isCreate = id === '';\n      const data = transform ? transform(values) : values;\n\n      // Identifiers need to be formatted in case they have not been modified in the form.\n      if (!isCreate) {\n        Object.entries(values).forEach(([key, value]) => {\n          const identifierValue = getIdentifierValue(\n            schemaAnalyzer,\n            resource,\n            fields,\n            key,\n            value,\n          );\n          if (identifierValue !== value) {\n            data[key] = identifierValue;\n          }\n        });\n      }\n      try {\n        const response = await (isCreate ? create : update)(\n          resource,\n          {\n            ...(isCreate ? {} : { id }),\n            data,\n            meta: { hasFileField: !!findFile(Object.values(values)) },\n          },\n          { returnPromise: true },\n        );\n        const success =\n          mutationOptions?.onSuccess ??\n          ((record: RaRecord) => {\n            notify(\n              isCreate ? 'ra.notification.created' : 'ra.notification.updated',\n              {\n                type: 'info',\n                messageArgs: { smart_count: 1 },\n              },\n            );\n            redirect(redirectTo, resource, record.id, record);\n          });\n        success(\n          response,\n          {\n            data: response,\n            ...(isCreate ? {} : { id, previousData: values }),\n          },\n          {},\n        );\n\n        return undefined;\n      } catch (mutateError) {\n        const submissionErrors = schemaAnalyzer.getSubmissionErrors(\n          mutateError as HttpError,\n        );\n        const failure =\n          mutationOptions?.onError ??\n          ((error: string | Error) => {\n            let message = 'ra.notification.http_error';\n            if (!submissionErrors) {\n              message =\n                typeof error === 'string' ? error : error.message || message;\n            }\n            let errorMessage;\n            if (typeof error === 'string') {\n              errorMessage = error;\n            } else if (error?.message) {\n              errorMessage = error.message;\n            }\n            notify(message, {\n              type: 'warning',\n              messageArgs: { _: errorMessage },\n            });\n          });\n        failure(\n          mutateError as Error,\n          {\n            data: values,\n            ...(isCreate ? {} : { id, previousData: values }),\n          },\n          {},\n        );\n        if (submissionErrors) {\n          return submissionErrors;\n        }\n        return {};\n      }\n    },\n    [\n      fields,\n      id,\n      mutationOptions,\n      notify,\n      redirect,\n      redirectTo,\n      resource,\n      schemaAnalyzer,\n      transform,\n      create,\n      update,\n    ],\n  );\n};\n\nexport default useOnSubmit;\n", "import React from 'react';\nimport {\n  Edit,\n  FormTab,\n  SimpleForm,\n  TabbedForm,\n  useResourceContext,\n} from 'react-admin';\nimport { useParams } from 'react-router-dom';\nimport type { Field, Resource } from '@api-platform/api-doc-parser';\n\nimport InputGuesser from '../input/InputGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport useMercureSubscription from '../mercure/useMercureSubscription.js';\nimport useDisplayOverrideCode from '../useDisplayOverrideCode.js';\nimport useOnSubmit from '../useOnSubmit.js';\nimport type {\n  EditGuesserProps,\n  IntrospectedEditGuesserProps,\n} from '../types.js';\n\nconst getOverrideCode = (schema: Resource, fields: Field[]) => {\n  let code = `If you want to override at least one input, create a ${schema.title}Edit component with this content:\\n`;\n  code += `\\n`;\n  code += `import { EditGuesser, InputGuesser } from \"@api-platform/admin\";\\n`;\n  code += `\\n`;\n  code += `export const ${schema.title}Edit = () => (\\n`;\n  code += `    <EditGuesser>\\n`;\n  fields.forEach((field) => {\n    code += `        <InputGuesser source=\"${field.name}\" />\\n`;\n  });\n  code += `    </EditGuesser>\\n`;\n  code += `);\\n`;\n  code += `\\n`;\n  code += `Then, update your main admin component:\\n`;\n  code += `\\n`;\n  code += `import { HydraAdmin, ResourceGuesser } from \"@api-platform/admin\";\\n`;\n  code += `import { ${schema.title}Edit } from './${schema.title}Edit';\\n`;\n  code += `\\n`;\n  code += `const App = () => (\\n`;\n  code += `    <HydraAdmin entrypoint={...}>\\n`;\n  code += `        <ResourceGuesser name=\"${schema.name}\" edit={${schema.title}Edit} />\\n`;\n  code += `        {/* ... */}\\n`;\n  code += `    </HydraAdmin>\\n`;\n  code += `);\\n`;\n\n  return code;\n};\n\nexport const IntrospectedEditGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  resource,\n  mutationMode = 'pessimistic',\n  mutationOptions,\n  redirect: redirectTo = 'list',\n  mode,\n  defaultValues,\n  validate,\n  transform,\n  toolbar,\n  warnWhenUnsavedChanges,\n  formComponent,\n  viewComponent,\n  sanitizeEmptyValues = true,\n  children,\n  ...props\n}: IntrospectedEditGuesserProps) => {\n  const { id: routeId } = useParams<'id'>();\n  const id = decodeURIComponent(routeId ?? '');\n  const save = useOnSubmit({\n    resource,\n    schemaAnalyzer,\n    fields,\n    mutationOptions,\n    transform,\n    redirectTo,\n    children: [],\n  });\n  useMercureSubscription(resource, id);\n\n  const displayOverrideCode = useDisplayOverrideCode();\n\n  let inputChildren = React.Children.toArray(children);\n  if (inputChildren.length === 0) {\n    inputChildren = writableFields.map((field) => (\n      <InputGuesser key={field.name} source={field.name} />\n    ));\n    displayOverrideCode(getOverrideCode(schema, writableFields));\n  }\n\n  const hasFormTab = inputChildren.some(\n    (child) =>\n      typeof child === 'object' && 'type' in child && child.type === FormTab,\n  );\n  const FormType = hasFormTab ? TabbedForm : SimpleForm;\n\n  return (\n    <Edit\n      resource={resource}\n      id={id}\n      mutationMode={mutationMode}\n      redirect={redirectTo}\n      component={viewComponent}\n      {...props}>\n      <FormType\n        onSubmit={mutationMode !== 'pessimistic' ? undefined : save}\n        mode={mode}\n        defaultValues={defaultValues}\n        validate={validate}\n        toolbar={toolbar}\n        warnWhenUnsavedChanges={warnWhenUnsavedChanges}\n        sanitizeEmptyValues={sanitizeEmptyValues}\n        component={formComponent}>\n        {inputChildren}\n      </FormType>\n    </Edit>\n  );\n};\n\nconst EditGuesser = (props: EditGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('EditGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedEditGuesser}\n      resource={resource}\n      {...props}\n    />\n  );\n};\n\nexport default EditGuesser;\n", "import React from 'react';\nimport {\n  Show,\n  SimpleShowLayout,\n  Tab,\n  TabbedShowLayout,\n  useResourceContext,\n} from 'react-admin';\nimport { useParams } from 'react-router-dom';\nimport type { Field, Resource } from '@api-platform/api-doc-parser';\n\nimport FieldGuesser from '../field/FieldGuesser.js';\nimport Introspecter from '../introspection/Introspecter.js';\nimport useMercureSubscription from '../mercure/useMercureSubscription.js';\nimport useDisplayOverrideCode from '../useDisplayOverrideCode.js';\nimport type {\n  IntrospectedShowGuesserProps,\n  ShowGuesserProps,\n} from '../types.js';\n\nconst getOverrideCode = (schema: Resource, fields: Field[]) => {\n  let code = `If you want to override at least one field, create a ${schema.title}Show component with this content:\\n`;\n  code += `\\n`;\n  code += `import { ShowGuesser, FieldGuesser } from \"@api-platform/admin\";\\n`;\n  code += `\\n`;\n  code += `export const ${schema.title}Show = () => (\\n`;\n  code += `    <ShowGuesser>\\n`;\n  fields.forEach((field) => {\n    code += `        <FieldGuesser source=\"${field.name}\" />\\n`;\n  });\n  code += `    </ShowGuesser>\\n`;\n  code += `);\\n`;\n  code += `\\n`;\n  code += `Then, update your main admin component:\\n`;\n  code += `\\n`;\n  code += `import { HydraAdmin, ResourceGuesser } from \"@api-platform/admin\";\\n`;\n  code += `import { ${schema.title}Show } from './${schema.title}Show';\\n`;\n  code += `\\n`;\n  code += `const App = () => (\\n`;\n  code += `    <HydraAdmin entrypoint={...}>\\n`;\n  code += `        <ResourceGuesser name=\"${schema.name}\" show={${schema.title}Show} />\\n`;\n  code += `        {/* ... */}\\n`;\n  code += `    </HydraAdmin>\\n`;\n  code += `);\\n`;\n\n  return code;\n};\n\nexport const IntrospectedShowGuesser = ({\n  fields,\n  readableFields,\n  writableFields,\n  schema,\n  schemaAnalyzer,\n  viewComponent,\n  children,\n  ...props\n}: IntrospectedShowGuesserProps) => {\n  const { id: routeId } = useParams<'id'>();\n  const id = decodeURIComponent(routeId ?? '');\n  useMercureSubscription(props.resource, id);\n\n  const displayOverrideCode = useDisplayOverrideCode();\n\n  let fieldChildren = children;\n  if (!fieldChildren) {\n    fieldChildren = readableFields.map((field) => (\n      <FieldGuesser key={field.name} source={field.name} />\n    ));\n    displayOverrideCode(getOverrideCode(schema, readableFields));\n  }\n\n  const hasTab =\n    Array.isArray(fieldChildren) &&\n    fieldChildren.some(\n      (child) =>\n        typeof child === 'object' && 'type' in child && child.type === Tab,\n    );\n  const ShowLayout = hasTab ? TabbedShowLayout : SimpleShowLayout;\n\n  return (\n    <Show component={viewComponent} {...props}>\n      <ShowLayout>{fieldChildren}</ShowLayout>\n    </Show>\n  );\n};\n\nconst ShowGuesser = (props: ShowGuesserProps) => {\n  const resource = useResourceContext(props);\n  if (!resource) {\n    throw new Error('ShowGuesser must be used with a resource');\n  }\n\n  return (\n    <Introspecter\n      component={IntrospectedShowGuesser}\n      resource={resource}\n      {...props}\n    />\n  );\n};\n\nexport default ShowGuesser;\n", "import React, { Children, Fragment } from 'react';\nimport type { ReactElement } from 'react';\nimport type {\n  AdminChildren,\n  CustomRoutesProps,\n  RenderResourcesFunction,\n  ResourceProps,\n} from 'react-admin';\n\ntype RaComponent = {\n  raName?: string;\n};\n\n// From https://github.com/marmelab/react-admin/blob/next/packages/ra-core/src/core/useConfigureAdminRouterFromChildren.tsx\n\nexport const getSingleChildFunction = (\n  children: AdminChildren,\n): RenderResourcesFunction | null => {\n  const childrenArray = Array.isArray(children) ? children : [children];\n\n  const functionChildren = childrenArray.filter(\n    (child) => typeof child === 'function',\n  );\n\n  if (functionChildren.length > 1) {\n    throw new Error('You can only provide one function child to AdminRouter');\n  }\n\n  if (functionChildren.length === 0) {\n    return null;\n  }\n\n  return functionChildren[0] as RenderResourcesFunction;\n};\n\nexport const isSingleChildFunction = (\n  children: AdminChildren,\n): children is RenderResourcesFunction => !!getSingleChildFunction(children);\n\n/**\n * Inspect the children and return an object with the following keys:\n * - customRoutes: an array of the custom routes\n * - resources: an array of resources elements\n */\nconst getRoutesAndResourcesFromNodes = (children: AdminChildren) => {\n  const customRoutes: ReactElement<CustomRoutesProps>[] = [];\n  const resources: ReactElement<ResourceProps>[] = [];\n\n  if (isSingleChildFunction(children)) {\n    return {\n      customRoutes,\n      resources,\n    };\n  }\n\n  // @ts-expect-error for some reason, typescript doesn't narrow down the type after calling the isSingleChildFunction type guard\n  Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    if (element.type === Fragment) {\n      const customRoutesFromFragment = getRoutesAndResourcesFromNodes(\n        element.props.children,\n      );\n      customRoutes.push(...customRoutesFromFragment.customRoutes);\n      resources.push(...customRoutesFromFragment.resources);\n    }\n\n    if ((element.type as RaComponent).raName === 'CustomRoutes') {\n      const customRoutesElement = element as ReactElement<CustomRoutesProps>;\n\n      customRoutes.push(customRoutesElement);\n    } else if ((element.type as RaComponent).raName === 'Resource') {\n      resources.push(element as ReactElement<ResourceProps>);\n    }\n  });\n\n  return {\n    customRoutes,\n    resources,\n  };\n};\n\nexport default getRoutesAndResourcesFromNodes;\n", "import {\n  /* tree-shaking no-side-effects-when-called */ createContext,\n} from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst IntrospectionContext = createContext({ introspect: () => {} });\n\nexport default IntrospectionContext;\n", "import React from 'react';\nimport type { ComponentType, ErrorInfo, HtmlHTMLAttributes } from 'react';\nimport {\n  Title,\n  useDefaultTitle,\n  useResetErrorBoundaryOnLocationChange,\n  useTranslate,\n} from 'react-admin';\nimport type { ErrorProps } from 'react-admin';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Typography,\n  styled,\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore.js'; // eslint-disable-line import/extensions\nimport HistoryIcon from '@mui/icons-material/History.js'; // eslint-disable-line import/extensions\nimport RefreshIcon from '@mui/icons-material/Refresh.js'; // eslint-disable-line import/extensions\nimport type { FallbackProps } from 'react-error-boundary';\nimport LogoError from './LogoError.js';\n\nconst PREFIX = 'RaError';\n\nexport const ErrorClasses = {\n  container: `${PREFIX}-container`,\n  title: `${PREFIX}-title`,\n  logo: `${PREFIX}-logo`,\n  panel: `${PREFIX}-panel`,\n  panelSummary: `${PREFIX}-panelSummary`,\n  panelDetails: `${PREFIX}-panelDetails`,\n  toolbar: `${PREFIX}-toolbar`,\n  advice: `${PREFIX}-advice`,\n};\n\n// eslint-disable-next-line tree-shaking/no-side-effects-in-initialization\nconst Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: (_, styles) => styles.root,\n})(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  [theme.breakpoints.down('md')]: {\n    padding: '1em',\n  },\n  fontFamily: 'Roboto, sans-serif',\n  opacity: 0.5,\n\n  [`& .${ErrorClasses.title}`]: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  [`& .${ErrorClasses.logo}`]: {\n    margin: '0.5em',\n  },\n\n  [`& .${ErrorClasses.panel}`]: {\n    marginTop: '1em',\n    maxWidth: '60em',\n  },\n\n  [`& .${ErrorClasses.panelSummary}`]: {\n    userSelect: 'all',\n  },\n\n  [`& .${ErrorClasses.panelDetails}`]: {\n    whiteSpace: 'pre-wrap',\n  },\n\n  [`& .${ErrorClasses.toolbar}`]: {\n    marginTop: '2em',\n  },\n\n  [`& .${ErrorClasses.advice}`]: {\n    marginTop: '2em',\n  },\n}));\n\nconst goBack = () => {\n  window.history.go(-1);\n};\n\ninterface InternalErrorProps\n  extends Omit<HtmlHTMLAttributes<HTMLDivElement>, 'title'>,\n    FallbackProps {\n  className?: string;\n  errorInfo?: ErrorInfo;\n}\n\nconst Error = ({\n  error,\n  errorComponent: ErrorComponent,\n  errorInfo,\n  resetErrorBoundary,\n  className,\n  ...rest\n}: InternalErrorProps & {\n  errorComponent?: ComponentType<ErrorProps>;\n}) => {\n  const translate = useTranslate();\n  const title = useDefaultTitle();\n  useResetErrorBoundaryOnLocationChange(resetErrorBoundary);\n\n  if (ErrorComponent) {\n    return <ErrorComponent error={error} errorInfo={errorInfo} title={title} />;\n  }\n\n  return (\n    <>\n      {title && <Title title={title} />}\n      <Root className={className} {...rest}>\n        <h1 className={ErrorClasses.title} role=\"alert\">\n          <Box className={ErrorClasses.logo}>\n            <LogoError />\n          </Box>\n          {translate('ra.page.error')}\n        </h1>\n        <div>{translate('ra.message.error')}</div>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <Accordion className={ErrorClasses.panel}>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                className={ErrorClasses.panelSummary}>\n                {translate(error.message, {\n                  _: error.message,\n                })}\n              </AccordionSummary>\n              <AccordionDetails className={ErrorClasses.panelDetails}>\n                {/*\n                    error message is repeated here to allow users to copy it. AccordionSummary doesn't support text selection.\n                */}\n                <p>\n                  {translate(error.message, {\n                    _: error.message,\n                  })}\n                </p>\n                <p>{errorInfo?.componentStack}</p>\n              </AccordionDetails>\n            </Accordion>\n\n            <div className={ErrorClasses.advice}>\n              <Typography align=\"center\">\n                Need help with this error? Try the following:\n              </Typography>\n              <Typography component=\"div\">\n                <ul>\n                  <li>\n                    Check the{' '}\n                    <a href=\"https://api-platform.com/docs/admin/\">\n                      API Platform Admin\n                    </a>{' '}\n                    and the{' '}\n                    <a href=\"https://marmelab.com/react-admin/Readme.html\">\n                      react-admin documentation\n                    </a>\n                  </li>\n                  <li>\n                    Search on StackOverflow (\n                    <a href=\"https://stackoverflow.com/questions/tagged/react-admin\">\n                      react-admin\n                    </a>{' '}\n                    /{' '}\n                    <a href=\"https://stackoverflow.com/questions/tagged/api-platform.com\">\n                      API Platform\n                    </a>\n                    ) for community answers\n                  </li>\n                  <li>\n                    Get help from the maintainers of API Platform via{' '}\n                    <a href=\"https://les-tilleuls.coop/\">Les-Tilleuls.coop</a>{' '}\n                    or from the react-admin core team via{' '}\n                    <a href=\"https://marmelab.com/ra-enterprise/#fromsww\">\n                      react-admin Enterprise Edition\n                    </a>\n                  </li>\n                </ul>\n              </Typography>\n            </div>\n          </>\n        )}\n        <div className={ErrorClasses.toolbar}>\n          {resetErrorBoundary ? (\n            <Button\n              variant=\"contained\"\n              startIcon={<RefreshIcon />}\n              onClick={() => {\n                resetErrorBoundary();\n              }}>\n              {translate('ra.action.refresh')}\n            </Button>\n          ) : (\n            <Button\n              variant=\"contained\"\n              startIcon={<HistoryIcon />}\n              onClick={goBack}>\n              {translate('ra.action.back')}\n            </Button>\n          )}\n        </div>\n      </Root>\n    </>\n  );\n};\n\nexport default Error;\n", "import React from 'react';\n\nconst LogoError = () => (\n  <svg width=\"78.394516\" height=\"121.39262\" viewBox=\"0 0 78.394516 121.39262\">\n    <style>\n      {'.a{fill:#FFF;}' +\n        '.b{fill:#1D1E1C;}' +\n        '.c{fill:#1D1E1C;opacity:0.2;}' +\n        '.d{fill:#38A9B4;}' +\n        '.e{fill:#070707;}' +\n        '.f{fill:#197175;}' +\n        '.g{fill:#0E5656;}' +\n        '.h{fill:#332E27;}'}\n    </style>\n    <path\n      d=\"M 48.5,53.5 C 48.3,60.7 43.4,66.3 37.3,66.2 31.2,66.1 26.4,60.2 26.6,53 c 0.2,-7.2 4.1,-11 10.2,-10.9 6.1,0.1 11.9,4.2 11.7,11.4 z\"\n      className=\"a\"\n    />\n    <path d=\"m 36.4,41.4 c -3.2,0 -6.2,1.4 -8.5,4 -2.3,2.6 -2.4,4.1 -2.5,7.8 -0.1,3.7 1,7.1 3.2,9.8 2.2,2.7 5.1,4.1 8.3,4.2 1.4,0 2.7,-0.2 3.9,-0.7 4.6,-1.8 8,-6.8 8.1,-12.8 0.2,-7.8 -6.1,-12.2 -12.5,-12.3 z m 0.5,24.1 c -5.7,-0.1 -10.2,-5.6 -10,-12.4 0.1,-3.3 0,-4.4 2.1,-6.7 1.2,-1.3 2.6,-2.3 4,-2.9 1.1,-0.4 2.2,-0.6 3.3,-0.6 2.7,0 5.2,1.4 7,3.7 1.8,2.4 4,3.5 3.9,6.8 0,7 -4.6,12.2 -10.3,12.1 z\" />\n    <path\n      d=\"m 36.7,57.1 c 1.2,3.1 0.5,5.9 -1.6,6.3 -2.1,0.4 -4.7,-1.8 -5.9,-4.9 -1.2,-3.1 -0.5,-5.9 1.6,-6.3 2.1,-0.4 4.7,1.8 5.9,4.9 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 35.3,59.2 c 0.4,0.8 -0.1,1.7 -1,1.9 -0.9,0.2 -1.9,-0.4 -2.3,-1.2 -0.4,-0.8 0.1,-1.7 1,-1.9 0.9,-0.2 2,0.3 2.3,1.2 z\"\n      className=\"a\"\n    />\n    <path\n      d=\"m 58.3,54.9 c -0.2,6 -4.6,10.9 -9.9,10.8 -5.3,-0.1 -9.4,-5 -9.3,-11.1 0.2,-6 3.8,-9.7 9.1,-9.6 5.3,0.1 10.3,3.8 10.1,9.9 z\"\n      className=\"a\"\n    />\n    <path d=\"m 47.9,44.3 c -2.8,0 -5.4,1.2 -7.5,3.4 -2,2.2 -2.4,3.9 -2.5,7.1 -0.1,3.1 0.9,6.1 2.8,8.3 1.9,2.3 4.5,3.5 7.3,3.6 1.2,0 2.4,-0.2 3.5,-0.6 4.1,-1.6 7.1,-5.9 7.2,-11 0.2,-6.6 -5,-10.7 -10.8,-10.8 z M 57.2,55 c -0.1,4.4 -2.7,8.1 -6.2,9.5 -0.9,0.4 -1.9,0.5 -2.9,0.5 -2.3,0 -4.5,-1.1 -6.1,-3 -1.6,-1.9 -2.5,-4.5 -2.4,-7.2 0.1,-4.4 1.9,-6.9 5.4,-8.2 0.9,-0.4 1.9,-0.5 2.9,-0.5 2.3,0 5,1 6.6,2.9 1.6,1.8 2.7,3.3 2.7,6 z\" />\n    <path\n      d=\"m 48.3,58.2 c 1.2,2.5 0.6,4.9 -1.2,5.4 -1.9,0.4 -4.3,-1.3 -5.5,-3.9 -1.2,-2.5 -0.6,-4.9 1.2,-5.4 1.9,-0.4 4.4,1.4 5.5,3.9 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 46.8,59.7 c 0.3,0.7 -0.1,1.5 -0.9,1.6 -0.8,0.2 -1.7,-0.3 -2,-1 -0.3,-0.7 0.1,-1.5 0.9,-1.6 0.8,-0.1 1.7,0.3 2,1 z\"\n      className=\"a\"\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"6.5862317\"\n      cy=\"115.13065\"\n      rx=\"6.2997999\"\n      ry=\"1.699946\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <polygon\n      points=\"86.7,271.1 76.4,267.6 86.8,298.6 85.3,298.7 74.6,265 87.7,270.1 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polygon\n      points=\"87.6,275.4 68.8,267.8 81.9,309.3 81.3,311.7 66.7,265.5 88.9,274.3 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polygon\n      points=\"78.3,281.9 100.2,315.7 98.2,315.8 75.2,280.2 94.5,281.8 95.1,283.1 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polyline\n      points=\"102.2 270.5 103 292.5 101.3 292.3 100.1 269.1 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <path\n      d=\"m 34.5,91 c 0,0 -1.9,-3.3 -3.9,-1.1 -2,2.2 -0.8,5.1 -0.8,5.1 0,0 0.7,0.9 3,1 2.3,0.1 2.8,-0.1 3.2,-0.8 0.4,-0.7 0.3,-3.9 0.3,-3.9 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 14.6,110.4 c 0.6,0.9 -4,-4.6 -6.7,-2.1 -3.3,3 -1.3,7 -1.3,7 0,0 1.1,1 4.8,0.9 4.8,-0.1 4.4,-1.3 4.7,-2.6 0.5,-2.1 -1.3,-6.4 -1.3,-6.4 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 18.6,96.9 c 0,0 -0.9,-3.1 -3.1,-1.1 -1.3,1.2 -1.3,2.6 -1.2,3.6 0.1,0.8 0.7,1.4 1.5,1.5 0.5,0.1 1.1,0.2 2,0.2 3.2,-0.2 2.7,-1.2 2.7,-1.7 0,-2.7 -1,-4.3 -1,-4.3 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 31.4,114.4 c 0,0 -2.9,-4.8 -6.2,-1.8 -3.3,3 -0.8,6.8 -0.8,6.8 0,0 1.1,1.2 4.9,1.1 4.9,-0.1 5.3,-2.6 4.9,-3.8 -1.3,-4.3 -2.1,-2.3 -2,-2.4 z\"\n      className=\"b\"\n    />\n    <polygon\n      points=\"117.2,280.8 134.7,270.2 130.2,297.8 132,297.8 136.9,267.1 116.8,278.3 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polygon\n      points=\"114.6,283.3 136.9,288.2 129.9,307.9 131.4,309.5 139.7,286.9 116.2,281.2 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polygon\n      points=\"110.8,292.4 107.9,316.1 109.7,316.1 112.8,290.9 102.8,283.4 102.3,285.4 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <polyline\n      points=\"113.7 272 113.8 293.1 115.4 293.7 115.8 270.5 \"\n      className=\"b\"\n      transform=\"translate(-66.7,-201.1)\"\n    />\n    <path\n      d=\"m 48.8,92.4 c 0,0 1.5,-3.4 3.6,-1.3 2.1,2.1 1,5 1,5 0,0 -0.7,0.9 -2.9,1.1 -2.3,0.1 -2.8,0.1 -3.2,-0.6 -0.4,-0.7 -0.1,-5.9 -0.1,-5.9 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 64.9,108.1 c 0,0 2.7,-5.5 6.1,-2.6 1.9,1.6 2.1,3.7 2,5.1 -0.1,1.3 -1.1,2.4 -2.4,2.7 -0.7,0.2 -1.6,0.3 -2.8,0.3 -4.8,0.1 -4.7,-1.7 -5.1,-2.9 -0.6,-2.1 0.6,-4.2 0.6,-4.2 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 65.2,96.3 c 0,0 1.6,-3.9 3.8,-2 1.3,1.1 1.4,2.4 1.3,3.4 -0.1,0.9 -0.7,1.6 -1.6,1.8 -0.5,0.1 -1.1,0.2 -1.9,0.2 -3.2,0.1 -3.3,-0.7 -3.6,-1.5 -0.4,-1.4 0.9,-4.9 0.9,-4.9 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"m 43.2,113.4 c 0,0 2.5,-4.6 5.9,-1.7 3.5,2.9 1.6,7 1.6,7 0,0 -1.1,1.2 -4.9,1.3 -4.9,0.1 -5.2,-2.4 -5.1,-3.7 0.7,-5.4 1.6,-4.1 1.6,-4.1 z\"\n      className=\"b\"\n    />\n    <path\n      d=\"M 49.4,49.4 C 61.5,58.2 61.1,65 53.2,75.9 47,84.5 37,87.2 27.2,80 17.4,72.8 18.7,63.8 24.9,55.3 c 6.2,-8.6 14.6,-13 24.5,-5.9 z\"\n      className=\"d\"\n    />\n    <path\n      d=\"M 53.9,76.7 C 50.6,81.2 46.4,84.1 41.7,85 36.7,86 31.4,84.6 26.5,81 17.3,74.3 16.4,65.3 23.9,55 31.5,44.5 40.7,42.4 49.8,49 c 4.9,3.6 9.3,8 9.9,13.2 0.4,4.7 -2.6,10 -5.8,14.5 z M 25.5,56.1 c -6.9,9.5 -6.2,17.4 2,23.4 8.8,6.4 18.3,4.8 24.7,-4 8.2,-11.3 7.4,-17.2 -3.5,-25.1 -10.3,-7.5 -18.3,-1 -23.2,5.7 z\"\n      className=\"b\"\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"25.006336\"\n      cy=\"119.6681\"\n      rx=\"6.9997773\"\n      ry=\"2.1999302\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"14.670864\"\n      cy=\"99.676384\"\n      rx=\"4.0998697\"\n      ry=\"1.7999427\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"29.960159\"\n      cy=\"94.956741\"\n      rx=\"4.5998535\"\n      ry=\"1.7999427\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"70.023994\"\n      cy=\"113.59354\"\n      rx=\"6.2997999\"\n      ry=\"1.699946\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"48.214378\"\n      cy=\"119.39447\"\n      rx=\"6.9997773\"\n      ry=\"2.1999302\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"68.082924\"\n      cy=\"99.455231\"\n      rx=\"4.0998697\"\n      ry=\"1.7999427\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <ellipse\n      transform=\"rotate(-1.0509514)\"\n      cx=\"51.929268\"\n      cy=\"96.859306\"\n      rx=\"4.5998535\"\n      ry=\"1.7999427\"\n      className=\"c\"\n      style={{ strokeWidth: 0.999968 }}\n    />\n    <rect\n      x=\"43.179913\"\n      y=\"-73.94606\"\n      transform=\"rotate(123.93161)\"\n      width=\"0.89999515\"\n      height=\"5.4999704\"\n      className=\"e\"\n      style={{ strokeWidth: 0.999995 }}\n    />\n    <rect\n      x=\"82.879547\"\n      y=\"-7.8476582\"\n      transform=\"rotate(68.942332)\"\n      width=\"0.89998138\"\n      height=\"5.4998865\"\n      className=\"e\"\n      style={{ strokeWidth: 0.999979 }}\n    />\n    <path d=\"m 42.8,19.3 c 0,-1.7 0.3,-2.9 0.9,-3.8 0.6,-0.8 1.7,-1.8 3.2,-2.9 0.8,-0.5 1.4,-1.1 1.9,-1.9 0.5,-0.7 0.7,-1.6 0.7,-2.6 0,-1 -0.3,-1.8 -0.8,-2.4 C 48.2,5.1 47.4,4.8 46.4,4.8 45.6,4.8 44.9,5 44.4,5.5 43.9,6 43.6,6.7 43.5,7.7 h -6 V 7.6 c 0,-2.5 0.8,-4.4 2.4,-5.7 1.6,-1.3 3.8,-1.9 6.5,-1.9 2.9,0 5.1,0.7 6.8,2.2 1.7,1.5 2.5,3.4 2.5,5.9 0,1.5 -0.5,2.9 -1.4,4.2 -0.9,1.3 -2,2.3 -3.4,3 -0.8,0.5 -1.3,1.1 -1.6,1.6 -0.3,0.6 -0.4,1.4 -0.4,2.4 z m 6.1,7.6 H 42.8 V 22 h 6.1 z\" />\n    <path d=\"m 64.6,29.7 c 0.4,-1.1 1,-1.9 1.6,-2.4 0.6,-0.4 1.6,-0.8 3,-1.2 0.7,-0.1 1.3,-0.4 1.8,-0.8 0.5,-0.4 0.9,-0.9 1.2,-1.6 0.3,-0.7 0.3,-1.3 0.1,-1.9 -0.2,-0.6 -0.7,-1 -1.4,-1.2 -0.6,-0.2 -1.1,-0.2 -1.6,0 -0.5,0.2 -0.9,0.6 -1.2,1.3 L 64,20.3 v -0.1 c 0.6,-1.7 1.7,-2.8 3.1,-3.3 1.4,-0.4 3.1,-0.3 4.9,0.4 2,0.7 3.3,1.8 4.1,3.3 0.8,1.4 0.8,3 0.2,4.7 -0.4,1 -1.1,1.9 -2,2.5 -0.9,0.6 -2,1 -3.1,1.2 -0.7,0.1 -1.2,0.4 -1.5,0.7 -0.3,0.3 -0.6,0.8 -0.9,1.5 z m 2.2,6.8 -4.2,-1.6 1.3,-3.4 4.2,1.6 z\" />\n    <path d=\"m 27,33.1 c -0.5,-0.7 -0.8,-1.4 -0.8,-1.9 0,-0.5 0.1,-1.3 0.5,-2.3 0.2,-0.5 0.3,-0.9 0.2,-1.4 0,-0.5 -0.2,-0.9 -0.5,-1.3 -0.3,-0.4 -0.7,-0.7 -1.1,-0.8 -0.4,-0.1 -0.8,0 -1.3,0.3 -0.3,0.3 -0.6,0.6 -0.6,1 -0.1,0.4 0,0.8 0.3,1.2 l -2.5,1.9 v 0 c -0.8,-1.1 -1.1,-2.1 -0.8,-3.2 0.3,-1.1 1,-2 2.2,-2.8 1.2,-0.9 2.4,-1.3 3.6,-1.2 1.2,0.1 2.1,0.7 2.9,1.7 0.5,0.6 0.7,1.4 0.7,2.2 0,0.8 -0.2,1.6 -0.5,2.4 -0.2,0.5 -0.2,0.9 -0.2,1.2 0.1,0.3 0.3,0.7 0.6,1.1 z m 5,1.3 -2.6,1.9 -1.5,-2.1 2.6,-1.9 z\" />\n  </svg>\n);\n\nexport default LogoError;\n", "import type { FunctionComponent } from 'react';\nimport React from 'react';\nimport { Layout } from 'react-admin';\nimport type { LayoutProps } from 'react-admin';\n\nimport AppBar from './AppBar.js';\nimport Error from './Error.js';\n\nconst CustomLayout = (props: LayoutProps) => (\n  <Layout appBar={AppBar} error={Error as FunctionComponent} {...props} />\n);\n\nexport default CustomLayout;\n", "import React from 'react';\nimport { AppBar as RaAppBAr, TitlePortal, useAuthProvider } from 'react-admin';\nimport type { AppBarProps } from 'react-admin';\nimport { Box, useMediaQuery } from '@mui/material';\nimport type { Theme } from '@mui/material';\n\nimport Logo from './Logo.js';\n\nconst AppBar = ({ classes, userMenu, ...props }: AppBarProps) => {\n  const authProvider = useAuthProvider();\n  const isLargeEnough = useMediaQuery<Theme>((theme) =>\n    theme.breakpoints.up('sm'),\n  );\n  return (\n    <RaAppBAr userMenu={userMenu ?? !!authProvider} {...props}>\n      <TitlePortal />\n      {isLargeEnough && <Logo />}\n      {isLargeEnough && <Box component=\"span\" sx={{ flex: 1 }} />}\n    </RaAppBAr>\n  );\n};\n\nexport default AppBar;\n", "import React from 'react';\n\nconst Logo = () => (\n  <svg height={50} viewBox=\"0 0 1200 322.6\" xmlSpace=\"preserve\">\n    <style>\n      {'.st0{fill: #85ccd3}' +\n        '.st1{fill: #1b939e}' +\n        '.st2,.st4{stroke: #000; stroke-width: 1.7498; stroke-miterlimit: 10}' +\n        '.st4{stroke-width: 1.2967}' +\n        '.st5{fill: #fff}' +\n        '.st6,.st8{fill: none; stroke: #000; stroke-width: 3.3286; stroke-miterlimit: 10}' +\n        '.st8{fill: #fff; stroke-width: 2.2191}'}\n    </style>\n    <path\n      className=\"st0\"\n      d=\"M420.5 121.1l15.8 12.9c4.6 3.9 7.1 7 7.5 12.9v45.8c0 5.8-4.6 10.4-10.4 10.4-5.9 0-10.6-4.6-10.6-10.4v-10.3l-21-19.5v29.8c0 5.8-4.7 10.4-10.5 10.4s-10.6-4.6-10.6-10.4V147c.5-5.9 3.3-9.1 7.7-12.9l15.5-12.9c6.1-4.9 10.6-5.2 16.6-.1zm2.3 40.4v-22h-21v22h21zM475.4 181.8V192c0 5.9-4.4 10.8-10.3 10.8-5.8 0-10.6-4.8-10.6-10.8v-56.2c0-9.8 8.1-17.9 17.9-17.9h16.1c4.8 0 9 1.7 12.5 5l11.6 11.6c7.6 7.3 6.3 25.2-1.1 32.3l-10.5 10c-3.5 3.5-7.6 5.1-12.5 5.1h-13.1zm20.3-21.1V139l-20.1-.2v21.9h20.1zM617.2 181.8V192c0 5.9-4.4 10.8-10.3 10.8-5.8 0-10.6-4.8-10.6-10.8v-56.2c0-9.8 8.1-17.9 17.9-17.9h16.1c4.8 0 9 1.7 12.5 5l11.6 11.6c7.6 7.3 6.3 25.2-1.1 32.3l-10.5 10c-3.5 3.5-7.6 5.1-12.5 5.1h-13.1zm20.3-21.1V139l-20.1-.2v21.9h20.1zM666 184.6v-56.5c0-5.7 5-10.4 10.6-10.4 6 0 10.8 4.7 10.8 10.4v53.7c10.6 0 7.6-.2 18.1-.2 13.9 0 13.9 21.3 0 21.3h-21.2c-9.9 0-18.3-8.2-18.3-18.3zM761.9 121.1l15.8 12.9c4.6 3.9 7.1 7 7.5 12.9v45.8c0 5.8-4.6 10.4-10.4 10.4-5.9 0-10.6-4.6-10.6-10.4v-10.3l-21-19.5v29.8c0 5.8-4.7 10.4-10.5 10.4s-10.6-4.6-10.6-10.4V147c.5-5.9 3.3-9.1 7.7-12.9l15.5-12.9c6.1-4.9 10.6-5.2 16.6-.1zm2.3 40.4v-22h-21v22h21zM835.9 117.7c13.7 0 13.7 21 0 21h-9.1v53.6c0 14.3-21.2 14.3-21.2 0v-53.6h-9.1c-13.8 0-13.8-21 0-21h39.4zM873.6 138.9v14h19c5.7 0 10.5 4.7 10.5 10.5 0 5.7-4.8 10.6-10.8 10.6h-18.7v18.5c0 13.8-21.2 13.8-21.2 0v-57c0-9.9 8-17.9 17.8-17.9h27c5.9 0 10.6 4.7 10.6 10.4 0 5.8-5 10.8-10.6 10.8h-23.6zM932 118.1h24.2c9.6 0 17.9 7.9 17.9 17.9v48.6c0 8.7-8.3 17.9-17.3 17.9h-25.3c-9 0-17.9-9.2-17.9-17.9V136c0-10.5 8.7-17.9 18.4-17.9zm20.9 21.2h-18.1v42.3h18.1v-42.3zM1034 168.1c7.5 4.6 10.2 10.4 10.2 18v6.2c0 5.8-4.7 10.5-10.3 10.5-5.9 0-10.4-5-10.4-10.5v-5.9l-20.7-25.2v31.1c0 5.8-4.6 10.5-10.4 10.5-5.9 0-10.6-4.7-10.6-10.5v-63.7c0-5.9 4.7-10.6 10.6-10.6h23.6c5 0 9.1 1.8 12.7 5.2l10.3 9.9c3.6 3.6 5.7 7.9 5.7 13.1v4.7c-.1 8.2-4 13.8-10.7 17.2zm-31.3-29.1v20.3h20.7V139h-20.7zM1088.6 121.2l9.2 9.8 9.2-9.8c5.1-5.3 12.3-5.3 17.1 0l12.3 12.8c3.7 4.2 6.9 6.9 7.5 12.8v46.1c0 13.7-21.3 13.7-21.3 0v-53.6h-14.2v53.6c0 14-21.2 14-21.2 0v-53.6h-13.9v53.6c0 13.7-21.3 13.7-21.3 0v-46.1c.2-5.9 3.6-8.6 7.5-12.8l12.3-12.8c4.8-5.3 12.1-5.3 16.8 0zM525.2 153.8c0-13.8 21.2-13.8 21.2-.1v39.1c0 13.8-21.2 13.7-21.2 0v-39zM546 139.5v-21.7l-20.1-.2v21.9z\"\n    />\n    <g>\n      <circle className=\"st0\" cx={182.2} cy={161.3} r={136.7} />\n      <ellipse className=\"st1\" cx={218.6} cy={198} rx={16.7} ry={4.5} />\n      <ellipse className=\"st1\" cx={246} cy={221.4} rx={16.7} ry={4.5} />\n      <ellipse className=\"st1\" cx={277.7} cy={209.4} rx={16.7} ry={4.5} />\n      <ellipse className=\"st1\" cx={254.1} cy={196.9} rx={16.7} ry={4.5} />\n      <path\n        className=\"st2\"\n        d=\"M241 211.4c2.8 0 6.3 3.4 6.3 7.5s-3.1 4-7.8 4c-4.7 0-10 0-10-4 4.3-2.8 7.1-7.5 11.5-7.5z\"\n      />\n      <path\n        d=\"M248.3 188.1c2.5 0 5.6 3.2 5.6 6.9s-2.8 3.7-7 3.7-8.9 0-8.9-3.7c3.9-2.6 6.4-6.9 10.3-6.9z\"\n        stroke=\"#000\"\n        strokeWidth={1.592}\n        strokeMiterlimit={10}\n      />\n      <path\n        className=\"st2\"\n        d=\"M273 200c2.8 0 6.3 3.4 6.3 7.5s-3.1 4-7.8 4c-4.7 0-10 0-10-4 4.3-2.8 7.2-7.5 11.5-7.5z\"\n      />\n      <path\n        className=\"st4\"\n        d=\"M211.6 190.4c2.1 0 4.6 2.5 4.6 5.6s-2.3 3-5.8 3-7.4 1.2-7.4-1.8c3.3-2.1 5.4-6.8 8.6-6.8z\"\n      />\n      <ellipse className=\"st1\" cx={145.5} cy={197} rx={16.7} ry={4.5} />\n      <path\n        className=\"st4\"\n        d=\"M152.5 189.5c-2.1 0-4.6 2.5-4.6 5.6s2.3 3 5.8 3 7.4 1.2 7.4-1.8c-3.3-2.1-5.4-6.8-8.6-6.8z\"\n      />\n      <path className=\"st6\" d=\"M202.4 149.3l35.9-20 .6 65.2 6.7 1.3\" />\n      <path className=\"st6\" d=\"M202.4 149.3l51.2-7.5 9 67.9\" />\n      <path className=\"st6\" d=\"M200.8 158.8l14.9 3.6-10.9 32.5 6.3-.2\" />\n      <path className=\"st6\" d=\"M202.4 149.3l29.4 7.7-1.4 62.4 6.2.8\" />\n      <ellipse className=\"st1\" cx={118.3} cy={221.4} rx={16.7} ry={4.5} />\n      <ellipse className=\"st1\" cx={86.6} cy={209.4} rx={16.7} ry={4.5} />\n      <ellipse className=\"st1\" cx={110.1} cy={196} rx={16.7} ry={4.5} />\n      <path\n        className=\"st2\"\n        d=\"M123.4 211.4c-2.8 0-6.3 3.4-6.3 7.5s3.1 4 7.8 4 10 0 10-4c-4.3-2.8-7.2-7.5-11.5-7.5zM114.4 186.8c-2.8 0-6.3 3.4-6.3 7.5s3.1 4 7.8 4c4.7 0 10 0 10-4-4.4-2.8-7.2-7.5-11.5-7.5zM91.3 200c-2.8 0-6.3 3.4-6.3 7.5s3.1 4 7.8 4c4.7 0 10 0 10-4-4.3-2.8-7.1-7.5-11.5-7.5z\"\n      />\n      <path className=\"st6\" d=\"M161.9 149.3l-35.8-20-.7 65.2-6.6 1.3\" />\n      <path className=\"st6\" d=\"M161.9 149.3l-51.2-7.5-9 67.9\" />\n      <path className=\"st6\" d=\"M163.5 158.8l-14.9 3.6 10.9 32.5-5.5 2.4\" />\n      <path className=\"st6\" d=\"M161.9 149.3l-29.3 7.7 1.3 62.4-6.2.8\" />\n      <path\n        d=\"M202.8 124.5s14.2.8 14.2 14.6c0 13.8-10.3 25.3-29.8 27.8-18.7 2.4-36.5-6.8-36.5-28.9s20.5-18.4 20.5-18.4\"\n        fill=\"#3caab5\"\n        stroke=\"#000\"\n        strokeWidth={2.458}\n        strokeMiterlimit={10}\n      />\n      <ellipse className=\"st8\" cx={201.7} cy={122} rx={16.6} ry={17.2} />\n      <circle cx={203.3} cy={122.9} r={7.6} />\n      <circle className=\"st5\" cx={201.5} cy={121.5} r={2} />\n      <ellipse className=\"st8\" cx={170.5} cy={118.4} rx={21} ry={21.7} />\n      <circle cx={172.2} cy={119.6} r={9.6} />\n      <ellipse\n        transform=\"matrix(.9984 -.05734 .05734 .9984 -6.46 10.35)\"\n        className=\"st5\"\n        cx={177.1}\n        cy={117.8}\n        rx={2.5}\n        ry={2.5}\n      />\n    </g>\n  </svg>\n);\n\nexport default Logo;\n", "import React from 'react';\nimport { Login, LoginClasses } from 'react-admin';\nimport type { LoginProps } from 'react-admin';\n\nconst LoginPage = (props: LoginProps) => (\n  <Login\n    sx={{\n      backgroundImage:\n        'radial-gradient(circle at 50% 14em, #90dfe7 0%, #288690 60%, #288690 100%)',\n      [`& .${LoginClasses.icon}`]: {\n        backgroundColor: 'secondary.main',\n      },\n    }}\n    {...props}\n  />\n);\n\nexport default LoginPage;\n", "import { defaultTheme } from 'react-admin';\nimport type { RaThemeOptions } from 'react-admin';\n\nexport const darkTheme: RaThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    ...defaultTheme.palette,\n    background: {\n      default: '#424242',\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#52c9d4',\n      light: '#9bf5fe',\n      dark: '#21a1ae',\n    },\n    secondary: {\n      ...defaultTheme.palette?.secondary,\n      main: '#51b2bc',\n    },\n    mode: 'dark',\n  },\n  components: {\n    ...defaultTheme.components,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore react-admin doesn't add its own components\n    RaMenuItemLink: {\n      styleOverrides: {\n        root: {\n          borderLeft: '3px solid #000',\n          '&.RaMenuItemLink-active': {\n            borderLeft: '3px solid #52c9d4',\n          },\n        },\n      },\n    },\n    MuiFilledInput: {\n      styleOverrides: undefined,\n    },\n  },\n};\n\nexport const lightTheme: RaThemeOptions = {\n  ...defaultTheme,\n  palette: {\n    ...defaultTheme.palette,\n    primary: {\n      contrastText: '#ffffff',\n      main: '#38a9b4',\n      light: '#74dde7',\n      dark: '#006a75',\n    },\n    secondary: {\n      ...defaultTheme.palette?.secondary,\n      main: '#288690',\n    },\n    mode: 'light',\n  },\n  components: {\n    ...defaultTheme.components,\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore react-admin doesn't add its own components\n    RaMenuItemLink: {\n      styleOverrides: {\n        root: {\n          borderLeft: '3px solid #fff',\n          '&.RaMenuItemLink-active': {\n            borderLeft: '3px solid #38a9b4',\n          },\n        },\n      },\n    },\n  },\n};\n", "import { useContext } from 'react';\nimport IntrospectionContext from './IntrospectionContext.js';\n\nconst useIntrospection = () => useContext(IntrospectionContext).introspect;\n\nexport default useIntrospection;\n", "import {\n  CREATE,\n  DELETE,\n  GET_LIST,\n  GET_MANY_REFERENCE,\n  GET_ONE,\n  UPDATE,\n} from 'react-admin';\nimport lodashIsPlainObject from 'lodash.isplainobject';\nimport { parseHydraDocumentation } from '@api-platform/api-doc-parser';\nimport type { JsonLdObj } from 'jsonld/jsonld-spec';\nimport type { Api, Field, Resource } from '@api-platform/api-doc-parser';\nimport type {\n  CreateParams,\n  DataProviderResult,\n  DeleteParams,\n  GetListParams,\n  GetListResult,\n  GetManyReferenceParams,\n  GetManyReferenceResult,\n  GetOneResult,\n  UpdateParams,\n} from 'react-admin';\n\nimport fetchHydra from './fetchHydra.js';\nimport { resolveSchemaParameters } from '../introspection/schemaAnalyzer.js';\nimport { adminDataProvider } from '../dataProvider/index.js';\nimport { mercureManager } from '../mercure/index.js';\nimport { removeTrailingSlash } from '../removeTrailingSlash.js';\nimport type {\n  ApiPlatformAdminDataProvider,\n  ApiPlatformAdminDataProviderParams,\n  ApiPlatformAdminDataProviderTypeParams,\n  ApiPlatformAdminRecord,\n  DataProviderType,\n  HydraCollection,\n  HydraDataProviderFactoryParams,\n  HydraHttpClientResponse,\n  HydraView,\n  MercureOptions,\n  SearchParams,\n} from '../types.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isPlainObject = (value: any): value is Record<string, any> =>\n  lodashIsPlainObject(value);\n\nlet apiSchema: Api & { resources: Resource[] };\n\nclass ReactAdminDocument implements ApiPlatformAdminRecord {\n  originId?: string;\n\n  id: string;\n\n  constructor(obj: JsonLdObj) {\n    Object.assign(this, obj);\n    if (obj.id) {\n      this.originId = obj.id.toString();\n    }\n    if (!obj['@id']) {\n      throw new Error('Document needs to have an @id member.');\n    }\n    if (Array.isArray(obj['@id'])) {\n      throw new Error('Document needs to have a string @id member.');\n    }\n    this.id = obj['@id'];\n  }\n\n  toString() {\n    return `[object ${this.id}]`;\n  }\n}\n\n/**\n * Local cache containing embedded documents.\n * It will be used to prevent useless extra HTTP query if the relation is displayed.\n */\nconst reactAdminDocumentsCache = new Map<string, ApiPlatformAdminRecord>();\n\n/**\n * Transforms a JSON-LD document to a react-admin compatible document.\n */\nexport const transformJsonLdDocumentToReactAdminDocument = (\n  jsonLdDocument: JsonLdObj,\n  clone = true,\n  addToCache = true,\n  useEmbedded = false,\n): ApiPlatformAdminRecord => {\n  let clonedDocument = jsonLdDocument;\n  if (clone) {\n    // deep clone documents\n    clonedDocument = JSON.parse(JSON.stringify(clonedDocument));\n  }\n\n  const document: ApiPlatformAdminRecord = new ReactAdminDocument(\n    clonedDocument,\n  );\n\n  // Replace embedded objects by their IRIs, and store the object itself in the cache to reuse without issuing new HTTP requests.\n  Object.keys(document).forEach((key) => {\n    // to-one\n    if (isPlainObject(document[key]) && document[key]['@id']) {\n      if (addToCache) {\n        reactAdminDocumentsCache.set(\n          document[key]['@id'],\n          transformJsonLdDocumentToReactAdminDocument(\n            document[key],\n            false,\n            false,\n          ),\n        );\n      }\n      document[key] = useEmbedded ? document[key] : document[key]['@id'];\n\n      return;\n    }\n\n    // to-many\n    if (\n      Array.isArray(document[key]) &&\n      document[key].length &&\n      isPlainObject(document[key][0]) &&\n      document[key][0]['@id']\n    ) {\n      document[key] = document[key].map((obj: JsonLdObj) => {\n        if (addToCache && obj['@id'] && !Array.isArray(obj['@id'])) {\n          reactAdminDocumentsCache.set(\n            obj['@id'],\n            transformJsonLdDocumentToReactAdminDocument(obj, false, false),\n          );\n        }\n\n        return useEmbedded ? obj : obj['@id'];\n      });\n    }\n  });\n\n  return document;\n};\n\nconst extractHubUrl = (response: HydraHttpClientResponse) => {\n  const linkHeader = response.headers.get('Link');\n  if (!linkHeader) {\n    return null;\n  }\n\n  const matches = linkHeader.match(\n    /<([^>]+)>;\\s+rel=(?:mercure|\"[^\"]*mercure[^\"]*\")/,\n  );\n\n  return matches?.[1] ? matches[1] : null;\n};\n\nconst defaultParams: Required<\n  Omit<HydraDataProviderFactoryParams, 'entrypoint' | 'docEntrypoint'>\n> = {\n  httpClient: fetchHydra,\n  apiDocumentationParser: parseHydraDocumentation,\n  mercure: true,\n  useEmbedded: true,\n  disableCache: false,\n};\n\nfunction normalizeHydraKey(json: JsonLdObj, key: string): JsonLdObj {\n  if (json[`hydra:${key}`]) {\n    const copy = JSON.parse(JSON.stringify(json));\n    copy[key] = copy[`hydra:${key}`];\n    delete copy[`hydra:${key}`];\n    return copy;\n  }\n  return json;\n}\n\n/**\n * Maps react-admin queries to a Hydra powered REST API\n *\n * @see http://www.hydra-cg.com/\n *\n * @example\n * CREATE   => POST http://my.api.url/posts/123\n * DELETE   => DELETE http://my.api.url/posts/123\n * GET_LIST => GET http://my.api.url/posts\n * GET_MANY => GET http://my.api.url/posts/123, GET http://my.api.url/posts/456, GET http://my.api.url/posts/789\n * GET_ONE  => GET http://my.api.url/posts/123\n * UPDATE   => PATCH http://my.api.url/posts/123\n */\nfunction dataProvider(\n  factoryParams: HydraDataProviderFactoryParams,\n): ApiPlatformAdminDataProvider {\n  const {\n    entrypoint,\n    httpClient,\n    apiDocumentationParser,\n    useEmbedded,\n    disableCache,\n  }: Required<Omit<HydraDataProviderFactoryParams, 'docEntrypoint'>> = {\n    ...defaultParams,\n    ...factoryParams,\n  };\n  const entrypointUrl = new URL(entrypoint, window.location.href);\n  const mercure: MercureOptions | null = factoryParams.mercure\n    ? {\n        hub: null,\n        jwt: null,\n        topicUrl: entrypointUrl,\n        ...(factoryParams.mercure === true ? {} : factoryParams.mercure),\n      }\n    : null;\n\n  const convertReactAdminDataToHydraData = (\n    resource: Resource,\n    data: Record<string, unknown> = {},\n  ) => {\n    const reactAdminData = data;\n    const fieldData: Record<string, unknown> = {};\n    if (resource.fields) {\n      (\n        resource.fields as (Field & {\n          normalizeData: (data: unknown) => unknown;\n        })[]\n      ).forEach(({ name, reference, normalizeData }) => {\n        if (!(name in reactAdminData)) {\n          return;\n        }\n\n        if (reference && reactAdminData[name] === '') {\n          reactAdminData[name] = null;\n          return;\n        }\n\n        if (undefined === normalizeData) {\n          return;\n        }\n\n        fieldData[name] = normalizeData(reactAdminData[name]);\n      });\n    }\n\n    const fieldDataKeys = Object.keys(fieldData);\n    const fieldDataValues = Object.values(fieldData);\n\n    return Promise.all(fieldDataValues).then((normalizedFieldData) => {\n      const object: Record<string, unknown> = {};\n      for (let i = 0; i < fieldDataKeys.length; i += 1) {\n        const key = fieldDataKeys[i];\n        if (key) {\n          object[key] = normalizedFieldData[i];\n        }\n      }\n\n      return { ...reactAdminData, ...object };\n    });\n  };\n\n  const transformReactAdminDataToRequestBody = (\n    apiResource: undefined | Resource,\n    data: Record<string, unknown> | XMLHttpRequestBodyInit,\n    extraInformation: { hasFileField?: boolean },\n  ): Promise<XMLHttpRequestBodyInit> => {\n    if (undefined === apiResource) {\n      return Promise.resolve(data as XMLHttpRequestBodyInit);\n    }\n\n    return convertReactAdminDataToHydraData(\n      apiResource,\n      data as Record<string, unknown>,\n    ).then((hydraData) => {\n      const values = Object.values(hydraData);\n      const containFile = (element: unknown): boolean =>\n        Array.isArray(element)\n          ? element.length > 0 && element.every((value) => containFile(value))\n          : isPlainObject(element) &&\n            Object.values(element as Record<string, unknown>).some(\n              (value) => value instanceof File,\n            );\n\n      type ToJSONObject = { toJSON(): string };\n      const hasToJSON = (\n        element: string | ToJSONObject,\n      ): element is ToJSONObject =>\n        !!element &&\n        typeof element !== 'string' &&\n        typeof element.toJSON === 'function';\n\n      if (\n        !extraInformation.hasFileField &&\n        !values.some((value) => containFile(value))\n      ) {\n        return JSON.stringify(hydraData);\n      }\n\n      const body = new FormData();\n      Object.entries<string | ToJSONObject>(\n        hydraData as Record<string, string | ToJSONObject>,\n      ).forEach(([key, value]) => {\n        // React-Admin FileInput format is an object containing a file.\n        if (containFile(value)) {\n          const findFile = (element: string | ToJSONObject): Blob | undefined =>\n            Object.values(element).find((val) => val instanceof Blob);\n          if (Array.isArray(value)) {\n            value\n              .map((val) => findFile(val))\n              .forEach((file) => {\n                body.append(key.endsWith('[]') ? key : `${key}[]`, file!);\n              });\n          } else {\n            body.append(key, findFile(value)!);\n          }\n\n          return;\n        }\n        if (hasToJSON(value)) {\n          body.append(key, value.toJSON());\n          return;\n        }\n        if (isPlainObject(value) || Array.isArray(value)) {\n          body.append(key, JSON.stringify(value));\n          return;\n        }\n        body.append(key, value);\n      });\n\n      return body;\n    });\n  };\n\n  const shouldUseItemUrl = (type: DataProviderType) => {\n    switch (type) {\n      case 'GET_ONE':\n      case 'UPDATE':\n      case 'DELETE':\n        return true;\n      default:\n        return false;\n    }\n  };\n\n  const convertReactAdminRequestToHydraRequest = (\n    type: DataProviderType,\n    resource: string,\n    dataProviderParams: ApiPlatformAdminDataProviderParams,\n  ) => {\n    const params = dataProviderParams;\n    let url: URL;\n    if ('id' in params && shouldUseItemUrl(type)) {\n      url = new URL(params.id.toString(), entrypointUrl);\n    } else {\n      url = new URL(\n        `${removeTrailingSlash(entrypointUrl.toString())}/${resource}`,\n        entrypointUrl,\n      );\n    }\n\n    const searchParams: SearchParams = params.searchParams ?? {};\n    const searchParamKeys = Object.keys(searchParams);\n    searchParamKeys.forEach((searchParamKey) => {\n      const searchParam = searchParams[searchParamKey];\n      if (searchParam) {\n        url.searchParams.set(searchParamKey, searchParam);\n      }\n    });\n    let extraInformation: { hasFileField?: boolean } = {};\n    if (typeof params.meta === 'object') {\n      extraInformation = params.meta;\n    }\n\n    const apiResource = (apiSchema?.resources ?? []).find(\n      ({ name }) => resource === name,\n    );\n\n    let updateHttpMethod = 'POST';\n\n    if (!extraInformation.hasFileField) {\n      updateHttpMethod =\n        apiResource?.operations?.find((operation) => operation.type === 'edit')\n          ?.method ?? 'PUT';\n    }\n\n    switch (type) {\n      case CREATE:\n        return transformReactAdminDataToRequestBody(\n          apiResource,\n          (params as CreateParams).data,\n          extraInformation,\n        ).then((body) => ({\n          options: {\n            body,\n            method: 'POST',\n          },\n          url,\n        }));\n\n      case DELETE:\n        return Promise.resolve({\n          options: {\n            method: 'DELETE',\n          },\n          url,\n        });\n\n      case GET_LIST:\n      case GET_MANY_REFERENCE: {\n        const { pagination, sort, filter } = params as\n          | GetListParams\n          | GetManyReferenceParams;\n        const { page, perPage } = pagination ?? { page: 1, perPage: 25 };\n        const { field, order } = sort ?? { field: 'id', order: 'DESC' };\n        if (order && field) {\n          field.split(',').forEach((fieldName) => {\n            url.searchParams.set(`order[${fieldName.trim()}]`, order);\n          });\n        }\n        if (page) url.searchParams.set('page', page.toString());\n        if (perPage) url.searchParams.set('itemsPerPage', perPage.toString());\n        if (filter) {\n          const buildFilterParams = (\n            key: string,\n            nestedFilter: Record<\n              string,\n              | string\n              | boolean\n              | number\n              | Record<string, string | boolean | number>\n            >,\n            rootKey: string,\n          ) => {\n            const filterValue = nestedFilter[key];\n            if (filterValue === undefined) {\n              return;\n            }\n\n            if (Array.isArray(filterValue)) {\n              filterValue.forEach((arrayFilterValue, index) => {\n                url.searchParams.set(`${rootKey}[${index}]`, arrayFilterValue);\n              });\n              return;\n            }\n\n            if (!isPlainObject(filterValue)) {\n              url.searchParams.set(rootKey, filterValue.toString());\n              return;\n            }\n\n            Object.keys(filterValue).forEach((subKey) => {\n              if (\n                rootKey === 'exists' ||\n                [\n                  'after',\n                  'before',\n                  'strictly_after',\n                  'strictly_before',\n                  'lt',\n                  'gt',\n                  'lte',\n                  'gte',\n                  'between',\n                ].includes(subKey)\n              ) {\n                buildFilterParams(subKey, filterValue, `${rootKey}[${subKey}]`);\n                return;\n              }\n              buildFilterParams(subKey, filterValue, `${rootKey}.${subKey}`);\n            });\n          };\n\n          Object.keys(filter).forEach((key) => {\n            buildFilterParams(key, filter, key);\n          });\n        }\n\n        if (type === GET_MANY_REFERENCE) {\n          const { target, id } = params as GetManyReferenceParams;\n          if (target) {\n            url.searchParams.set(target, id.toString());\n          }\n        }\n\n        return Promise.resolve({\n          options: {},\n          url,\n        });\n      }\n\n      case GET_ONE:\n        return Promise.resolve({\n          options: {},\n          url,\n        });\n\n      case UPDATE:\n        return transformReactAdminDataToRequestBody(\n          apiResource,\n          (params as UpdateParams).data,\n          extraInformation,\n        ).then((body) => ({\n          options: {\n            body,\n            method: updateHttpMethod,\n            headers:\n              updateHttpMethod === 'PATCH'\n                ? { 'content-type': 'application/merge-patch+json' }\n                : {},\n          },\n          url,\n        }));\n\n      default:\n        throw new Error(`Unsupported fetch action type ${type}`);\n    }\n  };\n\n  const convertHydraDataToReactAdminData = (\n    resource: string,\n    data: ApiPlatformAdminRecord,\n  ) => {\n    const apiResource = apiSchema.resources.find(\n      ({ name }) => resource === name,\n    );\n    if (undefined === apiResource) {\n      return Promise.resolve(data);\n    }\n\n    const fieldData: Record<string, unknown> = {};\n    if (apiResource.fields) {\n      (\n        apiResource.fields as (Field & {\n          denormalizeData: (data: unknown) => unknown;\n        })[]\n      ).forEach(({ name, denormalizeData }) => {\n        if (!(name in data) || undefined === denormalizeData) {\n          return;\n        }\n\n        fieldData[name] = denormalizeData(data[name]);\n      });\n    }\n\n    const fieldDataKeys = Object.keys(fieldData);\n    const fieldDataValues = Object.values(fieldData);\n\n    return Promise.all(fieldDataValues).then((normalizedFieldData) => {\n      const object: Record<string, unknown> = {};\n      for (let i = 0; i < fieldDataKeys.length; i += 1) {\n        const key = fieldDataKeys[i];\n        if (key) {\n          object[key] = normalizedFieldData[i];\n        }\n      }\n\n      return { ...data, ...object };\n    });\n  };\n\n  const convertHydraResponseToReactAdminResponse = (\n    type: DataProviderType,\n    resource: string,\n    params: ApiPlatformAdminDataProviderParams,\n    response: HydraHttpClientResponse,\n  ): Promise<DataProviderResult<ApiPlatformAdminRecord>> => {\n    if (mercure !== null && mercure.hub === null) {\n      const hubUrl = extractHubUrl(response);\n      if (hubUrl) {\n        mercure.hub = hubUrl;\n        mercureManager.setMercureOptions(mercure);\n        mercureManager.initSubscriptions();\n      }\n    }\n\n    switch (type) {\n      case GET_LIST:\n      case GET_MANY_REFERENCE: {\n        if (!response.json) {\n          return Promise.reject(\n            new Error(`An empty response was received for \"${type}\".`),\n          );\n        }\n        const json = normalizeHydraKey(response.json, 'member');\n        if (!json.member) {\n          return Promise.reject(\n            new Error(\"Response doesn't have a member field.\"),\n          );\n        }\n        // TODO: support other prefixes than \"hydra:\"\n        let hydraCollection = json as HydraCollection;\n        return Promise.resolve(\n          hydraCollection.member.map((document: JsonLdObj) =>\n            transformJsonLdDocumentToReactAdminDocument(\n              document,\n              true,\n              !disableCache,\n              useEmbedded,\n            ),\n          ),\n        )\n          .then((data) =>\n            Promise.all(\n              data.map((hydraData) =>\n                convertHydraDataToReactAdminData(resource, hydraData),\n              ),\n            ),\n          )\n          .then((data) => {\n            hydraCollection = normalizeHydraKey(\n              hydraCollection,\n              'totalItems',\n            ) as HydraCollection;\n            if (hydraCollection.totalItems !== undefined) {\n              return {\n                data,\n                total: hydraCollection.totalItems,\n              };\n            }\n            hydraCollection = normalizeHydraKey(\n              hydraCollection,\n              'view',\n            ) as HydraCollection;\n            if (hydraCollection.view) {\n              let hydraView = normalizeHydraKey(\n                hydraCollection.view,\n                'next',\n              ) as HydraView;\n              hydraView = normalizeHydraKey(hydraView, 'previous') as HydraView;\n              const pageInfo = {\n                hasNextPage: !!hydraView.next,\n                hasPreviousPage: !!hydraView.previous,\n              };\n              return {\n                data,\n                pageInfo,\n              };\n            }\n\n            return {\n              data,\n            };\n          });\n      }\n      case DELETE:\n        return Promise.resolve({ data: { id: (params as DeleteParams).id } });\n\n      default:\n        if (!response.json) {\n          return Promise.reject(\n            new Error(`An empty response was received for \"${type}\".`),\n          );\n        }\n        return Promise.resolve(\n          transformJsonLdDocumentToReactAdminDocument(\n            response.json,\n            true,\n            !disableCache,\n            useEmbedded,\n          ),\n        )\n          .then((data) => convertHydraDataToReactAdminData(resource, data))\n          .then((data) => ({ data }));\n    }\n  };\n\n  const fetchApi = <\n    T extends DataProviderType,\n    R extends DataProviderResult<ApiPlatformAdminRecord>,\n  >(\n    type: T,\n    resource: string,\n    params: ApiPlatformAdminDataProviderTypeParams<T>,\n  ): Promise<R> =>\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    convertReactAdminRequestToHydraRequest(type, resource, params)\n      .then(({ url, options }) => httpClient(url, options))\n      .then((response) =>\n        convertHydraResponseToReactAdminResponse(\n          type,\n          resource,\n          params,\n          response,\n        ),\n      );\n\n  /*\n   * The fetchAllPages method allows running as many requests as needed in order to load all pages of a list.\n   * This function uses the already transformed react-admin response data and could be improved by using the hydra pagination.\n   */\n  const fetchAllPages = async (\n    type: typeof GET_LIST | typeof GET_MANY_REFERENCE,\n    resource: string,\n    params: GetListParams | GetManyReferenceParams,\n    previousResult?: GetListResult | GetManyReferenceResult,\n  ): Promise<GetListResult | GetManyReferenceResult> => {\n    const pageParams = params;\n\n    const pageResult = (await fetchApi(type, resource, pageParams)) as\n      | GetListResult\n      | GetManyReferenceResult;\n\n    const result = previousResult ?? pageResult;\n    if (previousResult) {\n      result.data.push(...pageResult.data);\n      if (pageResult.total && result.total && pageResult.total < result.total) {\n        // The total can have changed between 2 requests\n        result.total = pageResult.total;\n      }\n    }\n\n    // Minimalist infinite loop protection\n    if (\n      pageParams.pagination?.page &&\n      pageParams.pagination?.page >= result.data.length\n    ) {\n      return result;\n    }\n\n    if (\n      pageResult.data.length > 0 &&\n      ((!!result.total && result.data.length < result.total) ||\n        result.pageInfo?.hasNextPage)\n    ) {\n      if (pageParams.pagination) {\n        pageParams.pagination.page += 1;\n      } else {\n        pageParams.pagination = { page: 2, perPage: 25 };\n      }\n      return fetchAllPages(type, resource, pageParams, result);\n    }\n\n    return result;\n  };\n\n  const hasIdSearchFilter = (resource: string) => {\n    const schema = apiSchema.resources.find((r) => r.name === resource);\n    if (!schema) {\n      return Promise.resolve(false);\n    }\n    return resolveSchemaParameters(schema).then((parameters) =>\n      parameters.map((filter) => filter.variable).includes('id'),\n    );\n  };\n\n  const { introspect, subscribe, unsubscribe } = adminDataProvider({\n    entrypoint,\n    docEntrypoint: entrypoint,\n    httpClient,\n    apiDocumentationParser,\n    mercure: factoryParams.mercure ?? true,\n  });\n  mercureManager.setDataTransformer((jsonLdDocument) =>\n    transformJsonLdDocumentToReactAdminDocument(\n      jsonLdDocument,\n      true,\n      !disableCache,\n      useEmbedded,\n    ),\n  );\n\n  return {\n    getList: (resource, params) => fetchApi(GET_LIST, resource, params),\n    getOne: (resource, params) => fetchApi(GET_ONE, resource, params),\n\n    getMany: (resource, params) =>\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      hasIdSearchFilter(resource).then((result) => {\n        // Hydra doesn't handle MANY requests but if a search filter for the id is available, it is used.\n        if (result) {\n          return fetchAllPages(GET_LIST, resource, {\n            pagination: {\n              // Asking for the good amount of items, as we could want to retrieve more items than the default amount sent by the API.\n              perPage: params.ids?.length,\n              page: 1,\n            },\n            filter: { id: params.ids },\n            sort: { field: '', order: 'ASC' },\n          }).then(({ data }) => ({ data }));\n        }\n\n        // Else fallback to calling the ONE request n times instead.\n        return Promise.all(\n          params.ids.map((id) => {\n            const document = reactAdminDocumentsCache.get(id.toString());\n            if (document) {\n              return Promise.resolve({ data: document });\n            }\n            return fetchApi(GET_ONE, resource, { id }) as Promise<\n              GetOneResult<ApiPlatformAdminRecord>\n            >;\n          }),\n        ).then((responses) => ({ data: responses.map(({ data }) => data) }));\n      }),\n    getManyReference: (resource, params) =>\n      fetchApi(GET_MANY_REFERENCE, resource, params),\n    update: (resource, params) => fetchApi(UPDATE, resource, params),\n    updateMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) =>\n          fetchApi(UPDATE, resource, { ...params, id, previousData: { id } }),\n        ),\n      ).then(() => ({ data: [] })),\n    create: (resource, params) => fetchApi(CREATE, resource, params),\n    delete: (resource, params) => fetchApi(DELETE, resource, params),\n    deleteMany: (resource, params) =>\n      Promise.all(\n        params.ids.map((id) => fetchApi(DELETE, resource, { id })),\n      ).then(() => ({ data: [] })),\n    introspect: (_resource = '', _params = {}) =>\n      introspect().then(({ data }) => {\n        if (data.resources && data.resources.length > 0) {\n          apiSchema = { ...data, resources: data.resources };\n        }\n\n        return { data };\n      }),\n    subscribe,\n    unsubscribe,\n  };\n}\n\nexport default dataProvider;\n", "export function assignSealed<\n  TSrc extends { [key: string]: any },\n  TTarget extends TSrc\n>(target: TTarget, src: TSrc): void {\n  Object.keys(src).forEach((key) => {\n    Object.defineProperty(target, key, {\n      writable: true,\n      enumerable: true,\n      configurable: false,\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      value: src[key],\n    });\n  });\n}\n", "import { assignSealed } from \"./utils/assignSealed.js\";\nimport type { Resource } from \"./Resource.js\";\nimport type { Nullable } from \"./types.js\";\n\nexport interface ApiOptions\n  extends Nullable<{\n    title?: string;\n    resources?: Resource[];\n  }> {}\n\nexport interface Api extends ApiOptions {}\nexport class Api {\n  constructor(public entrypoint: string, options: ApiOptions = {}) {\n    assignSealed(this, options);\n  }\n}\n", "import { assignSealed } from \"./utils/assignSealed.js\";\nimport type { Resource } from \"./Resource.js\";\nimport type { Nullable } from \"./types.js\";\n\nexport type FieldType =\n  | \"string\"\n  | \"integer\"\n  | \"negativeInteger\"\n  | \"nonNegativeInteger\"\n  | \"positiveInteger\"\n  | \"nonPositiveInteger\"\n  | \"number\"\n  | \"decimal\"\n  | \"double\"\n  | \"float\"\n  | \"boolean\"\n  | \"date\"\n  | \"dateTime\"\n  | \"duration\"\n  | \"time\"\n  | \"byte\"\n  | \"binary\"\n  | \"hexBinary\"\n  | \"base64Binary\"\n  | \"array\"\n  | \"object\"\n  | \"email\"\n  | \"url\"\n  | \"uuid\"\n  | \"password\"\n  | string;\n\nexport interface FieldOptions\n  extends Nullable<{\n    id?: string;\n    range?: string;\n    type?: FieldType;\n    arrayType?: FieldType;\n    enum?: { [key: string | number]: string | number };\n    reference?: string | Resource;\n    embedded?: Resource;\n    required?: boolean;\n    nullable?: boolean;\n    description?: string;\n    maxCardinality?: number;\n    deprecated?: boolean;\n  }> {}\n\nexport interface Field extends FieldOptions {}\nexport class Field {\n  constructor(public name: string, options: FieldOptions = {}) {\n    assignSealed(this, options);\n  }\n}\n", "import { assignSealed } from \"./utils/assignSealed.js\";\nimport type { Nullable } from \"./types.js\";\n\nexport type OperationType = \"show\" | \"edit\" | \"delete\" | \"list\" | \"create\";\n\nexport interface OperationOptions\n  extends Nullable<{\n    method?: string;\n    expects?: any;\n    returns?: string;\n    types?: string[];\n    deprecated?: boolean;\n  }> {}\n\nexport interface Operation extends OperationOptions {}\nexport class Operation {\n  constructor(\n    public name: string,\n    public type: OperationType,\n    options: OperationOptions = {}\n  ) {\n    assignSealed(this, options);\n  }\n}\n", "export class Parameter {\n  constructor(\n    public variable: string,\n    public range: string | null,\n    public required: boolean,\n    public description: string,\n    public deprecated?: boolean\n  ) {}\n}\n", "import { assignSealed } from \"./utils/assignSealed.js\";\nimport type { Field } from \"./Field.js\";\nimport type { Operation } from \"./Operation.js\";\nimport type { Parameter } from \"./Parameter.js\";\nimport type { Nullable } from \"./types.js\";\n\nexport interface ResourceOptions\n  extends Nullable<{\n    id?: string;\n    title?: string;\n    description?: string;\n    deprecated?: boolean;\n    fields?: Field[];\n    readableFields?: Field[];\n    writableFields?: Field[];\n    parameters?: Parameter[];\n    getParameters?: () => Promise<Parameter[]>;\n    operations?: Operation[];\n  }> {}\n\nexport interface Resource extends ResourceOptions {}\nexport class Resource {\n  constructor(\n    public name: string,\n    public url: string,\n    options: ResourceOptions = {}\n  ) {\n    assignSealed(this, options);\n  }\n}\n", "import { getIntrospectionQuery } from \"graphql/utilities/index.js\";\nimport fetchQuery from \"./fetchQuery.js\";\nimport { Api } from \"../Api.js\";\nimport { Field } from \"../Field.js\";\nimport { Resource } from \"../Resource.js\";\nimport type {\n  IntrospectionObjectType,\n  IntrospectionOutputTypeRef,\n  IntrospectionQuery,\n} from \"graphql/utilities\";\n\nconst getRangeFromGraphQlType = (type: IntrospectionOutputTypeRef): string => {\n  if (type.kind === \"NON_NULL\") {\n    if (type.ofType.kind === \"LIST\") {\n      return `Array<${getRangeFromGraphQlType(type.ofType.ofType)}>`;\n    }\n\n    return type.ofType.name;\n  }\n\n  if (type.kind === \"LIST\") {\n    return `Array<${getRangeFromGraphQlType(type.ofType)}>`;\n  }\n\n  return type.name;\n};\n\nconst getReferenceFromGraphQlType = (\n  type: IntrospectionOutputTypeRef\n): null | string => {\n  if (type.kind === \"OBJECT\" && type.name.endsWith(\"Connection\")) {\n    return type.name.slice(0, type.name.lastIndexOf(\"Connection\"));\n  }\n\n  return null;\n};\n\nexport default async (\n  entrypointUrl: string,\n  options: RequestInit = {}\n): Promise<{\n  api: Api;\n  response: Response;\n}> => {\n  const introspectionQuery = getIntrospectionQuery();\n\n  const {\n    response,\n    body: { data },\n  } = await fetchQuery<IntrospectionQuery>(\n    entrypointUrl,\n    introspectionQuery,\n    options\n  );\n  if (!data?.__schema) {\n    throw new Error(\n      \"Schema has not been retrieved from the introspection query.\"\n    );\n  }\n  const schema = data?.__schema;\n\n  const typeResources = schema.types.filter(\n    (type) =>\n      type.kind === \"OBJECT\" &&\n      type.name !== schema.queryType.name &&\n      type.name !== schema.mutationType?.name &&\n      type.name !== schema.subscriptionType?.name &&\n      !type.name.startsWith(\"__\") &&\n      // mutation\n      !type.name.startsWith(type.name[0].toLowerCase()) &&\n      !type.name.endsWith(\"Connection\") &&\n      !type.name.endsWith(\"Edge\") &&\n      !type.name.endsWith(\"PageInfo\")\n  ) as IntrospectionObjectType[];\n\n  const resources: Resource[] = [];\n  typeResources.forEach((typeResource) => {\n    const fields: Field[] = [];\n    const readableFields: Field[] = [];\n    const writableFields: Field[] = [];\n\n    typeResource.fields.forEach((resourceFieldType) => {\n      const field = new Field(resourceFieldType.name, {\n        range: getRangeFromGraphQlType(resourceFieldType.type),\n        reference: getReferenceFromGraphQlType(resourceFieldType.type),\n        required: resourceFieldType.type.kind === \"NON_NULL\",\n        description: resourceFieldType.description,\n        deprecated: resourceFieldType.isDeprecated,\n      });\n\n      fields.push(field);\n      readableFields.push(field);\n      writableFields.push(field);\n    });\n\n    resources.push(\n      new Resource(typeResource.name, \"\", {\n        fields,\n        readableFields,\n        writableFields,\n      })\n    );\n  });\n\n  resources.forEach((resource) => {\n    resource.fields?.forEach((field) => {\n      if (null !== field.reference) {\n        field.reference =\n          resources.find((resource) => resource.name === field.reference) ||\n          null;\n      } else if (null !== field.range) {\n        field.reference =\n          resources.find((resource) => resource.name === field.range) || null;\n      }\n    });\n  });\n\n  return {\n    api: new Api(entrypointUrl, { resources }),\n    response,\n  };\n};\n", "import type { Document, JsonLd, RemoteDocument } from \"jsonld/jsonld-spec\";\nimport type { RequestInitExtended } from \"./types.js\";\n\nconst jsonLdMimeType = \"application/ld+json\";\nconst jsonProblemMimeType = \"application/problem+json\";\n\nexport type RejectedResponseDocument = {\n  response: Response;\n};\n\nexport type EmptyResponseDocument = {\n  response: Response;\n};\n\nexport interface ResponseDocument extends RemoteDocument {\n  response: Response;\n  body: Document;\n}\n\n/**\n * Sends a JSON-LD request to the API.\n */\nexport default async function fetchJsonLd(\n  url: string,\n  options: RequestInitExtended = {}\n): Promise<ResponseDocument | EmptyResponseDocument> {\n  const response = await fetch(url, setHeaders(options));\n  const { headers, status } = response;\n  const contentType = headers.get(\"Content-Type\");\n\n  if (204 === status) {\n    return Promise.resolve({ response });\n  }\n\n  if (\n    500 <= status ||\n    !contentType ||\n    (!contentType.includes(jsonLdMimeType) &&\n      !contentType.includes(jsonProblemMimeType))\n  ) {\n    const reason: RejectedResponseDocument = { response };\n    return Promise.reject(reason);\n  }\n\n  return response.json().then((body: JsonLd) => ({\n    response,\n    body,\n    document: body,\n    documentUrl: url,\n  }));\n}\n\nfunction setHeaders(options: RequestInitExtended): RequestInit {\n  if (!options.headers) {\n    return { ...options, headers: {} };\n  }\n\n  let headers: HeadersInit =\n    typeof options.headers === \"function\" ? options.headers() : options.headers;\n\n  headers = new Headers(headers);\n\n  if (null === headers.get(\"Accept\")) {\n    headers.set(\"Accept\", jsonLdMimeType);\n  }\n\n  const result = { ...options, headers };\n\n  if (\n    \"undefined\" !== result.body &&\n    !(typeof FormData !== \"undefined\" && result.body instanceof FormData) &&\n    null === result.headers.get(\"Content-Type\")\n  ) {\n    result.headers.set(\"Content-Type\", jsonLdMimeType);\n  }\n\n  return result;\n}\n", "import jsonld from \"jsonld\";\nimport get from \"lodash.get\";\nimport { Api } from \"../Api.js\";\nimport { Field } from \"../Field.js\";\nimport { Resource } from \"../Resource.js\";\nimport { Operation } from \"../Operation.js\";\nimport fetchJsonLd from \"./fetchJsonLd.js\";\nimport getParameters from \"./getParameters.js\";\nimport getType from \"./getType.js\";\nimport type { OperationType } from \"../Operation.js\";\nimport type { Parameter } from \"../Parameter.js\";\nimport type {\n  ExpandedClass,\n  ExpandedDoc,\n  Entrypoint,\n  ExpandedRdfProperty,\n  RequestInitExtended,\n} from \"./types.js\";\n\n/**\n * Extracts the short name of a resource.\n */\nfunction guessNameFromUrl(url: string, entrypointUrl: string): string {\n  return url.substr(entrypointUrl.length + 1);\n}\n\n/**\n * Finds the description of the class with the given id.\n */\nfunction findSupportedClass(\n  docs: ExpandedDoc[],\n  classToFind: string\n): ExpandedClass {\n  const supportedClasses = get(\n    docs,\n    '[0][\"http://www.w3.org/ns/hydra/core#supportedClass\"]'\n  ) as ExpandedClass[] | undefined;\n  if (!Array.isArray(supportedClasses)) {\n    throw new Error(\n      'The API documentation has no \"http://www.w3.org/ns/hydra/core#supportedClass\" key or its value is not an array.'\n    );\n  }\n\n  for (const supportedClass of supportedClasses) {\n    if (supportedClass[\"@id\"] === classToFind) {\n      return supportedClass;\n    }\n  }\n\n  throw new Error(\n    `The class \"${classToFind}\" is not defined in the API documentation.`\n  );\n}\n\nexport function getDocumentationUrlFromHeaders(headers: Headers): string {\n  const linkHeader = headers.get(\"Link\");\n  if (!linkHeader) {\n    throw new Error('The response has no \"Link\" HTTP header.');\n  }\n\n  const matches =\n    /<([^<]+)>; rel=\"http:\\/\\/www.w3.org\\/ns\\/hydra\\/core#apiDocumentation\"/.exec(\n      linkHeader\n    );\n  if (matches === null) {\n    throw new Error(\n      'The \"Link\" HTTP header is not of the type \"http://www.w3.org/ns/hydra/core#apiDocumentation\".'\n    );\n  }\n\n  return matches[1];\n}\n\n/**\n * Retrieves Hydra's entrypoint and API docs.\n */\nasync function fetchEntrypointAndDocs(\n  entrypointUrl: string,\n  options: RequestInitExtended = {}\n): Promise<{\n  entrypointUrl: string;\n  docsUrl: string;\n  response: Response;\n  entrypoint: Entrypoint[];\n  docs: ExpandedDoc[];\n}> {\n  const d = await fetchJsonLd(entrypointUrl, options);\n  if (!(\"body\" in d)) {\n    throw new Error(\"An empty response was received for the entrypoint URL.\");\n  }\n  const entrypointJsonLd = d.body;\n  const docsUrl = getDocumentationUrlFromHeaders(d.response.headers);\n\n  const documentLoader = (input: string) =>\n    fetchJsonLd(input, options).then((response) => {\n      if (!(\"body\" in response)) {\n        throw new Error(\n          \"An empty response was received when expanding documentation or entrypoint JSON-LD documents.\"\n        );\n      }\n      return response;\n    });\n\n  const docsResponse = await fetchJsonLd(docsUrl, options);\n  if (!(\"body\" in docsResponse)) {\n    throw new Error(\n      \"An empty response was received for the documentation URL.\"\n    );\n  }\n  const docsJsonLd = docsResponse.body;\n\n  const [docs, entrypoint] = (await Promise.all([\n    jsonld.expand(docsJsonLd, {\n      base: docsUrl,\n      documentLoader,\n    }),\n    jsonld.expand(entrypointJsonLd, {\n      base: entrypointUrl,\n      documentLoader,\n    }),\n  ])) as unknown as [ExpandedDoc[], Entrypoint[]];\n\n  return {\n    entrypointUrl,\n    docsUrl,\n    entrypoint,\n    response: d.response,\n    docs,\n  };\n}\n\nfunction removeTrailingSlash(url: string): string {\n  if (url.endsWith(\"/\")) {\n    url = url.slice(0, -1);\n  }\n\n  return url;\n}\n\nfunction findRelatedClass(\n  docs: ExpandedDoc[],\n  property: ExpandedRdfProperty\n): ExpandedClass {\n  // Use the entrypoint property's owl:equivalentClass if available\n  if (Array.isArray(property[\"http://www.w3.org/2000/01/rdf-schema#range\"])) {\n    for (const range of property[\n      \"http://www.w3.org/2000/01/rdf-schema#range\"\n    ]) {\n      const onProperty = get(\n        range,\n        '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#onProperty\"][0][\"@id\"]'\n      ) as unknown as string;\n      const allValuesFrom = get(\n        range,\n        '[\"http://www.w3.org/2002/07/owl#equivalentClass\"][0][\"http://www.w3.org/2002/07/owl#allValuesFrom\"][0][\"@id\"]'\n      ) as unknown as string;\n\n      if (\n        allValuesFrom &&\n        \"http://www.w3.org/ns/hydra/core#member\" === onProperty\n      ) {\n        return findSupportedClass(docs, allValuesFrom);\n      }\n    }\n  }\n\n  // As a fallback, find an operation available on the property of the entrypoint returning the searched type (usually POST)\n  for (const entrypointSupportedOperation of property[\n    \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n  ] || []) {\n    if (\n      !entrypointSupportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]\n    ) {\n      continue;\n    }\n\n    const returns = get(\n      entrypointSupportedOperation,\n      '[\"http://www.w3.org/ns/hydra/core#returns\"][0][\"@id\"]'\n    ) as string | undefined;\n    if (\n      \"string\" === typeof returns &&\n      0 !== returns.indexOf(\"http://www.w3.org/ns/hydra/core\")\n    ) {\n      return findSupportedClass(docs, returns);\n    }\n  }\n\n  throw new Error(`Cannot find the class related to ${property[\"@id\"]}.`);\n}\n\n/**\n * Parses Hydra documentation and converts it to an intermediate representation.\n */\nexport default function parseHydraDocumentation(\n  entrypointUrl: string,\n  options: RequestInitExtended = {}\n): Promise<{\n  api: Api;\n  response: Response;\n  status: number;\n}> {\n  entrypointUrl = removeTrailingSlash(entrypointUrl);\n\n  return fetchEntrypointAndDocs(entrypointUrl, options).then(\n    ({ entrypoint, docs, response }) => {\n      const resources = [],\n        fields = [],\n        operations = [];\n      const title = get(\n        docs,\n        '[0][\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]',\n        \"API Platform\"\n      ) as string;\n\n      const entrypointType = get(entrypoint, '[0][\"@type\"][0]') as\n        | string\n        | undefined;\n      if (!entrypointType) {\n        throw new Error('The API entrypoint has no \"@type\" key.');\n      }\n\n      const entrypointClass = findSupportedClass(docs, entrypointType);\n      if (\n        !Array.isArray(\n          entrypointClass[\"http://www.w3.org/ns/hydra/core#supportedProperty\"]\n        )\n      ) {\n        throw new Error(\n          'The entrypoint definition has no \"http://www.w3.org/ns/hydra/core#supportedProperty\" key or it is not an array.'\n        );\n      }\n\n      // Add resources\n      for (const properties of entrypointClass[\n        \"http://www.w3.org/ns/hydra/core#supportedProperty\"\n      ]) {\n        const readableFields = [],\n          resourceFields = [],\n          writableFields = [],\n          resourceOperations = [];\n\n        const property = get(\n          properties,\n          '[\"http://www.w3.org/ns/hydra/core#property\"][0]'\n        ) as ExpandedRdfProperty | undefined;\n\n        if (!property) {\n          continue;\n        }\n\n        const url = get(entrypoint, `[0][\"${property[\"@id\"]}\"][0][\"@id\"]`) as\n          | string\n          | undefined;\n\n        if (!url) {\n          console.error(\n            new Error(\n              `Unable to find the URL for \"${property[\"@id\"]}\" in the entrypoint, make sure your API resource has at least one GET collection operation declared.`\n            )\n          );\n          continue;\n        }\n\n        // Add fields\n        const relatedClass = findRelatedClass(docs, property);\n        for (const supportedProperties of relatedClass[\n          \"http://www.w3.org/ns/hydra/core#supportedProperty\"\n        ]) {\n          const supportedProperty = get(\n            supportedProperties,\n            '[\"http://www.w3.org/ns/hydra/core#property\"][0]'\n          ) as unknown as ExpandedRdfProperty;\n          const id = supportedProperty[\"@id\"];\n          const range = get(\n            supportedProperty,\n            '[\"http://www.w3.org/2000/01/rdf-schema#range\"][0][\"@id\"]',\n            null\n          ) as unknown as string;\n\n          const field = new Field(\n            supportedProperty[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\n              \"@value\"\n            ],\n            {\n              id,\n              range,\n              type: getType(id, range),\n              reference:\n                \"http://www.w3.org/ns/hydra/core#Link\" ===\n                get(supportedProperty, '[\"@type\"][0]')\n                  ? range // Will be updated in a subsequent pass\n                  : null,\n              embedded:\n                \"http://www.w3.org/ns/hydra/core#Link\" !==\n                get(supportedProperty, '[\"@type\"][0]')\n                  ? (range as unknown as Resource) // Will be updated in a subsequent pass\n                  : null,\n              required: get(\n                supportedProperties,\n                '[\"http://www.w3.org/ns/hydra/core#required\"][0][\"@value\"]',\n                false\n              ) as boolean,\n              description: get(\n                supportedProperties,\n                '[\"http://www.w3.org/ns/hydra/core#description\"][0][\"@value\"]',\n                \"\"\n              ) as string,\n              maxCardinality: get(\n                supportedProperty,\n                '[\"http://www.w3.org/2002/07/owl#maxCardinality\"][0][\"@value\"]',\n                null\n              ) as number | null,\n              deprecated: get(\n                supportedProperties,\n                '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                false\n              ) as boolean,\n            }\n          );\n\n          fields.push(field);\n          resourceFields.push(field);\n\n          if (\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#readable\"][0][\"@value\"]'\n            )\n          ) {\n            readableFields.push(field);\n          }\n\n          if (\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#writeable\"][0][\"@value\"]'\n            ) ||\n            get(\n              supportedProperties,\n              '[\"http://www.w3.org/ns/hydra/core#writable\"][0][\"@value\"]'\n            )\n          ) {\n            writableFields.push(field);\n          }\n        }\n\n        // parse entrypoint's operations (a.k.a. collection operations)\n        if (property[\"http://www.w3.org/ns/hydra/core#supportedOperation\"]) {\n          for (const entrypointOperation of property[\n            \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n          ]) {\n            if (\n              !entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"]\n            ) {\n              continue;\n            }\n\n            const range =\n              entrypointOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\n                \"@id\"\n              ];\n            const method =\n              entrypointOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\n                \"@value\"\n              ];\n            let type: OperationType = \"list\";\n            if (method === \"POST\") {\n              type = \"create\";\n            }\n            const operation = new Operation(\n              entrypointOperation[\n                \"http://www.w3.org/2000/01/rdf-schema#label\"\n              ][0][\"@value\"],\n              type,\n              {\n                method,\n                expects:\n                  entrypointOperation[\n                    \"http://www.w3.org/ns/hydra/core#expects\"\n                  ] &&\n                  entrypointOperation[\n                    \"http://www.w3.org/ns/hydra/core#expects\"\n                  ][0][\"@id\"],\n                returns: range,\n                types: entrypointOperation[\"@type\"],\n                deprecated: get(\n                  entrypointOperation,\n                  '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                  false\n                ) as boolean,\n              }\n            );\n\n            resourceOperations.push(operation);\n            operations.push(operation);\n          }\n        }\n\n        // parse resource operations (a.k.a. item operations)\n        for (const supportedOperation of relatedClass[\n          \"http://www.w3.org/ns/hydra/core#supportedOperation\"\n        ] || []) {\n          if (!supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"]) {\n            continue;\n          }\n\n          const range =\n            supportedOperation[\"http://www.w3.org/ns/hydra/core#returns\"][0][\n              \"@id\"\n            ];\n          const method =\n            supportedOperation[\"http://www.w3.org/ns/hydra/core#method\"][0][\n              \"@value\"\n            ];\n          let type: OperationType = \"show\";\n          if (method === \"POST\") {\n            type = \"create\";\n          }\n          if (method === \"PUT\" || method === \"PATCH\") {\n            type = \"edit\";\n          }\n          if (method === \"DELETE\") {\n            type = \"delete\";\n          }\n          const operation = new Operation(\n            supportedOperation[\"http://www.w3.org/2000/01/rdf-schema#label\"][0][\n              \"@value\"\n            ],\n            type,\n            {\n              method,\n              expects:\n                supportedOperation[\"http://www.w3.org/ns/hydra/core#expects\"] &&\n                supportedOperation[\n                  \"http://www.w3.org/ns/hydra/core#expects\"\n                ][0][\"@id\"],\n              returns: range,\n              types: supportedOperation[\"@type\"],\n              deprecated: get(\n                supportedOperation,\n                '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n                false\n              ) as boolean,\n            }\n          );\n\n          resourceOperations.push(operation);\n          operations.push(operation);\n        }\n\n        const resource = new Resource(\n          guessNameFromUrl(url, entrypointUrl),\n          url,\n          {\n            id: relatedClass[\"@id\"],\n            title: get(\n              relatedClass,\n              '[\"http://www.w3.org/ns/hydra/core#title\"][0][\"@value\"]',\n              \"\"\n            ) as string,\n            fields: resourceFields,\n            readableFields,\n            writableFields,\n            operations: resourceOperations,\n            deprecated: get(\n              relatedClass,\n              '[\"http://www.w3.org/2002/07/owl#deprecated\"][0][\"@value\"]',\n              false\n            ) as boolean,\n          }\n        );\n\n        resource.parameters = [];\n        resource.getParameters = (): Promise<Parameter[]> =>\n          getParameters(resource, options);\n\n        resources.push(resource);\n      }\n\n      // Resolve references and embedded\n      for (const field of fields) {\n        if (null !== field.reference) {\n          field.reference =\n            resources.find((resource) => resource.id === field.reference) ||\n            null;\n        }\n        if (null !== field.embedded) {\n          field.embedded =\n            resources.find((resource) => resource.id === field.embedded) ||\n            null;\n        }\n      }\n\n      return {\n        api: new Api(entrypointUrl, { title, resources }),\n        response,\n        status: response.status,\n      };\n    },\n    (data: { response: Response }) =>\n      Promise.reject({\n        api: new Api(entrypointUrl, { resources: [] }),\n        error: data,\n        response: data.response,\n        status: get(data.response, \"status\"),\n      })\n  );\n}\n", "import get from \"lodash.get\";\nimport type { EmptyResponseDocument, ResponseDocument } from \"./fetchJsonLd.js\";\nimport fetchJsonLd from \"./fetchJsonLd.js\";\nimport type { IriTemplateMapping, RequestInitExtended } from \"./types.js\";\n\nexport default (\n  resourceUrl: string,\n  options: RequestInitExtended = {}\n): Promise<{ parameters: IriTemplateMapping[] }> => {\n  return fetchJsonLd(\n    resourceUrl,\n    Object.assign({ itemsPerPage: 0 }, options)\n  ).then((d: ResponseDocument | EmptyResponseDocument) => {\n    let hasPrefix = true;\n    if ((d as ResponseDocument).body) {\n      hasPrefix = \"hydra:search\" in (d as ResponseDocument).body;\n    }\n    return {\n      parameters: get(\n        d,\n        hasPrefix ? \"body.hydra:search.hydra:mapping\" : \"body.search.mapping\"\n      ) as unknown as IriTemplateMapping[],\n    };\n  });\n};\n", "import { Parameter } from \"../Parameter.js\";\nimport fetchResource from \"./fetchResource.js\";\nimport type { Resource } from \"../Resource.js\";\nimport type { RequestInitExtended } from \"./types.js\";\n\nexport default (\n  resource: Resource,\n  options: RequestInitExtended = {}\n): Promise<Parameter[]> =>\n  fetchResource(resource.url, options).then(({ parameters = [] }) => {\n    const resourceParameters: Parameter[] = [];\n    parameters.forEach(({ property = null, required, variable }) => {\n      if (null === property) {\n        return;\n      }\n\n      const { range = null } = resource.fields\n        ? resource.fields.find(({ name }) => property === name) || {}\n        : {};\n\n      resourceParameters.push(new Parameter(variable, range, required, \"\"));\n    });\n    resource.parameters = resourceParameters;\n\n    return resourceParameters;\n  });\n", "import type { FieldType } from \"../Field.js\";\n\nconst getType = (id: string, range: string): FieldType => {\n  switch (id) {\n    case \"http://schema.org/email\":\n    case \"https://schema.org/email\":\n      return \"email\";\n    case \"http://schema.org/url\":\n    case \"https://schema.org/url\":\n      return \"url\";\n    default:\n  }\n\n  switch (range) {\n    case \"http://www.w3.org/2001/XMLSchema#array\":\n      return \"array\";\n    case \"http://www.w3.org/2001/XMLSchema#integer\":\n    case \"http://www.w3.org/2001/XMLSchema#int\":\n    case \"http://www.w3.org/2001/XMLSchema#long\":\n    case \"http://www.w3.org/2001/XMLSchema#short\":\n    case \"https://schema.org/Integer\":\n      return \"integer\";\n    case \"http://www.w3.org/2001/XMLSchema#negativeInteger\":\n      return \"negativeInteger\";\n    case \"http://www.w3.org/2001/XMLSchema#nonNegativeInteger\":\n    case \"http://www.w3.org/2001/XMLSchema#unsignedInt\":\n    case \"http://www.w3.org/2001/XMLSchema#unsignedLong\":\n    case \"http://www.w3.org/2001/XMLSchema#unsignedShort\":\n      return \"nonNegativeInteger\";\n    case \"http://www.w3.org/2001/XMLSchema#positiveInteger\":\n      return \"positiveInteger\";\n    case \"http://www.w3.org/2001/XMLSchema#nonPositiveInteger\":\n      return \"nonPositiveInteger\";\n    case \"http://www.w3.org/2001/XMLSchema#decimal\":\n      return \"decimal\";\n    case \"http://www.w3.org/2001/XMLSchema#double\":\n      return \"double\";\n    case \"http://www.w3.org/2001/XMLSchema#float\":\n    case \"https://schema.org/Float\":\n      return \"float\";\n    case \"http://www.w3.org/2001/XMLSchema#boolean\":\n    case \"https://schema.org/Boolean\":\n      return \"boolean\";\n    case \"http://www.w3.org/2001/XMLSchema#date\":\n    case \"http://www.w3.org/2001/XMLSchema#gYear\":\n    case \"http://www.w3.org/2001/XMLSchema#gYearMonth\":\n    case \"http://www.w3.org/2001/XMLSchema#gMonth\":\n    case \"http://www.w3.org/2001/XMLSchema#gMonthDay\":\n    case \"http://www.w3.org/2001/XMLSchema#gDay\":\n    case \"https://schema.org/Date\":\n      return \"date\";\n    case \"http://www.w3.org/2001/XMLSchema#dateTime\":\n    case \"https://schema.org/DateTime\":\n      return \"dateTime\";\n    case \"http://www.w3.org/2001/XMLSchema#duration\":\n      return \"duration\";\n    case \"http://www.w3.org/2001/XMLSchema#time\":\n    case \"https://schema.org/Time\":\n      return \"time\";\n    case \"http://www.w3.org/2001/XMLSchema#byte\":\n    case \"http://www.w3.org/2001/XMLSchema#unsignedByte\":\n      return \"byte\";\n    case \"http://www.w3.org/2001/XMLSchema#hexBinary\":\n      return \"hexBinary\";\n    case \"http://www.w3.org/2001/XMLSchema#base64Binary\":\n      return \"base64Binary\";\n    default:\n      return \"string\";\n  }\n};\n\nexport default getType;\n", "export class RetrieverError extends Error {\n    constructor(uri, originalError) {\n        super(uri);\n        this.uri = uri;\n        this.originalError = originalError;\n        this.name = 'RetrieverError';\n    }\n}\nexport class ParserError extends Error {\n    constructor(scope, type, errors) {\n        super(type);\n        this.scope = scope;\n        this.errors = errors;\n        this.name = 'ParserError';\n    }\n}\nexport class RebaserError extends Error {\n    constructor(scope, type, errors) {\n        super(type);\n        this.scope = scope;\n        this.errors = errors;\n        this.name = 'RebaserError';\n    }\n}\n//# sourceMappingURL=errors.js.map", "const TILDE_RE = /~/g;\nconst SLASH_RE = /\\//g;\nconst TILDE_0_RE = /~0/g;\nconst TILDE_1_RE = /~1/g;\nexport function escape(frag) {\n    return frag.replace(TILDE_RE, '~0').replace(SLASH_RE, '~1');\n}\nexport function unescape(frag) {\n    return frag.replace(TILDE_1_RE, '/').replace(TILDE_0_RE, '~');\n}\n//# sourceMappingURL=utils.js.map", "import { escape } from './utils.js';\nconst __meta = Symbol();\nexport const LII_RE = /^[a-zA-Z][a-zA-Z0-9\\.\\-_:]*$/; // Location-independent identifier, JSON Schema draft 7, par. 8.2.3\nexport function normalizeUri(input, scope) {\n    const uri = new URL(input, scope);\n    const out = uri.toString();\n    return out + (!uri.hash && out[out.length - 1] !== '#' ? '#' : '');\n}\nexport function isRef(obj) {\n    return obj !== null && typeof obj === 'object' && typeof obj.$ref === 'string';\n}\nexport function isAnnotated(obj) {\n    return obj !== null && typeof obj === 'object' && typeof obj[__meta] === 'object';\n}\nexport function isDerefd(obj) {\n    return isAnnotated(obj) && obj[__meta].derefd === true;\n}\nexport function getMeta(obj) {\n    if (!isAnnotated(obj)) {\n        throw new Error('Not annotated');\n    }\n    return obj[__meta];\n}\nexport function getKey(obj) {\n    const parent = getMeta(obj).parent;\n    if (typeof parent === 'undefined') {\n        return undefined;\n    }\n    else if (Array.isArray(parent)) {\n        for (let i = 0; i < parent.length; i++) {\n            if (parent[i] === obj) {\n                return i;\n            }\n        }\n        return undefined;\n    }\n    else {\n        return Object.keys(parent).find((k) => parent[k] === obj);\n    }\n}\nexport function getById(obj, id) {\n    if (obj === null || typeof obj !== 'object') {\n        throw new TypeError('Invalid object');\n    }\n    const meta = getMeta(obj);\n    return meta.registry[normalizeUri(id, meta.scope)];\n}\nexport function annotate(obj, options) {\n    if (obj === null || typeof obj !== 'object') {\n        throw new TypeError('Invalid object');\n    }\n    else if (isAnnotated(obj)) {\n        throw new Error('Already annotated');\n    }\n    obj[__meta] = {\n        registry: options.registry || {},\n        refs: options.refs || new Set(),\n        root: obj,\n    };\n    obj[__meta].registry[normalizeUri(options.scope)] = obj;\n    return (function _annotate(obj, scope) {\n        if (isRef(obj)) {\n            const uri = new URL(obj.$ref, scope);\n            uri.hash = '';\n            getMeta(obj).refs.add(uri.toString() + '#');\n            obj[__meta].scope = normalizeUri(scope);\n        }\n        else {\n            if (typeof obj.$id === 'string') {\n                if (!obj.$id || obj.$id === '#') {\n                    throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n                }\n                const id = new URL(obj.$id, scope);\n                if (id.hash && !id.hash.substr(1).match(LII_RE)) {\n                    throw new SyntaxError(`Invalid identifier ${obj.$id}`);\n                }\n                obj[__meta].scope = normalizeUri(obj.$id, scope);\n                obj[__meta].registry[obj[__meta].scope] = obj;\n                obj[__meta].root = obj;\n            }\n            else {\n                obj[__meta].scope = normalizeUri(scope);\n            }\n            const keys = Object.keys(obj);\n            for (let key of keys) {\n                const next = obj[key];\n                if (next !== null && typeof next === 'object' && !isAnnotated(next)) {\n                    const meta = getMeta(obj);\n                    next[__meta] = {\n                        registry: meta.registry,\n                        refs: meta.refs,\n                        parent: obj,\n                        root: meta.root,\n                    };\n                    _annotate(next, `${meta.scope}/${escape(key)}`);\n                }\n            }\n        }\n        return obj;\n    })(obj, options.scope);\n}\nexport function missingRefs(obj) {\n    const meta = getMeta(obj);\n    const known = new Set(Object.keys(meta.registry));\n    return [...meta.refs].filter((r) => !known.has(r));\n}\nexport function normalize(obj) {\n    if (!isAnnotated(obj)) {\n        throw new Error('Not annotated');\n    }\n    const meta = getMeta(obj);\n    if (typeof obj.$id === 'string') {\n        obj.$id = normalizeUri(obj.$id, meta.scope);\n    }\n    const keys = Object.keys(obj);\n    for (let key of keys) {\n        const o = obj[key];\n        if (o !== null && typeof o === 'object') {\n            if (isRef(o)) {\n                o.$ref = normalizeUri(o.$ref, meta.scope);\n            }\n            else {\n                normalize(o);\n            }\n        }\n    }\n    return obj;\n}\n//# sourceMappingURL=meta.js.map", "import * as meta from './meta.js';\nimport { unescape } from './utils.js';\nconst PREFIX_RE = /^(0|[1-9][0-9]*?)([#]?)$/;\nconst INDEX_RE = /-|0|[1-9][0-9]*/;\nexport function getPointer(obj) {\n    const p = [];\n    let parent, current = obj;\n    while ((parent = meta.getMeta(current).parent)) {\n        const frag = meta.getKey(current);\n        if (!frag) {\n            throw new Error(`Failed to get key for ${JSON.stringify(current)}`);\n        }\n        else {\n            p.push('' + frag);\n            current = parent;\n        }\n    }\n    return [''].concat(p.reverse()).join('/');\n}\nexport function resolve(obj, path) {\n    if (typeof obj === 'undefined') {\n        throw new TypeError('Bad object');\n    }\n    else if (typeof path !== 'string') {\n        throw new TypeError('Bad path');\n    }\n    else if (!path) {\n        return obj;\n    }\n    let current = obj;\n    const parts = path.split('/');\n    const prefix = parts.shift();\n    if (prefix) {\n        if (prefix.match(meta.LII_RE)) {\n            current = meta.getById(current, `#${prefix}`);\n        }\n        else {\n            const match = prefix.match(PREFIX_RE);\n            if (!match) {\n                throw new SyntaxError(`Bad prefix ${prefix}`);\n            }\n            else {\n                let levels = parseInt(match[1]);\n                while (levels--) {\n                    current = meta.getMeta(current).parent;\n                    if (!current) {\n                        throw new RangeError(`Invalid prefix \"${match[1]}\"`);\n                    }\n                }\n                if (match[2]) {\n                    return meta.getKey(current);\n                }\n            }\n        }\n    }\n    while (parts.length) {\n        if (current === null || typeof current !== 'object') {\n            throw new TypeError(`Invalid type at path`);\n        }\n        const part = unescape(parts.shift());\n        if (Array.isArray(current)) {\n            if (!part.match(INDEX_RE)) {\n                throw new SyntaxError(`Invalid array index \"${part}\"`);\n            }\n            else if (part === '-') {\n                throw new RangeError(`Index out of bounds \"${part}\"`);\n            }\n            else {\n                const index = parseInt(part);\n                if (index > current.length) {\n                    throw new RangeError(`Index out of bounds \"${part}\"`);\n                }\n                else {\n                    current = current[index];\n                }\n            }\n        }\n        else {\n            current = current[part];\n            if (typeof current === 'undefined') {\n                throw new RangeError(`Cannot find property \"${part}\"`);\n            }\n        }\n    }\n    return current;\n}\n//# sourceMappingURL=pointer.js.map", "import * as meta from './meta.js';\nimport * as pointer from './pointer.js';\nconst RELATIVE_RE = /^#(?:0|[1-9][0-9]*?)(?:$|\\/)/;\nfunction deref(obj) {\n    let out;\n    if (obj.$ref.match(RELATIVE_RE)) {\n        out = pointer.resolve(obj, obj.$ref.substr(1));\n    }\n    else {\n        const scope = meta.getMeta(obj).scope;\n        const uri = new URL(obj.$ref, scope);\n        const path = uri.hash ? uri.hash.substr(1) : undefined;\n        uri.hash = '';\n        out = meta.getMeta(obj).registry[uri.toString() + '#'];\n        if (!out) {\n            throw new Error(`Reference not in registry (${uri.toString()})`);\n        }\n        else if (path) {\n            out = pointer.resolve(out, path);\n        }\n    }\n    return out;\n}\nexport function resolve(obj, options) {\n    if (obj === null || typeof obj !== 'object') {\n        return obj;\n    }\n    return (function _parse(obj) {\n        if (!meta.isAnnotated(obj)) {\n            obj = meta.annotate(obj, options);\n        }\n        if (meta.isDerefd(obj)) {\n            return obj;\n        }\n        else if (meta.isRef(obj)) {\n            return deref(obj);\n        }\n        else {\n            const orig = Object.assign({}, obj);\n            Object.defineProperty(obj, 'toJSON', {\n                get: () => () => orig,\n                enumerable: false,\n                configurable: false,\n            });\n            const keys = Object.keys(obj);\n            for (let key of keys) {\n                const next = obj[key];\n                if (next !== null && typeof next === 'object') {\n                    if (meta.isRef(next)) {\n                        Object.defineProperty(obj, key, {\n                            get: () => {\n                                Object.defineProperty(obj, key, {\n                                    value: deref(next),\n                                    enumerable: true,\n                                    configurable: true,\n                                    writable: true,\n                                });\n                                return obj[key];\n                            },\n                            enumerable: true,\n                            configurable: true,\n                        });\n                    }\n                    else {\n                        obj[key] = _parse(next);\n                    }\n                }\n                else {\n                    obj[key] = next;\n                }\n            }\n            meta.getMeta(obj).derefd = true;\n            return obj;\n        }\n    })(obj);\n}\n//# sourceMappingURL=ref.js.map", "import { ParserError, RetrieverError } from './errors.js';\nimport * as meta from './meta.js';\nimport { resolve as refResolver } from './ref.js';\nexport * from './errors.js';\nexport { getMeta, isAnnotated, isRef, normalize, normalizeUri } from './meta.js';\nexport * from './patch.js';\nexport { resolve as pointer } from './pointer.js';\nexport * from './rebase.js';\nexport function scope(data) {\n    if (meta.isAnnotated(data)) {\n        return meta.getMeta(data).scope;\n    }\n}\nexport async function parse(dataOrUri, opts) {\n    let obj;\n    if (!opts || !opts.scope) {\n        throw new Error('No scope');\n    }\n    if (typeof dataOrUri === 'string') {\n        if (!opts.retriever) {\n            throw new Error('No retriever');\n        }\n        const uri = new URL(dataOrUri).toString();\n        obj = await opts.retriever(uri);\n        if (!opts.registry) {\n            opts.registry = {};\n        }\n        if (uri !== opts.scope) {\n            opts.registry[meta.normalizeUri(uri)] = obj;\n        }\n    }\n    else if (dataOrUri === null || typeof dataOrUri !== 'object') {\n        throw new TypeError('Bad data');\n    }\n    else {\n        obj = dataOrUri;\n    }\n    if (meta.isAnnotated(obj)) {\n        return obj;\n    }\n    else {\n        meta.annotate(obj, opts);\n        if (meta.getMeta(obj).refs.size > 0) {\n            const missingRefs = meta.missingRefs(obj);\n            if (missingRefs.length) {\n                if (!opts.retriever) {\n                    throw new Error('No retriever');\n                }\n                const registry = meta.getMeta(obj).registry;\n                const errors = [];\n                for (let r of missingRefs) {\n                    try {\n                        registry[r] = await opts.retriever(r);\n                    }\n                    catch (e) {\n                        errors.push(new RetrieverError(r, e));\n                    }\n                }\n                if (errors.length) {\n                    throw new ParserError(meta.getMeta(obj).scope, 'retriever', errors);\n                }\n            }\n            return refResolver(obj, opts);\n        }\n        else {\n            return obj;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", "import { parse as dereference } from \"jsonref\";\nimport get from \"lodash.get\";\nimport inflection from \"inflection\";\nimport { Field } from \"../Field.js\";\nimport { Operation } from \"../Operation.js\";\nimport { Parameter } from \"../Parameter.js\";\nimport { Resource } from \"../Resource.js\";\nimport getResourcePaths from \"../utils/getResources.js\";\nimport getType from \"./getType.js\";\nimport type { OpenAPIV3 } from \"openapi-types\";\nimport type { OperationType } from \"../Operation.js\";\n\nconst isRef = <T extends object>(\n  maybeRef: T | OpenAPIV3.ReferenceObject\n): maybeRef is T => !(\"$ref\" in maybeRef);\n\nexport const removeTrailingSlash = (url: string): string => {\n  if (url.endsWith(\"/\")) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nconst mergeResources = (resourceA: Resource, resourceB: Resource) => {\n  resourceB.fields?.forEach((fieldB) => {\n    if (!resourceA.fields?.some((fieldA) => fieldA.name === fieldB.name)) {\n      resourceA.fields?.push(fieldB);\n    }\n  });\n  resourceB.readableFields?.forEach((fieldB) => {\n    if (\n      !resourceA.readableFields?.some((fieldA) => fieldA.name === fieldB.name)\n    ) {\n      resourceA.readableFields?.push(fieldB);\n    }\n  });\n  resourceB.writableFields?.forEach((fieldB) => {\n    if (\n      !resourceA.writableFields?.some((fieldA) => fieldA.name === fieldB.name)\n    ) {\n      resourceA.writableFields?.push(fieldB);\n    }\n  });\n\n  return resourceA;\n};\n\nconst buildResourceFromSchema = (\n  schema: OpenAPIV3.SchemaObject,\n  name: string,\n  title: string,\n  url: string\n) => {\n  const description = schema.description;\n  const properties = schema.properties || {};\n\n  const fieldNames = Object.keys(properties);\n  const requiredFields = schema.required || [];\n\n  const readableFields: Field[] = [];\n  const writableFields: Field[] = [];\n\n  const fields = fieldNames.map((fieldName) => {\n    const property = properties[fieldName] as OpenAPIV3.SchemaObject;\n\n    const type = getType(property.type || \"string\", property.format);\n    const field = new Field(fieldName, {\n      id: null,\n      range: null,\n      type,\n      arrayType:\n        type === \"array\" && \"items\" in property\n          ? getType(\n              (property.items as OpenAPIV3.SchemaObject).type || \"string\",\n              (property.items as OpenAPIV3.SchemaObject).format\n            )\n          : null,\n      enum: property.enum\n        ? Object.fromEntries(\n            // Object.values is used because the array is annotated: it contains the __meta symbol used by jsonref.\n            Object.values<string | number>(property.enum).map((enumValue) => [\n              typeof enumValue === \"string\"\n                ? inflection.humanize(enumValue)\n                : enumValue,\n              enumValue,\n            ])\n          )\n        : null,\n      reference: null,\n      embedded: null,\n      nullable: property.nullable || false,\n      required: !!requiredFields.find((value) => value === fieldName),\n      description: property.description || \"\",\n    });\n\n    if (!property.writeOnly) {\n      readableFields.push(field);\n    }\n    if (!property.readOnly) {\n      writableFields.push(field);\n    }\n\n    return field;\n  });\n\n  return new Resource(name, url, {\n    id: null,\n    title,\n    description,\n    fields,\n    readableFields,\n    writableFields,\n    parameters: [],\n    getParameters: () => Promise.resolve([]),\n  });\n};\n\nconst buildOperationFromPathItem = (\n  httpMethod: `${OpenAPIV3.HttpMethods}`,\n  operationType: OperationType,\n  pathItem: OpenAPIV3.OperationObject\n): Operation => {\n  return new Operation(pathItem.summary || operationType, operationType, {\n    method: httpMethod.toUpperCase(),\n    deprecated: !!pathItem.deprecated,\n  });\n};\n\n/*\n  Assumptions:\n  RESTful APIs typically have two paths per resources: a `/noun` path and a\n  `/noun/{id}` path. `getResources` strips out the former, allowing us to focus\n  on the latter.\n\n  In OpenAPI 3, the `/noun/{id}` path will typically have a `get` action, that\n  probably accepts parameters and would respond with an object.\n*/\n\nexport default async function (\n  response: OpenAPIV3.Document,\n  entrypointUrl: string\n): Promise<Resource[]> {\n  const document = (await dereference(response, {\n    scope: entrypointUrl,\n  })) as OpenAPIV3.Document;\n\n  const paths = getResourcePaths(document.paths);\n\n  let serverUrlOrRelative = \"/\";\n  if (document.servers) {\n    serverUrlOrRelative = document.servers[0].url;\n  }\n\n  const serverUrl = new URL(serverUrlOrRelative, entrypointUrl).href;\n\n  const resources: Resource[] = [];\n\n  paths.forEach((path) => {\n    const splittedPath = removeTrailingSlash(path).split(\"/\");\n    const name = inflection.pluralize(splittedPath[splittedPath.length - 2]);\n    const url = `${removeTrailingSlash(serverUrl)}/${name}`;\n    const pathItem = document.paths[path];\n    if (!pathItem) {\n      throw new Error();\n    }\n\n    const title = inflection.classify(splittedPath[splittedPath.length - 2]);\n\n    const showOperation = pathItem.get;\n    const editOperation = pathItem.put || pathItem.patch;\n    if (!showOperation && !editOperation) return;\n\n    const showSchema = showOperation\n      ? (get(\n          showOperation,\n          \"responses.200.content.application/json.schema\",\n          get(document, `components.schemas[${title}]`)\n        ) as OpenAPIV3.SchemaObject)\n      : null;\n    const editSchema = editOperation\n      ? (get(\n          editOperation,\n          \"requestBody.content.application/json.schema\"\n        ) as unknown as OpenAPIV3.SchemaObject)\n      : null;\n\n    if (!showSchema && !editSchema) return;\n\n    const showResource = showSchema\n      ? buildResourceFromSchema(showSchema, name, title, url)\n      : null;\n    const editResource = editSchema\n      ? buildResourceFromSchema(editSchema, name, title, url)\n      : null;\n    let resource = showResource ?? editResource;\n    if (!resource) return;\n    if (showResource && editResource) {\n      resource = mergeResources(showResource, editResource);\n    }\n\n    const putOperation = pathItem.put;\n    const patchOperation = pathItem.patch;\n    const deleteOperation = pathItem.delete;\n    const pathCollection = document.paths[`/${name}`];\n    const listOperation = pathCollection && pathCollection.get;\n    const createOperation = pathCollection && pathCollection.post;\n    resource.operations = [\n      ...(showOperation\n        ? [buildOperationFromPathItem(\"get\", \"show\", showOperation)]\n        : []),\n      ...(putOperation\n        ? [buildOperationFromPathItem(\"put\", \"edit\", putOperation)]\n        : []),\n      ...(patchOperation\n        ? [buildOperationFromPathItem(\"patch\", \"edit\", patchOperation)]\n        : []),\n      ...(deleteOperation\n        ? [buildOperationFromPathItem(\"delete\", \"delete\", deleteOperation)]\n        : []),\n      ...(listOperation\n        ? [buildOperationFromPathItem(\"get\", \"list\", listOperation)]\n        : []),\n      ...(createOperation\n        ? [buildOperationFromPathItem(\"post\", \"create\", createOperation)]\n        : []),\n    ];\n\n    if (listOperation && listOperation.parameters) {\n      resource.parameters = listOperation.parameters\n        .filter(isRef)\n        .map(\n          (parameter) =>\n            new Parameter(\n              parameter.name,\n              parameter.schema && isRef(parameter.schema)\n                ? parameter.schema.type\n                  ? getType(parameter.schema.type)\n                  : null\n                : null,\n              parameter.required || false,\n              parameter.description || \"\",\n              parameter.deprecated\n            )\n        );\n    }\n\n    resources.push(resource);\n  });\n\n  // Guess embeddeds and references from property names\n  resources.forEach((resource) => {\n    resource.fields?.forEach((field) => {\n      const name = inflection.camelize(field.name).replace(/Ids?$/, \"\");\n\n      const guessedResource = resources.find(\n        (res) => res.title === inflection.classify(name)\n      );\n      if (!guessedResource) {\n        return;\n      }\n      field.maxCardinality = field.type === \"array\" ? null : 1;\n      if (field.type === \"object\" || field.arrayType === \"object\") {\n        field.embedded = guessedResource;\n      } else {\n        field.reference = guessedResource;\n      }\n    });\n  });\n\n  return resources;\n}\n", "import type { OpenAPIV2, OpenAPIV3 } from \"openapi-types\";\n\nconst getResources = (\n  paths: OpenAPIV2.PathsObject | OpenAPIV3.PathsObject\n): string[] =>\n  Array.from(\n    new Set(\n      Object.keys(paths).filter((path) => {\n        return new RegExp(\"^[^{}]+/{[^{}]+}/?$\").test(path);\n      })\n    )\n  );\n\nexport default getResources;\n", "import inflection from \"inflection\";\nimport type { FieldType } from \"../Field.js\";\n\nconst getType = (openApiType: string, format?: string): FieldType => {\n  if (format) {\n    switch (format) {\n      case \"int32\":\n      case \"int64\":\n        return \"integer\";\n      default:\n        return inflection.camelize(format.replace(\"-\", \"_\"), true);\n    }\n  }\n\n  return openApiType;\n};\n\nexport default getType;\n", "import { Api } from \"../Api.js\";\nimport handleJson, { removeTrailingSlash } from \"./handleJson.js\";\nimport type { OpenAPIV3 } from \"openapi-types\";\nimport type { RequestInitExtended } from \"./types\";\n\nexport interface ParsedOpenApi3Documentation {\n  api: Api;\n  response: OpenAPIV3.Document;\n  status: number;\n}\n\nexport default function parseOpenApi3Documentation(\n  entrypointUrl: string,\n  options: RequestInitExtended = {}\n): Promise<ParsedOpenApi3Documentation> {\n  entrypointUrl = removeTrailingSlash(entrypointUrl);\n  let headers: HeadersInit | undefined =\n    typeof options.headers === \"function\" ? options.headers() : options.headers;\n  headers = new Headers(headers);\n  headers.append(\"Accept\", \"application/vnd.openapi+json\");\n\n  return fetch(entrypointUrl, { ...options, headers: headers })\n    .then((res) => Promise.all([res, res.json()]))\n    .then(\n      ([res, response]: [res: Response, response: OpenAPIV3.Document]) => {\n        const title = response.info.title;\n        return handleJson(response, entrypointUrl).then((resources) => ({\n          api: new Api(entrypointUrl, { title, resources }),\n          response,\n          status: res.status,\n        }));\n      },\n      ([res, response]: [res: Response, response: OpenAPIV3.Document]) =>\n        Promise.reject({\n          api: new Api(entrypointUrl, { resources: [] }),\n          response,\n          status: res.status,\n        })\n    );\n}\n", "import get from \"lodash.get\";\nimport inflection from \"inflection\";\nimport { Field } from \"../Field.js\";\nimport { Resource } from \"../Resource.js\";\nimport getResourcePaths from \"../utils/getResources.js\";\nimport getType from \"../openapi3/getType.js\";\nimport type { OpenAPIV2 } from \"openapi-types\";\n\nexport const removeTrailingSlash = (url: string): string => {\n  if (url.endsWith(\"/\")) {\n    url = url.slice(0, -1);\n  }\n  return url;\n};\n\nexport default function (\n  response: OpenAPIV2.Document,\n  entrypointUrl: string\n): Resource[] {\n  const paths = getResourcePaths(response.paths);\n\n  return paths.map((path) => {\n    const splittedPath = removeTrailingSlash(path).split(\"/\");\n    const name = inflection.pluralize(splittedPath[splittedPath.length - 2]);\n    const url = `${removeTrailingSlash(entrypointUrl)}/${name}`;\n\n    const title = inflection.classify(splittedPath[splittedPath.length - 2]);\n\n    if (!response.definitions) {\n      throw new Error(); // @TODO\n    }\n\n    const definition = response.definitions[title];\n\n    if (!definition) {\n      throw new Error(); // @TODO\n    }\n\n    const description = definition.description;\n    const properties = definition.properties;\n\n    if (!properties) {\n      throw new Error(); // @TODO\n    }\n\n    const fieldNames = Object.keys(properties);\n    const requiredFields = get(\n      response,\n      [\"definitions\", title, \"required\"],\n      []\n    ) as string[];\n\n    const fields = fieldNames.map((fieldName) => {\n      const property = properties[fieldName];\n\n      return new Field(fieldName, {\n        id: null,\n        range: null,\n        type: getType(\n          get(property, \"type\", \"\") as string,\n          get(property, \"format\", \"\") as string\n        ),\n        enum: property.enum\n          ? Object.fromEntries(\n              property.enum.map((enumValue: string | number) => [\n                typeof enumValue === \"string\"\n                  ? inflection.humanize(enumValue)\n                  : enumValue,\n                enumValue,\n              ])\n            )\n          : null,\n        reference: null,\n        embedded: null,\n        required: !!requiredFields.find((value) => value === fieldName),\n        description: property.description || \"\",\n      });\n    });\n\n    return new Resource(name, url, {\n      id: null,\n      title,\n      description,\n      fields,\n      readableFields: fields,\n      writableFields: fields,\n    });\n  });\n}\n", "import { HttpError } from 'react-admin';\nimport {\n  fetchJsonLd,\n  getDocumentationUrlFromHeaders,\n} from '@api-platform/api-doc-parser';\nimport jsonld from 'jsonld';\nimport type { ContextDefinition, NodeObject } from 'jsonld';\nimport type { JsonLdObj } from 'jsonld/jsonld-spec';\nimport type { HttpClientOptions, HydraHttpClientResponse } from '../types.js';\n\n/**\n * Sends HTTP requests to a Hydra API.\n */\nfunction fetchHydra(\n  url: URL,\n  options: HttpClientOptions = {},\n): Promise<HydraHttpClientResponse> {\n  let requestHeaders = options.headers ?? new Headers();\n\n  if (\n    typeof requestHeaders !== 'function' &&\n    options.user &&\n    options.user.authenticated &&\n    options.user.token\n  ) {\n    requestHeaders = new Headers(requestHeaders);\n    requestHeaders.set('Authorization', options.user.token);\n  }\n\n  const authOptions = { ...options, headers: requestHeaders };\n\n  return fetchJsonLd(url.href, authOptions).then((data) => {\n    const { status, statusText, headers } = data.response;\n    const body = 'body' in data ? data.body : undefined;\n\n    if (status < 200 || status >= 300) {\n      if (!body) {\n        return Promise.reject(new HttpError(statusText, status));\n      }\n\n      delete (body as NodeObject).trace;\n\n      const documentLoader = (input: string) => {\n        const loaderOptions = authOptions;\n        loaderOptions.method = 'GET';\n        delete loaderOptions.body;\n\n        return fetchJsonLd(input, loaderOptions).then((response) => {\n          if (!('body' in response)) {\n            throw new Error(\n              'An empty response was received when expanding JSON-LD error document.',\n            );\n          }\n          return response;\n        });\n      };\n      const base = getDocumentationUrlFromHeaders(headers);\n\n      return (\n        '@context' in body\n          ? jsonld.expand(body, {\n              base,\n              documentLoader,\n            })\n          : documentLoader(base).then((response) =>\n              jsonld.expand(body, {\n                expandContext: response.document as ContextDefinition,\n              }),\n            )\n      )\n        .then((json) =>\n          Promise.reject(\n            new HttpError(\n              (\n                json[0]?.[\n                  'http://www.w3.org/ns/hydra/core#description'\n                ] as JsonLdObj[]\n              )?.[0]?.['@value'],\n              status,\n              json,\n            ),\n          ),\n        )\n        .catch((e) => {\n          if ('body' in e) {\n            return Promise.reject(e);\n          }\n\n          return Promise.reject(new HttpError(statusText, status));\n        });\n    }\n\n    if (Array.isArray(body)) {\n      return Promise.reject(\n        new Error('Hydra response should not be an array.'),\n      );\n    }\n    if (body && !('@id' in body)) {\n      return Promise.reject(\n        new Error('Hydra response needs to have an @id member.'),\n      );\n    }\n\n    return {\n      status,\n      headers,\n      json: body as NodeObject,\n    };\n  });\n}\n\nexport default fetchHydra;\n", "import type { Resource } from '@api-platform/api-doc-parser';\nimport type { FilterParameter } from '../types.js';\n\n/**\n * @param schema The schema of a resource\n *\n * @returns The filter parameters\n */\nexport const resolveSchemaParameters = (schema: Resource) => {\n  if (!schema.parameters || !schema.getParameters) {\n    return Promise.resolve([]);\n  }\n\n  return !schema.parameters.length\n    ? schema.getParameters()\n    : Promise.resolve(schema.parameters);\n};\n\nconst ORDER_MARKER = 'order[';\n\n/**\n * @param schema The schema of a resource\n *\n * @returns The order filter parameters\n */\nexport const getOrderParametersFromSchema = (\n  schema: Resource,\n): Promise<string[]> => {\n  if (!schema.fields) {\n    return Promise.resolve([]);\n  }\n\n  const authorizedFields = schema.fields.map((field) => field.name);\n  return resolveSchemaParameters(schema).then((parameters) =>\n    parameters\n      .map((filter) => filter.variable)\n      .filter((filter) => filter.includes(ORDER_MARKER))\n      .map((orderFilter) =>\n        orderFilter.replace(ORDER_MARKER, '').replace(']', ''),\n      )\n      .filter((filter) =>\n        authorizedFields.includes(\n          filter.split('.')[0] ?? '', // split to manage nested properties\n        ),\n      ),\n  );\n};\n\n/**\n * @param schema The schema of a resource\n *\n * @returns The filter parameters without the order ones\n */\nexport const getFiltersParametersFromSchema = (\n  schema: Resource,\n): Promise<FilterParameter[]> => {\n  if (!schema.fields) {\n    return Promise.resolve([]);\n  }\n\n  const authorizedFields = schema.fields.map((field) => field.name);\n  return resolveSchemaParameters(schema).then((parameters) =>\n    parameters\n      .map((filter) => ({\n        name: filter.variable,\n        isRequired: filter.required,\n      }))\n      .filter((filter) => !filter.name.includes(ORDER_MARKER))\n      .filter((filter) => authorizedFields.includes(filter.name)),\n  );\n};\n", "import React from 'react';\nimport dataProviderFactory from './dataProvider.js';\nimport /* tree-shaking no-side-effects-when-called */ schemaAnalyzer from './schemaAnalyzer.js';\nimport AdminGuesser from '../core/AdminGuesser.js';\nimport type { AdminGuesserProps } from '../core/AdminGuesser.js';\nimport type { MercureOptions } from '../types.js';\n\ntype AdminGuesserPartialProps = Omit<\n  AdminGuesserProps,\n  'dataProvider' | 'schemaAnalyzer'\n> &\n  Partial<Pick<AdminGuesserProps, 'dataProvider' | 'schemaAnalyzer'>>;\n\nexport interface HydraAdminProps extends AdminGuesserPartialProps {\n  entrypoint: string;\n  mercure?: MercureOptions | boolean;\n}\n\nconst hydraSchemaAnalyzer = schemaAnalyzer();\n\nconst HydraAdmin = ({\n  entrypoint,\n  mercure,\n  dataProvider = dataProviderFactory({\n    entrypoint,\n    mercure: mercure ?? true,\n  }),\n  schemaAnalyzer: adminSchemaAnalyzer = hydraSchemaAnalyzer,\n  ...props\n}: HydraAdminProps) => (\n  <AdminGuesser\n    dataProvider={dataProvider}\n    schemaAnalyzer={adminSchemaAnalyzer}\n    {...props}\n  />\n);\n\nexport default HydraAdmin;\n", "import type { Field, Resource } from '@api-platform/api-doc-parser';\nimport type { HttpError } from 'react-admin';\nimport type { JsonLdObj } from 'jsonld/jsonld-spec';\nimport {\n  getFiltersParametersFromSchema,\n  getOrderParametersFromSchema,\n} from '../introspection/schemaAnalyzer.js';\nimport type { SchemaAnalyzer, SubmissionErrors } from '../types.js';\n\nconst withHttpScheme = (value: string | null | undefined) =>\n  value?.startsWith('https://') ? value.replace(/^https/, 'http') : value;\n\n/**\n * @param schema The schema of a resource\n *\n * @returns The name of the reference field\n */\nconst getFieldNameFromSchema = (schema: Resource) => {\n  if (!schema.fields) {\n    return '';\n  }\n\n  const field = schema.fields.find(\n    (schemaField) =>\n      withHttpScheme(schemaField.id) === 'http://schema.org/name',\n  );\n\n  return field ? field.name : 'id';\n};\n\n/**\n * @returns The type of the field\n */\nconst getFieldType = (field: Field) => {\n  switch (withHttpScheme(field.id)) {\n    case 'http://schema.org/identifier':\n      return withHttpScheme(field.range) ===\n        'http://www.w3.org/2001/XMLSchema#integer'\n        ? 'integer_id'\n        : 'id';\n    case 'http://schema.org/email':\n      return 'email';\n    case 'http://schema.org/url':\n      return 'url';\n    default:\n  }\n\n  if (field.embedded !== null && field.maxCardinality !== 1) {\n    return 'array';\n  }\n\n  switch (withHttpScheme(field.range)) {\n    case 'http://www.w3.org/2001/XMLSchema#array':\n      return 'array';\n    case 'http://www.w3.org/2001/XMLSchema#integer':\n      return 'integer';\n    case 'http://www.w3.org/2001/XMLSchema#decimal':\n    case 'http://www.w3.org/2001/XMLSchema#float':\n      return 'float';\n    case 'http://www.w3.org/2001/XMLSchema#boolean':\n      return 'boolean';\n    case 'http://www.w3.org/2001/XMLSchema#date':\n      return 'date';\n    case 'http://www.w3.org/2001/XMLSchema#dateTime':\n      return 'dateTime';\n    default:\n      return 'text';\n  }\n};\n\nconst getSubmissionErrors = (error: HttpError) => {\n  if (!error.body?.[0]) {\n    return null;\n  }\n\n  const content = error.body[0];\n  const violationKey = Object.keys(content).find((key) =>\n    key.includes('violations'),\n  );\n  if (!violationKey) {\n    return null;\n  }\n  const base = violationKey.substring(0, violationKey.indexOf('#'));\n\n  const violations: SubmissionErrors = content[violationKey].reduce(\n    (previousViolations: SubmissionErrors, violation: JsonLdObj) =>\n      !violation[`${base}#propertyPath`] || !violation[`${base}#message`]\n        ? previousViolations\n        : {\n            ...previousViolations,\n            [(violation[`${base}#propertyPath`] as JsonLdObj[])[0]?.[\n              '@value'\n            ] as string]: (violation[`${base}#message`] as JsonLdObj[])[0]?.[\n              '@value'\n            ],\n          },\n    {},\n  );\n  if (Object.keys(violations).length === 0) {\n    return null;\n  }\n\n  return violations;\n};\n\nexport default function schemaAnalyzer(): SchemaAnalyzer {\n  return {\n    getFieldNameFromSchema,\n    getOrderParametersFromSchema,\n    getFiltersParametersFromSchema,\n    getFieldType,\n    getSubmissionErrors,\n  };\n}\n", "import { parseOpenApi3Documentation } from '@api-platform/api-doc-parser';\nimport { fetchUtils } from 'react-admin';\nimport { adminDataProvider } from '../dataProvider/index.js';\nimport type {\n  ApiPlatformAdminDataProvider,\n  HttpClientOptions,\n  MercureOptions,\n  OpenApiDataProviderFactoryParams,\n} from '../types.js';\n\nconst fetchJson = (url: URL, options: HttpClientOptions = {}) => {\n  let { headers } = options;\n  if (!headers) {\n    headers = {};\n  }\n  headers = typeof headers === 'function' ? headers() : headers;\n  headers = new Headers(headers);\n\n  return fetchUtils.fetchJson(url, { ...options, headers });\n};\n\nconst defaultParams: Required<\n  Omit<\n    OpenApiDataProviderFactoryParams,\n    'entrypoint' | 'docEntrypoint' | 'dataProvider'\n  >\n> = {\n  httpClient: fetchJson,\n  apiDocumentationParser: parseOpenApi3Documentation,\n  mercure: false,\n};\n\nfunction dataProvider(\n  factoryParams: OpenApiDataProviderFactoryParams,\n): ApiPlatformAdminDataProvider {\n  const {\n    dataProvider: {\n      getList,\n      getOne,\n      getMany,\n      getManyReference,\n      update,\n      updateMany,\n      create,\n      delete: deleteFn,\n      deleteMany,\n    },\n    entrypoint,\n    docEntrypoint,\n    httpClient,\n    apiDocumentationParser,\n  }: Required<OpenApiDataProviderFactoryParams> = {\n    ...defaultParams,\n    ...factoryParams,\n  };\n  const entrypointUrl = new URL(entrypoint, window.location.href);\n  const mercure: MercureOptions | null = factoryParams.mercure\n    ? {\n        hub: null,\n        jwt: null,\n        topicUrl: entrypointUrl,\n        ...(factoryParams.mercure === true ? {} : factoryParams.mercure),\n      }\n    : null;\n\n  const { introspect, subscribe, unsubscribe } = adminDataProvider({\n    entrypoint,\n    docEntrypoint,\n    httpClient,\n    apiDocumentationParser,\n    mercure: factoryParams.mercure ?? false,\n  });\n\n  return {\n    getList,\n    getOne,\n    getMany,\n    getManyReference,\n    update,\n    updateMany,\n    create,\n    delete: deleteFn,\n    deleteMany,\n    introspect,\n    subscribe: (resourceIds, callback) => {\n      if (mercure?.hub === null) {\n        return Promise.resolve({ data: null });\n      }\n\n      return subscribe(resourceIds, callback);\n    },\n    unsubscribe,\n  };\n}\n\nexport default dataProvider;\n", "import React from 'react';\nimport dataProviderFactory from './dataProvider.js';\nimport { restDataProvider } from '../dataProvider/index.js';\nimport /* tree-shaking no-side-effects-when-called */ schemaAnalyzer from './schemaAnalyzer.js';\nimport AdminGuesser from '../core/AdminGuesser.js';\nimport type { AdminGuesserProps } from '../core/AdminGuesser.js';\nimport type { MercureOptions } from '../types.js';\n\ntype AdminGuesserPartialProps = Omit<\n  AdminGuesserProps,\n  'dataProvider' | 'schemaAnalyzer'\n> &\n  Partial<Pick<AdminGuesserProps, 'dataProvider' | 'schemaAnalyzer'>>;\n\nexport interface OpenApiAdminProps extends AdminGuesserPartialProps {\n  entrypoint: string;\n  docEntrypoint: string;\n  mercure?: MercureOptions | false;\n}\n\nconst openApiSchemaAnalyzer = schemaAnalyzer();\n\nconst OpenApiAdmin = ({\n  entrypoint,\n  docEntrypoint,\n  mercure,\n  dataProvider = dataProviderFactory({\n    dataProvider: restDataProvider(entrypoint),\n    entrypoint,\n    docEntrypoint,\n    mercure: mercure ?? false,\n  }),\n  schemaAnalyzer: adminSchemaAnalyzer = openApiSchemaAnalyzer,\n  ...props\n}: OpenApiAdminProps) => (\n  <AdminGuesser\n    dataProvider={dataProvider}\n    schemaAnalyzer={adminSchemaAnalyzer}\n    {...props}\n  />\n);\n\nexport default OpenApiAdmin;\n", "import type { Field, Resource } from '@api-platform/api-doc-parser';\nimport {\n  getFiltersParametersFromSchema,\n  getOrderParametersFromSchema,\n} from '../introspection/schemaAnalyzer.js';\nimport type { SchemaAnalyzer } from '../types.js';\n\n/**\n * @param schema The schema of a resource\n *\n * @returns The name of the reference field\n */\nconst getFieldNameFromSchema = (schema: Resource) => {\n  if (!schema.fields?.[0]) {\n    return '';\n  }\n\n  if (schema.fields.find((schemaField) => schemaField.name === 'id')) {\n    return 'id';\n  }\n\n  return schema.fields[0].name;\n};\n\n/**\n * @returns The type of the field\n */\nconst getFieldType = (field: Field) => {\n  switch (field.type) {\n    case 'array':\n      return 'array';\n    case 'string':\n    case 'byte':\n    case 'binary':\n    case 'hexBinary':\n    case 'base64Binary':\n    case 'uuid':\n    case 'password':\n      return 'text';\n    case 'integer':\n    case 'negativeInteger':\n    case 'nonNegativeInteger':\n    case 'positiveInteger':\n    case 'nonPositiveInteger':\n      return 'integer';\n    case 'number':\n    case 'decimal':\n    case 'double':\n    case 'float':\n      return 'float';\n    case 'boolean':\n      return 'boolean';\n    case 'date':\n      return 'date';\n    case 'dateTime':\n    case 'duration':\n    case 'time':\n      return 'dateTime';\n    case 'email':\n      return 'email';\n    case 'url':\n      return 'url';\n    default:\n      return 'text';\n  }\n};\n\nconst getSubmissionErrors = () => null;\n\nexport default function schemaAnalyzer(): SchemaAnalyzer {\n  return {\n    getFieldNameFromSchema,\n    getOrderParametersFromSchema,\n    getFiltersParametersFromSchema,\n    getFieldType,\n    getSubmissionErrors,\n  };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAUA,QAAI,YAAY;AAShB,aAAS,aAAa,OAAO;AAG3B,UAAI,SAAS;AACb,UAAI,SAAS,QAAQ,OAAO,MAAM,YAAY,YAAY;AACxD,YAAI;AACF,mBAAS,CAAC,EAAE,QAAQ;AAAA,QACtB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AAUA,aAAS,QAAQ,MAAM,WAAW;AAChC,aAAO,SAAS,KAAK;AACnB,eAAO,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5B;AAAA,IACF;AAGA,QAAI,YAAY,SAAS;AAAzB,QACI,cAAc,OAAO;AAGzB,QAAI,eAAe,UAAU;AAG7B,QAAI,iBAAiB,YAAY;AAGjC,QAAI,mBAAmB,aAAa,KAAK,MAAM;AAO/C,QAAI,iBAAiB,YAAY;AAGjC,QAAI,eAAe,QAAQ,OAAO,gBAAgB,MAAM;AA0BxD,aAAS,aAAa,OAAO;AAC3B,aAAO,CAAC,CAAC,SAAS,OAAO,SAAS;AAAA,IACpC;AA8BA,aAASA,eAAc,OAAO;AAC5B,UAAI,CAAC,aAAa,KAAK,KACnB,eAAe,KAAK,KAAK,KAAK,aAAa,aAAa,KAAK,GAAG;AAClE,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,aAAa,KAAK;AAC9B,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,eAAe,KAAK,OAAO,aAAa,KAAK,MAAM;AAC9D,aAAQ,OAAO,QAAQ,cACrB,gBAAgB,QAAQ,aAAa,KAAK,IAAI,KAAK;AAAA,IACvD;AAEA,WAAO,UAAUA;AAAA;AAAA;;;AC1IjB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,wBAAwBC;AAMhC,aAASA,uBAAsB,SAAS;AACtC,YAAM,qBAAqB;AAAA,QACzB,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,uBAAuB;AAAA,QACvB,mBAAmB;AAAA,QACnB,uBAAuB;AAAA,QACvB,OAAO;AAAA,QACP,GAAG;AAAA,MACL;AACA,YAAM,eAAe,mBAAmB,eAAe,gBAAgB;AACvE,YAAM,iBAAiB,mBAAmB,iBACtC,mBACA;AACJ,YAAM,wBAAwB,mBAAmB,wBAC7C,iBACA;AACJ,YAAM,oBAAoB,mBAAmB,oBACzC,eACA;AAEJ,eAAS,iBAAiB,KAAK;AAC7B,eAAO,mBAAmB,wBAAwB,MAAM;AAAA,MAC1D;AAEA,YAAM,QAAQ,mBAAmB,QAAQ,YAAY;AACrD,aAAO;AAAA;AAAA;AAAA,UAGC,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YASf,YAAY;AAAA,YACZ,qBAAqB;AAAA;AAAA,gBAEjB,iBAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUrD,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,KAAK;AAAA;AAAA;AAAA,UAGH,YAAY;AAAA,cACR,iBAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASxC,iBAAiB,2BAA2B,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQtD,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAWd,YAAY;AAAA;AAAA;AAAA,QAGZ,iBAAiB,cAAc,CAAC;AAAA,QAChC,iBAAiB,mBAAmB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA4C7C;AAAA;AAAA;;;AChJA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,OAAO;AAKf,QAAI;AACJ,YAAQ,OAAO;AAEf,KAAC,SAAUC,OAAM;AACf,MAAAA,MAAK,MAAM,IAAI;AACf,MAAAA,MAAK,UAAU,IAAI;AACnB,MAAAA,MAAK,sBAAsB,IAAI;AAC/B,MAAAA,MAAK,qBAAqB,IAAI;AAC9B,MAAAA,MAAK,eAAe,IAAI;AACxB,MAAAA,MAAK,OAAO,IAAI;AAChB,MAAAA,MAAK,UAAU,IAAI;AACnB,MAAAA,MAAK,iBAAiB,IAAI;AAC1B,MAAAA,MAAK,iBAAiB,IAAI;AAC1B,MAAAA,MAAK,qBAAqB,IAAI;AAC9B,MAAAA,MAAK,UAAU,IAAI;AACnB,MAAAA,MAAK,KAAK,IAAI;AACd,MAAAA,MAAK,OAAO,IAAI;AAChB,MAAAA,MAAK,QAAQ,IAAI;AACjB,MAAAA,MAAK,SAAS,IAAI;AAClB,MAAAA,MAAK,MAAM,IAAI;AACf,MAAAA,MAAK,MAAM,IAAI;AACf,MAAAA,MAAK,MAAM,IAAI;AACf,MAAAA,MAAK,QAAQ,IAAI;AACjB,MAAAA,MAAK,cAAc,IAAI;AACvB,MAAAA,MAAK,WAAW,IAAI;AACpB,MAAAA,MAAK,YAAY,IAAI;AACrB,MAAAA,MAAK,WAAW,IAAI;AACpB,MAAAA,MAAK,eAAe,IAAI;AACxB,MAAAA,MAAK,mBAAmB,IAAI;AAC5B,MAAAA,MAAK,2BAA2B,IAAI;AACpC,MAAAA,MAAK,wBAAwB,IAAI;AACjC,MAAAA,MAAK,wBAAwB,IAAI;AACjC,MAAAA,MAAK,kBAAkB,IAAI;AAC3B,MAAAA,MAAK,wBAAwB,IAAI;AACjC,MAAAA,MAAK,2BAA2B,IAAI;AACpC,MAAAA,MAAK,uBAAuB,IAAI;AAChC,MAAAA,MAAK,sBAAsB,IAAI;AAC/B,MAAAA,MAAK,uBAAuB,IAAI;AAChC,MAAAA,MAAK,8BAA8B,IAAI;AACvC,MAAAA,MAAK,sBAAsB,IAAI;AAC/B,MAAAA,MAAK,kBAAkB,IAAI;AAC3B,MAAAA,MAAK,uBAAuB,IAAI;AAChC,MAAAA,MAAK,uBAAuB,IAAI;AAChC,MAAAA,MAAK,0BAA0B,IAAI;AACnC,MAAAA,MAAK,sBAAsB,IAAI;AAC/B,MAAAA,MAAK,qBAAqB,IAAI;AAC9B,MAAAA,MAAK,6BAA6B,IAAI;AAAA,IACxC,GAAG,SAAS,QAAQ,OAAO,OAAO,CAAC,EAAE;AAAA;AAAA;;;ACzDrC;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,kBAAkB;AAE1B,QAAI,SAAS;AAOb,aAAS,gBAAgB,aAAa,eAAe;AACnD,UAAI,YAAY;AAEhB,iBAAW,cAAc,YAAY,aAAa;AAChD,YAAI,WAAW,SAAS,OAAO,KAAK,sBAAsB;AACxD,cAAI;AAEJ,cAAI,iBAAiB,MAAM;AAIzB,gBAAI,WAAW;AACb,qBAAO;AAAA,YACT;AAEA,wBAAY;AAAA,UACd,aACI,mBAAmB,WAAW,UAAU,QAC1C,qBAAqB,SACjB,SACA,iBAAiB,WAAW,eAChC;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AAMvB,aAAS,aAAa,OAAO;AAC3B,aAAO,OAAO,SAAS,YAAY,UAAU;AAAA,IAC/C;AAAA;AAAA;;;ACbA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAEpB,aAAS,UAAU,WAAW,SAAS;AACrC,YAAM,mBAAmB,QAAQ,SAAS;AAE1C,UAAI,CAAC,kBAAkB;AACrB,cAAM,IAAI;AAAA,UACR,WAAW,OAAO,UAAU;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACfA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,cAAc;AAEtB,QAAI,aAAa;AAEjB,QAAM,aAAa;AASnB,aAAS,YAAY,QAAQ,UAAU;AACrC,UAAI,gBAAgB;AACpB,UAAI,OAAO;AAEX,iBAAW,SAAS,OAAO,KAAK,SAAS,UAAU,GAAG;AACpD,eAAO,MAAM,UAAU,aAAa,GAAG,WAAW,WAAW,KAAK;AAElE,YAAI,MAAM,SAAS,UAAU;AAC3B;AAAA,QACF;AAEA,wBAAgB,MAAM,QAAQ,MAAM,CAAC,EAAE;AACvC,gBAAQ;AAAA,MACV;AAEA,aAAO;AAAA,QACL;AAAA,QACA,QAAQ,WAAW,IAAI;AAAA,MACzB;AAAA,IACF;AAAA;AAAA;;;ACrCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBAAgB;AACxB,YAAQ,sBAAsB;AAE9B,QAAI,YAAY;AAKhB,aAAS,cAAc,UAAU;AAC/B,aAAO;AAAA,QACL,SAAS;AAAA,SACR,GAAG,UAAU,aAAa,SAAS,QAAQ,SAAS,KAAK;AAAA,MAC5D;AAAA,IACF;AAKA,aAAS,oBAAoB,QAAQ,gBAAgB;AACnD,YAAM,wBAAwB,OAAO,eAAe,SAAS;AAC7D,YAAM,OAAO,GAAG,SAAS,qBAAqB,IAAI,OAAO;AACzD,YAAM,YAAY,eAAe,OAAO;AACxC,YAAM,aAAa,OAAO,eAAe,OAAO;AAChD,YAAM,UAAU,eAAe,OAAO;AACtC,YAAM,eAAe,eAAe,SAAS,IAAI,wBAAwB;AACzE,YAAM,YAAY,eAAe,SAAS;AAC1C,YAAM,cAAc,GAAG,OAAO,IAAI,IAAI,OAAO,IAAI,SAAS;AAAA;AAC1D,YAAM,QAAQ,KAAK,MAAM,cAAc;AACvC,YAAM,eAAe,MAAM,SAAS;AAEpC,UAAI,aAAa,SAAS,KAAK;AAC7B,cAAM,eAAe,KAAK,MAAM,YAAY,EAAE;AAC9C,cAAM,mBAAmB,YAAY;AACrC,cAAM,WAAW,CAAC;AAElB,iBAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK,IAAI;AAChD,mBAAS,KAAK,aAAa,MAAM,GAAG,IAAI,EAAE,CAAC;AAAA,QAC7C;AAEA,eACE,cACA,mBAAmB;AAAA,UACjB,CAAC,GAAG,OAAO,MAAM,SAAS,CAAC,CAAC;AAAA,UAC5B,GAAG,SAAS,MAAM,GAAG,eAAe,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,OAAO,CAAC;AAAA,UACtE,CAAC,KAAK,IAAI,SAAS,gBAAgB,CAAC;AAAA,UACpC,CAAC,KAAK,SAAS,eAAe,CAAC,CAAC;AAAA,QAClC,CAAC;AAAA,MAEL;AAEA,aACE,cACA,mBAAmB;AAAA;AAAA,QAEjB,CAAC,GAAG,UAAU,CAAC,MAAM,MAAM,YAAY,CAAC,CAAC;AAAA,QACzC,CAAC,GAAG,OAAO,MAAM,YAAY;AAAA,QAC7B,CAAC,KAAK,IAAI,SAAS,SAAS,CAAC;AAAA,QAC7B,CAAC,GAAG,UAAU,CAAC,MAAM,MAAM,YAAY,CAAC,CAAC;AAAA,MAC3C,CAAC;AAAA,IAEL;AAEA,aAAS,mBAAmB,OAAO;AACjC,YAAM,gBAAgB,MAAM,OAAO,CAAC,CAAC,GAAG,IAAI,MAAM,SAAS,MAAS;AACpE,YAAM,SAAS,KAAK,IAAI,GAAG,cAAc,IAAI,CAAC,CAAC,MAAM,MAAM,OAAO,MAAM,CAAC;AACzE,aAAO,cACJ,IAAI,CAAC,CAAC,QAAQ,IAAI,MAAM,OAAO,SAAS,MAAM,KAAK,OAAO,MAAM,OAAO,GAAG,EAC1E,KAAK,IAAI;AAAA,IACd;AAAA;AAAA;;;ACzEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AACvB,YAAQ,cAAc;AACtB,YAAQ,aAAa;AAErB,QAAI,gBAAgB;AAEpB,QAAI,YAAY;AAEhB,QAAI,iBAAiB;AAErB,aAAS,oBAAoB,MAAM;AACjC,YAAM,WAAW,KAAK,CAAC;AAEvB,UAAI,YAAY,QAAQ,UAAU,YAAY,YAAY,UAAU;AAClE,eAAO;AAAA,UACL,OAAO;AAAA,UACP,QAAQ,KAAK,CAAC;AAAA,UACd,WAAW,KAAK,CAAC;AAAA,UACjB,MAAM,KAAK,CAAC;AAAA,UACZ,eAAe,KAAK,CAAC;AAAA,UACrB,YAAY,KAAK,CAAC;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAQA,QAAM,eAAN,MAAM,sBAAqB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA8C/B,YAAY,YAAY,SAAS;AAC/B,YAAI,aAAa,iBAAiB;AAElC,cAAM,EAAE,OAAO,QAAQ,WAAW,MAAM,eAAe,WAAW,IAChE,oBAAoB,OAAO;AAC7B,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,aAAK,OAAO,SAAS,QAAQ,SAAS,SAAS,OAAO;AACtD,aAAK,gBACH,kBAAkB,QAAQ,kBAAkB,SACxC,gBACA;AAEN,aAAK,QAAQ;AAAA,UACX,MAAM,QAAQ,KAAK,IAAI,QAAQ,QAAQ,CAAC,KAAK,IAAI;AAAA,QACnD;AACA,cAAM,gBAAgB;AAAA,WACnB,cAAc,KAAK,WAAW,QAAQ,gBAAgB,SACnD,SACA,YAAY,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE,OAAO,CAAC,QAAQ,OAAO,IAAI;AAAA,QACrE;AAEA,aAAK,SACH,WAAW,QAAQ,WAAW,SAC1B,SACA,kBAAkB,QAAQ,kBAAkB,SAC5C,UACC,kBAAkB,cAAc,CAAC,OAAO,QACzC,oBAAoB,SACpB,SACA,gBAAgB;AACtB,aAAK,YACH,cAAc,QAAQ,cAAc,SAChC,YACA,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc,IAAI,CAAC,QAAQ,IAAI,KAAK;AAC1C,aAAK,YACH,aAAa,SACT,UAAU,IAAI,CAAC,SAAS,GAAG,UAAU,aAAa,QAAQ,GAAG,CAAC,IAC9D,kBAAkB,QAAQ,kBAAkB,SAC5C,SACA,cAAc;AAAA,UAAI,CAAC,SAChB,GAAG,UAAU,aAAa,IAAI,QAAQ,IAAI,KAAK;AAAA,QAClD;AACN,cAAM,sBAAsB,GAAG,cAAc;AAAA,UAC3C,kBAAkB,QAAQ,kBAAkB,SACxC,SACA,cAAc;AAAA,QACpB,IACI,kBAAkB,QAAQ,kBAAkB,SAC1C,SACA,cAAc,aAChB;AACJ,aAAK,cACF,OACC,eAAe,QAAQ,eAAe,SAClC,aACA,wBAAwB,QAAQ,SAAS,SAC3C,OACA,uBAAO,OAAO,IAAI;AAGxB,eAAO,iBAAiB,MAAM;AAAA,UAC5B,SAAS;AAAA,YACP,UAAU;AAAA,YACV,YAAY;AAAA,UACd;AAAA,UACA,MAAM;AAAA,YACJ,YAAY;AAAA,UACd;AAAA,UACA,OAAO;AAAA,YACL,YAAY;AAAA,UACd;AAAA,UACA,QAAQ;AAAA,YACN,YAAY;AAAA,UACd;AAAA,UACA,WAAW;AAAA,YACT,YAAY;AAAA,UACd;AAAA,UACA,eAAe;AAAA,YACb,YAAY;AAAA,UACd;AAAA,QACF,CAAC;AAKD,YACE,kBAAkB,QAClB,kBAAkB,UAClB,cAAc,OACd;AACA,iBAAO,eAAe,MAAM,SAAS;AAAA,YACnC,OAAO,cAAc;AAAA,YACrB,UAAU;AAAA,YACV,cAAc;AAAA,UAChB,CAAC;AAAA,QACH,WAAW,MAAM,mBAAmB;AAClC,gBAAM,kBAAkB,MAAM,aAAY;AAAA,QAC5C,OAAO;AACL,iBAAO,eAAe,MAAM,SAAS;AAAA,YACnC,OAAO,MAAM,EAAE;AAAA,YACf,UAAU;AAAA,YACV,cAAc;AAAA,UAChB,CAAC;AAAA,QACH;AAAA,MAEF;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,YAAI,SAAS,KAAK;AAElB,YAAI,KAAK,OAAO;AACd,qBAAW,QAAQ,KAAK,OAAO;AAC7B,gBAAI,KAAK,KAAK;AACZ,wBAAU,UAAU,GAAG,eAAe,eAAe,KAAK,GAAG;AAAA,YAC/D;AAAA,UACF;AAAA,QACF,WAAW,KAAK,UAAU,KAAK,WAAW;AACxC,qBAAW,YAAY,KAAK,WAAW;AACrC,sBACE,UACC,GAAG,eAAe,qBAAqB,KAAK,QAAQ,QAAQ;AAAA,UACjE;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,cAAM,iBAAiB;AAAA,UACrB,SAAS,KAAK;AAAA,QAChB;AAEA,YAAI,KAAK,aAAa,MAAM;AAC1B,yBAAe,YAAY,KAAK;AAAA,QAClC;AAEA,YAAI,KAAK,QAAQ,MAAM;AACrB,yBAAe,OAAO,KAAK;AAAA,QAC7B;AAEA,YAAI,KAAK,cAAc,QAAQ,OAAO,KAAK,KAAK,UAAU,EAAE,SAAS,GAAG;AACtE,yBAAe,aAAa,KAAK;AAAA,QACnC;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,eAAe;AAEvB,aAAS,iBAAiB,OAAO;AAC/B,aAAO,UAAU,UAAa,MAAM,WAAW,IAAI,SAAY;AAAA,IACjE;AAWA,aAAS,WAAW,OAAO;AACzB,aAAO,MAAM,SAAS;AAAA,IACxB;AAQA,aAAS,YAAY,OAAO;AAC1B,aAAO,MAAM,OAAO;AAAA,IACtB;AAAA;AAAA;;;AC1QA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,uBAAuB;AAE/B,QAAI,gBAAgB;AAOpB,aAAS,qBAAqB,QAAQ,WAAW;AAC/C,UAAI,UAAU,cAAc,SAAS;AACnC,cAAM,YAAY,OAAO,aAAa;AAEtC,YAAI,CAAC,WAAW;AACd,gBAAM,IAAI,cAAc;AAAA,YACtB;AAAA,YACA;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,cAAc,YAAY;AACtC,cAAM,eAAe,OAAO,gBAAgB;AAE5C,YAAI,CAAC,cAAc;AACjB,gBAAM,IAAI,cAAc;AAAA,YACtB;AAAA,YACA;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,cAAc,gBAAgB;AAC1C,cAAM,mBAAmB,OAAO,oBAAoB;AAEpD,YAAI,CAAC,kBAAkB;AACrB,gBAAM,IAAI,cAAc;AAAA,YACtB;AAAA,YACA;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,YAAM,IAAI,cAAc;AAAA,QACtB;AAAA,QACA;AAAA,UACE,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AClEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,cAAc;AAEtB,QAAI,gBAAgB;AAMpB,aAAS,YAAY,QAAQ,UAAU,aAAa;AAClD,aAAO,IAAI,cAAc,aAAa,iBAAiB,WAAW,IAAI;AAAA,QACpE;AAAA,QACA,WAAW,CAAC,QAAQ;AAAA,MACtB,CAAC;AAAA,IACH;AAAA;AAAA;;;AClBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,QACN,QAAQ,oBACR,QAAQ,oBACR,QAAQ,WACN;AACJ,YAAQ,SAAS;AAMjB,QAAM,WAAN,MAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoBb,YAAY,YAAY,UAAU,QAAQ;AACxC,aAAK,QAAQ,WAAW;AACxB,aAAK,MAAM,SAAS;AACpB,aAAK,aAAa;AAClB,aAAK,WAAW;AAChB,aAAK,SAAS;AAAA,MAChB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA,UACL,OAAO,KAAK;AAAA,UACZ,KAAK,KAAK;AAAA,QACZ;AAAA,MACF;AAAA,IACF;AAMA,YAAQ,WAAW;AAEnB,QAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiCV,YAAY,MAAM,OAAO,KAAK,MAAM,QAAQ,OAAO;AACjD,aAAK,OAAO;AACZ,aAAK,QAAQ;AACb,aAAK,MAAM;AACX,aAAK,OAAO;AACZ,aAAK,SAAS;AAEd,aAAK,QAAQ;AACb,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,SAAS;AACP,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,OAAO,KAAK;AAAA,UACZ,MAAM,KAAK;AAAA,UACX,QAAQ,KAAK;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAKA,YAAQ,QAAQ;AAKhB,QAAM,oBAAoB;AAAA,MACxB,MAAM,CAAC;AAAA,MACP,UAAU,CAAC,aAAa;AAAA,MACxB,qBAAqB;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,oBAAoB,CAAC,YAAY,QAAQ,gBAAgB,YAAY;AAAA,MACrE,UAAU,CAAC,MAAM;AAAA,MACjB,cAAc,CAAC,YAAY;AAAA,MAC3B,OAAO,CAAC,SAAS,QAAQ,aAAa,cAAc,cAAc;AAAA,MAClE,UAAU,CAAC,QAAQ,OAAO;AAAA,MAC1B,gBAAgB,CAAC,QAAQ,YAAY;AAAA,MACrC,gBAAgB,CAAC,iBAAiB,cAAc,cAAc;AAAA,MAC9D,oBAAoB;AAAA,QAClB;AAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,UAAU,CAAC;AAAA,MACX,YAAY,CAAC;AAAA,MACb,aAAa,CAAC;AAAA,MACd,cAAc,CAAC;AAAA,MACf,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC;AAAA,MACZ,WAAW,CAAC,QAAQ;AAAA,MACpB,aAAa,CAAC,QAAQ;AAAA,MACtB,aAAa,CAAC,QAAQ,OAAO;AAAA,MAC7B,WAAW,CAAC,QAAQ,WAAW;AAAA,MAC/B,WAAW,CAAC,MAAM;AAAA,MAClB,UAAU,CAAC,MAAM;AAAA,MACjB,aAAa,CAAC,MAAM;AAAA,MACpB,kBAAkB,CAAC,eAAe,cAAc,gBAAgB;AAAA,MAChE,yBAAyB,CAAC,MAAM;AAAA,MAChC,sBAAsB,CAAC,eAAe,QAAQ,YAAY;AAAA,MAC1D,sBAAsB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,iBAAiB,CAAC,eAAe,QAAQ,aAAa,QAAQ,YAAY;AAAA,MAC1E,sBAAsB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,yBAAyB;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,MACA,qBAAqB,CAAC,eAAe,QAAQ,cAAc,OAAO;AAAA,MAClE,oBAAoB,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,MAClE,qBAAqB,CAAC,eAAe,QAAQ,YAAY;AAAA,MACzD,2BAA2B,CAAC,eAAe,QAAQ,cAAc,QAAQ;AAAA,MACzE,qBAAqB,CAAC,eAAe,QAAQ,aAAa,WAAW;AAAA,MACrE,iBAAiB,CAAC,cAAc,gBAAgB;AAAA,MAChD,qBAAqB,CAAC,QAAQ,YAAY;AAAA,MAC1C,qBAAqB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,MAClE,wBAAwB,CAAC,QAAQ,cAAc,cAAc,QAAQ;AAAA,MACrE,oBAAoB,CAAC,QAAQ,cAAc,OAAO;AAAA,MAClD,mBAAmB,CAAC,QAAQ,cAAc,QAAQ;AAAA,MAClD,0BAA0B,CAAC,QAAQ,cAAc,QAAQ;AAAA,IAC3D;AACA,YAAQ,oBAAoB;AAC5B,QAAM,aAAa,IAAI,IAAI,OAAO,KAAK,iBAAiB,CAAC;AAKzD,aAAS,OAAO,WAAW;AACzB,YAAM,YACJ,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU;AAClE,aAAO,OAAO,cAAc,YAAY,WAAW,IAAI,SAAS;AAAA,IAClE;AAGA,QAAI;AACJ,YAAQ,oBAAoB;AAE5B,KAAC,SAAUC,oBAAmB;AAC5B,MAAAA,mBAAkB,OAAO,IAAI;AAC7B,MAAAA,mBAAkB,UAAU,IAAI;AAChC,MAAAA,mBAAkB,cAAc,IAAI;AAAA,IACtC,GAAG,sBAAsB,QAAQ,oBAAoB,oBAAoB,CAAC,EAAE;AAAA;AAAA;;;AC/N5E;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBAAoB;AAK5B,QAAI;AACJ,YAAQ,oBAAoB;AAE5B,KAAC,SAAUC,oBAAmB;AAC5B,MAAAA,mBAAkB,OAAO,IAAI;AAC7B,MAAAA,mBAAkB,UAAU,IAAI;AAChC,MAAAA,mBAAkB,cAAc,IAAI;AACpC,MAAAA,mBAAkB,OAAO,IAAI;AAC7B,MAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,MAAAA,mBAAkB,iBAAiB,IAAI;AACvC,MAAAA,mBAAkB,iBAAiB,IAAI;AACvC,MAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,MAAAA,mBAAkB,QAAQ,IAAI;AAC9B,MAAAA,mBAAkB,QAAQ,IAAI;AAC9B,MAAAA,mBAAkB,QAAQ,IAAI;AAC9B,MAAAA,mBAAkB,kBAAkB,IAAI;AACxC,MAAAA,mBAAkB,qBAAqB,IAAI;AAC3C,MAAAA,mBAAkB,WAAW,IAAI;AACjC,MAAAA,mBAAkB,OAAO,IAAI;AAC7B,MAAAA,mBAAkB,MAAM,IAAI;AAC5B,MAAAA,mBAAkB,YAAY,IAAI;AAClC,MAAAA,mBAAkB,cAAc,IAAI;AACpC,MAAAA,mBAAkB,wBAAwB,IAAI;AAAA,IAChD,GAAG,sBAAsB,QAAQ,oBAAoB,oBAAoB,CAAC,EAAE;AAAA;AAAA;;;ACjC5E;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,UAAU;AAClB,YAAQ,WAAW;AACnB,YAAQ,iBAAiB;AACzB,YAAQ,cAAc;AACtB,YAAQ,eAAe;AAUvB,aAAS,aAAa,MAAM;AAC1B,aAAO,SAAS,KAAU,SAAS;AAAA,IACrC;AASA,aAAS,QAAQ,MAAM;AACrB,aAAO,QAAQ,MAAU,QAAQ;AAAA,IACnC;AAYA,aAAS,SAAS,MAAM;AACtB,aACG,QAAQ,MAAU,QAAQ;AAAA,MAC1B,QAAQ,MAAU,QAAQ;AAAA,IAE/B;AAUA,aAAS,YAAY,MAAM;AACzB,aAAO,SAAS,IAAI,KAAK,SAAS;AAAA,IACpC;AAWA,aAAS,eAAe,MAAM;AAC5B,aAAO,SAAS,IAAI,KAAK,QAAQ,IAAI,KAAK,SAAS;AAAA,IACrD;AAAA;AAAA;;;AC1EA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,yBAAyB;AACjC,YAAQ,2BAA2B;AACnC,YAAQ,mBAAmB;AAE3B,QAAI,oBAAoB;AAUxB,aAAS,uBAAuB,OAAO;AACrC,UAAI;AAEJ,UAAI,eAAe,OAAO;AAC1B,UAAI,oBAAoB;AACxB,UAAI,mBAAmB;AAEvB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,YAAI;AAEJ,cAAM,OAAO,MAAM,CAAC;AACpB,cAAM,SAAS,kBAAkB,IAAI;AAErC,YAAI,WAAW,KAAK,QAAQ;AAC1B;AAAA,QACF;AAEA,6BACG,qBAAqB,uBAAuB,QAC7C,uBAAuB,SACnB,qBACA;AACN,2BAAmB;AAEnB,YAAI,MAAM,KAAK,SAAS,cAAc;AACpC,yBAAe;AAAA,QACjB;AAAA,MACF;AAEA,aAAO,MACJ,IAAI,CAAC,MAAM,MAAO,MAAM,IAAI,OAAO,KAAK,MAAM,YAAY,CAAE,EAC5D;AAAA,SACE,sBAAsB,uBAAuB,QAC5C,wBAAwB,SACtB,sBACA;AAAA,QACJ,mBAAmB;AAAA,MACrB;AAAA,IACJ;AAEA,aAAS,kBAAkB,KAAK;AAC9B,UAAI,IAAI;AAER,aACE,IAAI,IAAI,WACP,GAAG,kBAAkB,cAAc,IAAI,WAAW,CAAC,CAAC,GACrD;AACA,UAAE;AAAA,MACJ;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,yBAAyB,OAAO;AACvC,UAAI,UAAU,IAAI;AAChB,eAAO;AAAA,MACT;AAEA,UAAI,cAAc;AAClB,UAAI,YAAY;AAChB,UAAI,kBAAkB;AACtB,UAAI,mBAAmB;AAEvB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACrC,gBAAQ,MAAM,YAAY,CAAC,GAAG;AAAA,UAC5B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACH,mBAAO;AAAA,UAGT,KAAK;AAEH,mBAAO;AAAA,UAGT,KAAK;AAEH,gBAAI,eAAe,CAAC,kBAAkB;AACpC,qBAAO;AAAA,YACT;AAEA,+BAAmB;AACnB,0BAAc;AACd,wBAAY;AACZ;AAAA,UAEF,KAAK;AAAA,UAEL,KAAK;AAEH,0BAAc,YAAY;AAC1B;AAAA,UAEF;AACE,gCAAoB,kBAAkB;AACtC,0BAAc;AAAA,QAClB;AAAA,MACF;AAEA,UAAI,aAAa;AACf,eAAO;AAAA,MACT;AAEA,UAAI,mBAAmB,kBAAkB;AACvC,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AASA,aAAS,iBAAiB,OAAO,SAAS;AACxC,YAAM,eAAe,MAAM,QAAQ,QAAQ,OAAO;AAElD,YAAM,QAAQ,aAAa,MAAM,cAAc;AAC/C,YAAM,eAAe,MAAM,WAAW;AAEtC,YAAM,sBACJ,MAAM,SAAS,KACf,MACG,MAAM,CAAC,EACP;AAAA,QACC,CAAC,SACC,KAAK,WAAW,MACf,GAAG,kBAAkB,cAAc,KAAK,WAAW,CAAC,CAAC;AAAA,MAC1D;AAEJ,YAAM,0BAA0B,aAAa,SAAS,OAAO;AAE7D,YAAM,mBAAmB,MAAM,SAAS,GAAG,KAAK,CAAC;AACjD,YAAM,mBAAmB,MAAM,SAAS,IAAI;AAC5C,YAAM,uBAAuB,oBAAoB;AACjD,YAAM,uBACJ,EAAE,YAAY,QAAQ,YAAY,UAAU,QAAQ;AAAA,OACnD,CAAC,gBACA,MAAM,SAAS,MACf,wBACA,uBACA;AACJ,UAAI,SAAS;AAEb,YAAM,qBACJ,iBAAiB,GAAG,kBAAkB,cAAc,MAAM,WAAW,CAAC,CAAC;AAEzE,UAAK,wBAAwB,CAAC,sBAAuB,qBAAqB;AACxE,kBAAU;AAAA,MACZ;AAEA,gBAAU;AAEV,UAAI,wBAAwB,sBAAsB;AAChD,kBAAU;AAAA,MACZ;AAEA,aAAO,QAAQ,SAAS;AAAA,IAC1B;AAAA;AAAA;;;AClMA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAMpB,QAAI;AACJ,YAAQ,YAAY;AAEpB,KAAC,SAAUC,YAAW;AACpB,MAAAA,WAAU,KAAK,IAAI;AACnB,MAAAA,WAAU,KAAK,IAAI;AACnB,MAAAA,WAAU,MAAM,IAAI;AACpB,MAAAA,WAAU,QAAQ,IAAI;AACtB,MAAAA,WAAU,KAAK,IAAI;AACnB,MAAAA,WAAU,SAAS,IAAI;AACvB,MAAAA,WAAU,SAAS,IAAI;AACvB,MAAAA,WAAU,QAAQ,IAAI;AACtB,MAAAA,WAAU,OAAO,IAAI;AACrB,MAAAA,WAAU,QAAQ,IAAI;AACtB,MAAAA,WAAU,IAAI,IAAI;AAClB,MAAAA,WAAU,WAAW,IAAI;AACzB,MAAAA,WAAU,WAAW,IAAI;AACzB,MAAAA,WAAU,SAAS,IAAI;AACvB,MAAAA,WAAU,MAAM,IAAI;AACpB,MAAAA,WAAU,SAAS,IAAI;AACvB,MAAAA,WAAU,MAAM,IAAI;AACpB,MAAAA,WAAU,KAAK,IAAI;AACnB,MAAAA,WAAU,OAAO,IAAI;AACrB,MAAAA,WAAU,QAAQ,IAAI;AACtB,MAAAA,WAAU,cAAc,IAAI;AAC5B,MAAAA,WAAU,SAAS,IAAI;AAAA,IACzB,GAAG,cAAc,QAAQ,YAAY,YAAY,CAAC,EAAE;AAAA;AAAA;;;ACrCpD;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,QAAQ;AAChB,YAAQ,wBAAwB;AAEhC,QAAI,eAAe;AAEnB,QAAI,OAAO;AAEX,QAAI,eAAe;AAEnB,QAAI,oBAAoB;AAExB,QAAI,aAAa;AAUjB,QAAM,QAAN,MAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBV,YAAY,QAAQ;AAClB,cAAM,mBAAmB,IAAI,KAAK;AAAA,UAChC,WAAW,UAAU;AAAA,UACrB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,aAAK,QAAQ;AACb,aAAK,OAAO;AACZ,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,UAAU;AACR,aAAK,YAAY,KAAK;AACtB,cAAM,QAAS,KAAK,QAAQ,KAAK,UAAU;AAC3C,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY;AACV,YAAI,QAAQ,KAAK;AAEjB,YAAI,MAAM,SAAS,WAAW,UAAU,KAAK;AAC3C,aAAG;AACD,gBAAI,MAAM,MAAM;AACd,sBAAQ,MAAM;AAAA,YAChB,OAAO;AAEL,oBAAM,YAAY,cAAc,MAAM,MAAM,GAAG;AAE/C,oBAAM,OAAO;AAEb,wBAAU,OAAO;AACjB,sBAAQ;AAAA,YACV;AAAA,UACF,SAAS,MAAM,SAAS,WAAW,UAAU;AAAA,QAC/C;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAKA,YAAQ,QAAQ;AAEhB,aAAS,sBAAsB,MAAM;AACnC,aACE,SAAS,WAAW,UAAU,QAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,OAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,SAC9B,SAAS,WAAW,UAAU,UAC9B,SAAS,WAAW,UAAU,MAC9B,SAAS,WAAW,UAAU,aAC9B,SAAS,WAAW,UAAU,aAC9B,SAAS,WAAW,UAAU,WAC9B,SAAS,WAAW,UAAU,QAC9B,SAAS,WAAW,UAAU;AAAA,IAElC;AAUA,aAAS,qBAAqB,MAAM;AAClC,aACG,QAAQ,KAAU,QAAQ,SAAY,QAAQ,SAAU,QAAQ;AAAA,IAErE;AAUA,aAAS,yBAAyB,MAAM,UAAU;AAChD,aACE,mBAAmB,KAAK,WAAW,QAAQ,CAAC,KAC5C,oBAAoB,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,IAErD;AAEA,aAAS,mBAAmB,MAAM;AAChC,aAAO,QAAQ,SAAU,QAAQ;AAAA,IACnC;AAEA,aAAS,oBAAoB,MAAM;AACjC,aAAO,QAAQ,SAAU,QAAQ;AAAA,IACnC;AASA,aAAS,iBAAiB,OAAO,UAAU;AACzC,YAAM,OAAO,MAAM,OAAO,KAAK,YAAY,QAAQ;AAEnD,UAAI,SAAS,QAAW;AACtB,eAAO,WAAW,UAAU;AAAA,MAC9B,WAAW,QAAQ,MAAU,QAAQ,KAAQ;AAE3C,cAAM,OAAO,OAAO,cAAc,IAAI;AACtC,eAAO,SAAS,MAAM,QAAS,IAAI,IAAI;AAAA,MACzC;AAEA,aAAO,OAAO,KAAK,SAAS,EAAE,EAAE,YAAY,EAAE,SAAS,GAAG,GAAG;AAAA,IAC/D;AAKA,aAAS,YAAY,OAAO,MAAM,OAAO,KAAK,OAAO;AACnD,YAAM,OAAO,MAAM;AACnB,YAAM,MAAM,IAAI,QAAQ,MAAM;AAC9B,aAAO,IAAI,KAAK,MAAM,MAAM,OAAO,KAAK,MAAM,KAAK,KAAK;AAAA,IAC1D;AASA,aAAS,cAAc,OAAO,OAAO;AACnC,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,WAAW;AAEf,aAAO,WAAW,YAAY;AAC5B,cAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,gBAAQ,MAAM;AAAA,UAeZ,KAAK;AAAA,UAEL,KAAK;AAAA,UAEL,KAAK;AAAA,UAEL,KAAK;AAEH,cAAE;AACF;AAAA,UAMF,KAAK;AAEH,cAAE;AACF,cAAE,MAAM;AACR,kBAAM,YAAY;AAClB;AAAA,UAEF,KAAK;AAEH,gBAAI,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC5C,0BAAY;AAAA,YACd,OAAO;AACL,gBAAE;AAAA,YACJ;AAEA,cAAE,MAAM;AACR,kBAAM,YAAY;AAClB;AAAA,UAGF,KAAK;AAEH,mBAAO,YAAY,OAAO,QAAQ;AAAA,UAUpC,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,gBACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,qBAAO;AAAA,gBACL;AAAA,gBACA,WAAW,UAAU;AAAA,gBACrB;AAAA,gBACA,WAAW;AAAA,cACb;AAAA,YACF;AAEA;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAEF,KAAK;AAEH,mBAAO;AAAA,cACL;AAAA,cACA,WAAW,UAAU;AAAA,cACrB;AAAA,cACA,WAAW;AAAA,YACb;AAAA,UAGF,KAAK;AAEH,gBACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,qBAAO,gBAAgB,OAAO,QAAQ;AAAA,YACxC;AAEA,mBAAO,WAAW,OAAO,QAAQ;AAAA,QACrC;AAEA,aAAK,GAAG,kBAAkB,SAAS,IAAI,KAAK,SAAS,IAAQ;AAC3D,iBAAO,WAAW,OAAO,UAAU,IAAI;AAAA,QACzC;AAEA,aAAK,GAAG,kBAAkB,aAAa,IAAI,GAAG;AAC5C,iBAAO,SAAS,OAAO,QAAQ;AAAA,QACjC;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,SAAS,KACL,mFACA,qBAAqB,IAAI,KAAK,yBAAyB,MAAM,QAAQ,IACrE,yBAAyB,iBAAiB,OAAO,QAAQ,CAAC,MAC1D,sBAAsB,iBAAiB,OAAO,QAAQ,CAAC;AAAA,QAC7D;AAAA,MACF;AAEA,aAAO,YAAY,OAAO,WAAW,UAAU,KAAK,YAAY,UAAU;AAAA,IAC5E;AAWA,aAAS,YAAY,OAAO,OAAO;AACjC,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,WAAW,QAAQ;AAEvB,aAAO,WAAW,YAAY;AAC5B,cAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,YAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,QACF;AAEA,YAAI,qBAAqB,IAAI,GAAG;AAC9B,YAAE;AAAA,QACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,sBAAY;AAAA,QACd,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA,WAAW,UAAU;AAAA,QACrB;AAAA,QACA;AAAA,QACA,KAAK,MAAM,QAAQ,GAAG,QAAQ;AAAA,MAChC;AAAA,IACF;AA+BA,aAAS,WAAW,OAAO,OAAO,WAAW;AAC3C,YAAM,OAAO,MAAM,OAAO;AAC1B,UAAI,WAAW;AACf,UAAI,OAAO;AACX,UAAI,UAAU;AAEd,UAAI,SAAS,IAAQ;AACnB,eAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,MACnC;AAEA,UAAI,SAAS,IAAQ;AACnB,eAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,aAAK,GAAG,kBAAkB,SAAS,IAAI,GAAG;AACxC,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,6CAA6C;AAAA,cAC3C;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF,OAAO;AACL,mBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,eAAO,KAAK,WAAW,QAAQ;AAAA,MACjC;AAEA,UAAI,SAAS,IAAQ;AACnB,kBAAU;AACV,eAAO,KAAK,WAAW,EAAE,QAAQ;AACjC,mBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,eAAO,KAAK,WAAW,QAAQ;AAAA,MACjC;AAEA,UAAI,SAAS,MAAU,SAAS,KAAQ;AACtC,kBAAU;AACV,eAAO,KAAK,WAAW,EAAE,QAAQ;AAEjC,YAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,iBAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,QACnC;AAEA,mBAAW,WAAW,OAAO,UAAU,IAAI;AAC3C,eAAO,KAAK,WAAW,QAAQ;AAAA,MACjC;AAEA,UAAI,SAAS,OAAW,GAAG,kBAAkB,aAAa,IAAI,GAAG;AAC/D,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,2CAA2C;AAAA,YACzC;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA,UAAU,WAAW,UAAU,QAAQ,WAAW,UAAU;AAAA,QAC5D;AAAA,QACA;AAAA,QACA,KAAK,MAAM,OAAO,QAAQ;AAAA,MAC5B;AAAA,IACF;AAKA,aAAS,WAAW,OAAO,OAAO,WAAW;AAC3C,UAAI,EAAE,GAAG,kBAAkB,SAAS,SAAS,GAAG;AAC9C,eAAO,GAAG,aAAa;AAAA,UACrB,MAAM;AAAA,UACN;AAAA,UACA,2CAA2C;AAAA,YACzC;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,YAAM,OAAO,MAAM,OAAO;AAC1B,UAAI,WAAW,QAAQ;AAEvB,cAAQ,GAAG,kBAAkB,SAAS,KAAK,WAAW,QAAQ,CAAC,GAAG;AAChE,UAAE;AAAA,MACJ;AAEA,aAAO;AAAA,IACT;AAsBA,aAAS,WAAW,OAAO,OAAO;AAChC,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,WAAW,QAAQ;AACvB,UAAI,aAAa;AACjB,UAAI,QAAQ;AAEZ,aAAO,WAAW,YAAY;AAC5B,cAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,YAAI,SAAS,IAAQ;AACnB,mBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,iBAAO;AAAA,YACL;AAAA,YACA,WAAW,UAAU;AAAA,YACrB;AAAA,YACA,WAAW;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS,IAAQ;AACnB,mBAAS,KAAK,MAAM,YAAY,QAAQ;AACxC,gBAAMC,UACJ,KAAK,WAAW,WAAW,CAAC,MAAM,MAC9B,KAAK,WAAW,WAAW,CAAC,MAAM,MAChC,gCAAgC,OAAO,QAAQ,IAC/C,6BAA6B,OAAO,QAAQ,IAC9C,qBAAqB,OAAO,QAAQ;AAC1C,mBAASA,QAAO;AAChB,sBAAYA,QAAO;AACnB,uBAAa;AACb;AAAA,QACF;AAEA,YAAI,SAAS,MAAU,SAAS,IAAQ;AACtC;AAAA,QACF;AAEA,YAAI,qBAAqB,IAAI,GAAG;AAC9B,YAAE;AAAA,QACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,sBAAY;AAAA,QACd,OAAO;AACL,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,oCAAoC;AAAA,cAClC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAEA,aAAO,GAAG,aAAa;AAAA,QACrB,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,aAAS,gCAAgC,OAAO,UAAU;AACxD,YAAM,OAAO,MAAM,OAAO;AAC1B,UAAI,QAAQ;AACZ,UAAI,OAAO;AAEX,aAAO,OAAO,IAAI;AAChB,cAAM,OAAO,KAAK,WAAW,WAAW,MAAM;AAE9C,YAAI,SAAS,KAAQ;AAEnB,cAAI,OAAO,KAAK,CAAC,qBAAqB,KAAK,GAAG;AAC5C;AAAA,UACF;AAEA,iBAAO;AAAA,YACL,OAAO,OAAO,cAAc,KAAK;AAAA,YACjC;AAAA,UACF;AAAA,QACF;AAEA,gBAAS,SAAS,IAAK,aAAa,IAAI;AAExC,YAAI,QAAQ,GAAG;AACb;AAAA,QACF;AAAA,MACF;AAEA,aAAO,GAAG,aAAa;AAAA,QACrB,MAAM;AAAA,QACN;AAAA,QACA,qCAAqC,KAAK;AAAA,UACxC;AAAA,UACA,WAAW;AAAA,QACb,CAAC;AAAA,MACH;AAAA,IACF;AAEA,aAAS,6BAA6B,OAAO,UAAU;AACrD,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,OAAO,iBAAiB,MAAM,WAAW,CAAC;AAEhD,UAAI,qBAAqB,IAAI,GAAG;AAC9B,eAAO;AAAA,UACL,OAAO,OAAO,cAAc,IAAI;AAAA,UAChC,MAAM;AAAA,QACR;AAAA,MACF;AAGA,UAAI,mBAAmB,IAAI,GAAG;AAE5B,YACE,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,KAClC;AACA,gBAAM,eAAe,iBAAiB,MAAM,WAAW,CAAC;AAExD,cAAI,oBAAoB,YAAY,GAAG;AAOrC,mBAAO;AAAA,cACL,OAAO,OAAO,cAAc,MAAM,YAAY;AAAA,cAC9C,MAAM;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO,GAAG,aAAa;AAAA,QACrB,MAAM;AAAA,QACN;AAAA,QACA,qCAAqC,KAAK,MAAM,UAAU,WAAW,CAAC,CAAC;AAAA,MACzE;AAAA,IACF;AASA,aAAS,iBAAiB,MAAM,UAAU;AAGxC,aACG,aAAa,KAAK,WAAW,QAAQ,CAAC,KAAK,KAC3C,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAC/C,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC,KAAK,IAChD,aAAa,KAAK,WAAW,WAAW,CAAC,CAAC;AAAA,IAE9C;AAgBA,aAAS,aAAa,MAAM;AAC1B,aAAO,QAAQ,MAAU,QAAQ,KAC7B,OAAO,KACP,QAAQ,MAAU,QAAQ,KAC1B,OAAO,KACP,QAAQ,MAAU,QAAQ,MAC1B,OAAO,KACP;AAAA,IACN;AAcA,aAAS,qBAAqB,OAAO,UAAU;AAC7C,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,OAAO,KAAK,WAAW,WAAW,CAAC;AAEzC,cAAQ,MAAM;AAAA,QACZ,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,QAEF,KAAK;AAEH,iBAAO;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,UACR;AAAA,MACJ;AAEA,aAAO,GAAG,aAAa;AAAA,QACrB,MAAM;AAAA,QACN;AAAA,QACA,uCAAuC,KAAK;AAAA,UAC1C;AAAA,UACA,WAAW;AAAA,QACb,CAAC;AAAA,MACH;AAAA,IACF;AAcA,aAAS,gBAAgB,OAAO,OAAO;AACrC,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,YAAY,MAAM;AACtB,UAAI,WAAW,QAAQ;AACvB,UAAI,aAAa;AACjB,UAAI,cAAc;AAClB,YAAM,aAAa,CAAC;AAEpB,aAAO,WAAW,YAAY;AAC5B,cAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,YACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,yBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,qBAAW,KAAK,WAAW;AAC3B,gBAAM,QAAQ;AAAA,YACZ;AAAA,YACA,WAAW,UAAU;AAAA,YACrB;AAAA,YACA,WAAW;AAAA;AAAA,aACV,GAAG,aAAa,wBAAwB,UAAU,EAAE,KAAK,IAAI;AAAA,UAChE;AACA,gBAAM,QAAQ,WAAW,SAAS;AAClC,gBAAM,YAAY;AAClB,iBAAO;AAAA,QACT;AAEA,YACE,SAAS,MACT,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,MAClC,KAAK,WAAW,WAAW,CAAC,MAAM,IAClC;AACA,yBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,uBAAa,WAAW;AAExB,sBAAY;AACZ;AAAA,QACF;AAEA,YAAI,SAAS,MAAU,SAAS,IAAQ;AACtC,yBAAe,KAAK,MAAM,YAAY,QAAQ;AAC9C,qBAAW,KAAK,WAAW;AAE3B,cAAI,SAAS,MAAU,KAAK,WAAW,WAAW,CAAC,MAAM,IAAQ;AAC/D,wBAAY;AAAA,UACd,OAAO;AACL,cAAE;AAAA,UACJ;AAEA,wBAAc;AACd,uBAAa;AACb,sBAAY;AACZ;AAAA,QACF;AAEA,YAAI,qBAAqB,IAAI,GAAG;AAC9B,YAAE;AAAA,QACJ,WAAW,yBAAyB,MAAM,QAAQ,GAAG;AACnD,sBAAY;AAAA,QACd,OAAO;AACL,iBAAO,GAAG,aAAa;AAAA,YACrB,MAAM;AAAA,YACN;AAAA,YACA,oCAAoC;AAAA,cAClC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAEA,aAAO,GAAG,aAAa;AAAA,QACrB,MAAM;AAAA,QACN;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAUA,aAAS,SAAS,OAAO,OAAO;AAC9B,YAAM,OAAO,MAAM,OAAO;AAC1B,YAAM,aAAa,KAAK;AACxB,UAAI,WAAW,QAAQ;AAEvB,aAAO,WAAW,YAAY;AAC5B,cAAM,OAAO,KAAK,WAAW,QAAQ;AAErC,aAAK,GAAG,kBAAkB,gBAAgB,IAAI,GAAG;AAC/C,YAAE;AAAA,QACJ,OAAO;AACL;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA,WAAW,UAAU;AAAA,QACrB;AAAA,QACA;AAAA,QACA,KAAK,MAAM,OAAO,QAAQ;AAAA,MAC5B;AAAA,IACF;AAAA;AAAA;;;AC7+BA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAEpB,aAAS,UAAU,WAAW,SAAS;AACrC,YAAM,mBAAmB,QAAQ,SAAS;AAE1C,UAAI,CAAC,kBAAkB;AACrB,cAAM,IAAI,MAAM,OAAO;AAAA,MACzB;AAAA,IACF;AAAA;AAAA;;;ACbA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,UAAU;AAClB,QAAM,mBAAmB;AACzB,QAAM,sBAAsB;AAK5B,aAAS,QAAQ,OAAO;AACtB,aAAO,YAAY,OAAO,CAAC,CAAC;AAAA,IAC9B;AAEA,aAAS,YAAY,OAAO,YAAY;AACtC,cAAQ,OAAO,OAAO;AAAA,QACpB,KAAK;AACH,iBAAO,KAAK,UAAU,KAAK;AAAA,QAE7B,KAAK;AACH,iBAAO,MAAM,OAAO,aAAa,MAAM,IAAI,MAAM;AAAA,QAEnD,KAAK;AACH,iBAAO,kBAAkB,OAAO,UAAU;AAAA,QAE5C;AACE,iBAAO,OAAO,KAAK;AAAA,MACvB;AAAA,IACF;AAEA,aAAS,kBAAkB,OAAO,sBAAsB;AACtD,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AAEA,UAAI,qBAAqB,SAAS,KAAK,GAAG;AACxC,eAAO;AAAA,MACT;AAEA,YAAM,aAAa,CAAC,GAAG,sBAAsB,KAAK;AAElD,UAAI,WAAW,KAAK,GAAG;AACrB,cAAM,YAAY,MAAM,OAAO;AAE/B,YAAI,cAAc,OAAO;AACvB,iBAAO,OAAO,cAAc,WACxB,YACA,YAAY,WAAW,UAAU;AAAA,QACvC;AAAA,MACF,WAAW,MAAM,QAAQ,KAAK,GAAG;AAC/B,eAAO,YAAY,OAAO,UAAU;AAAA,MACtC;AAEA,aAAO,aAAa,OAAO,UAAU;AAAA,IACvC;AAEA,aAAS,WAAW,OAAO;AACzB,aAAO,OAAO,MAAM,WAAW;AAAA,IACjC;AAEA,aAAS,aAAa,QAAQ,YAAY;AACxC,YAAM,UAAU,OAAO,QAAQ,MAAM;AAErC,UAAI,QAAQ,WAAW,GAAG;AACxB,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,SAAS,qBAAqB;AAC3C,eAAO,MAAM,aAAa,MAAM,IAAI;AAAA,MACtC;AAEA,YAAM,aAAa,QAAQ;AAAA,QACzB,CAAC,CAAC,KAAK,KAAK,MAAM,MAAM,OAAO,YAAY,OAAO,UAAU;AAAA,MAC9D;AACA,aAAO,OAAO,WAAW,KAAK,IAAI,IAAI;AAAA,IACxC;AAEA,aAAS,YAAY,OAAO,YAAY;AACtC,UAAI,MAAM,WAAW,GAAG;AACtB,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,SAAS,qBAAqB;AAC3C,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,KAAK,IAAI,kBAAkB,MAAM,MAAM;AACnD,YAAM,YAAY,MAAM,SAAS;AACjC,YAAM,QAAQ,CAAC;AAEf,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC5B,cAAM,KAAK,YAAY,MAAM,CAAC,GAAG,UAAU,CAAC;AAAA,MAC9C;AAEA,UAAI,cAAc,GAAG;AACnB,cAAM,KAAK,iBAAiB;AAAA,MAC9B,WAAW,YAAY,GAAG;AACxB,cAAM,KAAK,OAAO,SAAS,aAAa;AAAA,MAC1C;AAEA,aAAO,MAAM,MAAM,KAAK,IAAI,IAAI;AAAA,IAClC;AAEA,aAAS,aAAa,QAAQ;AAC5B,YAAM,MAAM,OAAO,UAAU,SAC1B,KAAK,MAAM,EACX,QAAQ,cAAc,EAAE,EACxB,QAAQ,MAAM,EAAE;AAEnB,UAAI,QAAQ,YAAY,OAAO,OAAO,gBAAgB,YAAY;AAChE,cAAM,OAAO,OAAO,YAAY;AAEhC,YAAI,OAAO,SAAS,YAAY,SAAS,IAAI;AAC3C,iBAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACxHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,aAAa;AAErB,QAAI,WAAW;AAGf,QAAM,eACJ,WAAW;AAAA,IACX;AAQF,QAAM;AAAA;AAAA;AAAA,MAGJ,eACI,SAASC,YAAW,OAAO,aAAa;AACtC,eAAO,iBAAiB;AAAA,MAC1B,IACA,SAASA,YAAW,OAAO,aAAa;AACtC,YAAI,iBAAiB,aAAa;AAChC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,cAAI;AAGJ,gBAAM,YAAY,YAAY,UAAU,OAAO,WAAW;AAC1D,gBAAM;AAAA;AAAA,YACJ,OAAO,eAAe,QAClB,MAAM,OAAO,WAAW,KACvB,qBAAqB,MAAM,iBAAiB,QAC7C,uBAAuB,SACvB,SACA,mBAAmB;AAAA;AAEzB,cAAI,cAAc,gBAAgB;AAChC,kBAAM,oBAAoB,GAAG,SAAS,SAAS,KAAK;AACpD,kBAAM,IAAI,MAAM,cAAc,SAAS,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWtD;AAAA,UACR;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AACN,YAAQ,aAAa;AAAA;AAAA;;;AChErB;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,SAAS;AACjB,YAAQ,WAAW;AAEnB,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,cAAc;AASlB,QAAM,SAAN,MAAa;AAAA,MACX,YACE,MACA,OAAO,mBACP,iBAAiB;AAAA,QACf,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,GACA;AACA,eAAO,SAAS,aACb,GAAG,WAAW;AAAA,UACb;AAAA,UACA,qCAAqC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACjE;AACF,aAAK,OAAO;AACZ,aAAK,OAAO;AACZ,aAAK,iBAAiB;AACtB,aAAK,eAAe,OAAO,MACxB,GAAG,WAAW;AAAA,UACb;AAAA,UACA;AAAA,QACF;AACF,aAAK,eAAe,SAAS,MAC1B,GAAG,WAAW;AAAA,UACb;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,IACF;AAOA,YAAQ,SAAS;AAEjB,aAAS,SAAS,QAAQ;AACxB,cAAQ,GAAG,YAAY,YAAY,QAAQ,MAAM;AAAA,IACnD;AAAA;AAAA;;;AChEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,SAAS;AACjB,YAAQ,QAAQC;AAChB,YAAQ,kBAAkB;AAC1B,YAAQ,YAAY;AACpB,YAAQ,aAAa;AAErB,QAAI,eAAe;AAEnB,QAAI,OAAO;AAEX,QAAI,qBAAqB;AAEzB,QAAI,SAAS;AAEb,QAAI,SAAS;AAEb,QAAI,UAAU;AAEd,QAAI,aAAa;AAMjB,aAASA,OAAM,QAAQ,SAAS;AAC9B,YAAM,SAAS,IAAI,OAAO,QAAQ,OAAO;AACzC,aAAO,OAAO,cAAc;AAAA,IAC9B;AAYA,aAAS,WAAW,QAAQ,SAAS;AACnC,YAAM,SAAS,IAAI,OAAO,QAAQ,OAAO;AACzC,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,YAAM,QAAQ,OAAO,kBAAkB,KAAK;AAC5C,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,aAAO;AAAA,IACT;AAMA,aAAS,gBAAgB,QAAQ,SAAS;AACxC,YAAM,SAAS,IAAI,OAAO,QAAQ,OAAO;AACzC,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,YAAM,QAAQ,OAAO,uBAAuB;AAC5C,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,aAAO;AAAA,IACT;AAYA,aAAS,UAAU,QAAQ,SAAS;AAClC,YAAM,SAAS,IAAI,OAAO,QAAQ,OAAO;AACzC,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,YAAM,OAAO,OAAO,mBAAmB;AACvC,aAAO,YAAY,WAAW,UAAU,GAAG;AAC3C,aAAO;AAAA,IACT;AAaA,QAAM,SAAN,MAAa;AAAA,MACX,YAAY,QAAQ,UAAU,CAAC,GAAG;AAChC,cAAM,aAAa,GAAG,QAAQ,UAAU,MAAM,IAC1C,SACA,IAAI,QAAQ,OAAO,MAAM;AAC7B,aAAK,SAAS,IAAI,OAAO,MAAM,SAAS;AACxC,aAAK,WAAW;AAChB,aAAK,gBAAgB;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA,MAKA,YAAY;AACV,cAAM,QAAQ,KAAK,YAAY,WAAW,UAAU,IAAI;AACxD,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,OAAO,MAAM;AAAA,QACf,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,gBAAgB;AACd,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,aAAa,KAAK;AAAA,YAChB,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAyBA,kBAAkB;AAChB,YAAI,KAAK,KAAK,WAAW,UAAU,OAAO,GAAG;AAC3C,iBAAO,KAAK,yBAAyB;AAAA,QACvC;AAEA,cAAM,iBAAiB,KAAK,gBAAgB;AAC5C,cAAM,eAAe,iBACjB,KAAK,OAAO,UAAU,IACtB,KAAK,OAAO;AAEhB,YAAI,aAAa,SAAS,WAAW,UAAU,MAAM;AACnD,kBAAQ,aAAa,OAAO;AAAA,YAC1B,KAAK;AACH,qBAAO,KAAK,sBAAsB;AAAA,YAEpC,KAAK;AACH,qBAAO,KAAK,0BAA0B;AAAA,YAExC,KAAK;AACH,qBAAO,KAAK,0BAA0B;AAAA,YAExC,KAAK;AACH,qBAAO,KAAK,6BAA6B;AAAA,YAE3C,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,YAEvC,KAAK;AACH,qBAAO,KAAK,wBAAwB;AAAA,YAEtC,KAAK;AACH,qBAAO,KAAK,+BAA+B;AAAA,YAE7C,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,UACzC;AAEA,cAAI,gBAAgB;AAClB,mBAAO,GAAG,aAAa;AAAA,cACrB,KAAK,OAAO;AAAA,cACZ,KAAK,OAAO,MAAM;AAAA,cAClB;AAAA,YACF;AAAA,UACF;AAEA,kBAAQ,aAAa,OAAO;AAAA,YAC1B,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,YAEvC,KAAK;AACH,qBAAO,KAAK,wBAAwB;AAAA,YAEtC,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,UACzC;AAAA,QACF;AAEA,cAAM,KAAK,WAAW,YAAY;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAE1B,YAAI,KAAK,KAAK,WAAW,UAAU,OAAO,GAAG;AAC3C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,WAAW,KAAK,kBAAkB;AAAA,YAClC,MAAM;AAAA,YACN,qBAAqB,CAAC;AAAA,YACtB,YAAY,CAAC;AAAA,YACb,cAAc,KAAK,kBAAkB;AAAA,UACvC,CAAC;AAAA,QACH;AAEA,cAAM,YAAY,KAAK,mBAAmB;AAC1C,YAAI;AAEJ,YAAI,KAAK,KAAK,WAAW,UAAU,IAAI,GAAG;AACxC,iBAAO,KAAK,UAAU;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA,qBAAqB,KAAK,yBAAyB;AAAA,UACnD,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACtC,cAAc,KAAK,kBAAkB;AAAA,QACvC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAqB;AACnB,cAAM,iBAAiB,KAAK,YAAY,WAAW,UAAU,IAAI;AAEjE,gBAAQ,eAAe,OAAO;AAAA,UAC5B,KAAK;AACH,mBAAO,KAAK,kBAAkB;AAAA,UAEhC,KAAK;AACH,mBAAO,KAAK,kBAAkB;AAAA,UAEhC,KAAK;AACH,mBAAO,KAAK,kBAAkB;AAAA,QAClC;AAEA,cAAM,KAAK,WAAW,cAAc;AAAA,MACtC;AAAA;AAAA;AAAA;AAAA,MAKA,2BAA2B;AACzB,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,0BAA0B;AACxB,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,UAAU,KAAK,cAAc;AAAA,UAC7B,OACG,KAAK,YAAY,WAAW,UAAU,KAAK,GAC5C,KAAK,mBAAmB;AAAA,UAC1B,cAAc,KAAK,oBAAoB,WAAW,UAAU,MAAM,IAC9D,KAAK,uBAAuB,IAC5B;AAAA,UACJ,YAAY,KAAK,qBAAqB;AAAA,QACxC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,gBAAgB;AACd,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,YAAY,WAAW,UAAU,MAAM;AAC5C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,MAAM,KAAK,UAAU;AAAA,QACvB,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,oBAAoB;AAClB,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,YAAY,KAAK;AAAA,YACf,WAAW,UAAU;AAAA,YACrB,KAAK;AAAA,YACL,WAAW,UAAU;AAAA,UACvB;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,iBAAiB;AACf,eAAO,KAAK,KAAK,WAAW,UAAU,MAAM,IACxC,KAAK,cAAc,IACnB,KAAK,WAAW;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,aAAa;AACX,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,UAAU;AACnC,YAAI;AACJ,YAAI;AAEJ,YAAI,KAAK,oBAAoB,WAAW,UAAU,KAAK,GAAG;AACxD,kBAAQ;AACR,iBAAO,KAAK,UAAU;AAAA,QACxB,OAAO;AACL,iBAAO;AAAA,QACT;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA,WAAW,KAAK,eAAe,KAAK;AAAA,UACpC,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACtC,cAAc,KAAK,KAAK,WAAW,UAAU,OAAO,IAChD,KAAK,kBAAkB,IACvB;AAAA,QACN,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,eAAe,SAAS;AACtB,cAAM,OAAO,UAAU,KAAK,qBAAqB,KAAK;AACtD,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB;AAAA,UACA,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,cAAc,UAAU,OAAO;AAC7B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,aAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,QACvC,CAAC;AAAA,MACH;AAAA,MAEA,qBAAqB;AACnB,eAAO,KAAK,cAAc,IAAI;AAAA,MAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,gBAAgB;AACd,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,YAAY,WAAW,UAAU,MAAM;AAC5C,cAAM,mBAAmB,KAAK,sBAAsB,IAAI;AAExD,YAAI,CAAC,oBAAoB,KAAK,KAAK,WAAW,UAAU,IAAI,GAAG;AAC7D,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,kBAAkB;AAAA,YAC7B,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACxC,CAAC;AAAA,QACH;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,eAAe,mBAAmB,KAAK,eAAe,IAAI;AAAA,UAC1D,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACtC,cAAc,KAAK,kBAAkB;AAAA,QACvC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,0BAA0B;AACxB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,UAAU;AAI7B,YAAI,KAAK,SAAS,iCAAiC,MAAM;AACvD,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM,KAAK,kBAAkB;AAAA,YAC7B,qBAAqB,KAAK,yBAAyB;AAAA,YACnD,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,YAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,YACtC,cAAc,KAAK,kBAAkB;AAAA,UACvC,CAAC;AAAA,QACH;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,MAAM,KAAK,kBAAkB;AAAA,UAC7B,gBAAgB,KAAK,cAAc,IAAI,GAAG,KAAK,eAAe;AAAA,UAC9D,YAAY,KAAK,gBAAgB,KAAK;AAAA,UACtC,cAAc,KAAK,kBAAkB;AAAA,QACvC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,oBAAoB;AAClB,YAAI,KAAK,OAAO,MAAM,UAAU,MAAM;AACpC,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAqBA,kBAAkB,SAAS;AACzB,cAAM,QAAQ,KAAK,OAAO;AAE1B,gBAAQ,MAAM,MAAM;AAAA,UAClB,KAAK,WAAW,UAAU;AACxB,mBAAO,KAAK,UAAU,OAAO;AAAA,UAE/B,KAAK,WAAW,UAAU;AACxB,mBAAO,KAAK,YAAY,OAAO;AAAA,UAEjC,KAAK,WAAW,UAAU;AACxB,iBAAK,aAAa;AAClB,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,OAAO,MAAM;AAAA,YACf,CAAC;AAAA,UAEH,KAAK,WAAW,UAAU;AACxB,iBAAK,aAAa;AAClB,mBAAO,KAAK,KAAK,OAAO;AAAA,cACtB,MAAM,OAAO,KAAK;AAAA,cAClB,OAAO,MAAM;AAAA,YACf,CAAC;AAAA,UAEH,KAAK,WAAW,UAAU;AAAA,UAC1B,KAAK,WAAW,UAAU;AACxB,mBAAO,KAAK,mBAAmB;AAAA,UAEjC,KAAK,WAAW,UAAU;AACxB,iBAAK,aAAa;AAElB,oBAAQ,MAAM,OAAO;AAAA,cACnB,KAAK;AACH,uBAAO,KAAK,KAAK,OAAO;AAAA,kBACtB,MAAM,OAAO,KAAK;AAAA,kBAClB,OAAO;AAAA,gBACT,CAAC;AAAA,cAEH,KAAK;AACH,uBAAO,KAAK,KAAK,OAAO;AAAA,kBACtB,MAAM,OAAO,KAAK;AAAA,kBAClB,OAAO;AAAA,gBACT,CAAC;AAAA,cAEH,KAAK;AACH,uBAAO,KAAK,KAAK,OAAO;AAAA,kBACtB,MAAM,OAAO,KAAK;AAAA,gBACpB,CAAC;AAAA,cAEH;AACE,uBAAO,KAAK,KAAK,OAAO;AAAA,kBACtB,MAAM,OAAO,KAAK;AAAA,kBAClB,OAAO,MAAM;AAAA,gBACf,CAAC;AAAA,YACL;AAAA,UAEF,KAAK,WAAW,UAAU;AACxB,gBAAI,SAAS;AACX,mBAAK,YAAY,WAAW,UAAU,MAAM;AAE5C,kBAAI,KAAK,OAAO,MAAM,SAAS,WAAW,UAAU,MAAM;AACxD,sBAAM,UAAU,KAAK,OAAO,MAAM;AAClC,uBAAO,GAAG,aAAa;AAAA,kBACrB,KAAK,OAAO;AAAA,kBACZ,MAAM;AAAA,kBACN,yBAAyB,OAAO;AAAA,gBAClC;AAAA,cACF,OAAO;AACL,sBAAM,KAAK,WAAW,KAAK;AAAA,cAC7B;AAAA,YACF;AAEA,mBAAO,KAAK,cAAc;AAAA,UAE5B;AACE,kBAAM,KAAK,WAAW;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,yBAAyB;AACvB,eAAO,KAAK,kBAAkB,IAAI;AAAA,MACpC;AAAA,MAEA,qBAAqB;AACnB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,aAAa;AAClB,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,OAAO,MAAM;AAAA,UACb,OAAO,MAAM,SAAS,WAAW,UAAU;AAAA,QAC7C,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,UAAU,SAAS;AACjB,cAAM,OAAO,MAAM,KAAK,kBAAkB,OAAO;AAEjD,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,QAAQ,KAAK;AAAA,YACX,WAAW,UAAU;AAAA,YACrB;AAAA,YACA,WAAW,UAAU;AAAA,UACvB;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,YAAY,SAAS;AACnB,cAAM,OAAO,MAAM,KAAK,iBAAiB,OAAO;AAEhD,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,QAAQ,KAAK;AAAA,YACX,WAAW,UAAU;AAAA,YACrB;AAAA,YACA,WAAW,UAAU;AAAA,UACvB;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB,SAAS;AACxB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,aAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA,OAAO,KAAK,kBAAkB,OAAO;AAAA,QACvC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,gBAAgB,SAAS;AACvB,cAAM,aAAa,CAAC;AAEpB,eAAO,KAAK,KAAK,WAAW,UAAU,EAAE,GAAG;AACzC,qBAAW,KAAK,KAAK,eAAe,OAAO,CAAC;AAAA,QAC9C;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,uBAAuB;AACrB,eAAO,KAAK,gBAAgB,IAAI;AAAA,MAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,eAAe,SAAS;AACtB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,YAAY,WAAW,UAAU,EAAE;AACxC,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB,MAAM,KAAK,UAAU;AAAA,UACrB,WAAW,KAAK,eAAe,OAAO;AAAA,QACxC,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,qBAAqB;AACnB,cAAM,QAAQ,KAAK,OAAO;AAC1B,YAAI;AAEJ,YAAI,KAAK,oBAAoB,WAAW,UAAU,SAAS,GAAG;AAC5D,gBAAM,YAAY,KAAK,mBAAmB;AAC1C,eAAK,YAAY,WAAW,UAAU,SAAS;AAC/C,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB,MAAM;AAAA,UACR,CAAC;AAAA,QACH,OAAO;AACL,iBAAO,KAAK,eAAe;AAAA,QAC7B;AAEA,YAAI,KAAK,oBAAoB,WAAW,UAAU,IAAI,GAAG;AACvD,iBAAO,KAAK,KAAK,OAAO;AAAA,YACtB,MAAM,OAAO,KAAK;AAAA,YAClB;AAAA,UACF,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB;AACf,eAAO,KAAK,KAAK,KAAK,OAAO,OAAO;AAAA,UAClC,MAAM,OAAO,KAAK;AAAA,UAClB,MAAM,KAAK,UAAU;AAAA,QACvB,CAAC;AAAA,MACH;AAAA;AAAA,MAEA,kBAAkB;AAChB,eACE,KAAK,KAAK,WAAW,UAAU,MAAM,KACrC,KAAK,KAAK,WAAW,UAAU,YAAY;AAAA,MAE/C;AAAA;AAAA;AAAA;AAAA,MAKA,mBAAmB;AACjB,YAAI,KAAK,gBAAgB,GAAG;AAC1B,iBAAO,KAAK,mBAAmB;AAAA,QACjC;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,wBAAwB;AACtB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,QAAQ;AAC3B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,iBAAiB,KAAK;AAAA,UAC1B,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AACA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,+BAA+B;AAC7B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,YAAY,KAAK,mBAAmB;AAC1C,aAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,cAAM,OAAO,KAAK,eAAe;AACjC,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,4BAA4B;AAC1B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,QAAQ;AAC3B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,4BAA4B;AAC1B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,MAAM;AACzB,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,0BAA0B;AAClD,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,sBAAsB;AAC1C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,4BAA4B;AAC1B,eAAO,KAAK,sBAAsB,YAAY,IAC1C,KAAK,cAAc,WAAW,UAAU,KAAK,KAAK,cAAc,IAChE,CAAC;AAAA,MACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,wBAAwB;AACtB,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,uBAAuB;AACrB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,OAAO,KAAK,kBAAkB;AACpC,aAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,cAAM,OAAO,KAAK,mBAAmB;AACrC,cAAM,aAAa,KAAK,qBAAqB;AAC7C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,oBAAoB;AAClB,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,qBAAqB;AACnB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,cAAM,OAAO,KAAK,UAAU;AAC5B,aAAK,YAAY,WAAW,UAAU,KAAK;AAC3C,cAAM,OAAO,KAAK,mBAAmB;AACrC,YAAI;AAEJ,YAAI,KAAK,oBAAoB,WAAW,UAAU,MAAM,GAAG;AACzD,yBAAe,KAAK,uBAAuB;AAAA,QAC7C;AAEA,cAAM,aAAa,KAAK,qBAAqB;AAC7C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,+BAA+B;AAC7B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,WAAW;AAC9B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,0BAA0B;AAClD,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,sBAAsB;AAC1C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,QAAQ,KAAK,sBAAsB;AACzC,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,wBAAwB;AACtB,eAAO,KAAK,oBAAoB,WAAW,UAAU,MAAM,IACvD,KAAK,cAAc,WAAW,UAAU,MAAM,KAAK,cAAc,IACjE,CAAC;AAAA,MACP;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,0BAA0B;AACxB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,MAAM;AACzB,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,0BAA0B;AAC9C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,4BAA4B;AAC1B,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,cAAM,OAAO,KAAK,mBAAmB;AACrC,cAAM,aAAa,KAAK,qBAAqB;AAC7C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAqB;AACnB,YACE,KAAK,OAAO,MAAM,UAAU,UAC5B,KAAK,OAAO,MAAM,UAAU,WAC5B,KAAK,OAAO,MAAM,UAAU,QAC5B;AACA,iBAAO,GAAG,aAAa;AAAA,YACrB,KAAK,OAAO;AAAA,YACZ,KAAK,OAAO,MAAM;AAAA,YAClB,GAAG;AAAA,cACD,KAAK,OAAO;AAAA,YACd,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,iCAAiC;AAC/B,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,2BAA2B;AAC/C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,6BAA6B;AAC3B,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeA,2BAA2B;AACzB,cAAM,eAAe,KAAK,OAAO,UAAU;AAE3C,YAAI,aAAa,SAAS,WAAW,UAAU,MAAM;AACnD,kBAAQ,aAAa,OAAO;AAAA,YAC1B,KAAK;AACH,qBAAO,KAAK,qBAAqB;AAAA,YAEnC,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,YAEvC,KAAK;AACH,qBAAO,KAAK,yBAAyB;AAAA,YAEvC,KAAK;AACH,qBAAO,KAAK,4BAA4B;AAAA,YAE1C,KAAK;AACH,qBAAO,KAAK,wBAAwB;AAAA,YAEtC,KAAK;AACH,qBAAO,KAAK,uBAAuB;AAAA,YAErC,KAAK;AACH,qBAAO,KAAK,8BAA8B;AAAA,UAC9C;AAAA,QACF;AAEA,cAAM,KAAK,WAAW,YAAY;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,uBAAuB;AACrB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,QAAQ;AAC3B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,iBAAiB,KAAK;AAAA,UAC1B,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,UACL,WAAW,UAAU;AAAA,QACvB;AAEA,YAAI,WAAW,WAAW,KAAK,eAAe,WAAW,GAAG;AAC1D,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,QAAQ;AAC3B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAE7C,YAAI,WAAW,WAAW,GAAG;AAC3B,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,MAAM;AACzB,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,0BAA0B;AAClD,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,sBAAsB;AAE1C,YACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,8BAA8B;AAC5B,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,WAAW;AAC9B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,0BAA0B;AAClD,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,sBAAsB;AAE1C,YACE,WAAW,WAAW,KACtB,WAAW,WAAW,KACtB,OAAO,WAAW,GAClB;AACA,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,0BAA0B;AACxB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,QAAQ,KAAK,sBAAsB;AAEzC,YAAI,WAAW,WAAW,KAAK,MAAM,WAAW,GAAG;AACjD,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,yBAAyB;AACvB,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,MAAM;AACzB,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,0BAA0B;AAE9C,YAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,gCAAgC;AAC9B,cAAM,QAAQ,KAAK,OAAO;AAC1B,aAAK,cAAc,QAAQ;AAC3B,aAAK,cAAc,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,aAAa,KAAK,qBAAqB;AAC7C,cAAM,SAAS,KAAK,2BAA2B;AAE/C,YAAI,WAAW,WAAW,KAAK,OAAO,WAAW,GAAG;AAClD,gBAAM,KAAK,WAAW;AAAA,QACxB;AAEA,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,2BAA2B;AACzB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,cAAc,KAAK,iBAAiB;AAC1C,aAAK,cAAc,WAAW;AAC9B,aAAK,YAAY,WAAW,UAAU,EAAE;AACxC,cAAM,OAAO,KAAK,UAAU;AAC5B,cAAM,OAAO,KAAK,kBAAkB;AACpC,cAAM,aAAa,KAAK,sBAAsB,YAAY;AAC1D,aAAK,cAAc,IAAI;AACvB,cAAM,YAAY,KAAK,wBAAwB;AAC/C,eAAO,KAAK,KAAK,OAAO;AAAA,UACtB,MAAM,OAAO,KAAK;AAAA,UAClB;AAAA,UACA;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA;AAAA,QACF,CAAC;AAAA,MACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,0BAA0B;AACxB,eAAO,KAAK;AAAA,UACV,WAAW,UAAU;AAAA,UACrB,KAAK;AAAA,QACP;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA6BA,yBAAyB;AACvB,cAAM,QAAQ,KAAK,OAAO;AAC1B,cAAM,OAAO,KAAK,UAAU;AAE5B,YACE,OAAO,UAAU,eAAe;AAAA,UAC9B,mBAAmB;AAAA,UACnB,KAAK;AAAA,QACP,GACA;AACA,iBAAO;AAAA,QACT;AAEA,cAAM,KAAK,WAAW,KAAK;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,KAAK,YAAY,MAAM;AACrB,YAAI,KAAK,SAAS,eAAe,MAAM;AACrC,eAAK,MAAM,IAAI,KAAK;AAAA,YAClB;AAAA,YACA,KAAK,OAAO;AAAA,YACZ,KAAK,OAAO;AAAA,UACd;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,KAAK,MAAM;AACT,eAAO,KAAK,OAAO,MAAM,SAAS;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY,MAAM;AAChB,cAAM,QAAQ,KAAK,OAAO;AAE1B,YAAI,MAAM,SAAS,MAAM;AACvB,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO,GAAG,aAAa;AAAA,UACrB,KAAK,OAAO;AAAA,UACZ,MAAM;AAAA,UACN,YAAY,iBAAiB,IAAI,CAAC,WAAW,aAAa,KAAK,CAAC;AAAA,QAClE;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,oBAAoB,MAAM;AACxB,cAAM,QAAQ,KAAK,OAAO;AAE1B,YAAI,MAAM,SAAS,MAAM;AACvB,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,cAAc,OAAO;AACnB,cAAM,QAAQ,KAAK,OAAO;AAE1B,YAAI,MAAM,SAAS,WAAW,UAAU,QAAQ,MAAM,UAAU,OAAO;AACrE,eAAK,aAAa;AAAA,QACpB,OAAO;AACL,iBAAO,GAAG,aAAa;AAAA,YACrB,KAAK,OAAO;AAAA,YACZ,MAAM;AAAA,YACN,aAAa,KAAK,YAAY,aAAa,KAAK,CAAC;AAAA,UACnD;AAAA,QACF;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,sBAAsB,OAAO;AAC3B,cAAM,QAAQ,KAAK,OAAO;AAE1B,YAAI,MAAM,SAAS,WAAW,UAAU,QAAQ,MAAM,UAAU,OAAO;AACrE,eAAK,aAAa;AAClB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAKA,WAAW,SAAS;AAClB,cAAM,QACJ,YAAY,QAAQ,YAAY,SAAS,UAAU,KAAK,OAAO;AACjE,gBAAQ,GAAG,aAAa;AAAA,UACtB,KAAK,OAAO;AAAA,UACZ,MAAM;AAAA,UACN,cAAc,aAAa,KAAK,CAAC;AAAA,QACnC;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,IAAI,UAAU,SAAS,WAAW;AAChC,aAAK,YAAY,QAAQ;AACzB,cAAM,QAAQ,CAAC;AAEf,eAAO,CAAC,KAAK,oBAAoB,SAAS,GAAG;AAC3C,gBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC/B;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,aAAa,UAAU,SAAS,WAAW;AACzC,YAAI,KAAK,oBAAoB,QAAQ,GAAG;AACtC,gBAAM,QAAQ,CAAC;AAEf,aAAG;AACD,kBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,iBAAO;AAAA,QACT;AAEA,eAAO,CAAC;AAAA,MACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,KAAK,UAAU,SAAS,WAAW;AACjC,aAAK,YAAY,QAAQ;AACzB,cAAM,QAAQ,CAAC;AAEf,WAAG;AACD,gBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC/B,SAAS,CAAC,KAAK,oBAAoB,SAAS;AAE5C,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,cAAc,eAAe,SAAS;AACpC,aAAK,oBAAoB,aAAa;AACtC,cAAM,QAAQ,CAAC;AAEf,WAAG;AACD,gBAAM,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC/B,SAAS,KAAK,oBAAoB,aAAa;AAE/C,eAAO;AAAA,MACT;AAAA,MAEA,eAAe;AACb,cAAM,EAAE,UAAU,IAAI,KAAK;AAE3B,cAAM,QAAQ,KAAK,OAAO,QAAQ;AAElC,YAAI,cAAc,UAAa,MAAM,SAAS,WAAW,UAAU,KAAK;AACtE,YAAE,KAAK;AAEP,cAAI,KAAK,gBAAgB,WAAW;AAClC,mBAAO,GAAG,aAAa;AAAA,cACrB,KAAK,OAAO;AAAA,cACZ,MAAM;AAAA,cACN,+BAA+B,SAAS;AAAA,YAC1C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAKA,YAAQ,SAAS;AAEjB,aAAS,aAAa,OAAO;AAC3B,YAAM,QAAQ,MAAM;AACpB,aAAO,iBAAiB,MAAM,IAAI,KAAK,SAAS,OAAO,KAAK,KAAK,MAAM;AAAA,IACzE;AAKA,aAAS,iBAAiB,MAAM;AAC9B,cAAQ,GAAG,OAAO,uBAAuB,IAAI,IAAI,IAAI,IAAI,MAAM;AAAA,IACjE;AAAA;AAAA;;;AC9hDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mBAAmB;AAmB3B,aAAS,iBAAiB,eAAe;AACvC,aACE,OAAO,kBAAkB,YACzB,QAAQ,kBAAkB,QAAQ,kBAAkB,SAChD,SACA,cAAc,OAAO,QAAQ,OAAO;AAAA,IAE5C;AAAA;AAAA;;;AC/BA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAMpB,aAAS,UAAU,OAAO;AACxB,aACE,QAAQ,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,UAC5D;AAAA,IAEJ;AAAA;AAAA;;;AChBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,WAAW;AAKnB,aAAS,SAAS,IAAI;AACpB,UAAI;AACJ,aAAO,SAAS,SAAS,IAAI,IAAI,IAAI;AACnC,YAAI,WAAW,QAAW;AACxB,mBAAS,oBAAI,QAAQ;AAAA,QACvB;AAEA,YAAI,SAAS,OAAO,IAAI,EAAE;AAE1B,YAAI,WAAW,QAAW;AACxB,mBAAS,oBAAI,QAAQ;AACrB,iBAAO,IAAI,IAAI,MAAM;AAAA,QACvB;AAEA,YAAI,SAAS,OAAO,IAAI,EAAE;AAE1B,YAAI,WAAW,QAAW;AACxB,mBAAS,oBAAI,QAAQ;AACrB,iBAAO,IAAI,IAAI,MAAM;AAAA,QACvB;AAEA,YAAI,WAAW,OAAO,IAAI,EAAE;AAE5B,YAAI,aAAa,QAAW;AAC1B,qBAAW,GAAG,IAAI,IAAI,EAAE;AACxB,iBAAO,IAAI,IAAI,QAAQ;AAAA,QACzB;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;ACxCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,UAAU;AAClB,YAAQ,cAAc;AAKtB,aAAS,QAAQ,MAAM,KAAK,UAAU;AACpC,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAKA,aAAS,YAAY,MAAM;AACzB,YAAM,YAAY,CAAC;AACnB,UAAI,OAAO;AAEX,aAAO,MAAM;AACX,kBAAU,KAAK,KAAK,GAAG;AACvB,eAAO,KAAK;AAAA,MACd;AAEA,aAAO,UAAU,QAAQ;AAAA,IAC3B;AAAA;AAAA;;;AChCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mBAAmB;AAS3B,aAAS,iBAAiB,QAAQ;AAChC,aAAO,QAAQ,IAAI,OAAO,OAAO,MAAM,CAAC,EAAE,KAAK,CAAC,mBAAmB;AACjE,cAAM,iBAAiB,uBAAO,OAAO,IAAI;AAEzC,mBAAW,CAAC,GAAG,GAAG,KAAK,OAAO,KAAK,MAAM,EAAE,QAAQ,GAAG;AACpD,yBAAe,GAAG,IAAI,eAAe,CAAC;AAAA,QACxC;AAEA,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA;AAAA;;;ACxBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBAAgB;AAExB,QAAI,aAAa;AASjB,aAAS,cAAc,QAAQ,YAAY,cAAc;AACvD,UAAI,cAAc;AAElB,iBAAW,SAAS,QAAQ;AAC1B,uBAAe,GAAG,WAAW,WAAW,WAAW,IAC/C,YAAY,KAAK,CAAC,aAAa,WAAW,UAAU,KAAK,CAAC,IAC1D,WAAW,aAAa,KAAK;AAAA,MACnC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1BA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,UAAU;AAElB,QAAI,WAAW;AAKf,aAAS,QAAQ,aAAa;AAC5B,aAAO,uBAAuB,QAC1B,cACA,IAAI,eAAe,WAAW;AAAA,IACpC;AAEA,QAAM,iBAAN,cAA6B,MAAM;AAAA,MACjC,YAAY,aAAa;AACvB,cAAM,8BAA8B,GAAG,SAAS,SAAS,WAAW,CAAC;AACrE,aAAK,OAAO;AACZ,aAAK,cAAc;AAAA,MACrB;AAAA,IACF;AAAA;AAAA;;;ACxBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AAEvB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAOpB,aAAS,aAAa,kBAAkB,OAAO,MAAM;AACnD,UAAI;AAEJ,YAAM,iBAAiB,GAAG,SAAS,SAAS,gBAAgB;AAE5D,UAAI,sBAAsB,aAAa,GAAG;AACxC,eAAO;AAAA,MACT;AAEA,aAAO,IAAI,cAAc,aAAa,cAAc,SAAS;AAAA,QAC3D,QACG,SAAS,cAAc,WAAW,QAAQ,WAAW,SAClD,SACA;AAAA,QACN,QAAQ,cAAc;AAAA,QACtB,WAAW,cAAc;AAAA,QACzB;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,sBAAsB,OAAO;AACpC,aAAO,MAAM,QAAQ,MAAM,IAAI;AAAA,IACjC;AAAA;AAAA;;;ACvCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,aAAa;AACrB,QAAM,kBAAkB;AAKxB,aAAS,WAAW,UAAU,WAAW;AACvC,YAAM,CAAC,YAAY,cAAc,IAAI,YACjC,CAAC,UAAU,SAAS,IACpB,CAAC,QAAW,QAAQ;AACxB,UAAI,UAAU;AAEd,UAAI,YAAY;AACd,mBAAW,aAAa;AAAA,MAC1B;AAEA,YAAM,cAAc,eAAe,IAAI,CAAC,MAAM,IAAI,CAAC,GAAG;AAEtD,cAAQ,YAAY,QAAQ;AAAA,QAC1B,KAAK;AACH,iBAAO;AAAA,QAET,KAAK;AACH,iBAAO,UAAU,YAAY,CAAC,IAAI;AAAA,QAEpC,KAAK;AACH,iBAAO,UAAU,YAAY,CAAC,IAAI,SAAS,YAAY,CAAC,IAAI;AAAA,MAChE;AAEA,YAAM,WAAW,YAAY,MAAM,GAAG,eAAe;AACrD,YAAM,WAAW,SAAS,IAAI;AAC9B,aAAO,UAAU,SAAS,KAAK,IAAI,IAAI,UAAU,WAAW;AAAA,IAC9D;AAAA;AAAA;;;ACrCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AAKvB,aAAS,aAAa,GAAG;AACvB,aAAO;AAAA,IACT;AAAA;AAAA;;;ACZA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,SAAS;AA6BjB,aAAS,OAAO,MAAM,OAAO;AAC3B,YAAM,SAAS,uBAAO,OAAO,IAAI;AAEjC,iBAAW,QAAQ,MAAM;AACvB,eAAO,MAAM,IAAI,CAAC,IAAI;AAAA,MACxB;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAmBpB,aAAS,UAAU,MAAM,OAAO,OAAO;AACrC,YAAM,SAAS,uBAAO,OAAO,IAAI;AAEjC,iBAAW,QAAQ,MAAM;AACvB,eAAO,MAAM,IAAI,CAAC,IAAI,MAAM,IAAI;AAAA,MAClC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AChCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,WAAW;AAMnB,aAAS,SAAS,KAAK,IAAI;AACzB,YAAM,SAAS,uBAAO,OAAO,IAAI;AAEjC,iBAAW,OAAO,OAAO,KAAK,GAAG,GAAG;AAClC,eAAO,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG;AAAA,MAChC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACnBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AASzB,aAAS,eAAe,MAAM,MAAM;AAClC,UAAI,SAAS;AACb,UAAI,SAAS;AAEb,aAAO,SAAS,KAAK,UAAU,SAAS,KAAK,QAAQ;AACnD,YAAI,QAAQ,KAAK,WAAW,MAAM;AAClC,YAAI,QAAQ,KAAK,WAAW,MAAM;AAElC,YAAI,QAAQ,KAAK,KAAK,QAAQ,KAAK,GAAG;AACpC,cAAI,OAAO;AAEX,aAAG;AACD,cAAE;AACF,mBAAO,OAAO,KAAK,QAAQ;AAC3B,oBAAQ,KAAK,WAAW,MAAM;AAAA,UAChC,SAAS,QAAQ,KAAK,KAAK,OAAO;AAElC,cAAI,OAAO;AAEX,aAAG;AACD,cAAE;AACF,mBAAO,OAAO,KAAK,QAAQ;AAC3B,oBAAQ,KAAK,WAAW,MAAM;AAAA,UAChC,SAAS,QAAQ,KAAK,KAAK,OAAO;AAElC,cAAI,OAAO,MAAM;AACf,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,MAAM;AACf,mBAAO;AAAA,UACT;AAAA,QACF,OAAO;AACL,cAAI,QAAQ,OAAO;AACjB,mBAAO;AAAA,UACT;AAEA,cAAI,QAAQ,OAAO;AACjB,mBAAO;AAAA,UACT;AAEA,YAAE;AACF,YAAE;AAAA,QACJ;AAAA,MACF;AAEA,aAAO,KAAK,SAAS,KAAK;AAAA,IAC5B;AAEA,QAAM,UAAU;AAChB,QAAM,UAAU;AAEhB,aAAS,QAAQ,MAAM;AACrB,aAAO,CAAC,MAAM,IAAI,KAAK,WAAW,QAAQ,QAAQ;AAAA,IACpD;AAAA;AAAA;;;ACpEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AAEzB,QAAI,kBAAkB;AAMtB,aAAS,eAAe,OAAO,SAAS;AACtC,YAAM,oBAAoB,uBAAO,OAAO,IAAI;AAC5C,YAAM,kBAAkB,IAAI,gBAAgB,KAAK;AACjD,YAAM,YAAY,KAAK,MAAM,MAAM,SAAS,GAAG,IAAI;AAEnD,iBAAW,UAAU,SAAS;AAC5B,cAAM,WAAW,gBAAgB,QAAQ,QAAQ,SAAS;AAE1D,YAAI,aAAa,QAAW;AAC1B,4BAAkB,MAAM,IAAI;AAAA,QAC9B;AAAA,MACF;AAEA,aAAO,OAAO,KAAK,iBAAiB,EAAE,KAAK,CAAC,GAAG,MAAM;AACnD,cAAM,eAAe,kBAAkB,CAAC,IAAI,kBAAkB,CAAC;AAC/D,eAAO,iBAAiB,IACpB,gBACC,GAAG,gBAAgB,gBAAgB,GAAG,CAAC;AAAA,MAC9C,CAAC;AAAA,IACH;AAgBA,QAAM,kBAAN,MAAsB;AAAA,MACpB,YAAY,OAAO;AACjB,aAAK,SAAS;AACd,aAAK,kBAAkB,MAAM,YAAY;AACzC,aAAK,cAAc,cAAc,KAAK,eAAe;AACrD,aAAK,QAAQ;AAAA,UACX,IAAI,MAAM,MAAM,SAAS,CAAC,EAAE,KAAK,CAAC;AAAA,UAClC,IAAI,MAAM,MAAM,SAAS,CAAC,EAAE,KAAK,CAAC;AAAA,UAClC,IAAI,MAAM,MAAM,SAAS,CAAC,EAAE,KAAK,CAAC;AAAA,QACpC;AAAA,MACF;AAAA,MAEA,QAAQ,QAAQ,WAAW;AACzB,YAAI,KAAK,WAAW,QAAQ;AAC1B,iBAAO;AAAA,QACT;AAEA,cAAM,kBAAkB,OAAO,YAAY;AAE3C,YAAI,KAAK,oBAAoB,iBAAiB;AAC5C,iBAAO;AAAA,QACT;AAEA,YAAI,IAAI,cAAc,eAAe;AACrC,YAAI,IAAI,KAAK;AAEb,YAAI,EAAE,SAAS,EAAE,QAAQ;AACvB,gBAAM,MAAM;AACZ,cAAI;AACJ,cAAI;AAAA,QACN;AAEA,cAAM,UAAU,EAAE;AAClB,cAAM,UAAU,EAAE;AAElB,YAAI,UAAU,UAAU,WAAW;AACjC,iBAAO;AAAA,QACT;AAEA,cAAM,OAAO,KAAK;AAElB,iBAAS,IAAI,GAAG,KAAK,SAAS,KAAK;AACjC,eAAK,CAAC,EAAE,CAAC,IAAI;AAAA,QACf;AAEA,iBAAS,IAAI,GAAG,KAAK,SAAS,KAAK;AACjC,gBAAM,QAAQ,MAAM,IAAI,KAAK,CAAC;AAC9B,gBAAM,aAAa,KAAK,IAAI,CAAC;AAC7B,cAAI,eAAgB,WAAW,CAAC,IAAI;AAEpC,mBAAS,IAAI,GAAG,KAAK,SAAS,KAAK;AACjC,kBAAM,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,IAAI;AACzC,gBAAI,cAAc,KAAK;AAAA,cACrB,MAAM,CAAC,IAAI;AAAA;AAAA,cACX,WAAW,IAAI,CAAC,IAAI;AAAA;AAAA,cACpB,MAAM,IAAI,CAAC,IAAI;AAAA;AAAA,YACjB;AAEA,gBAAI,IAAI,KAAK,IAAI,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG;AAEpE,oBAAM,qBAAqB,MAAM,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC;AAClD,4BAAc,KAAK,IAAI,aAAa,qBAAqB,CAAC;AAAA,YAC5D;AAEA,gBAAI,cAAc,cAAc;AAC9B,6BAAe;AAAA,YACjB;AAEA,uBAAW,CAAC,IAAI;AAAA,UAClB;AAEA,cAAI,eAAe,WAAW;AAC5B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,WAAW,KAAK,UAAU,CAAC,EAAE,OAAO;AAC1C,eAAO,YAAY,YAAY,WAAW;AAAA,MAC5C;AAAA,IACF;AAEA,aAAS,cAAc,KAAK;AAC1B,YAAM,YAAY,IAAI;AACtB,YAAM,QAAQ,IAAI,MAAM,SAAS;AAEjC,eAAS,IAAI,GAAG,IAAI,WAAW,EAAE,GAAG;AAClC,cAAM,CAAC,IAAI,IAAI,WAAW,CAAC;AAAA,MAC7B;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC1IA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,WAAW;AAEnB,aAAS,SAAS,KAAK;AACrB,UAAI,OAAO,MAAM;AACf,eAAO,uBAAO,OAAO,IAAI;AAAA,MAC3B;AAEA,UAAI,OAAO,eAAe,GAAG,MAAM,MAAM;AACvC,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,uBAAO,OAAO,IAAI;AAE9B,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,GAAG,GAAG;AAC9C,YAAI,GAAG,IAAI;AAAA,MACb;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,cAAc;AAMtB,aAAS,YAAY,KAAK;AACxB,aAAO,IAAI,IAAI,QAAQ,eAAe,eAAe,CAAC;AAAA,IACxD;AAEA,QAAM,gBAAgB;AAEtB,aAAS,gBAAgB,KAAK;AAC5B,aAAO,gBAAgB,IAAI,WAAW,CAAC,CAAC;AAAA,IAC1C;AAEA,QAAM,kBAAkB;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA;AAAA;;;ACtLA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,QAAQ;AAChB,YAAQ,uBAAuB;AAC/B,YAAQ,aAAa;AACrB,YAAQ,QAAQ;AAChB,YAAQ,kBAAkB;AAE1B,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,OAAO;AAEX,QAAI,SAAS;AAEb,QAAM,QAAQ,OAAO,OAAO,CAAC,CAAC;AAgF9B,YAAQ,QAAQ;AAEhB,aAAS,MAAM,MAAM,SAAS,cAAc,KAAK,mBAAmB;AAClE,YAAM,gBAAgB,oBAAI,IAAI;AAE9B,iBAAW,QAAQ,OAAO,OAAO,OAAO,IAAI,GAAG;AAC7C,sBAAc,IAAI,MAAM,qBAAqB,SAAS,IAAI,CAAC;AAAA,MAC7D;AAGA,UAAI,QAAQ;AACZ,UAAI,UAAU,MAAM,QAAQ,IAAI;AAChC,UAAI,OAAO,CAAC,IAAI;AAChB,UAAI,QAAQ;AACZ,UAAI,QAAQ,CAAC;AACb,UAAI,OAAO;AACX,UAAI,MAAM;AACV,UAAI,SAAS;AACb,YAAM,OAAO,CAAC;AACd,YAAM,YAAY,CAAC;AAGnB,SAAG;AACD;AACA,cAAM,YAAY,UAAU,KAAK;AACjC,cAAM,WAAW,aAAa,MAAM,WAAW;AAE/C,YAAI,WAAW;AACb,gBAAM,UAAU,WAAW,IAAI,SAAY,KAAK,KAAK,SAAS,CAAC;AAC/D,iBAAO;AACP,mBAAS,UAAU,IAAI;AAEvB,cAAI,UAAU;AACZ,gBAAI,SAAS;AACX,qBAAO,KAAK,MAAM;AAClB,kBAAI,aAAa;AAEjB,yBAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,sBAAM,WAAW,UAAU;AAE3B,oBAAI,cAAc,MAAM;AACtB,uBAAK,OAAO,UAAU,CAAC;AACvB;AAAA,gBACF,OAAO;AACL,uBAAK,QAAQ,IAAI;AAAA,gBACnB;AAAA,cACF;AAAA,YACF,OAAO;AACL,qBAAO,OAAO;AAAA,gBACZ,CAAC;AAAA,gBACD,OAAO,0BAA0B,IAAI;AAAA,cACvC;AAEA,yBAAW,CAAC,SAAS,SAAS,KAAK,OAAO;AACxC,qBAAK,OAAO,IAAI;AAAA,cAClB;AAAA,YACF;AAAA,UACF;AAEA,kBAAQ,MAAM;AACd,iBAAO,MAAM;AACb,kBAAQ,MAAM;AACd,oBAAU,MAAM;AAChB,kBAAQ,MAAM;AAAA,QAChB,WAAW,QAAQ;AACjB,gBAAM,UAAU,QAAQ,KAAK,KAAK;AAClC,iBAAO,OAAO,GAAG;AAEjB,cAAI,SAAS,QAAQ,SAAS,QAAW;AACvC;AAAA,UACF;AAEA,eAAK,KAAK,GAAG;AAAA,QACf;AAEA,YAAI;AAEJ,YAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAI,oBAAoB;AAExB,WAAC,GAAG,KAAK,QAAQ,IAAI,MAClB,GAAG,WAAW;AAAA,YACb;AAAA,YACA,sBAAsB,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,UAClD;AACF,gBAAM,UAAU,aACX,qBAAqB,cAAc,IAAI,KAAK,IAAI,OAAO,QACxD,uBAAuB,SACrB,SACA,mBAAmB,SACpB,sBAAsB,cAAc,IAAI,KAAK,IAAI,OAAO,QACzD,wBAAwB,SACxB,SACA,oBAAoB;AACxB,mBACE,YAAY,QAAQ,YAAY,SAC5B,SACA,QAAQ,KAAK,SAAS,MAAM,KAAK,QAAQ,MAAM,SAAS;AAE9D,cAAI,WAAW,OAAO;AACpB;AAAA,UACF;AAEA,cAAI,WAAW,OAAO;AACpB,gBAAI,CAAC,WAAW;AACd,mBAAK,IAAI;AACT;AAAA,YACF;AAAA,UACF,WAAW,WAAW,QAAW;AAC/B,kBAAM,KAAK,CAAC,KAAK,MAAM,CAAC;AAExB,gBAAI,CAAC,WAAW;AACd,mBAAK,GAAG,KAAK,QAAQ,MAAM,GAAG;AAC5B,uBAAO;AAAA,cACT,OAAO;AACL,qBAAK,IAAI;AACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,YAAI,WAAW,UAAa,UAAU;AACpC,gBAAM,KAAK,CAAC,KAAK,IAAI,CAAC;AAAA,QACxB;AAEA,YAAI,WAAW;AACb,eAAK,IAAI;AAAA,QACX,OAAO;AACL,cAAI;AAEJ,kBAAQ;AAAA,YACN;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,MAAM;AAAA,UACR;AACA,oBAAU,MAAM,QAAQ,IAAI;AAC5B,iBAAO,UACH,QACC,aAAa,YAAY,KAAK,IAAI,OAAO,QAC1C,eAAe,SACf,aACA,CAAC;AACL,kBAAQ;AACR,kBAAQ,CAAC;AAET,cAAI,QAAQ;AACV,sBAAU,KAAK,MAAM;AAAA,UACvB;AAEA,mBAAS;AAAA,QACX;AAAA,MACF,SAAS,UAAU;AAEnB,UAAI,MAAM,WAAW,GAAG;AAEtB,eAAO,MAAM,MAAM,SAAS,CAAC,EAAE,CAAC;AAAA,MAClC;AAEA,aAAO;AAAA,IACT;AAQA,aAAS,gBAAgB,UAAU;AACjC,YAAM,WAAW,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,IAAI;AACrD,YAAM,gBAAgB,uBAAO,OAAO,IAAI;AAExC,iBAAW,QAAQ,OAAO,OAAO,OAAO,IAAI,GAAG;AAC7C,YAAI,aAAa;AACjB,cAAM,YAAY,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,MAAS;AAC3D,cAAM,YAAY,IAAI,MAAM,SAAS,MAAM,EAAE,KAAK,MAAS;AAE3D,iBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AACxC,gBAAM,EAAE,OAAO,MAAM,IAAI,qBAAqB,SAAS,CAAC,GAAG,IAAI;AAC/D,yBAAe,aAAa,SAAS,QAAQ,SAAS;AACtD,oBAAU,CAAC,IAAI;AACf,oBAAU,CAAC,IAAI;AAAA,QACjB;AAEA,YAAI,CAAC,YAAY;AACf;AAAA,QACF;AAEA,cAAM,mBAAmB;AAAA,UACvB,SAAS,MAAM;AACb,kBAAM,OAAO,KAAK,CAAC;AAEnB,qBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,kBAAI,SAAS,CAAC,MAAM,MAAM;AACxB,oBAAI;AAEJ,sBAAM,UACH,eAAe,UAAU,CAAC,OAAO,QAAQ,iBAAiB,SACvD,SACA,aAAa,MAAM,SAAS,CAAC,GAAG,IAAI;AAE1C,oBAAI,WAAW,OAAO;AACpB,2BAAS,CAAC,IAAI;AAAA,gBAChB,WAAW,WAAW,OAAO;AAC3B,2BAAS,CAAC,IAAI;AAAA,gBAChB,WAAW,WAAW,QAAW;AAC/B,yBAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,UAEA,SAAS,MAAM;AACb,kBAAM,OAAO,KAAK,CAAC;AAEnB,qBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,kBAAI,SAAS,CAAC,MAAM,MAAM;AACxB,oBAAI;AAEJ,sBAAM,UACH,eAAe,UAAU,CAAC,OAAO,QAAQ,iBAAiB,SACvD,SACA,aAAa,MAAM,SAAS,CAAC,GAAG,IAAI;AAE1C,oBAAI,WAAW,OAAO;AACpB,2BAAS,CAAC,IAAI;AAAA,gBAChB,WAAW,WAAW,UAAa,WAAW,OAAO;AACnD,yBAAO;AAAA,gBACT;AAAA,cACF,WAAW,SAAS,CAAC,MAAM,MAAM;AAC/B,yBAAS,CAAC,IAAI;AAAA,cAChB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,sBAAc,IAAI,IAAI;AAAA,MACxB;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,qBAAqB,SAAS,MAAM;AAC3C,YAAM,cAAc,QAAQ,IAAI;AAEhC,UAAI,OAAO,gBAAgB,UAAU;AAEnC,eAAO;AAAA,MACT,WAAW,OAAO,gBAAgB,YAAY;AAE5C,eAAO;AAAA,UACL,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO;AAAA,QACL,OAAO,QAAQ;AAAA,QACf,OAAO,QAAQ;AAAA,MACjB;AAAA,IACF;AAUA,aAAS,WAAW,SAAS,MAAM,WAAW;AAC5C,YAAM,EAAE,OAAO,MAAM,IAAI,qBAAqB,SAAS,IAAI;AAC3D,aAAO,YAAY,QAAQ;AAAA,IAC7B;AAAA;AAAA;;;ACxXA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,QAAQ;AAEhB,QAAI,eAAe;AAEnB,QAAI,eAAe;AAEnB,QAAI,WAAW;AAMf,aAAS,MAAM,KAAK;AAClB,cAAQ,GAAG,SAAS,OAAO,KAAK,kBAAkB;AAAA,IACpD;AAEA,QAAM,kBAAkB;AACxB,QAAM,qBAAqB;AAAA,MACzB,MAAM;AAAA,QACJ,OAAO,CAAC,SAAS,KAAK;AAAA,MACxB;AAAA,MACA,UAAU;AAAA,QACR,OAAO,CAAC,SAAS,MAAM,KAAK;AAAA,MAC9B;AAAA;AAAA,MAEA,UAAU;AAAA,QACR,OAAO,CAAC,SAAS,KAAK,KAAK,aAAa,MAAM;AAAA,MAChD;AAAA,MACA,qBAAqB;AAAA,QACnB,MAAM,MAAM;AACV,gBAAM,UAAU,KAAK,KAAK,KAAK,KAAK,qBAAqB,IAAI,GAAG,GAAG;AACnE,gBAAM,SAAS;AAAA,YACb;AAAA,cACE,KAAK;AAAA,cACL,KAAK,CAAC,KAAK,MAAM,OAAO,CAAC;AAAA,cACzB,KAAK,KAAK,YAAY,GAAG;AAAA,YAC3B;AAAA,YACA;AAAA,UACF;AAGA,kBAAQ,WAAW,UAAU,KAAK,SAAS,OAAO,KAAK;AAAA,QACzD;AAAA,MACF;AAAA,MACA,oBAAoB;AAAA,QAClB,OAAO,CAAC,EAAE,UAAU,MAAM,cAAc,WAAW,MACjD,WACA,OACA,OACA,KAAK,OAAO,YAAY,IACxB,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,MACnC;AAAA,MACA,cAAc;AAAA,QACZ,OAAO,CAAC,EAAE,WAAW,MAAM,MAAM,UAAU;AAAA,MAC7C;AAAA,MACA,OAAO;AAAA,QACL,MAAM,EAAE,OAAO,MAAM,WAAW,MAAM,YAAY,aAAa,GAAG;AAChE,gBAAM,SAAS,KAAK,IAAI,OAAO,IAAI,IAAI;AACvC,cAAI,WAAW,SAAS,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG;AAEvD,cAAI,SAAS,SAAS,iBAAiB;AACrC,uBAAW,SAAS,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK;AAAA,UACjE;AAEA,iBAAO,KAAK,CAAC,UAAU,KAAK,YAAY,GAAG,GAAG,YAAY,GAAG,GAAG;AAAA,QAClE;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,MAC5C;AAAA;AAAA,MAEA,gBAAgB;AAAA,QACd,OAAO,CAAC,EAAE,MAAM,WAAW,MACzB,QAAQ,OAAO,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,MAClD;AAAA,MACA,gBAAgB;AAAA,QACd,OAAO,CAAC,EAAE,eAAe,YAAY,aAAa,MAChD;AAAA,UACE;AAAA,YACE;AAAA,YACA,KAAK,OAAO,aAAa;AAAA,YACzB,KAAK,YAAY,GAAG;AAAA,YACpB;AAAA,UACF;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,oBAAoB;AAAA,QAClB,OAAO,CACL,EAAE,MAAM,eAAe,qBAAqB,YAAY,aAAa;AAAA;AAAA,UAGrE,YAAY,IAAI,GAAG,KAAK,KAAK,KAAK,qBAAqB,IAAI,GAAG,GAAG,CAAC,OAC5D,aAAa,IAAI,KAAK,IAAI,KAAK,YAAY,GAAG,GAAG,GAAG,CAAC,KAC3D;AAAA;AAAA,MACJ;AAAA;AAAA,MAEA,UAAU;AAAA,QACR,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,MACxB;AAAA,MACA,YAAY;AAAA,QACV,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,MACxB;AAAA,MACA,aAAa;AAAA,QACX,OAAO,CAAC,EAAE,OAAO,OAAO,cAAc,MACpC,iBACK,GAAG,aAAa,kBAAkB,KAAK,KACvC,GAAG,aAAa,aAAa,KAAK;AAAA,MAC3C;AAAA,MACA,cAAc;AAAA,QACZ,OAAO,CAAC,EAAE,MAAM,MAAO,QAAQ,SAAS;AAAA,MAC1C;AAAA,MACA,WAAW;AAAA,QACT,OAAO,MAAM;AAAA,MACf;AAAA,MACA,WAAW;AAAA,QACT,OAAO,CAAC,EAAE,MAAM,MAAM;AAAA,MACxB;AAAA,MACA,WAAW;AAAA,QACT,OAAO,CAAC,EAAE,OAAO,MAAM,MAAM,KAAK,QAAQ,IAAI,IAAI;AAAA,MACpD;AAAA,MACA,aAAa;AAAA,QACX,OAAO,CAAC,EAAE,OAAO,MAAM,MAAM,KAAK,QAAQ,IAAI,IAAI;AAAA,MACpD;AAAA,MACA,aAAa;AAAA,QACX,OAAO,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO,OAAO;AAAA,MAC5C;AAAA;AAAA,MAEA,WAAW;AAAA,QACT,OAAO,CAAC,EAAE,MAAM,WAAW,KAAK,MAC9B,MAAM,OAAO,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG;AAAA,MAChD;AAAA;AAAA,MAEA,WAAW;AAAA,QACT,OAAO,CAAC,EAAE,KAAK,MAAM;AAAA,MACvB;AAAA,MACA,UAAU;AAAA,QACR,OAAO,CAAC,EAAE,KAAK,MAAM,MAAM,OAAO;AAAA,MACpC;AAAA,MACA,aAAa;AAAA,QACX,OAAO,CAAC,EAAE,KAAK,MAAM,OAAO;AAAA,MAC9B;AAAA;AAAA,MAEA,kBAAkB;AAAA,QAChB,OAAO,CAAC,EAAE,aAAa,YAAY,eAAe,MAChD,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,UAAU,KAAK,YAAY,GAAG,GAAG,MAAM,cAAc,CAAC,GAAG,GAAG;AAAA,MACtE;AAAA,MACA,yBAAyB;AAAA,QACvB,OAAO,CAAC,EAAE,WAAW,KAAK,MAAM,YAAY,OAAO;AAAA,MACrD;AAAA,MACA,sBAAsB;AAAA,QACpB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtC,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,UAAU,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,MACrD;AAAA,MACA,sBAAsB;AAAA,QACpB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,UACE;AAAA,YACE;AAAA,YACA;AAAA,YACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,YAC3C,KAAK,YAAY,GAAG;AAAA,YACpB,MAAM,MAAM;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,iBAAiB;AAAA,QACf,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,MAAM,WAAW,MAC7D,KAAK,IAAI,aAAa,IAAI,IAC1B,QACC,kBAAkB,IAAI,IACnB,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3C,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG,KACnC,OACA,OACA,KAAK,KAAK,KAAK,YAAY,GAAG,CAAC;AAAA,MACnC;AAAA,MACA,sBAAsB;AAAA,QACpB,OAAO,CAAC,EAAE,aAAa,MAAM,MAAM,cAAc,WAAW,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,UACE,CAAC,OAAO,OAAO,MAAM,KAAK,MAAM,YAAY,GAAG,KAAK,YAAY,GAAG,CAAC;AAAA,UACpE;AAAA,QACF;AAAA,MACJ;AAAA,MACA,yBAAyB;AAAA,QACvB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,YAAY,OAAO,MAC1D,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,UACE;AAAA,YACE;AAAA,YACA;AAAA,YACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,YAC3C,KAAK,YAAY,GAAG;AAAA,YACpB,MAAM,MAAM;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,qBAAqB;AAAA,QACnB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,MAAM,MAC7C,KAAK,IAAI,aAAa,IAAI,IAC1B;AAAA,UACE,CAAC,SAAS,MAAM,KAAK,YAAY,GAAG,GAAG,KAAK,MAAM,KAAK,OAAO,KAAK,CAAC,CAAC;AAAA,UACrE;AAAA,QACF;AAAA,MACJ;AAAA,MACA,oBAAoB;AAAA,QAClB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9C,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,QAAQ,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,MAClE;AAAA,MACA,qBAAqB;AAAA,QACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MACtC,KAAK,IAAI,aAAa,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,MACzE;AAAA,MACA,2BAA2B;AAAA,QACzB,OAAO,CAAC,EAAE,aAAa,MAAM,YAAY,OAAO,MAC9C,KAAK,IAAI,aAAa,IAAI,IAC1B,KAAK,CAAC,SAAS,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,MACnE;AAAA,MACA,qBAAqB;AAAA,QACnB,OAAO,CAAC,EAAE,aAAa,MAAM,WAAW,MAAM,YAAY,UAAU,MAClE,KAAK,IAAI,aAAa,IAAI,IAC1B,gBACA,QACC,kBAAkB,IAAI,IACnB,KAAK,OAAO,OAAO,KAAK,MAAM,IAAI,CAAC,GAAG,KAAK,IAC3C,KAAK,KAAK,KAAK,MAAM,IAAI,GAAG,GAAG,MAClC,aAAa,gBAAgB,MAC9B,SACA,KAAK,WAAW,KAAK;AAAA,MACzB;AAAA,MACA,iBAAiB;AAAA,QACf,OAAO,CAAC,EAAE,YAAY,eAAe,MACnC;AAAA,UACE,CAAC,iBAAiB,KAAK,YAAY,GAAG,GAAG,MAAM,cAAc,CAAC;AAAA,UAC9D;AAAA,QACF;AAAA,MACJ;AAAA,MACA,qBAAqB;AAAA,QACnB,OAAO,CAAC,EAAE,MAAM,WAAW,MACzB,KAAK,CAAC,iBAAiB,MAAM,KAAK,YAAY,GAAG,CAAC,GAAG,GAAG;AAAA,MAC5D;AAAA,MACA,qBAAqB;AAAA,QACnB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7C;AAAA,UACE;AAAA,YACE;AAAA,YACA;AAAA,YACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,YAC3C,KAAK,YAAY,GAAG;AAAA,YACpB,MAAM,MAAM;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,wBAAwB;AAAA,QACtB,OAAO,CAAC,EAAE,MAAM,YAAY,YAAY,OAAO,MAC7C;AAAA,UACE;AAAA,YACE;AAAA,YACA;AAAA,YACA,KAAK,eAAe,KAAK,YAAY,KAAK,CAAC;AAAA,YAC3C,KAAK,YAAY,GAAG;AAAA,YACpB,MAAM,MAAM;AAAA,UACd;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,oBAAoB;AAAA,QAClB,OAAO,CAAC,EAAE,MAAM,YAAY,MAAM,MAChC;AAAA,UACE;AAAA,YACE;AAAA,YACA;AAAA,YACA,KAAK,YAAY,GAAG;AAAA,YACpB,KAAK,MAAM,KAAK,OAAO,KAAK,CAAC;AAAA,UAC/B;AAAA,UACA;AAAA,QACF;AAAA,MACJ;AAAA,MACA,mBAAmB;AAAA,QACjB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjC,KAAK,CAAC,eAAe,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,MACzE;AAAA,MACA,0BAA0B;AAAA,QACxB,OAAO,CAAC,EAAE,MAAM,YAAY,OAAO,MACjC,KAAK,CAAC,gBAAgB,MAAM,KAAK,YAAY,GAAG,GAAG,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,MAC1E;AAAA,IACF;AAMA,aAAS,KAAK,YAAY,YAAY,IAAI;AACxC,UAAI;AAEJ,cAAQ,wBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,OAAO,QACrD,0BAA0B,SACxB,wBACA;AAAA,IACN;AAKA,aAAS,MAAM,OAAO;AACpB,aAAO,KAAK,OAAO,OAAO,KAAK,OAAO,IAAI,CAAC,GAAG,KAAK;AAAA,IACrD;AAKA,aAAS,KAAK,OAAO,aAAa,MAAM,IAAI;AAC1C,aAAO,eAAe,QAAQ,gBAAgB,KAC1C,QAAQ,cAAc,MACtB;AAAA,IACN;AAEA,aAAS,OAAO,KAAK;AACnB,aAAO,KAAK,MAAM,IAAI,QAAQ,OAAO,MAAM,CAAC;AAAA,IAC9C;AAEA,aAAS,kBAAkB,YAAY;AACrC,UAAI;AAKJ,cAAQ,mBACN,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,CAAC,OAAO,QACtD,qBAAqB,SACnB,mBACA;AAAA,IACN;AAAA;AAAA;;;AC9VA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,sBAAsB;AAE9B,QAAI,aAAa;AAEjB,QAAI,SAAS;AAkBb,aAAS,oBAAoB,WAAW,WAAW;AACjD,cAAQ,UAAU,MAAM;AAAA,QACtB,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO,SAAS,UAAU,OAAO,EAAE;AAAA,QAErC,KAAK,OAAO,KAAK;AACf,iBAAO,WAAW,UAAU,KAAK;AAAA,QAEnC,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,UAAU;AAAA,QAEnB,KAAK,OAAO,KAAK;AACf,iBAAO,UAAU,OAAO;AAAA,YAAI,CAAC,SAC3B,oBAAoB,MAAM,SAAS;AAAA,UACrC;AAAA,QAEF,KAAK,OAAO,KAAK;AACf,kBAAQ,GAAG,WAAW;AAAA,YACpB,UAAU;AAAA,YACV,CAAC,UAAU,MAAM,KAAK;AAAA,YACtB,CAAC,UAAU,oBAAoB,MAAM,OAAO,SAAS;AAAA,UACvD;AAAA,QAEF,KAAK,OAAO,KAAK;AACf,iBAAO,cAAc,QAAQ,cAAc,SACvC,SACA,UAAU,UAAU,KAAK,KAAK;AAAA,MACtC;AAAA,IACF;AAAA;AAAA;;;AC5DA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,sBAAsB;AAC9B,YAAQ,aAAa;AAErB,QAAI,aAAa;AAEjB,QAAI,gBAAgB;AAEpB,QAAI,oBAAoB;AAKxB,aAAS,WAAW,MAAM;AACxB,cAAQ,SAAS,GAAG,WAAW,WAAW,OAAO,oBAAoB;AACrE,aAAO,SAAS,aACb,GAAG,WAAW,WAAW,OAAO,+BAA+B;AAElE,UAAI,KAAK,WAAW,GAAG;AACrB,cAAM,IAAI,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAEA,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACpC,YAAI,EAAE,GAAG,kBAAkB,gBAAgB,KAAK,WAAW,CAAC,CAAC,GAAG;AAC9D,gBAAM,IAAI,cAAc;AAAA,YACtB,6CAA6C,IAAI;AAAA,UACnD;AAAA,QACF;AAAA,MACF;AAEA,UAAI,EAAE,GAAG,kBAAkB,aAAa,KAAK,WAAW,CAAC,CAAC,GAAG;AAC3D,cAAM,IAAI,cAAc;AAAA,UACtB,wCAAwC,IAAI;AAAA,QAC9C;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAOA,aAAS,oBAAoB,MAAM;AACjC,UAAI,SAAS,UAAU,SAAS,WAAW,SAAS,QAAQ;AAC1D,cAAM,IAAI,cAAc;AAAA,UACtB,gCAAgC,IAAI;AAAA,QACtC;AAAA,MACF;AAEA,aAAO,WAAW,IAAI;AAAA,IACxB;AAAA;AAAA;;;AC1DA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mBACN,QAAQ,oBACR,QAAQ,oBACR,QAAQ,iBACR,QAAQ,cACR,QAAQ,uBACR,QAAQ,yBACR,QAAQ,kBACN;AACJ,YAAQ,mBAAmB;AAC3B,YAAQ,qBAAqB;AAC7B,YAAQ,sBAAsB;AAC9B,YAAQ,iBAAiB;AACzB,YAAQ,wBAAwB;AAChC,YAAQ,kBAAkB;AAC1B,YAAQ,sBAAsB;AAC9B,YAAQ,iBAAiB;AACzB,YAAQ,iBAAiB;AACzB,YAAQ,kBAAkB;AAC1B,YAAQ,oBAAoB;AAC5B,YAAQ,qBAAqB;AAC7B,YAAQ,mBAAmB;AAC3B,YAAQ,mBAAmB;AAC3B,YAAQ,mBAAmB;AAC3B,YAAQ,aAAa;AACrB,YAAQ,kBAAkB;AAC1B,YAAQ,qBAAqB;AAC7B,YAAQ,kBAAkB;AAC1B,YAAQ,eAAe;AACvB,YAAQ,kBAAkB;AAC1B,YAAQ,iBAAiB;AACzB,YAAQ,kBAAkB;AAC1B,YAAQ,aAAa;AACrB,YAAQ,oBAAoB;AAC5B,YAAQ,cAAc;AACtB,YAAQ,kBAAkB;AAC1B,YAAQ,aAAa;AACrB,YAAQ,aAAa;AACrB,YAAQ,cAAc;AACtB,YAAQ,gBAAgB;AACxB,YAAQ,iBAAiB;AACzB,YAAQ,eAAe;AACvB,YAAQ,eAAe;AACvB,YAAQ,qBAAqB;AAC7B,YAAQ,uBAAuB;AAC/B,YAAQ,eAAe;AACvB,YAAQ,SAAS;AACjB,YAAQ,cAAc;AACtB,YAAQ,iBAAiB;AACzB,YAAQ,qBAAqB;AAC7B,YAAQ,4BAA4B;AAEpC,QAAI,aAAa;AAEjB,QAAI,cAAc;AAElB,QAAI,gBAAgB;AAEpB,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,gBAAgB;AAEpB,QAAI,UAAU;AAEd,QAAI,aAAa;AAEjB,QAAI,YAAY;AAEhB,QAAI,kBAAkB;AAEtB,QAAI,YAAY;AAEhB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,uBAAuB;AAE3B,QAAI,cAAc;AAElB,aAAS,OAAO,MAAM;AACpB,aACE,aAAa,IAAI,KACjB,aAAa,IAAI,KACjB,gBAAgB,IAAI,KACpB,YAAY,IAAI,KAChB,WAAW,IAAI,KACf,kBAAkB,IAAI,KACtB,WAAW,IAAI,KACf,cAAc,IAAI;AAAA,IAEtB;AAEA,aAAS,WAAW,MAAM;AACxB,UAAI,CAAC,OAAO,IAAI,GAAG;AACjB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,aAAa,MAAM;AAC1B,cAAQ,GAAG,YAAY,YAAY,MAAM,iBAAiB;AAAA,IAC5D;AAEA,aAAS,iBAAiB,MAAM;AAC9B,UAAI,CAAC,aAAa,IAAI,GAAG;AACvB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,MAAM;AAC1B,cAAQ,GAAG,YAAY,YAAY,MAAM,iBAAiB;AAAA,IAC5D;AAEA,aAAS,iBAAiB,MAAM;AAC9B,UAAI,CAAC,aAAa,IAAI,GAAG;AACvB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,MAAM;AAC7B,cAAQ,GAAG,YAAY,YAAY,MAAM,oBAAoB;AAAA,IAC/D;AAEA,aAAS,oBAAoB,MAAM;AACjC,UAAI,CAAC,gBAAgB,IAAI,GAAG;AAC1B,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,MAAM;AACzB,cAAQ,GAAG,YAAY,YAAY,MAAM,gBAAgB;AAAA,IAC3D;AAEA,aAAS,gBAAgB,MAAM;AAC7B,UAAI,CAAC,YAAY,IAAI,GAAG;AACtB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,MAAM;AACxB,cAAQ,GAAG,YAAY,YAAY,MAAM,eAAe;AAAA,IAC1D;AAEA,aAAS,eAAe,MAAM;AAC5B,UAAI,CAAC,WAAW,IAAI,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBAAkB,MAAM;AAC/B,cAAQ,GAAG,YAAY,YAAY,MAAM,sBAAsB;AAAA,IACjE;AAEA,aAAS,sBAAsB,MAAM;AACnC,UAAI,CAAC,kBAAkB,IAAI,GAAG;AAC5B,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,MAAM;AACxB,cAAQ,GAAG,YAAY,YAAY,MAAM,WAAW;AAAA,IACtD;AAEA,aAAS,eAAe,MAAM;AAC5B,UAAI,CAAC,WAAW,IAAI,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAc,MAAM;AAC3B,cAAQ,GAAG,YAAY,YAAY,MAAM,cAAc;AAAA,IACzD;AAEA,aAAS,kBAAkB,MAAM;AAC/B,UAAI,CAAC,cAAc,IAAI,GAAG;AACxB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,YAAY,MAAM;AACzB,aACE,aAAa,IAAI,KACjB,WAAW,IAAI,KACf,kBAAkB,IAAI,KACrB,eAAe,IAAI,KAAK,YAAY,KAAK,MAAM;AAAA,IAEpD;AAEA,aAAS,gBAAgB,MAAM;AAC7B,UAAI,CAAC,YAAY,IAAI,GAAG;AACtB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,aAAa,MAAM;AAC1B,aACE,aAAa,IAAI,KACjB,aAAa,IAAI,KACjB,gBAAgB,IAAI,KACpB,YAAY,IAAI,KAChB,WAAW,IAAI,KACd,eAAe,IAAI,KAAK,aAAa,KAAK,MAAM;AAAA,IAErD;AAEA,aAAS,iBAAiB,MAAM;AAC9B,UAAI,CAAC,aAAa,IAAI,GAAG;AACvB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,WAAW,MAAM;AACxB,aAAO,aAAa,IAAI,KAAK,WAAW,IAAI;AAAA,IAC9C;AAEA,aAAS,eAAe,MAAM;AAC5B,UAAI,CAAC,WAAW,IAAI,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,gBAAgB,MAAM;AAC7B,aAAO,aAAa,IAAI,KAAK,gBAAgB,IAAI,KAAK,YAAY,IAAI;AAAA,IACxE;AAEA,aAAS,oBAAoB,MAAM;AACjC,UAAI,CAAC,gBAAgB,IAAI,GAAG;AAC1B,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,eAAe,MAAM;AAC5B,aAAO,gBAAgB,IAAI,KAAK,YAAY,IAAI;AAAA,IAClD;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,CAAC,eAAe,IAAI,GAAG;AACzB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAqBA,QAAM,cAAN,MAAkB;AAAA,MAChB,YAAY,QAAQ;AAClB,eAAO,MAAM,MACV,GAAG,WAAW;AAAA,UACb;AAAA,UACA,aAAa,GAAG,SAAS,SAAS,MAAM,CAAC;AAAA,QAC3C;AACF,aAAK,SAAS;AAAA,MAChB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,eAAO,MAAM,OAAO,KAAK,MAAM,IAAI;AAAA,MACrC;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAuBA,YAAQ,cAAc;AAEtB,QAAM,iBAAN,MAAqB;AAAA,MACnB,YAAY,QAAQ;AAClB,uBAAe,MAAM,MAClB,GAAG,WAAW;AAAA,UACb;AAAA,UACA,aAAa,GAAG,SAAS;AAAA,YACvB;AAAA,UACF,CAAC;AAAA,QACH;AACF,aAAK,SAAS;AAAA,MAChB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,eAAO,OAAO,KAAK,MAAM,IAAI;AAAA,MAC/B;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAKA,YAAQ,iBAAiB;AAEzB,aAAS,eAAe,MAAM;AAC5B,aAAO,WAAW,IAAI,KAAK,cAAc,IAAI;AAAA,IAC/C;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,CAAC,eAAe,IAAI,GAAG;AACzB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,eAAe,MAAM;AAC5B,aAAO,OAAO,IAAI,KAAK,CAAC,cAAc,IAAI;AAAA,IAC5C;AAEA,aAAS,mBAAmB,MAAM;AAChC,UAAI,CAAC,eAAe,IAAI,GAAG;AACzB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,MAAM;AAC7B,UAAI,MAAM;AACR,eAAO,cAAc,IAAI,IAAI,KAAK,SAAS;AAAA,MAC7C;AAAA,IACF;AAKA,aAAS,YAAY,MAAM;AACzB,aACE,aAAa,IAAI,KACjB,aAAa,IAAI,KACjB,gBAAgB,IAAI,KACpB,YAAY,IAAI,KAChB,WAAW,IAAI,KACf,kBAAkB,IAAI;AAAA,IAE1B;AAEA,aAAS,gBAAgB,MAAM;AAC7B,UAAI,CAAC,YAAY,IAAI,GAAG;AACtB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,QACzC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,MAAM;AAC1B,UAAI,MAAM;AACR,YAAI,gBAAgB;AAEpB,eAAO,eAAe,aAAa,GAAG;AACpC,0BAAgB,cAAc;AAAA,QAChC;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAMA,aAAS,0BAA0B,OAAO;AACxC,aAAO,OAAO,UAAU,aAAa,MAAM,IAAI;AAAA,IACjD;AAEA,aAAS,mBAAmB,OAAO;AACjC,aAAO,OAAO,UAAU,aAAa,MAAM,IAAI;AAAA,IACjD;AA0CA,QAAM,oBAAN,MAAwB;AAAA,MACtB,YAAY,QAAQ;AAClB,YAAI,oBACF,mBACA,sBACA;AAEF,cAAM,cACH,qBAAqB,OAAO,gBAAgB,QAC7C,uBAAuB,SACnB,qBACA,cAAc;AACpB,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,iBAAiB,OAAO;AAC7B,aAAK,aACF,oBAAoB,OAAO,eAAe,QAC3C,sBAAsB,SAClB,oBACA,cAAc;AACpB,aAAK,aAAa;AAClB,aAAK,gBACF,uBAAuB,OAAO,kBAAkB,QACjD,yBAAyB,SACrB,uBACA,CAAC,MAAM,cACL;AAAA,WACG,GAAG,qBAAqB,qBAAqB,MAAM,SAAS;AAAA,QAC/D;AACR,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,wBAAwB,OAAO,uBAAuB,QACvD,0BAA0B,SACtB,wBACA,CAAC;AACP,eAAO,kBAAkB,QACvB,OAAO,OAAO,mBAAmB,aAChC,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,KAAK,IAAI,yDACG,GAAG,SAAS,SAAS,OAAO,cAAc,CAAC;AAAA,QAC5D;AACF,eAAO,aAAa,QAClB,OAAO,OAAO,cAAc,eAC3B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,KAAK,IAAI;AAAA,QACd;AAEF,YAAI,OAAO,cAAc;AACvB,UAAC,OAAO,OAAO,eAAe,cAC5B,OAAO,OAAO,iBAAiB,eAC9B,GAAG,WAAW;AAAA,YACb;AAAA,YACA,GAAG,KAAK,IAAI;AAAA,UACd;AAAA,QACJ;AAAA,MACF;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,gBAAgB,KAAK;AAAA,UACrB,WAAW,KAAK;AAAA,UAChB,YAAY,KAAK;AAAA,UACjB,cAAc,KAAK;AAAA,UACnB,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,oBAAoB;AA0C5B,QAAM,oBAAN,MAAwB;AAAA,MACtB,YAAY,QAAQ;AAClB,YAAI;AAEJ,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,WAAW,OAAO;AACvB,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,yBAAyB,OAAO,uBAAuB,QACxD,2BAA2B,SACvB,yBACA,CAAC;AAEP,aAAK,UAAU,MAAM,eAAe,MAAM;AAE1C,aAAK,cAAc,MAAM,iBAAiB,MAAM;AAEhD,eAAO,YAAY,QACjB,OAAO,OAAO,aAAa,eAC1B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,KAAK,IAAI,qDACG,GAAG,SAAS,SAAS,OAAO,QAAQ,CAAC;AAAA,QACtD;AAAA,MACJ;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,YAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAK,UAAU,KAAK,QAAQ;AAAA,QAC9B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,gBAAgB;AACd,YAAI,OAAO,KAAK,gBAAgB,YAAY;AAC1C,eAAK,cAAc,KAAK,YAAY;AAAA,QACtC;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,YAAY,KAAK,cAAc;AAAA,UAC/B,QAAQ,qBAAqB,KAAK,UAAU,CAAC;AAAA,UAC7C,UAAU,KAAK;AAAA,UACf,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,oBAAoB;AAE5B,aAAS,iBAAiB,QAAQ;AAChC,UAAI;AAEJ,YAAM,aAAa;AAAA,SAChB,qBAAqB,OAAO,gBAAgB,QAC3C,uBAAuB,SACrB,qBACA,CAAC;AAAA,MACP;AACA,YAAM,QAAQ,UAAU,MACrB,GAAG,WAAW;AAAA,QACb;AAAA,QACA,GAAG,OAAO,IAAI;AAAA,MAChB;AACF,aAAO;AAAA,IACT;AAEA,aAAS,eAAe,QAAQ;AAC9B,YAAM,WAAW,mBAAmB,OAAO,MAAM;AACjD,iBAAW,QAAQ,MAChB,GAAG,WAAW;AAAA,QACb;AAAA,QACA,GAAG,OAAO,IAAI;AAAA,MAChB;AACF,cAAQ,GAAG,UAAU,UAAU,UAAU,CAAC,aAAa,cAAc;AACnE,YAAI;AAEJ,mBAAW,WAAW,MACnB,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,OAAO,IAAI,IAAI,SAAS;AAAA,QAC7B;AACF,oBAAY,WAAW,QACrB,OAAO,YAAY,YAAY,eAC9B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,OAAO,IAAI,IAAI,SAAS,6DACF,GAAG,SAAS,SAAS,YAAY,OAAO,CAAC;AAAA,QACpE;AACF,cAAM,cACH,oBAAoB,YAAY,UAAU,QAC3C,sBAAsB,SAClB,oBACA,CAAC;AACP,mBAAW,UAAU,MAClB,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,OAAO,IAAI,IAAI,SAAS;AAAA,QAC7B;AACF,eAAO;AAAA,UACL,OAAO,GAAG,YAAY,YAAY,SAAS;AAAA,UAC3C,aAAa,YAAY;AAAA,UACzB,MAAM,YAAY;AAAA,UAClB,MAAM,gBAAgB,UAAU;AAAA,UAChC,SAAS,YAAY;AAAA,UACrB,WAAW,YAAY;AAAA,UACvB,mBAAmB,YAAY;AAAA,UAC/B,aAAa,GAAG,UAAU,UAAU,YAAY,UAAU;AAAA,UAC1D,SAAS,YAAY;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,gBAAgB,QAAQ;AAC/B,aAAO,OAAO,QAAQ,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,SAAS,OAAO;AAAA,QAC3D,OAAO,GAAG,YAAY,YAAY,OAAO;AAAA,QACzC,aAAa,UAAU;AAAA,QACvB,MAAM,UAAU;AAAA,QAChB,cAAc,UAAU;AAAA,QACxB,mBAAmB,UAAU;AAAA,QAC7B,aAAa,GAAG,UAAU,UAAU,UAAU,UAAU;AAAA,QACxD,SAAS,UAAU;AAAA,MACrB,EAAE;AAAA,IACJ;AAEA,aAAS,WAAW,KAAK;AACvB,cAAQ,GAAG,cAAc,cAAc,GAAG,KAAK,CAAC,MAAM,QAAQ,GAAG;AAAA,IACnE;AAEA,aAAS,qBAAqB,QAAQ;AACpC,cAAQ,GAAG,UAAU,UAAU,QAAQ,CAAC,WAAW;AAAA,QACjD,aAAa,MAAM;AAAA,QACnB,MAAM,MAAM;AAAA,QACZ,MAAM,iBAAiB,MAAM,IAAI;AAAA,QACjC,SAAS,MAAM;AAAA,QACf,WAAW,MAAM;AAAA,QACjB,mBAAmB,MAAM;AAAA,QACzB,YAAY,MAAM;AAAA,QAClB,SAAS,MAAM;AAAA,MACjB,EAAE;AAAA,IACJ;AAKA,aAAS,iBAAiB,MAAM;AAC9B,cAAQ,GAAG,WAAW;AAAA,QACpB;AAAA,QACA,CAAC,QAAQ,IAAI;AAAA,QACb,CAAC,SAAS;AAAA,UACR,aAAa,IAAI;AAAA,UACjB,MAAM,IAAI;AAAA,UACV,cAAc,IAAI;AAAA,UAClB,mBAAmB,IAAI;AAAA,UACvB,YAAY,IAAI;AAAA,UAChB,SAAS,IAAI;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAEA,aAAS,mBAAmB,KAAK;AAC/B,aAAO,cAAc,IAAI,IAAI,KAAK,IAAI,iBAAiB;AAAA,IACzD;AAqBA,QAAM,uBAAN,MAA2B;AAAA,MACzB,YAAY,QAAQ;AAClB,YAAI;AAEJ,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,yBAAyB,OAAO,uBAAuB,QACxD,2BAA2B,SACvB,yBACA,CAAC;AACP,aAAK,UAAU,eAAe,KAAK,QAAW,MAAM;AACpD,aAAK,cAAc,iBAAiB,KAAK,QAAW,MAAM;AAC1D,eAAO,eAAe,QACpB,OAAO,OAAO,gBAAgB,eAC7B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,KAAK,IAAI,wDACG,GAAG,SAAS,SAAS,OAAO,WAAW,CAAC;AAAA,QACzD;AAAA,MACJ;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,YAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAK,UAAU,KAAK,QAAQ;AAAA,QAC9B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,gBAAgB;AACd,YAAI,OAAO,KAAK,gBAAgB,YAAY;AAC1C,eAAK,cAAc,KAAK,YAAY;AAAA,QACtC;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,YAAY,KAAK,cAAc;AAAA,UAC/B,QAAQ,qBAAqB,KAAK,UAAU,CAAC;AAAA,UAC7C,aAAa,KAAK;AAAA,UAClB,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,uBAAuB;AA0B/B,QAAM,mBAAN,MAAuB;AAAA,MACrB,YAAY,QAAQ;AAClB,YAAI;AAEJ,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,yBAAyB,OAAO,uBAAuB,QACxD,2BAA2B,SACvB,yBACA,CAAC;AACP,aAAK,SAAS,YAAY,KAAK,QAAW,MAAM;AAChD,eAAO,eAAe,QACpB,OAAO,OAAO,gBAAgB,eAC7B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,KAAK,IAAI,wDACG,GAAG,SAAS,SAAS,OAAO,WAAW,CAAC;AAAA,QACzD;AAAA,MACJ;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,YAAI,OAAO,KAAK,WAAW,YAAY;AACrC,eAAK,SAAS,KAAK,OAAO;AAAA,QAC5B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,OAAO,KAAK,SAAS;AAAA,UACrB,aAAa,KAAK;AAAA,UAClB,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,mBAAmB;AAE3B,aAAS,YAAY,QAAQ;AAC3B,YAAM,QAAQ,0BAA0B,OAAO,KAAK;AACpD,YAAM,QAAQ,KAAK,MAChB,GAAG,WAAW;AAAA,QACb;AAAA,QACA,mFAAmF,OAAO,IAAI;AAAA,MAChG;AACF,aAAO;AAAA,IACT;AAyBA,QAAM,kBAAN,MAAsB;AAAA;AAAA,MAEpB,YAAY,QAAQ;AAClB,YAAI;AAEJ,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,yBAAyB,OAAO,uBAAuB,QACxD,2BAA2B,SACvB,yBACA,CAAC;AACP,aAAK,UACH,OAAO,OAAO,WAAW,aACrB,OAAO,SACP,iBAAiB,KAAK,MAAM,OAAO,MAAM;AAC/C,aAAK,eAAe;AACpB,aAAK,cAAc;AAAA,MACrB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,YAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAK,UAAU,iBAAiB,KAAK,MAAM,KAAK,QAAQ,CAAC;AAAA,QAC3D;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS,MAAM;AACb,YAAI,KAAK,gBAAgB,MAAM;AAC7B,eAAK,eAAe,GAAG,QAAQ;AAAA,YAC7B,KAAK,UAAU;AAAA,YACf,CAAC,UAAU,MAAM;AAAA,UACnB;AAAA,QACF;AAEA,eAAO,KAAK,YAAY,IAAI;AAAA,MAC9B;AAAA,MAEA,UAAU,aAAa;AACrB,YAAI,KAAK,iBAAiB,MAAM;AAC9B,eAAK,eAAe,IAAI;AAAA,YACtB,KAAK,UAAU,EAAE,IAAI,CAACC,eAAc,CAACA,WAAU,OAAOA,UAAS,CAAC;AAAA,UAClE;AAAA,QACF;AAEA,cAAM,YAAY,KAAK,aAAa,IAAI,WAAW;AAEnD,YAAI,cAAc,QAAW;AAC3B,gBAAM,IAAI,cAAc;AAAA,YACtB,SAAS,KAAK,IAAI,8BAA8B,GAAG,SAAS;AAAA,cAC1D;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,MAEA,WAAW,YACX;AACE,YAAI,OAAO,eAAe,UAAU;AAClC,gBAAM,YAAY,GAAG,SAAS,SAAS,UAAU;AACjD,gBAAM,IAAI,cAAc;AAAA,YACtB,SAAS,KAAK,IAAI,wCAAwC,QAAQ,MAChE,oBAAoB,MAAM,QAAQ;AAAA,UACtC;AAAA,QACF;AAEA,cAAM,YAAY,KAAK,SAAS,UAAU;AAE1C,YAAI,aAAa,MAAM;AACrB,gBAAM,IAAI,cAAc;AAAA,YACtB,UAAU,UAAU,wBAAwB,KAAK,IAAI,YACnD,oBAAoB,MAAM,UAAU;AAAA,UACxC;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,MAEA,aAAa,WAAW,YACxB;AAEE,YAAI,UAAU,SAAS,OAAO,KAAK,MAAM;AACvC,gBAAM,YAAY,GAAG,SAAS,OAAO,SAAS;AAC9C,gBAAM,IAAI,cAAc;AAAA,YACtB,SAAS,KAAK,IAAI,sCAAsC,QAAQ,MAC9D,oBAAoB,MAAM,QAAQ;AAAA,YACpC;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,cAAM,YAAY,KAAK,SAAS,UAAU,KAAK;AAE/C,YAAI,aAAa,MAAM;AACrB,gBAAM,YAAY,GAAG,SAAS,OAAO,SAAS;AAC9C,gBAAM,IAAI,cAAc;AAAA,YACtB,UAAU,QAAQ,wBAAwB,KAAK,IAAI,YACjD,oBAAoB,MAAM,QAAQ;AAAA,YACpC;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,MAEA,WAAW;AACT,cAAM,UAAU,GAAG,WAAW;AAAA,UAC5B,KAAK,UAAU;AAAA,UACf,CAAC,UAAU,MAAM;AAAA,UACjB,CAAC,WAAW;AAAA,YACV,aAAa,MAAM;AAAA,YACnB,OAAO,MAAM;AAAA,YACb,mBAAmB,MAAM;AAAA,YACzB,YAAY,MAAM;AAAA,YAClB,SAAS,MAAM;AAAA,UACjB;AAAA,QACF;AACA,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB;AAAA,UACA,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,kBAAkB;AAE1B,aAAS,oBAAoB,UAAU,iBAAiB;AACtD,YAAM,WAAW,SAAS,UAAU,EAAE,IAAI,CAAC,UAAU,MAAM,IAAI;AAC/D,YAAM,mBAAmB,GAAG,gBAAgB;AAAA,QAC1C;AAAA,QACA;AAAA,MACF;AACA,cAAQ,GAAG,YAAY,YAAY,kBAAkB,eAAe;AAAA,IACtE;AAEA,aAAS,iBAAiB,UAAU,UAAU;AAC5C,iBAAW,QAAQ,MAChB,GAAG,WAAW;AAAA,QACb;AAAA,QACA,GAAG,QAAQ;AAAA,MACb;AACF,aAAO,OAAO,QAAQ,QAAQ,EAAE,IAAI,CAAC,CAAC,WAAW,WAAW,MAAM;AAChE,mBAAW,WAAW,MACnB,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,QAAQ,IAAI,SAAS,wFACsB,GAAG,SAAS;AAAA,YACtD;AAAA,UACF,CAAC;AAAA,QACL;AACF,eAAO;AAAA,UACL,OAAO,GAAG,YAAY,qBAAqB,SAAS;AAAA,UACpD,aAAa,YAAY;AAAA,UACzB,OAAO,YAAY,UAAU,SAAY,YAAY,QAAQ;AAAA,UAC7D,mBAAmB,YAAY;AAAA,UAC/B,aAAa,GAAG,UAAU,UAAU,YAAY,UAAU;AAAA,UAC1D,SAAS,YAAY;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAuBA,QAAM,yBAAN,MAA6B;AAAA,MAC3B,YAAY,QAAQ;AAClB,YAAI,wBAAwB;AAE5B,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,yBAAyB,OAAO,uBAAuB,QACxD,2BAA2B,SACvB,yBACA,CAAC;AACP,aAAK,WACF,kBAAkB,OAAO,aAAa,QAAQ,oBAAoB,SAC/D,kBACA;AACN,aAAK,UAAU,oBAAoB,KAAK,QAAW,MAAM;AAAA,MAC3D;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,YAAI,OAAO,KAAK,YAAY,YAAY;AACtC,eAAK,UAAU,KAAK,QAAQ;AAAA,QAC9B;AAEA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,WAAW;AACT,cAAM,UAAU,GAAG,UAAU,UAAU,KAAK,UAAU,GAAG,CAAC,WAAW;AAAA,UACnE,aAAa,MAAM;AAAA,UACnB,MAAM,MAAM;AAAA,UACZ,cAAc,MAAM;AAAA,UACpB,mBAAmB,MAAM;AAAA,UACzB,YAAY,MAAM;AAAA,UAClB,SAAS,MAAM;AAAA,QACjB,EAAE;AACF,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB;AAAA,UACA,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,UACxB,SAAS,KAAK;AAAA,QAChB;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,yBAAyB;AAEjC,aAAS,oBAAoB,QAAQ;AACnC,YAAM,WAAW,mBAAmB,OAAO,MAAM;AACjD,iBAAW,QAAQ,MAChB,GAAG,WAAW;AAAA,QACb;AAAA,QACA,GAAG,OAAO,IAAI;AAAA,MAChB;AACF,cAAQ,GAAG,UAAU,UAAU,UAAU,CAAC,aAAa,cAAc;AACnE,UAAE,aAAa,iBACZ,GAAG,WAAW;AAAA,UACb;AAAA,UACA,GAAG,OAAO,IAAI,IAAI,SAAS;AAAA,QAC7B;AACF,eAAO;AAAA,UACL,OAAO,GAAG,YAAY,YAAY,SAAS;AAAA,UAC3C,aAAa,YAAY;AAAA,UACzB,MAAM,YAAY;AAAA,UAClB,cAAc,YAAY;AAAA,UAC1B,mBAAmB,YAAY;AAAA,UAC/B,aAAa,GAAG,UAAU,UAAU,YAAY,UAAU;AAAA,UAC1D,SAAS,YAAY;AAAA,QACvB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,qBAAqB,OAAO;AACnC,aAAO,cAAc,MAAM,IAAI,KAAK,MAAM,iBAAiB;AAAA,IAC7D;AAAA;AAAA;;;ACj1CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBACN,QAAQ,aACR,QAAQ,YACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,kBACR,QAAQ,kBACN;AACJ,YAAQ,wBAAwB;AAChC,YAAQ,uBAAuB;AAE/B,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAMlB,QAAM,kBAAkB;AAMxB,YAAQ,kBAAkB;AAC1B,QAAM,kBAAkB;AACxB,YAAQ,kBAAkB;AAC1B,QAAM,aAAa,IAAI,YAAY,kBAAkB;AAAA,MACnD,MAAM;AAAA,MACN,aACE;AAAA,MAEF,UAAU,aAAa;AACrB,cAAM,eAAe,gBAAgB,WAAW;AAEhD,YAAI,OAAO,iBAAiB,WAAW;AACrC,iBAAO,eAAe,IAAI;AAAA,QAC5B;AAEA,YAAI,MAAM;AAEV,YAAI,OAAO,iBAAiB,YAAY,iBAAiB,IAAI;AAC3D,gBAAM,OAAO,YAAY;AAAA,QAC3B;AAEA,YAAI,OAAO,QAAQ,YAAY,CAAC,OAAO,UAAU,GAAG,GAAG;AACrD,gBAAM,IAAI,cAAc;AAAA,YACtB,4CAA4C,GAAG,SAAS;AAAA,cACtD;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,YAAI,MAAM,mBAAmB,MAAM,iBAAiB;AAClD,gBAAM,IAAI,cAAc;AAAA,YACtB,4DACG,GAAG,SAAS,SAAS,YAAY;AAAA,UACtC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,YAAY;AACrB,YAAI,OAAO,eAAe,YAAY,CAAC,OAAO,UAAU,UAAU,GAAG;AACnE,gBAAM,IAAI,cAAc;AAAA,YACtB,4CAA4C,GAAG,SAAS;AAAA,cACtD;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,YAAI,aAAa,mBAAmB,aAAa,iBAAiB;AAChE,gBAAM,IAAI,cAAc;AAAA,YACtB,yDAAyD,UAAU;AAAA,UACrE;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,aAAa,WAAW;AACtB,YAAI,UAAU,SAAS,OAAO,KAAK,KAAK;AACtC,gBAAM,IAAI,cAAc;AAAA,YACtB,4CAA4C,GAAG,SAAS;AAAA,cACtD;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,cAAM,MAAM,SAAS,UAAU,OAAO,EAAE;AAExC,YAAI,MAAM,mBAAmB,MAAM,iBAAiB;AAClD,gBAAM,IAAI,cAAc;AAAA,YACtB,yDAAyD,UAAU,KAAK;AAAA,YACxE;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF,CAAC;AACD,YAAQ,aAAa;AACrB,QAAM,eAAe,IAAI,YAAY,kBAAkB;AAAA,MACrD,MAAM;AAAA,MACN,aACE;AAAA,MAEF,UAAU,aAAa;AACrB,cAAM,eAAe,gBAAgB,WAAW;AAEhD,YAAI,OAAO,iBAAiB,WAAW;AACrC,iBAAO,eAAe,IAAI;AAAA,QAC5B;AAEA,YAAI,MAAM;AAEV,YAAI,OAAO,iBAAiB,YAAY,iBAAiB,IAAI;AAC3D,gBAAM,OAAO,YAAY;AAAA,QAC3B;AAEA,YAAI,OAAO,QAAQ,YAAY,CAAC,OAAO,SAAS,GAAG,GAAG;AACpD,gBAAM,IAAI,cAAc;AAAA,YACtB,8CAA8C,GAAG,SAAS;AAAA,cACxD;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,YAAY;AACrB,YAAI,OAAO,eAAe,YAAY,CAAC,OAAO,SAAS,UAAU,GAAG;AAClE,gBAAM,IAAI,cAAc;AAAA,YACtB,8CAA8C,GAAG,SAAS;AAAA,cACxD;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,aAAa,WAAW;AACtB,YACE,UAAU,SAAS,OAAO,KAAK,SAC/B,UAAU,SAAS,OAAO,KAAK,KAC/B;AACA,gBAAM,IAAI,cAAc;AAAA,YACtB,8CAA8C,GAAG,SAAS;AAAA,cACxD;AAAA,YACF,CAAC;AAAA,YACD;AAAA,UACF;AAAA,QACF;AAEA,eAAO,WAAW,UAAU,KAAK;AAAA,MACnC;AAAA,IACF,CAAC;AACD,YAAQ,eAAe;AACvB,QAAM,gBAAgB,IAAI,YAAY,kBAAkB;AAAA,MACtD,MAAM;AAAA,MACN,aACE;AAAA,MAEF,UAAU,aAAa;AACrB,cAAM,eAAe,gBAAgB,WAAW;AAGhD,YAAI,OAAO,iBAAiB,UAAU;AACpC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,iBAAiB,WAAW;AACrC,iBAAO,eAAe,SAAS;AAAA,QACjC;AAEA,YAAI,OAAO,iBAAiB,YAAY,OAAO,SAAS,YAAY,GAAG;AACrE,iBAAO,aAAa,SAAS;AAAA,QAC/B;AAEA,cAAM,IAAI,cAAc;AAAA,UACtB,mCAAmC,GAAG,SAAS,SAAS,WAAW,CAAC;AAAA,QACtE;AAAA,MACF;AAAA,MAEA,WAAW,YAAY;AACrB,YAAI,OAAO,eAAe,UAAU;AAClC,gBAAM,IAAI,cAAc;AAAA,YACtB,gDAAgD,GAAG,SAAS;AAAA,cAC1D;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,aAAa,WAAW;AACtB,YAAI,UAAU,SAAS,OAAO,KAAK,QAAQ;AACzC,gBAAM,IAAI,cAAc;AAAA,YACtB,gDAAgD,GAAG,SAAS;AAAA,cAC1D;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,IACF,CAAC;AACD,YAAQ,gBAAgB;AACxB,QAAM,iBAAiB,IAAI,YAAY,kBAAkB;AAAA,MACvD,MAAM;AAAA,MACN,aAAa;AAAA,MAEb,UAAU,aAAa;AACrB,cAAM,eAAe,gBAAgB,WAAW;AAEhD,YAAI,OAAO,iBAAiB,WAAW;AACrC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,SAAS,YAAY,GAAG;AACjC,iBAAO,iBAAiB;AAAA,QAC1B;AAEA,cAAM,IAAI,cAAc;AAAA,UACtB,kDAAkD,GAAG,SAAS;AAAA,YAC5D;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MAEA,WAAW,YAAY;AACrB,YAAI,OAAO,eAAe,WAAW;AACnC,gBAAM,IAAI,cAAc;AAAA,YACtB,kDAAkD,GAAG,SAAS;AAAA,cAC5D;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,aAAa,WAAW;AACtB,YAAI,UAAU,SAAS,OAAO,KAAK,SAAS;AAC1C,gBAAM,IAAI,cAAc;AAAA,YACtB,kDAAkD,GAAG,SAAS;AAAA,cAC5D;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,IACF,CAAC;AACD,YAAQ,iBAAiB;AACzB,QAAM,YAAY,IAAI,YAAY,kBAAkB;AAAA,MAClD,MAAM;AAAA,MACN,aACE;AAAA,MAEF,UAAU,aAAa;AACrB,cAAM,eAAe,gBAAgB,WAAW;AAEhD,YAAI,OAAO,iBAAiB,UAAU;AACpC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,UAAU,YAAY,GAAG;AAClC,iBAAO,OAAO,YAAY;AAAA,QAC5B;AAEA,cAAM,IAAI,cAAc;AAAA,UACtB,+BAA+B,GAAG,SAAS,SAAS,WAAW,CAAC;AAAA,QAClE;AAAA,MACF;AAAA,MAEA,WAAW,YAAY;AACrB,YAAI,OAAO,eAAe,UAAU;AAClC,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,eAAe,YAAY,OAAO,UAAU,UAAU,GAAG;AAClE,iBAAO,WAAW,SAAS;AAAA,QAC7B;AAEA,cAAM,IAAI,cAAc;AAAA,UACtB,+BAA+B,GAAG,SAAS,SAAS,UAAU,CAAC;AAAA,QACjE;AAAA,MACF;AAAA,MAEA,aAAa,WAAW;AACtB,YACE,UAAU,SAAS,OAAO,KAAK,UAC/B,UAAU,SAAS,OAAO,KAAK,KAC/B;AACA,gBAAM,IAAI,cAAc;AAAA,YACtB,8DACG,GAAG,SAAS,OAAO,SAAS;AAAA,YAC/B;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO,UAAU;AAAA,MACnB;AAAA,IACF,CAAC;AACD,YAAQ,YAAY;AACpB,QAAM,uBAAuB,OAAO,OAAO;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,YAAQ,uBAAuB;AAE/B,aAAS,sBAAsB,MAAM;AACnC,aAAO,qBAAqB,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,IAAI;AAAA,IACnE;AAIA,aAAS,gBAAgB,aAAa;AACpC,WAAK,GAAG,cAAc,cAAc,WAAW,GAAG;AAChD,YAAI,OAAO,YAAY,YAAY,YAAY;AAC7C,gBAAM,gBAAgB,YAAY,QAAQ;AAE1C,cAAI,EAAE,GAAG,cAAc,cAAc,aAAa,GAAG;AACnD,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,OAAO,YAAY,WAAW,YAAY;AAC5C,iBAAO,YAAY,OAAO;AAAA,QAC5B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AChXA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AAEvB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,oBAAoB;AAExB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,WAAW;AAuBf,aAAS,aAAa,OAAO,MAAM;AACjC,WAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AACxC,cAAM,WAAW,aAAa,OAAO,KAAK,MAAM;AAEhD,aACG,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,UAC9D,OAAO,KAAK,MACZ;AACA,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,UACL,MAAM,OAAO,KAAK;AAAA,QACpB;AAAA,MACF;AAEA,UAAI,UAAU,QAAW;AACvB,eAAO;AAAA,MACT;AAGA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,cAAM,WAAW,KAAK;AAEtB,aAAK,GAAG,kBAAkB,kBAAkB,KAAK,GAAG;AAClD,gBAAM,cAAc,CAAC;AAErB,qBAAW,QAAQ,OAAO;AACxB,kBAAM,WAAW,aAAa,MAAM,QAAQ;AAE5C,gBAAI,YAAY,MAAM;AACpB,0BAAY,KAAK,QAAQ;AAAA,YAC3B;AAAA,UACF;AAEA,iBAAO;AAAA,YACL,MAAM,OAAO,KAAK;AAAA,YAClB,QAAQ;AAAA,UACV;AAAA,QACF;AAEA,eAAO,aAAa,OAAO,QAAQ;AAAA,MACrC;AAGA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,YAAI,EAAE,GAAG,cAAc,cAAc,KAAK,GAAG;AAC3C,iBAAO;AAAA,QACT;AAEA,cAAM,aAAa,CAAC;AAEpB,mBAAW,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC,GAAG;AACnD,gBAAM,aAAa,aAAa,MAAM,MAAM,IAAI,GAAG,MAAM,IAAI;AAE7D,cAAI,YAAY;AACd,uBAAW,KAAK;AAAA,cACd,MAAM,OAAO,KAAK;AAAA,cAClB,MAAM;AAAA,gBACJ,MAAM,OAAO,KAAK;AAAA,gBAClB,OAAO,MAAM;AAAA,cACf;AAAA,cACA,OAAO;AAAA,YACT,CAAC;AAAA,UACH;AAAA,QACF;AAEA,eAAO;AAAA,UACL,MAAM,OAAO,KAAK;AAAA,UAClB,QAAQ;AAAA,QACV;AAAA,MACF;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AAGrC,cAAM,aAAa,KAAK,UAAU,KAAK;AAEvC,YAAI,cAAc,MAAM;AACtB,iBAAO;AAAA,QACT;AAEA,YAAI,OAAO,eAAe,WAAW;AACnC,iBAAO;AAAA,YACL,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,OAAO,eAAe,YAAY,OAAO,SAAS,UAAU,GAAG;AACjE,gBAAM,YAAY,OAAO,UAAU;AACnC,iBAAO,oBAAoB,KAAK,SAAS,IACrC;AAAA,YACE,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO;AAAA,UACT,IACA;AAAA,YACE,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO;AAAA,UACT;AAAA,QACN;AAEA,YAAI,OAAO,eAAe,UAAU;AAElC,eAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,mBAAO;AAAA,cACL,MAAM,OAAO,KAAK;AAAA,cAClB,OAAO;AAAA,YACT;AAAA,UACF;AAEA,cAAI,SAAS,SAAS,aAAa,oBAAoB,KAAK,UAAU,GAAG;AACvE,mBAAO;AAAA,cACL,MAAM,OAAO,KAAK;AAAA,cAClB,OAAO;AAAA,YACT;AAAA,UACF;AAEA,iBAAO;AAAA,YACL,MAAM,OAAO,KAAK;AAAA,YAClB,OAAO;AAAA,UACT;AAAA,QACF;AAEA,cAAM,IAAI;AAAA,UACR,iCAAiC,GAAG,SAAS,SAAS,UAAU,CAAC;AAAA,QACnE;AAAA,MACF;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,6BAA6B,GAAG,SAAS,SAAS,IAAI;AAAA,MACxD;AAAA,IACJ;AAOA,QAAM,sBAAsB;AAAA;AAAA;;;AC7L5B;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,qBACN,QAAQ,aACR,QAAQ,SACR,QAAQ,WACR,QAAQ,eACR,QAAQ,UACR,QAAQ,cACR,QAAQ,sBACR,QAAQ,cACR,QAAQ,uBACR,QAAQ,mBACR,QAAQ,WACR,QAAQ,qBACN;AACJ,YAAQ,sBAAsB;AAE9B,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,qBAAqB;AAEzB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAElB,QAAI,WAAW;AAEf,QAAM,WAAW,IAAI,YAAY,kBAAkB;AAAA,MACjD,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,WAAW,OAAO;AAAA,QAC9B;AAAA,QACA,OAAO;AAAA,UACL,aAAa;AAAA,UACb,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY,YAAY,IAAI,YAAY,eAAe,MAAM,CAAC;AAAA,UACpE;AAAA,UAEA,QAAQ,QAAQ;AACd,mBAAO,OAAO,OAAO,OAAO,WAAW,CAAC;AAAA,UAC1C;AAAA,QACF;AAAA,QACA,WAAW;AAAA,UACT,aAAa;AAAA,UACb,MAAM,IAAI,YAAY,eAAe,MAAM;AAAA,UAC3C,SAAS,CAAC,WAAW,OAAO,aAAa;AAAA,QAC3C;AAAA,QACA,cAAc;AAAA,UACZ,aACE;AAAA,UACF,MAAM;AAAA,UACN,SAAS,CAAC,WAAW,OAAO,gBAAgB;AAAA,QAC9C;AAAA,QACA,kBAAkB;AAAA,UAChB,aACE;AAAA,UACF,MAAM;AAAA,UACN,SAAS,CAAC,WAAW,OAAO,oBAAoB;AAAA,QAClD;AAAA,QACA,YAAY;AAAA,UACV,aAAa;AAAA,UACb,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY;AAAA,cACd,IAAI,YAAY,eAAe,WAAW;AAAA,YAC5C;AAAA,UACF;AAAA,UACA,SAAS,CAAC,WAAW,OAAO,cAAc;AAAA,QAC5C;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,WAAW;AAEnB,QAAM,cAAc,IAAI,YAAY,kBAAkB;AAAA,MACpD,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,cAAc;AAAA,UACZ,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,WAAW;AAAA,UACT,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY;AAAA,cACd,IAAI,YAAY,eAAe,mBAAmB;AAAA,YACpD;AAAA,UACF;AAAA,UACA,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY;AAAA,cACd,IAAI,YAAY,eAAe,YAAY;AAAA,YAC7C;AAAA,UACF;AAAA,UACA,MAAM;AAAA,YACJ,mBAAmB;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEA,QAAQ,OAAO,EAAE,kBAAkB,GAAG;AACpC,mBAAO,oBACH,MAAM,OACN,MAAM,KAAK,OAAO,CAAC,QAAQ,IAAI,qBAAqB,IAAI;AAAA,UAC9D;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,cAAc;AAEtB,QAAM,sBAAsB,IAAI,YAAY,gBAAgB;AAAA,MAC1D,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ;AAAA,QACN,OAAO;AAAA,UACL,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,UAAU;AAAA,UACR,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,cAAc;AAAA,UACZ,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,OAAO;AAAA,UACL,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,iBAAiB;AAAA,UACf,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,iBAAiB;AAAA,UACf,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,QAAQ;AAAA,UACN,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,QAAQ;AAAA,UACN,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,QAAQ;AAAA,UACN,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,kBAAkB;AAAA,UAChB,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,qBAAqB;AAAA,UACnB,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,WAAW;AAAA,UACT,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,OAAO;AAAA,UACL,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,MAAM;AAAA,UACJ,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,YAAY;AAAA,UACV,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,cAAc;AAAA,UACZ,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,QACA,wBAAwB;AAAA,UACtB,OAAO,mBAAmB,kBAAkB;AAAA,UAC5C,aAAa;AAAA,QACf;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,sBAAsB;AAE9B,QAAM,SAAS,IAAI,YAAY,kBAAkB;AAAA,MAC/C,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,UAAU;AAAA,UAE/C,QAAQ,MAAM;AACZ,iBAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,qBAAO,SAAS;AAAA,YAClB;AAEA,iBAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AACxC,qBAAO,SAAS;AAAA,YAClB;AAIA,aACG,GAAG,WAAW;AAAA,cACb;AAAA,cACA,sBAAsB,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,YAClD;AAAA,UACJ;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,SAAU,UAAU,OAAO,KAAK,OAAO;AAAA,QACnD;AAAA,QACA,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CACP;AAAA;AAAA,YAGA,iBAAiB,OAAO,KAAK,cAAc;AAAA;AAAA,QAC/C;AAAA,QACA,gBAAgB;AAAA,UACd,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,QACR,oBAAoB,MAAM,IAAI,iBAAiB;AAAA,QACnD;AAAA,QACA,QAAQ;AAAA,UACN,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY,eAAe,OAAO;AAAA,UACxC;AAAA,UACA,MAAM;AAAA,YACJ,mBAAmB;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEA,QAAQ,MAAM,EAAE,kBAAkB,GAAG;AACnC,iBACG,GAAG,YAAY,cAAc,IAAI,MACjC,GAAG,YAAY,iBAAiB,IAAI,GACrC;AACA,oBAAM,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC;AAC7C,qBAAO,oBACH,SACA,OAAO,OAAO,CAAC,UAAU,MAAM,qBAAqB,IAAI;AAAA,YAC9D;AAAA,UACF;AAAA,QACF;AAAA,QACA,YAAY;AAAA,UACV,MAAM,IAAI,YAAY,YAAY,IAAI,YAAY,eAAe,MAAM,CAAC;AAAA,UAExE,QAAQ,MAAM;AACZ,iBACG,GAAG,YAAY,cAAc,IAAI,MACjC,GAAG,YAAY,iBAAiB,IAAI,GACrC;AACA,qBAAO,KAAK,cAAc;AAAA,YAC5B;AAAA,UACF;AAAA,QACF;AAAA,QACA,eAAe;AAAA,UACb,MAAM,IAAI,YAAY,YAAY,IAAI,YAAY,eAAe,MAAM,CAAC;AAAA,UAExE,QAAQ,MAAM,OAAO,UAAU,EAAE,OAAO,GAAG;AACzC,iBAAK,GAAG,YAAY,gBAAgB,IAAI,GAAG;AACzC,qBAAO,OAAO,iBAAiB,IAAI;AAAA,YACrC;AAAA,UACF;AAAA,QACF;AAAA,QACA,YAAY;AAAA,UACV,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY,eAAe,WAAW;AAAA,UAC5C;AAAA,UACA,MAAM;AAAA,YACJ,mBAAmB;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEA,QAAQ,MAAM,EAAE,kBAAkB,GAAG;AACnC,iBAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,oBAAM,SAAS,KAAK,UAAU;AAC9B,qBAAO,oBACH,SACA,OAAO,OAAO,CAAC,UAAU,MAAM,qBAAqB,IAAI;AAAA,YAC9D;AAAA,UACF;AAAA,QACF;AAAA,QACA,aAAa;AAAA,UACX,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY,eAAe,YAAY;AAAA,UAC7C;AAAA,UACA,MAAM;AAAA,YACJ,mBAAmB;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEA,QAAQ,MAAM,EAAE,kBAAkB,GAAG;AACnC,iBAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,oBAAM,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC;AAC7C,qBAAO,oBACH,SACA,OAAO,OAAO,CAAC,UAAU,MAAM,qBAAqB,IAAI;AAAA,YAC9D;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAQ;AAAA,UACN,MAAM;AAAA,UACN,SAAS,CAAC,SAAU,YAAY,OAAO,KAAK,SAAS;AAAA,QACvD;AAAA,QACA,SAAS;AAAA,UACP,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,SAAS;AACjB,iBAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,qBAAO,KAAK;AAAA,YACd;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,SAAS;AAEjB,QAAM,UAAU,IAAI,YAAY,kBAAkB;AAAA,MAChD,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,SAAS,CAAC,UAAU,MAAM;AAAA,QAC5B;AAAA,QACA,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,UAAU,MAAM;AAAA,QAC5B;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY;AAAA,YACpB,IAAI,YAAY;AAAA,cACd,IAAI,YAAY,eAAe,YAAY;AAAA,YAC7C;AAAA,UACF;AAAA,UACA,MAAM;AAAA,YACJ,mBAAmB;AAAA,cACjB,MAAM,SAAS;AAAA,cACf,cAAc;AAAA,YAChB;AAAA,UACF;AAAA,UAEA,QAAQ,OAAO,EAAE,kBAAkB,GAAG;AACpC,mBAAO,oBACH,MAAM,OACN,MAAM,KAAK,OAAO,CAAC,QAAQ,IAAI,qBAAqB,IAAI;AAAA,UAC9D;AAAA,QACF;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,MAAM;AAAA,UAC3C,SAAS,CAAC,UAAU,MAAM;AAAA,QAC5B;AAAA,QACA,cAAc;AAAA,UACZ,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,SAAS,CAAC,UAAU,MAAM,qBAAqB;AAAA,QACjD;AAAA,QACA,mBAAmB;AAAA,UACjB,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,UAAU,MAAM;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,UAAU;AAElB,QAAM,eAAe,IAAI,YAAY,kBAAkB;AAAA,MACrD,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,SAAS,CAAC,eAAe,WAAW;AAAA,QACtC;AAAA,QACA,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,eAAe,WAAW;AAAA,QACtC;AAAA,QACA,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,MAAM;AAAA,UAC3C,SAAS,CAAC,eAAe,WAAW;AAAA,QACtC;AAAA,QACA,cAAc;AAAA,UACZ,MAAM,SAAS;AAAA,UACf,aACE;AAAA,UAEF,QAAQ,YAAY;AAClB,kBAAM,EAAE,MAAM,aAAa,IAAI;AAC/B,kBAAM,YAAY,GAAG,cAAc,cAAc,cAAc,IAAI;AACnE,mBAAO,YAAY,GAAG,SAAS,OAAO,QAAQ,IAAI;AAAA,UACpD;AAAA,QACF;AAAA,QACA,cAAc;AAAA,UACZ,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,SAAS,CAAC,UAAU,MAAM,qBAAqB;AAAA,QACjD;AAAA,QACA,mBAAmB;AAAA,UACjB,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,QAAQ,IAAI;AAAA,QACxB;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,eAAe;AAEvB,QAAM,cAAc,IAAI,YAAY,kBAAkB;AAAA,MACpD,MAAM;AAAA,MACN,aACE;AAAA,MACF,QAAQ,OAAO;AAAA,QACb,MAAM;AAAA,UACJ,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,aAAa;AAAA,UACX,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,QACA,cAAc;AAAA,UACZ,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,SAAS,CAAC,cAAc,UAAU,qBAAqB;AAAA,QACzD;AAAA,QACA,mBAAmB;AAAA,UACjB,MAAM,SAAS;AAAA,UACf,SAAS,CAAC,cAAc,UAAU;AAAA,QACpC;AAAA,MACF;AAAA,IACF,CAAC;AAED,YAAQ,cAAc;AACtB,QAAI;AACJ,YAAQ,WAAW;AAEnB,KAAC,SAAUC,WAAU;AACnB,MAAAA,UAAS,QAAQ,IAAI;AACrB,MAAAA,UAAS,QAAQ,IAAI;AACrB,MAAAA,UAAS,WAAW,IAAI;AACxB,MAAAA,UAAS,OAAO,IAAI;AACpB,MAAAA,UAAS,MAAM,IAAI;AACnB,MAAAA,UAAS,cAAc,IAAI;AAC3B,MAAAA,UAAS,MAAM,IAAI;AACnB,MAAAA,UAAS,UAAU,IAAI;AAAA,IACzB,GAAG,aAAa,QAAQ,WAAW,WAAW,CAAC,EAAE;AAEjD,QAAM,aAAa,IAAI,YAAY,gBAAgB;AAAA,MACjD,MAAM;AAAA,MACN,aAAa;AAAA,MACb,QAAQ;AAAA,QACN,QAAQ;AAAA,UACN,OAAO,SAAS;AAAA,UAChB,aAAa;AAAA,QACf;AAAA,QACA,QAAQ;AAAA,UACN,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,QACA,WAAW;AAAA,UACT,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,QACA,OAAO;AAAA,UACL,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACJ,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,QACA,cAAc;AAAA,UACZ,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,QACA,MAAM;AAAA,UACJ,OAAO,SAAS;AAAA,UAChB,aAAa;AAAA,QACf;AAAA,QACA,UAAU;AAAA,UACR,OAAO,SAAS;AAAA,UAChB,aACE;AAAA,QACJ;AAAA,MACF;AAAA,IACF,CAAC;AAMD,YAAQ,aAAa;AACrB,QAAM,qBAAqB;AAAA,MACzB,MAAM;AAAA,MACN,MAAM,IAAI,YAAY,eAAe,QAAQ;AAAA,MAC7C,aAAa;AAAA,MACb,MAAM,CAAC;AAAA,MACP,SAAS,CAAC,SAAS,OAAO,UAAU,EAAE,OAAO,MAAM;AAAA,MACnD,mBAAmB;AAAA,MACnB,YAAY,uBAAO,OAAO,IAAI;AAAA,MAC9B,SAAS;AAAA,IACX;AACA,YAAQ,qBAAqB;AAC7B,QAAM,mBAAmB;AAAA,MACvB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,aAAa;AAAA,UACb,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,cAAc;AAAA,UACd,mBAAmB;AAAA,UACnB,YAAY,uBAAO,OAAO,IAAI;AAAA,UAC9B,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,SAAS,CAAC,SAAS,EAAE,KAAK,GAAG,UAAU,EAAE,OAAO,MAAM,OAAO,QAAQ,IAAI;AAAA,MACzE,mBAAmB;AAAA,MACnB,YAAY,uBAAO,OAAO,IAAI;AAAA,MAC9B,SAAS;AAAA,IACX;AACA,YAAQ,mBAAmB;AAC3B,QAAM,uBAAuB;AAAA,MAC3B,MAAM;AAAA,MACN,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,MAC3D,aAAa;AAAA,MACb,MAAM,CAAC;AAAA,MACP,SAAS,CAAC,SAAS,OAAO,UAAU,EAAE,WAAW,MAAM,WAAW;AAAA,MAClE,mBAAmB;AAAA,MACnB,YAAY,uBAAO,OAAO,IAAI;AAAA,MAC9B,SAAS;AAAA,IACX;AACA,YAAQ,uBAAuB;AAC/B,QAAM,qBAAqB,OAAO,OAAO;AAAA,MACvC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,YAAQ,qBAAqB;AAE7B,aAAS,oBAAoB,MAAM;AACjC,aAAO,mBAAmB,KAAK,CAAC,EAAE,KAAK,MAAM,KAAK,SAAS,IAAI;AAAA,IACjE;AAAA;AAAA;;;AChnBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AACzB,YAAQ,cAAc;AACtB,YAAQ,kBAAkB;AAE1B,QAAI,cAAc;AAKlB,aAAS,YAAY,OAAO,OAAO;AAEjC,UAAI,UAAU,OAAO;AACnB,eAAO;AAAA,MACT;AAEA,WACG,GAAG,YAAY,eAAe,KAAK,MACnC,GAAG,YAAY,eAAe,KAAK,GACpC;AACA,eAAO,YAAY,MAAM,QAAQ,MAAM,MAAM;AAAA,MAC/C;AAEA,WACG,GAAG,YAAY,YAAY,KAAK,MAChC,GAAG,YAAY,YAAY,KAAK,GACjC;AACA,eAAO,YAAY,MAAM,QAAQ,MAAM,MAAM;AAAA,MAC/C;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,gBAAgB,QAAQ,cAAc,WAAW;AAExD,UAAI,iBAAiB,WAAW;AAC9B,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,eAAe,SAAS,GAAG;AAC7C,aAAK,GAAG,YAAY,eAAe,YAAY,GAAG;AAChD,iBAAO,gBAAgB,QAAQ,aAAa,QAAQ,UAAU,MAAM;AAAA,QACtE;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,eAAe,YAAY,GAAG;AAEhD,eAAO,gBAAgB,QAAQ,aAAa,QAAQ,SAAS;AAAA,MAC/D;AAEA,WAAK,GAAG,YAAY,YAAY,SAAS,GAAG;AAC1C,aAAK,GAAG,YAAY,YAAY,YAAY,GAAG;AAC7C,iBAAO,gBAAgB,QAAQ,aAAa,QAAQ,UAAU,MAAM;AAAA,QACtE;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,YAAY,GAAG;AAE7C,eAAO;AAAA,MACT;AAGA,cACG,GAAG,YAAY,gBAAgB,SAAS,OACvC,GAAG,YAAY,iBAAiB,YAAY,MAC3C,GAAG,YAAY,cAAc,YAAY,MAC5C,OAAO,UAAU,WAAW,YAAY;AAAA,IAE5C;AAWA,aAAS,eAAe,QAAQ,OAAO,OAAO;AAE5C,UAAI,UAAU,OAAO;AACnB,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,gBAAgB,KAAK,GAAG;AAC1C,aAAK,GAAG,YAAY,gBAAgB,KAAK,GAAG;AAG1C,iBAAO,OACJ,iBAAiB,KAAK,EACtB,KAAK,CAAC,SAAS,OAAO,UAAU,OAAO,IAAI,CAAC;AAAA,QACjD;AAEA,eAAO,OAAO,UAAU,OAAO,KAAK;AAAA,MACtC;AAEA,WAAK,GAAG,YAAY,gBAAgB,KAAK,GAAG;AAE1C,eAAO,OAAO,UAAU,OAAO,KAAK;AAAA,MACtC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACnHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,8BACN,QAAQ,uBACR,QAAQ,wBACR,QAAQ,0BACR,QAAQ,mBACR,QAAQ,6BACR,QAAQ,6BACN;AACJ,YAAQ,kBAAkB;AAC1B,YAAQ,cAAc;AACtB,YAAQ,uBAAuB;AAC/B,YAAQ,sBAAsB;AAE9B,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,gBAAgB;AAEpB,QAAI,YAAY;AAEhB,QAAI,qBAAqB;AAEzB,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,WAAW;AAKf,aAAS,YAAY,WAAW;AAC9B,cAAQ,GAAG,YAAY,YAAY,WAAW,gBAAgB;AAAA,IAChE;AAEA,aAAS,gBAAgB,WAAW;AAClC,UAAI,CAAC,YAAY,SAAS,GAAG;AAC3B,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,SAAS,CAAC;AAAA,QAC9C;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAeA,QAAM,mBAAN,MAAuB;AAAA,MACrB,YAAY,QAAQ;AAClB,YAAI,sBAAsB;AAE1B,aAAK,QAAQ,GAAG,YAAY,YAAY,OAAO,IAAI;AACnD,aAAK,cAAc,OAAO;AAC1B,aAAK,YAAY,OAAO;AACxB,aAAK,gBACF,uBAAuB,OAAO,kBAAkB,QACjD,yBAAyB,SACrB,uBACA;AACN,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,cAAM,QAAQ,OAAO,SAAS,MAC3B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,IAAI,OAAO,IAAI;AAAA,QACjB;AACF,cAAM,QACH,eAAe,OAAO,UAAU,QAAQ,iBAAiB,SACtD,eACA,CAAC;AACP,SAAE,GAAG,cAAc,cAAc,IAAI,KAAK,CAAC,MAAM,QAAQ,IAAI,MAC1D,GAAG,WAAW;AAAA,UACb;AAAA,UACA,IAAI,OAAO,IAAI;AAAA,QACjB;AACF,aAAK,QAAQ,GAAG,YAAY,iBAAiB,IAAI;AAAA,MACnD;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,MAAM,KAAK;AAAA,UACX,aAAa,KAAK;AAAA,UAClB,WAAW,KAAK;AAAA,UAChB,OAAO,GAAG,YAAY,kBAAkB,KAAK,IAAI;AAAA,UACjD,cAAc,KAAK;AAAA,UACnB,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,QAChB;AAAA,MACF;AAAA,MAEA,WAAW;AACT,eAAO,MAAM,KAAK;AAAA,MACpB;AAAA,MAEA,SAAS;AACP,eAAO,KAAK,SAAS;AAAA,MACvB;AAAA,IACF;AAEA,YAAQ,mBAAmB;AAK3B,QAAM,0BAA0B,IAAI,iBAAiB;AAAA,MACnD,MAAM;AAAA,MACN,aACE;AAAA,MACF,WAAW;AAAA,QACT,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,MACvC;AAAA,MACA,MAAM;AAAA,QACJ,IAAI;AAAA,UACF,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,aAAa;AAAA,QACf;AAAA,MACF;AAAA,IACF,CAAC;AAKD,YAAQ,0BAA0B;AAClC,QAAM,uBAAuB,IAAI,iBAAiB;AAAA,MAChD,MAAM;AAAA,MACN,aACE;AAAA,MACF,WAAW;AAAA,QACT,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,MACvC;AAAA,MACA,MAAM;AAAA,QACJ,IAAI;AAAA,UACF,MAAM,IAAI,YAAY,eAAe,SAAS,cAAc;AAAA,UAC5D,aAAa;AAAA,QACf;AAAA,MACF;AAAA,IACF,CAAC;AAKD,YAAQ,uBAAuB;AAC/B,QAAM,6BAA6B;AAKnC,YAAQ,6BAA6B;AACrC,QAAM,6BAA6B,IAAI,iBAAiB;AAAA,MACtD,MAAM;AAAA,MACN,aAAa;AAAA,MACb,WAAW;AAAA,QACT,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,QACrC,mBAAmB,kBAAkB;AAAA,MACvC;AAAA,MACA,MAAM;AAAA,QACJ,QAAQ;AAAA,UACN,MAAM,SAAS;AAAA,UACf,aACE;AAAA,UACF,cAAc;AAAA,QAChB;AAAA,MACF;AAAA,IACF,CAAC;AAKD,YAAQ,6BAA6B;AACrC,QAAM,8BAA8B,IAAI,iBAAiB;AAAA,MACvD,MAAM;AAAA,MACN,aAAa;AAAA,MACb,WAAW,CAAC,mBAAmB,kBAAkB,MAAM;AAAA,MACvD,MAAM;AAAA,QACJ,KAAK;AAAA,UACH,MAAM,IAAI,YAAY,eAAe,SAAS,aAAa;AAAA,UAC3D,aAAa;AAAA,QACf;AAAA,MACF;AAAA,IACF,CAAC;AAKD,YAAQ,8BAA8B;AACtC,QAAM,wBAAwB,IAAI,iBAAiB;AAAA,MACjD,MAAM;AAAA,MACN,aACE;AAAA,MACF,WAAW,CAAC,mBAAmB,kBAAkB,YAAY;AAAA,MAC7D,MAAM,CAAC;AAAA,IACT,CAAC;AAKD,YAAQ,wBAAwB;AAChC,QAAM,sBAAsB,OAAO,OAAO;AAAA,MACxC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AACD,YAAQ,sBAAsB;AAE9B,aAAS,qBAAqB,WAAW;AACvC,aAAO,oBAAoB,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,UAAU,IAAI;AAAA,IACvE;AAAA;AAAA;;;AC7OA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBAAgB;AACxB,YAAQ,eAAe;AACvB,YAAQ,WAAW;AAEnB,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,gBAAgB;AAEpB,QAAI,YAAY;AAEhB,QAAI,OAAO;AAEX,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAKrB,aAAS,SAAS,QAAQ;AACxB,cAAQ,GAAG,YAAY,YAAY,QAAQ,aAAa;AAAA,IAC1D;AAEA,aAAS,aAAa,QAAQ;AAC5B,UAAI,CAAC,SAAS,MAAM,GAAG;AACrB,cAAM,IAAI;AAAA,UACR,aAAa,GAAG,SAAS,SAAS,MAAM,CAAC;AAAA,QAC3C;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AA+EA,QAAM,gBAAN,MAAoB;AAAA;AAAA,MAElB,YAAY,QAAQ;AAClB,YAAI,uBAAuB;AAI3B,aAAK,qBAAqB,OAAO,gBAAgB,OAAO,CAAC,IAAI;AAE7D,SAAC,GAAG,cAAc,cAAc,MAAM,MACnC,GAAG,WAAW,WAAW,OAAO,oCAAoC;AACvE,SAAC,OAAO,SACN,MAAM,QAAQ,OAAO,KAAK,MACzB,GAAG,WAAW;AAAA,UACb;AAAA,UACA,+CAA+C,GAAG,SAAS;AAAA,YACzD,OAAO;AAAA,UACT,CAAC;AAAA,QACH;AACF,SAAC,OAAO,cACN,MAAM,QAAQ,OAAO,UAAU,MAC9B,GAAG,WAAW;AAAA,UACb;AAAA,UACA,oDACM,GAAG,SAAS,SAAS,OAAO,UAAU,CAAC;AAAA,QAC/C;AACF,aAAK,cAAc,OAAO;AAC1B,aAAK,cAAc,GAAG,UAAU,UAAU,OAAO,UAAU;AAC3D,aAAK,UAAU,OAAO;AACtB,aAAK,qBACF,wBAAwB,OAAO,uBAAuB,QACvD,0BAA0B,SACtB,wBACA,CAAC;AACP,aAAK,aAAa,OAAO;AACzB,aAAK,gBAAgB,OAAO;AAC5B,aAAK,oBAAoB,OAAO;AAEhC,aAAK,eACF,qBAAqB,OAAO,gBAAgB,QAC7C,uBAAuB,SACnB,qBACA,YAAY;AAGlB,cAAM,qBAAqB,IAAI,IAAI,OAAO,KAAK;AAE/C,YAAI,OAAO,SAAS,MAAM;AACxB,qBAAW,QAAQ,OAAO,OAAO;AAG/B,+BAAmB,OAAO,IAAI;AAC9B,mCAAuB,MAAM,kBAAkB;AAAA,UACjD;AAAA,QACF;AAEA,YAAI,KAAK,cAAc,MAAM;AAC3B,iCAAuB,KAAK,YAAY,kBAAkB;AAAA,QAC5D;AAEA,YAAI,KAAK,iBAAiB,MAAM;AAC9B,iCAAuB,KAAK,eAAe,kBAAkB;AAAA,QAC/D;AAEA,YAAI,KAAK,qBAAqB,MAAM;AAClC,iCAAuB,KAAK,mBAAmB,kBAAkB;AAAA,QACnE;AAEA,mBAAW,aAAa,KAAK,aAAa;AAExC,eAAK,GAAG,YAAY,aAAa,SAAS,GAAG;AAC3C,uBAAW,OAAO,UAAU,MAAM;AAChC,qCAAuB,IAAI,MAAM,kBAAkB;AAAA,YACrD;AAAA,UACF;AAAA,QACF;AAEA,+BAAuB,eAAe,UAAU,kBAAkB;AAElE,aAAK,WAAW,uBAAO,OAAO,IAAI;AAClC,aAAK,cAAc,uBAAO,OAAO,IAAI;AAErC,aAAK,sBAAsB,uBAAO,OAAO,IAAI;AAE7C,mBAAW,aAAa,oBAAoB;AAC1C,cAAI,aAAa,MAAM;AACrB;AAAA,UACF;AAEA,gBAAM,WAAW,UAAU;AAC3B,uBACG,GAAG,WAAW;AAAA,YACb;AAAA,YACA;AAAA,UACF;AAEF,cAAI,KAAK,SAAS,QAAQ,MAAM,QAAW;AACzC,kBAAM,IAAI;AAAA,cACR,+EAA+E,QAAQ;AAAA,YACzF;AAAA,UACF;AAEA,eAAK,SAAS,QAAQ,IAAI;AAE1B,eAAK,GAAG,YAAY,iBAAiB,SAAS,GAAG;AAE/C,uBAAW,SAAS,UAAU,cAAc,GAAG;AAC7C,mBAAK,GAAG,YAAY,iBAAiB,KAAK,GAAG;AAC3C,oBAAI,kBAAkB,KAAK,oBAAoB,MAAM,IAAI;AAEzD,oBAAI,oBAAoB,QAAW;AACjC,oCAAkB,KAAK,oBAAoB,MAAM,IAAI,IAAI;AAAA,oBACvD,SAAS,CAAC;AAAA,oBACV,YAAY,CAAC;AAAA,kBACf;AAAA,gBACF;AAEA,gCAAgB,WAAW,KAAK,SAAS;AAAA,cAC3C;AAAA,YACF;AAAA,UACF,YAAY,GAAG,YAAY,cAAc,SAAS,GAAG;AAEnD,uBAAW,SAAS,UAAU,cAAc,GAAG;AAC7C,mBAAK,GAAG,YAAY,iBAAiB,KAAK,GAAG;AAC3C,oBAAI,kBAAkB,KAAK,oBAAoB,MAAM,IAAI;AAEzD,oBAAI,oBAAoB,QAAW;AACjC,oCAAkB,KAAK,oBAAoB,MAAM,IAAI,IAAI;AAAA,oBACvD,SAAS,CAAC;AAAA,oBACV,YAAY,CAAC;AAAA,kBACf;AAAA,gBACF;AAEA,gCAAgB,QAAQ,KAAK,SAAS;AAAA,cACxC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,eAAe;AACb,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,kBAAkB;AAChB,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,sBAAsB;AACpB,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,YAAY,WAAW;AACrB,gBAAQ,WAAW;AAAA,UACjB,KAAK,KAAK,kBAAkB;AAC1B,mBAAO,KAAK,aAAa;AAAA,UAE3B,KAAK,KAAK,kBAAkB;AAC1B,mBAAO,KAAK,gBAAgB;AAAA,UAE9B,KAAK,KAAK,kBAAkB;AAC1B,mBAAO,KAAK,oBAAoB;AAAA,QACpC;AAAA,MACF;AAAA,MAEA,aAAa;AACX,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,QAAQ,MAAM;AACZ,eAAO,KAAK,WAAW,EAAE,IAAI;AAAA,MAC/B;AAAA,MAEA,iBAAiB,cAAc;AAC7B,gBAAQ,GAAG,YAAY,aAAa,YAAY,IAC5C,aAAa,SAAS,IACtB,KAAK,mBAAmB,YAAY,EAAE;AAAA,MAC5C;AAAA,MAEA,mBAAmB,eAAe;AAChC,cAAM,kBAAkB,KAAK,oBAAoB,cAAc,IAAI;AACnE,eAAO,oBAAoB,QAAQ,oBAAoB,SACnD,kBACA;AAAA,UACE,SAAS,CAAC;AAAA,UACV,YAAY,CAAC;AAAA,QACf;AAAA,MACN;AAAA,MAEA,UAAU,cAAc,cAAc;AACpC,YAAI,MAAM,KAAK,YAAY,aAAa,IAAI;AAE5C,YAAI,QAAQ,QAAW;AACrB,gBAAM,uBAAO,OAAO,IAAI;AAExB,eAAK,GAAG,YAAY,aAAa,YAAY,GAAG;AAC9C,uBAAW,QAAQ,aAAa,SAAS,GAAG;AAC1C,kBAAI,KAAK,IAAI,IAAI;AAAA,YACnB;AAAA,UACF,OAAO;AACL,kBAAM,kBAAkB,KAAK,mBAAmB,YAAY;AAE5D,uBAAW,QAAQ,gBAAgB,SAAS;AAC1C,kBAAI,KAAK,IAAI,IAAI;AAAA,YACnB;AAEA,uBAAW,QAAQ,gBAAgB,YAAY;AAC7C,kBAAI,KAAK,IAAI,IAAI;AAAA,YACnB;AAAA,UACF;AAEA,eAAK,YAAY,aAAa,IAAI,IAAI;AAAA,QACxC;AAEA,eAAO,IAAI,aAAa,IAAI,MAAM;AAAA,MACpC;AAAA,MAEA,gBAAgB;AACd,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,aAAa,MAAM;AACjB,eAAO,KAAK,cAAc,EAAE,KAAK,CAAC,cAAc,UAAU,SAAS,IAAI;AAAA,MACzE;AAAA,MAEA,WAAW;AACT,eAAO;AAAA,UACL,aAAa,KAAK;AAAA,UAClB,OAAO,KAAK,aAAa;AAAA,UACzB,UAAU,KAAK,gBAAgB;AAAA,UAC/B,cAAc,KAAK,oBAAoB;AAAA,UACvC,OAAO,OAAO,OAAO,KAAK,WAAW,CAAC;AAAA,UACtC,YAAY,KAAK,cAAc;AAAA,UAC/B,YAAY,KAAK;AAAA,UACjB,SAAS,KAAK;AAAA,UACd,mBAAmB,KAAK;AAAA,UACxB,aAAa,KAAK,uBAAuB;AAAA,QAC3C;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,gBAAgB;AAExB,aAAS,uBAAuB,MAAM,SAAS;AAC7C,YAAM,aAAa,GAAG,YAAY,cAAc,IAAI;AAEpD,UAAI,CAAC,QAAQ,IAAI,SAAS,GAAG;AAC3B,gBAAQ,IAAI,SAAS;AAErB,aAAK,GAAG,YAAY,aAAa,SAAS,GAAG;AAC3C,qBAAW,cAAc,UAAU,SAAS,GAAG;AAC7C,mCAAuB,YAAY,OAAO;AAAA,UAC5C;AAAA,QACF,YACG,GAAG,YAAY,cAAc,SAAS,MACtC,GAAG,YAAY,iBAAiB,SAAS,GAC1C;AACA,qBAAW,iBAAiB,UAAU,cAAc,GAAG;AACrD,mCAAuB,eAAe,OAAO;AAAA,UAC/C;AAEA,qBAAW,SAAS,OAAO,OAAO,UAAU,UAAU,CAAC,GAAG;AACxD,mCAAuB,MAAM,MAAM,OAAO;AAE1C,uBAAW,OAAO,MAAM,MAAM;AAC5B,qCAAuB,IAAI,MAAM,OAAO;AAAA,YAC1C;AAAA,UACF;AAAA,QACF,YAAY,GAAG,YAAY,mBAAmB,SAAS,GAAG;AACxD,qBAAW,SAAS,OAAO,OAAO,UAAU,UAAU,CAAC,GAAG;AACxD,mCAAuB,MAAM,MAAM,OAAO;AAAA,UAC5C;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACjZA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBAAoB;AAC5B,YAAQ,iBAAiB;AAEzB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,OAAO;AAEX,QAAI,mBAAmB;AAEvB,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,UAAU;AASd,aAAS,eAAe,QAAQ;AAE9B,OAAC,GAAG,QAAQ,cAAc,MAAM;AAEhC,UAAI,OAAO,oBAAoB;AAC7B,eAAO,OAAO;AAAA,MAChB;AAEA,YAAM,UAAU,IAAI,wBAAwB,MAAM;AAClD,wBAAkB,OAAO;AACzB,yBAAmB,OAAO;AAC1B,oBAAc,OAAO;AAGrB,YAAM,SAAS,QAAQ,UAAU;AACjC,aAAO,qBAAqB;AAC5B,aAAO;AAAA,IACT;AAMA,aAAS,kBAAkB,QAAQ;AACjC,YAAM,SAAS,eAAe,MAAM;AAEpC,UAAI,OAAO,WAAW,GAAG;AACvB,cAAM,IAAI,MAAM,OAAO,IAAI,CAAC,UAAU,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC;AAAA,MACnE;AAAA,IACF;AAEA,QAAM,0BAAN,MAA8B;AAAA,MAC5B,YAAY,QAAQ;AAClB,aAAK,UAAU,CAAC;AAChB,aAAK,SAAS;AAAA,MAChB;AAAA,MAEA,YAAY,SAAS,OAAO;AAC1B,cAAM,SAAS,MAAM,QAAQ,KAAK,IAAI,MAAM,OAAO,OAAO,IAAI;AAE9D,aAAK,QAAQ;AAAA,UACX,IAAI,cAAc,aAAa,SAAS;AAAA,YACtC,OAAO;AAAA,UACT,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MAEA,YAAY;AACV,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,aAAS,kBAAkB,SAAS;AAClC,YAAM,SAAS,QAAQ;AACvB,YAAM,YAAY,OAAO,aAAa;AAEtC,UAAI,CAAC,WAAW;AACd,gBAAQ,YAAY,qCAAqC,OAAO,OAAO;AAAA,MACzE,WAAW,EAAE,GAAG,YAAY,cAAc,SAAS,GAAG;AACpD,YAAI;AAEJ,gBAAQ;AAAA,UACN,sDAAsD,GACtD,SAAS,SAAS,SAAS,CAAC;AAAA,WAC3B,wBAAwB;AAAA,YACvB;AAAA,YACA,KAAK,kBAAkB;AAAA,UACzB,OAAO,QAAQ,0BAA0B,SACrC,wBACA,UAAU;AAAA,QAChB;AAAA,MACF;AAEA,YAAM,eAAe,OAAO,gBAAgB;AAE5C,UAAI,gBAAgB,EAAE,GAAG,YAAY,cAAc,YAAY,GAAG;AAChE,YAAI;AAEJ,gBAAQ;AAAA,UACN,qEACM,GAAG,SAAS,SAAS,YAAY,CAAC;AAAA,WACvC,yBAAyB;AAAA,YACxB;AAAA,YACA,KAAK,kBAAkB;AAAA,UACzB,OAAO,QAAQ,2BAA2B,SACtC,yBACA,aAAa;AAAA,QACnB;AAAA,MACF;AAEA,YAAM,mBAAmB,OAAO,oBAAoB;AAEpD,UAAI,oBAAoB,EAAE,GAAG,YAAY,cAAc,gBAAgB,GAAG;AACxE,YAAI;AAEJ,gBAAQ;AAAA,UACN,yEACM,GAAG,SAAS,SAAS,gBAAgB,CAAC;AAAA,WAC3C,yBAAyB;AAAA,YACxB;AAAA,YACA,KAAK,kBAAkB;AAAA,UACzB,OAAO,QAAQ,2BAA2B,SACtC,yBACA,iBAAiB;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAEA,aAAS,qBAAqB,QAAQ,WAAW;AAC/C,UAAI;AAEJ,cAAQ,gBAAgB,CAAC,OAAO,SAAS,GAAG,OAAO,iBAAiB,EACjE;AAAA;AAAA,QAEC,CAAC,eAAe;AACd,cAAI;AAEJ;AAAA;AAAA,aAEG,wBACC,eAAe,QAAQ,eAAe,SAClC,SACA,WAAW,oBAAoB,QACnC,0BAA0B,SACxB,wBACA,CAAC;AAAA;AAAA,QAET;AAAA,MACF,EACC,KAAK,CAAC,kBAAkB,cAAc,cAAc,SAAS,OAAO,QACrE,kBAAkB,SAChB,SACA,cAAc;AAAA,IACpB;AAEA,aAAS,mBAAmB,SAAS;AACnC,iBAAW,aAAa,QAAQ,OAAO,cAAc,GAAG;AAEtD,YAAI,EAAE,GAAG,YAAY,aAAa,SAAS,GAAG;AAC5C,kBAAQ;AAAA,YACN,gCAAgC,GAAG,SAAS,SAAS,SAAS,CAAC;AAAA,YAC/D,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU;AAAA,UAClE;AACA;AAAA,QACF;AAEA,qBAAa,SAAS,SAAS;AAG/B,mBAAW,OAAO,UAAU,MAAM;AAEhC,uBAAa,SAAS,GAAG;AAEzB,cAAI,EAAE,GAAG,YAAY,aAAa,IAAI,IAAI,GAAG;AAC3C,oBAAQ;AAAA,cACN,gBAAgB,UAAU,IAAI,IAAI,IAAI,IAAI,mCAC3B,GAAG,SAAS,SAAS,IAAI,IAAI,CAAC;AAAA,cAC7C,IAAI;AAAA,YACN;AAAA,UACF;AAEA,eACG,GAAG,YAAY,oBAAoB,GAAG,KACvC,IAAI,qBAAqB,MACzB;AACA,gBAAI;AAEJ,oBAAQ;AAAA,cACN,sBAAsB,UAAU,IAAI,IAAI,IAAI,IAAI;AAAA,cAChD;AAAA,gBACE,2BAA2B,IAAI,OAAO;AAAA,iBACrC,eAAe,IAAI,aAAa,QAAQ,iBAAiB,SACtD,SACA,aAAa;AAAA,cACnB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,aAAa,SAAS,MAAM;AAEnC,UAAI,KAAK,KAAK,WAAW,IAAI,GAAG;AAC9B,gBAAQ;AAAA,UACN,SAAS,KAAK,IAAI;AAAA,UAClB,KAAK;AAAA,QACP;AAAA,MACF;AAAA,IACF;AAEA,aAAS,cAAc,SAAS;AAC9B,YAAM,kCACJ,uCAAuC,OAAO;AAChD,YAAM,UAAU,QAAQ,OAAO,WAAW;AAE1C,iBAAW,QAAQ,OAAO,OAAO,OAAO,GAAG;AAEzC,YAAI,EAAE,GAAG,YAAY,aAAa,IAAI,GAAG;AACvC,kBAAQ;AAAA,YACN,yCAAyC,GAAG,SAAS,SAAS,IAAI,CAAC;AAAA,YACnE,KAAK;AAAA,UACP;AACA;AAAA,QACF;AAEA,YAAI,EAAE,GAAG,eAAe,qBAAqB,IAAI,GAAG;AAClD,uBAAa,SAAS,IAAI;AAAA,QAC5B;AAEA,aAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AAEvC,yBAAe,SAAS,IAAI;AAE5B,6BAAmB,SAAS,IAAI;AAAA,QAClC,YAAY,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAEjD,yBAAe,SAAS,IAAI;AAE5B,6BAAmB,SAAS,IAAI;AAAA,QAClC,YAAY,GAAG,YAAY,aAAa,IAAI,GAAG;AAE7C,+BAAqB,SAAS,IAAI;AAAA,QACpC,YAAY,GAAG,YAAY,YAAY,IAAI,GAAG;AAE5C,6BAAmB,SAAS,IAAI;AAAA,QAClC,YAAY,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAEnD,8BAAoB,SAAS,IAAI;AAEjC,0CAAgC,IAAI;AAAA,QACtC;AAAA,MACF;AAAA,IACF;AAEA,aAAS,eAAe,SAAS,MAAM;AACrC,YAAM,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC;AAE7C,UAAI,OAAO,WAAW,GAAG;AACvB,gBAAQ,YAAY,QAAQ,KAAK,IAAI,oCAAoC;AAAA,UACvE,KAAK;AAAA,UACL,GAAG,KAAK;AAAA,QACV,CAAC;AAAA,MACH;AAEA,iBAAW,SAAS,QAAQ;AAE1B,qBAAa,SAAS,KAAK;AAE3B,YAAI,EAAE,GAAG,YAAY,cAAc,MAAM,IAAI,GAAG;AAC9C,cAAI;AAEJ,kBAAQ;AAAA,YACN,eAAe,KAAK,IAAI,IAAI,MAAM,IAAI,kCACvB,GAAG,SAAS,SAAS,MAAM,IAAI,CAAC;AAAA,aAC9C,iBAAiB,MAAM,aAAa,QAAQ,mBAAmB,SAC5D,SACA,eAAe;AAAA,UACrB;AAAA,QACF;AAEA,mBAAW,OAAO,MAAM,MAAM;AAC5B,gBAAM,UAAU,IAAI;AAEpB,uBAAa,SAAS,GAAG;AAEzB,cAAI,EAAE,GAAG,YAAY,aAAa,IAAI,IAAI,GAAG;AAC3C,gBAAI;AAEJ,oBAAQ;AAAA,cACN,eAAe,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,OAAO,mCAC7B,GAAG,SAAS,SAAS,IAAI,IAAI,CAAC;AAAA,eACjD,gBAAgB,IAAI,aAAa,QAAQ,kBAAkB,SACxD,SACA,cAAc;AAAA,YACpB;AAAA,UACF;AAEA,eACG,GAAG,YAAY,oBAAoB,GAAG,KACvC,IAAI,qBAAqB,MACzB;AACA,gBAAI;AAEJ,oBAAQ;AAAA,cACN,qBAAqB,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI,OAAO;AAAA,cACvD;AAAA,gBACE,2BAA2B,IAAI,OAAO;AAAA,iBACrC,gBAAgB,IAAI,aAAa,QAAQ,kBAAkB,SACxD,SACA,cAAc;AAAA,cACpB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,mBAAmB,SAAS,MAAM;AACzC,YAAM,iBAAiB,uBAAO,OAAO,IAAI;AAEzC,iBAAW,SAAS,KAAK,cAAc,GAAG;AACxC,YAAI,EAAE,GAAG,YAAY,iBAAiB,KAAK,GAAG;AAC5C,kBAAQ;AAAA,YACN,SAAS,GAAG,SAAS;AAAA,cACnB;AAAA,YACF,CAAC,8DACyB,GAAG,SAAS,SAAS,KAAK,CAAC;AAAA,YACrD,+BAA+B,MAAM,KAAK;AAAA,UAC5C;AACA;AAAA,QACF;AAEA,YAAI,SAAS,OAAO;AAClB,kBAAQ;AAAA,YACN,QAAQ,KAAK,IAAI;AAAA,YACjB,+BAA+B,MAAM,KAAK;AAAA,UAC5C;AACA;AAAA,QACF;AAEA,YAAI,eAAe,MAAM,IAAI,GAAG;AAC9B,kBAAQ;AAAA,YACN,QAAQ,KAAK,IAAI,uBAAuB,MAAM,IAAI;AAAA,YAClD,+BAA+B,MAAM,KAAK;AAAA,UAC5C;AACA;AAAA,QACF;AAEA,uBAAe,MAAM,IAAI,IAAI;AAC7B,wCAAgC,SAAS,MAAM,KAAK;AACpD,wCAAgC,SAAS,MAAM,KAAK;AAAA,MACtD;AAAA,IACF;AAEA,aAAS,gCAAgC,SAAS,MAAM,OAAO;AAC7D,YAAM,eAAe,KAAK,UAAU;AAEpC,iBAAW,cAAc,OAAO,OAAO,MAAM,UAAU,CAAC,GAAG;AACzD,cAAM,YAAY,WAAW;AAC7B,cAAM,YAAY,aAAa,SAAS;AAExC,YAAI,CAAC,WAAW;AACd,kBAAQ;AAAA,YACN,mBAAmB,MAAM,IAAI,IAAI,SAAS,iBAAiB,KAAK,IAAI;AAAA,YACpE,CAAC,WAAW,SAAS,KAAK,SAAS,GAAG,KAAK,iBAAiB;AAAA,UAC9D;AACA;AAAA,QACF;AAGA,YACE,EAAE,GAAG,iBAAiB;AAAA,UACpB,QAAQ;AAAA,UACR,UAAU;AAAA,UACV,WAAW;AAAA,QACb,GACA;AACA,cAAI,qBAAqB;AAEzB,kBAAQ;AAAA,YACN,mBAAmB,MAAM,IAAI,IAAI,SAAS,kBACpC,GAAG,SAAS,SAAS,WAAW,IAAI,CAAC,QACvC,KAAK,IACP,IAAI,SAAS,aACD,GAAG,SAAS,SAAS,UAAU,IAAI,CAAC;AAAA,YAClD;AAAA,eACG,sBAAsB,WAAW,aAAa,QAC/C,wBAAwB,SACpB,SACA,oBAAoB;AAAA,eACvB,qBAAqB,UAAU,aAAa,QAC7C,uBAAuB,SACnB,SACA,mBAAmB;AAAA,YACzB;AAAA,UACF;AAAA,QACF;AAEA,mBAAW,YAAY,WAAW,MAAM;AACtC,gBAAM,UAAU,SAAS;AACzB,gBAAM,UAAU,UAAU,KAAK,KAAK,CAAC,QAAQ,IAAI,SAAS,OAAO;AAEjE,cAAI,CAAC,SAAS;AACZ,oBAAQ;AAAA,cACN,4BAA4B,MAAM,IAAI,IAAI,SAAS,IAAI,OAAO,mBAAmB,KAAK,IAAI,IAAI,SAAS;AAAA,cACvG,CAAC,SAAS,SAAS,UAAU,OAAO;AAAA,YACtC;AACA;AAAA,UACF;AAIA,cAAI,EAAE,GAAG,iBAAiB,aAAa,SAAS,MAAM,QAAQ,IAAI,GAAG;AACnE,gBAAI,mBAAmB;AAEvB,oBAAQ;AAAA,cACN,4BAA4B,MAAM,IAAI,IAAI,SAAS,IAAI,OAAO,oBAC3C,GAAG,SAAS,SAAS,SAAS,IAAI,CAAC,QACjD,KAAK,IAAI,IAAI,SAAS,IAAI,OAAO,eAChC,GAAG,SAAS,SAAS,QAAQ,IAAI,CAAC;AAAA,cACxC;AAAA,iBACG,oBAAoB,SAAS,aAAa,QAC3C,sBAAsB,SAClB,SACA,kBAAkB;AAAA,iBACrB,mBAAmB,QAAQ,aAAa,QACzC,qBAAqB,SACjB,SACA,iBAAiB;AAAA,cACvB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,mBAAW,WAAW,UAAU,MAAM;AACpC,gBAAM,UAAU,QAAQ;AACxB,gBAAM,WAAW,WAAW,KAAK,KAAK,CAAC,QAAQ,IAAI,SAAS,OAAO;AAEnE,cAAI,CAAC,aAAa,GAAG,YAAY,oBAAoB,OAAO,GAAG;AAC7D,oBAAQ;AAAA,cACN,gBAAgB,KAAK,IAAI,IAAI,SAAS,+BAA+B,OAAO,6CAA6C,MAAM,IAAI,IAAI,SAAS;AAAA,cAChJ,CAAC,QAAQ,SAAS,WAAW,OAAO;AAAA,YACtC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,gCAAgC,SAAS,MAAM,OAAO;AAC7D,YAAM,kBAAkB,KAAK,cAAc;AAE3C,iBAAW,cAAc,MAAM,cAAc,GAAG;AAC9C,YAAI,CAAC,gBAAgB,SAAS,UAAU,GAAG;AACzC,kBAAQ;AAAA,YACN,eAAe,OACX,QAAQ,KAAK,IAAI,qBAAqB,MAAM,IAAI,mDAChD,QAAQ,KAAK,IAAI,mBAAmB,WAAW,IAAI,iCAAiC,MAAM,IAAI;AAAA,YAClG;AAAA,cACE,GAAG,+BAA+B,OAAO,UAAU;AAAA,cACnD,GAAG,+BAA+B,MAAM,KAAK;AAAA,YAC/C;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,qBAAqB,SAAS,OAAO;AAC5C,YAAM,cAAc,MAAM,SAAS;AAEnC,UAAI,YAAY,WAAW,GAAG;AAC5B,gBAAQ;AAAA,UACN,cAAc,MAAM,IAAI;AAAA,UACxB,CAAC,MAAM,SAAS,GAAG,MAAM,iBAAiB;AAAA,QAC5C;AAAA,MACF;AAEA,YAAM,oBAAoB,uBAAO,OAAO,IAAI;AAE5C,iBAAW,cAAc,aAAa;AACpC,YAAI,kBAAkB,WAAW,IAAI,GAAG;AACtC,kBAAQ;AAAA,YACN,cAAc,MAAM,IAAI,0BAA0B,WAAW,IAAI;AAAA,YACjE,wBAAwB,OAAO,WAAW,IAAI;AAAA,UAChD;AACA;AAAA,QACF;AAEA,0BAAkB,WAAW,IAAI,IAAI;AAErC,YAAI,EAAE,GAAG,YAAY,cAAc,UAAU,GAAG;AAC9C,kBAAQ;AAAA,YACN,cAAc,MAAM,IAAI,sDACA,GAAG,SAAS,SAAS,UAAU,CAAC;AAAA,YACxD,wBAAwB,OAAO,OAAO,UAAU,CAAC;AAAA,UACnD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,mBAAmB,SAAS,UAAU;AAC7C,YAAM,aAAa,SAAS,UAAU;AAEtC,UAAI,WAAW,WAAW,GAAG;AAC3B,gBAAQ;AAAA,UACN,aAAa,SAAS,IAAI;AAAA,UAC1B,CAAC,SAAS,SAAS,GAAG,SAAS,iBAAiB;AAAA,QAClD;AAAA,MACF;AAEA,iBAAW,aAAa,YAAY;AAElC,qBAAa,SAAS,SAAS;AAAA,MACjC;AAAA,IACF;AAEA,aAAS,oBAAoB,SAAS,UAAU;AAC9C,YAAM,SAAS,OAAO,OAAO,SAAS,UAAU,CAAC;AAEjD,UAAI,OAAO,WAAW,GAAG;AACvB,gBAAQ;AAAA,UACN,qBAAqB,SAAS,IAAI;AAAA,UAClC,CAAC,SAAS,SAAS,GAAG,SAAS,iBAAiB;AAAA,QAClD;AAAA,MACF;AAEA,iBAAW,SAAS,QAAQ;AAE1B,qBAAa,SAAS,KAAK;AAE3B,YAAI,EAAE,GAAG,YAAY,aAAa,MAAM,IAAI,GAAG;AAC7C,cAAI;AAEJ,kBAAQ;AAAA,YACN,eAAe,SAAS,IAAI,IAAI,MAAM,IAAI,iCAC3B,GAAG,SAAS,SAAS,MAAM,IAAI,CAAC;AAAA,aAC9C,kBAAkB,MAAM,aAAa,QAAQ,oBAAoB,SAC9D,SACA,gBAAgB;AAAA,UACtB;AAAA,QACF;AAEA,aACG,GAAG,YAAY,sBAAsB,KAAK,KAC3C,MAAM,qBAAqB,MAC3B;AACA,cAAI;AAEJ,kBAAQ;AAAA,YACN,wBAAwB,SAAS,IAAI,IAAI,MAAM,IAAI;AAAA,YACnD;AAAA,cACE,2BAA2B,MAAM,OAAO;AAAA,eACvC,kBAAkB,MAAM,aAAa,QACtC,oBAAoB,SAChB,SACA,gBAAgB;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS,SAAS;AACpB,wCAA8B,UAAU,OAAO,OAAO;AAAA,QACxD;AAAA,MACF;AAAA,IACF;AAEA,aAAS,8BAA8B,MAAM,OAAO,SAAS;AAC3D,WAAK,GAAG,YAAY,eAAe,MAAM,IAAI,GAAG;AAC9C,YAAI;AAEJ,gBAAQ;AAAA,UACN,qBAAqB,KAAK,IAAI,IAAI,MAAM,IAAI;AAAA,WAC3C,kBAAkB,MAAM,aAAa,QAAQ,oBAAoB,SAC9D,SACA,gBAAgB;AAAA,QACtB;AAAA,MACF;AAEA,UAAI,MAAM,iBAAiB,QAAW;AACpC,gBAAQ;AAAA,UACN,qBAAqB,KAAK,IAAI,IAAI,MAAM,IAAI;AAAA,UAC5C,MAAM;AAAA,QACR;AAAA,MACF;AAAA,IACF;AAEA,aAAS,uCAAuC,SAAS;AAIvD,YAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,YAAM,YAAY,CAAC;AAEnB,YAAM,2BAA2B,uBAAO,OAAO,IAAI;AACnD,aAAO;AAIP,eAAS,qBAAqB,UAAU;AACtC,YAAI,aAAa,SAAS,IAAI,GAAG;AAC/B;AAAA,QACF;AAEA,qBAAa,SAAS,IAAI,IAAI;AAC9B,iCAAyB,SAAS,IAAI,IAAI,UAAU;AACpD,cAAM,SAAS,OAAO,OAAO,SAAS,UAAU,CAAC;AAEjD,mBAAW,SAAS,QAAQ;AAC1B,eACG,GAAG,YAAY,eAAe,MAAM,IAAI,MACxC,GAAG,YAAY,mBAAmB,MAAM,KAAK,MAAM,GACpD;AACA,kBAAM,YAAY,MAAM,KAAK;AAC7B,kBAAM,aAAa,yBAAyB,UAAU,IAAI;AAC1D,sBAAU,KAAK,KAAK;AAEpB,gBAAI,eAAe,QAAW;AAC5B,mCAAqB,SAAS;AAAA,YAChC,OAAO;AACL,oBAAM,YAAY,UAAU,MAAM,UAAU;AAC5C,oBAAM,UAAU,UAAU,IAAI,CAAC,aAAa,SAAS,IAAI,EAAE,KAAK,GAAG;AACnE,sBAAQ;AAAA,gBACN,kCAAkC,UAAU,IAAI,yDAAyD,OAAO;AAAA,gBAChH,UAAU,IAAI,CAAC,aAAa,SAAS,OAAO;AAAA,cAC9C;AAAA,YACF;AAEA,sBAAU,IAAI;AAAA,UAChB;AAAA,QACF;AAEA,iCAAyB,SAAS,IAAI,IAAI;AAAA,MAC5C;AAAA,IACF;AAEA,aAAS,+BAA+B,MAAM,OAAO;AACnD,YAAM,EAAE,SAAS,kBAAkB,IAAI;AACvC,YAAM,QACJ,WAAW,OAAO,CAAC,SAAS,GAAG,iBAAiB,IAAI;AAEtD,aAAO,MACJ,QAAQ,CAAC,aAAa;AACrB,YAAI;AAEJ;AAAA;AAAA,WAEG,uBAAuB,SAAS,gBAAgB,QAC/C,yBAAyB,SACvB,uBACA,CAAC;AAAA;AAAA,MAET,CAAC,EACA,OAAO,CAAC,cAAc,UAAU,KAAK,UAAU,MAAM,IAAI;AAAA,IAC9D;AAEA,aAAS,wBAAwB,OAAO,UAAU;AAChD,YAAM,EAAE,SAAS,kBAAkB,IAAI;AACvC,YAAM,QACJ,WAAW,OAAO,CAAC,SAAS,GAAG,iBAAiB,IAAI;AAEtD,aAAO,MACJ,QAAQ,CAAC,cAAc;AACtB,YAAI;AAEJ;AAAA;AAAA,WAEG,mBAAmB,UAAU,WAAW,QACvC,qBAAqB,SACnB,mBACA,CAAC;AAAA;AAAA,MAET,CAAC,EACA,OAAO,CAAC,aAAa,SAAS,KAAK,UAAU,QAAQ;AAAA,IAC1D;AAEA,aAAS,2BAA2B,gBAAgB;AAClD,UAAI;AAEJ,aAAO,mBAAmB,QAAQ,mBAAmB,SACjD,UACC,wBAAwB,eAAe,gBAAgB,QACxD,0BAA0B,SAC1B,SACA,sBAAsB;AAAA,QACpB,CAAC,SACC,KAAK,KAAK,UAAU,YAAY,2BAA2B;AAAA,MAC/D;AAAA,IACN;AAAA;AAAA;;;AC3rBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,cAAc;AAEtB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,aAAS,YAAY,QAAQ,UAAU;AACrC,cAAQ,SAAS,MAAM;AAAA,QACrB,KAAK,OAAO,KAAK,WAAW;AAC1B,gBAAM,YAAY,YAAY,QAAQ,SAAS,IAAI;AACnD,iBAAO,aAAa,IAAI,YAAY,YAAY,SAAS;AAAA,QAC3D;AAAA,QAEA,KAAK,OAAO,KAAK,eAAe;AAC9B,gBAAM,YAAY,YAAY,QAAQ,SAAS,IAAI;AACnD,iBAAO,aAAa,IAAI,YAAY,eAAe,SAAS;AAAA,QAC9D;AAAA,QAEA,KAAK,OAAO,KAAK;AACf,iBAAO,OAAO,QAAQ,SAAS,KAAK,KAAK;AAAA,MAC7C;AAAA,IACF;AAAA;AAAA;;;AC1BA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AAKzB,aAAS,eAAe,MAAM;AAC5B,aAAO,KACJ;AAAA,QAAI,CAAC,QACJ,OAAO,QAAQ,WAAW,MAAM,IAAI,SAAS,IAAI,MAAM,MAAM;AAAA,MAC/D,EACC,KAAK,EAAE;AAAA,IACZ;AAAA;AAAA;;;AChBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mBAAmB;AAE3B,QAAI,cAAc;AAElB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,oBAAoB;AAExB,QAAI,gBAAgB;AAEpB,QAAI,QAAQ;AAEZ,QAAI,kBAAkB;AAEtB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAKlB,aAAS,iBAAiB,YAAY,MAAM,UAAU,gBAAgB;AACpE,aAAO,qBAAqB,YAAY,MAAM,SAAS,MAAS;AAAA,IAClE;AAEA,aAAS,eAAe,MAAM,cAAc,OAAO;AACjD,UAAI,cAAc,oBAAoB,GAAG,SAAS,SAAS,YAAY;AAEvE,UAAI,KAAK,SAAS,GAAG;AACnB,uBAAe,cAAc,GAAG,gBAAgB,gBAAgB,IAAI,CAAC;AAAA,MACvE;AAEA,YAAM,UAAU,cAAc,OAAO,MAAM;AAC3C,YAAM;AAAA,IACR;AAEA,aAAS,qBAAqB,YAAY,MAAM,SAAS,MAAM;AAC7D,WAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AACxC,YAAI,cAAc,MAAM;AACtB,iBAAO,qBAAqB,YAAY,KAAK,QAAQ,SAAS,IAAI;AAAA,QACpE;AAEA;AAAA,WACG,GAAG,MAAM,aAAa,IAAI;AAAA,UAC3B;AAAA,UACA,IAAI,cAAc;AAAA,YAChB,gCAAgC,GAAG,SAAS;AAAA,cAC1C;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AACA;AAAA,MACF;AAEA,UAAI,cAAc,MAAM;AAEtB,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,cAAM,WAAW,KAAK;AAEtB,aAAK,GAAG,kBAAkB,kBAAkB,UAAU,GAAG;AACvD,iBAAO,MAAM,KAAK,YAAY,CAAC,WAAW,UAAU;AAClD,kBAAM,YAAY,GAAG,MAAM,SAAS,MAAM,OAAO,MAAS;AAC1D,mBAAO,qBAAqB,WAAW,UAAU,SAAS,QAAQ;AAAA,UACpE,CAAC;AAAA,QACH;AAEA,eAAO,CAAC,qBAAqB,YAAY,UAAU,SAAS,IAAI,CAAC;AAAA,MACnE;AAEA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,YAAI,EAAE,GAAG,cAAc,cAAc,UAAU,GAAG;AAChD;AAAA,aACG,GAAG,MAAM,aAAa,IAAI;AAAA,YAC3B;AAAA,YACA,IAAI,cAAc;AAAA,cAChB,kBAAkB,KAAK,IAAI;AAAA,YAC7B;AAAA,UACF;AACA;AAAA,QACF;AAEA,cAAM,eAAe,CAAC;AACtB,cAAM,YAAY,KAAK,UAAU;AAEjC,mBAAW,SAAS,OAAO,OAAO,SAAS,GAAG;AAC5C,gBAAM,aAAa,WAAW,MAAM,IAAI;AAExC,cAAI,eAAe,QAAW;AAC5B,gBAAI,MAAM,iBAAiB,QAAW;AACpC,2BAAa,MAAM,IAAI,IAAI,MAAM;AAAA,YACnC,YAAY,GAAG,YAAY,eAAe,MAAM,IAAI,GAAG;AACrD,oBAAM,WAAW,GAAG,SAAS,SAAS,MAAM,IAAI;AAChD;AAAA,iBACG,GAAG,MAAM,aAAa,IAAI;AAAA,gBAC3B;AAAA,gBACA,IAAI,cAAc;AAAA,kBAChB,UAAU,MAAM,IAAI,uBAAuB,OAAO;AAAA,gBACpD;AAAA,cACF;AAAA,YACF;AAEA;AAAA,UACF;AAEA,uBAAa,MAAM,IAAI,IAAI;AAAA,YACzB;AAAA,YACA,MAAM;AAAA,YACN;AAAA,aACC,GAAG,MAAM,SAAS,MAAM,MAAM,MAAM,KAAK,IAAI;AAAA,UAChD;AAAA,QACF;AAEA,mBAAW,aAAa,OAAO,KAAK,UAAU,GAAG;AAC/C,cAAI,CAAC,UAAU,SAAS,GAAG;AACzB,kBAAM,eAAe,GAAG,gBAAgB;AAAA,cACtC;AAAA,cACA,OAAO,KAAK,KAAK,UAAU,CAAC;AAAA,YAC9B;AACA;AAAA,eACG,GAAG,MAAM,aAAa,IAAI;AAAA,cAC3B;AAAA,cACA,IAAI,cAAc;AAAA,gBAChB,UAAU,SAAS,6BAA6B,KAAK,IAAI,QACtD,GAAG,YAAY,YAAY,WAAW;AAAA,cAC3C;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,YAAI,KAAK,SAAS;AAChB,gBAAM,OAAO,OAAO,KAAK,YAAY;AAErC,cAAI,KAAK,WAAW,GAAG;AACrB;AAAA,eACG,GAAG,MAAM,aAAa,IAAI;AAAA,cAC3B;AAAA,cACA,IAAI,cAAc;AAAA,gBAChB,qDAAqD,KAAK,IAAI;AAAA,cAChE;AAAA,YACF;AAAA,UACF;AAEA,gBAAM,MAAM,KAAK,CAAC;AAClB,gBAAM,QAAQ,aAAa,GAAG;AAE9B,cAAI,UAAU,MAAM;AAClB;AAAA,eACG,GAAG,MAAM,aAAa,IAAI,EAAE,OAAO,GAAG;AAAA,cACvC;AAAA,cACA,IAAI,cAAc,aAAa,UAAU,GAAG,qBAAqB;AAAA,YACnE;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,YAAI;AAIJ,YAAI;AACF,wBAAc,KAAK,WAAW,UAAU;AAAA,QAC1C,SAAS,OAAO;AACd,cAAI,iBAAiB,cAAc,cAAc;AAC/C,qBAAS,GAAG,MAAM,aAAa,IAAI,GAAG,YAAY,KAAK;AAAA,UACzD,OAAO;AACL;AAAA,eACG,GAAG,MAAM,aAAa,IAAI;AAAA,cAC3B;AAAA,cACA,IAAI,cAAc;AAAA,gBAChB,kBAAkB,KAAK,IAAI,QAAQ,MAAM;AAAA,gBACzC;AAAA,kBACE,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA;AAAA,QACF;AAEA,YAAI,gBAAgB,QAAW;AAC7B;AAAA,aACG,GAAG,MAAM,aAAa,IAAI;AAAA,YAC3B;AAAA,YACA,IAAI,cAAc,aAAa,kBAAkB,KAAK,IAAI,IAAI;AAAA,UAChE;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,6BAA6B,GAAG,SAAS,SAAS,IAAI;AAAA,MACxD;AAAA,IACJ;AAAA;AAAA;;;ACrNA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AAEvB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,UAAU;AAEd,QAAI,SAAS;AAEb,QAAI,cAAc;AAsBlB,aAAS,aAAa,WAAW,MAAM,WAAW;AAChD,UAAI,CAAC,WAAW;AAGd;AAAA,MACF;AAEA,UAAI,UAAU,SAAS,OAAO,KAAK,UAAU;AAC3C,cAAM,eAAe,UAAU,KAAK;AAEpC,YAAI,aAAa,QAAQ,UAAU,YAAY,MAAM,QAAW;AAE9D;AAAA,QACF;AAEA,cAAM,gBAAgB,UAAU,YAAY;AAE5C,YAAI,kBAAkB,SAAS,GAAG,YAAY,eAAe,IAAI,GAAG;AAClE;AAAA,QACF;AAIA,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AACxC,YAAI,UAAU,SAAS,OAAO,KAAK,MAAM;AACvC;AAAA,QACF;AAEA,eAAO,aAAa,WAAW,KAAK,QAAQ,SAAS;AAAA,MACvD;AAEA,UAAI,UAAU,SAAS,OAAO,KAAK,MAAM;AAEvC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,cAAM,WAAW,KAAK;AAEtB,YAAI,UAAU,SAAS,OAAO,KAAK,MAAM;AACvC,gBAAM,gBAAgB,CAAC;AAEvB,qBAAW,YAAY,UAAU,QAAQ;AACvC,gBAAI,kBAAkB,UAAU,SAAS,GAAG;AAG1C,mBAAK,GAAG,YAAY,eAAe,QAAQ,GAAG;AAC5C;AAAA,cACF;AAEA,4BAAc,KAAK,IAAI;AAAA,YACzB,OAAO;AACL,oBAAM,YAAY,aAAa,UAAU,UAAU,SAAS;AAE5D,kBAAI,cAAc,QAAW;AAC3B;AAAA,cACF;AAEA,4BAAc,KAAK,SAAS;AAAA,YAC9B;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAEA,cAAM,eAAe,aAAa,WAAW,UAAU,SAAS;AAEhE,YAAI,iBAAiB,QAAW;AAC9B;AAAA,QACF;AAEA,eAAO,CAAC,YAAY;AAAA,MACtB;AAEA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,YAAI,UAAU,SAAS,OAAO,KAAK,QAAQ;AACzC;AAAA,QACF;AAEA,cAAM,aAAa,uBAAO,OAAO,IAAI;AACrC,cAAM,cAAc,GAAG,QAAQ;AAAA,UAC7B,UAAU;AAAA,UACV,CAAC,UAAU,MAAM,KAAK;AAAA,QACxB;AAEA,mBAAW,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC,GAAG;AACnD,gBAAM,YAAY,WAAW,MAAM,IAAI;AAEvC,cAAI,CAAC,aAAa,kBAAkB,UAAU,OAAO,SAAS,GAAG;AAC/D,gBAAI,MAAM,iBAAiB,QAAW;AACpC,yBAAW,MAAM,IAAI,IAAI,MAAM;AAAA,YACjC,YAAY,GAAG,YAAY,eAAe,MAAM,IAAI,GAAG;AACrD;AAAA,YACF;AAEA;AAAA,UACF;AAEA,gBAAM,aAAa,aAAa,UAAU,OAAO,MAAM,MAAM,SAAS;AAEtE,cAAI,eAAe,QAAW;AAC5B;AAAA,UACF;AAEA,qBAAW,MAAM,IAAI,IAAI;AAAA,QAC3B;AAEA,YAAI,KAAK,SAAS;AAChB,gBAAM,OAAO,OAAO,KAAK,UAAU;AAEnC,cAAI,KAAK,WAAW,GAAG;AACrB;AAAA,UACF;AAEA,cAAI,WAAW,KAAK,CAAC,CAAC,MAAM,MAAM;AAChC;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AAIrC,YAAI;AAEJ,YAAI;AACF,mBAAS,KAAK,aAAa,WAAW,SAAS;AAAA,QACjD,SAAS,QAAQ;AACf;AAAA,QACF;AAEA,YAAI,WAAW,QAAW;AACxB;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,6BAA6B,GAAG,SAAS,SAAS,IAAI;AAAA,MACxD;AAAA,IACJ;AAGA,aAAS,kBAAkB,WAAW,WAAW;AAC/C,aACE,UAAU,SAAS,OAAO,KAAK,aAC9B,aAAa,QAAQ,UAAU,UAAU,KAAK,KAAK,MAAM;AAAA,IAE9D;AAAA;AAAA;;;ACpMA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBAAoB;AAC5B,YAAQ,qBAAqB;AAC7B,YAAQ,oBAAoB;AAE5B,QAAI,WAAW;AAEf,QAAI,UAAU;AAEd,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,oBAAoB;AAExB,QAAI,eAAe;AAEnB,QAAI,gBAAgB;AAWpB,aAAS,kBAAkB,QAAQ,aAAa,QAAQ,SAAS;AAC/D,YAAM,SAAS,CAAC;AAChB,YAAM,YACJ,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAE5D,UAAI;AACF,cAAM,UAAU;AAAA,UACd;AAAA,UACA;AAAA,UACA;AAAA,UACA,CAAC,UAAU;AACT,gBAAI,aAAa,QAAQ,OAAO,UAAU,WAAW;AACnD,oBAAM,IAAI,cAAc;AAAA,gBACtB;AAAA,cACF;AAAA,YACF;AAEA,mBAAO,KAAK,KAAK;AAAA,UACnB;AAAA,QACF;AAEA,YAAI,OAAO,WAAW,GAAG;AACvB,iBAAO;AAAA,YACL;AAAA,UACF;AAAA,QACF;AAAA,MACF,SAAS,OAAO;AACd,eAAO,KAAK,KAAK;AAAA,MACnB;AAEA,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF;AAEA,aAAS,qBAAqB,QAAQ,aAAa,QAAQ,SAAS;AAClE,YAAM,gBAAgB,CAAC;AAEvB,iBAAW,cAAc,aAAa;AACpC,cAAM,UAAU,WAAW,SAAS,KAAK;AACzC,cAAM,WAAW,GAAG,aAAa,aAAa,QAAQ,WAAW,IAAI;AAErE,YAAI,EAAE,GAAG,YAAY,aAAa,OAAO,GAAG;AAG1C,gBAAM,cAAc,GAAG,SAAS,OAAO,WAAW,IAAI;AACtD;AAAA,YACE,IAAI,cAAc;AAAA,cAChB,cAAc,OAAO,6BAA6B,UAAU;AAAA,cAC5D;AAAA,gBACE,OAAO,WAAW;AAAA,cACpB;AAAA,YACF;AAAA,UACF;AACA;AAAA,QACF;AAEA,YAAI,CAAC,eAAe,QAAQ,OAAO,GAAG;AACpC,cAAI,WAAW,cAAc;AAC3B,0BAAc,OAAO,KAAK,GAAG,cAAc;AAAA,cACzC,WAAW;AAAA,cACX;AAAA,YACF;AAAA,UACF,YAAY,GAAG,YAAY,eAAe,OAAO,GAAG;AAClD,kBAAM,cAAc,GAAG,SAAS,SAAS,OAAO;AAChD;AAAA,cACE,IAAI,cAAc;AAAA,gBAChB,cAAc,OAAO,uBAAuB,UAAU;AAAA,gBACtD;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA;AAAA,QACF;AAEA,cAAM,QAAQ,OAAO,OAAO;AAE5B,YAAI,UAAU,SAAS,GAAG,YAAY,eAAe,OAAO,GAAG;AAC7D,gBAAM,cAAc,GAAG,SAAS,SAAS,OAAO;AAChD;AAAA,YACE,IAAI,cAAc;AAAA,cAChB,cAAc,OAAO,uBAAuB,UAAU;AAAA,cACtD;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AACA;AAAA,QACF;AAEA,sBAAc,OAAO,KAAK,GAAG,kBAAkB;AAAA,UAC7C;AAAA,UACA;AAAA,UACA,CAAC,MAAM,cAAc,UAAU;AAC7B,gBAAI,SACF,cAAc,OAAO,0BACpB,GAAG,SAAS,SAAS,YAAY;AAEpC,gBAAI,KAAK,SAAS,GAAG;AACnB,wBAAU,QAAQ,OAAO,IAAI,GAAG,gBAAgB;AAAA,gBAC9C;AAAA,cACF,CAAC;AAAA,YACH;AAEA;AAAA,cACE,IAAI,cAAc,aAAa,SAAS,OAAO,MAAM,SAAS;AAAA,gBAC5D,OAAO;AAAA,gBACP,eAAe;AAAA,cACjB,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAUA,aAAS,kBAAkB,KAAK,MAAM,gBAAgB;AACpD,UAAI;AAEJ,YAAM,gBAAgB,CAAC;AAIvB,YAAM,iBACH,kBAAkB,KAAK,eAAe,QAAQ,oBAAoB,SAC/D,kBACA,CAAC;AACP,YAAM,cAAc,GAAG,QAAQ;AAAA,QAC7B;AAAA,QACA,CAAC,QAAQ,IAAI,KAAK;AAAA,MACpB;AAEA,iBAAW,UAAU,IAAI,MAAM;AAC7B,cAAM,OAAO,OAAO;AACpB,cAAM,UAAU,OAAO;AACvB,cAAM,eAAe,WAAW,IAAI;AAEpC,YAAI,CAAC,cAAc;AACjB,cAAI,OAAO,iBAAiB,QAAW;AACrC,0BAAc,IAAI,IAAI,OAAO;AAAA,UAC/B,YAAY,GAAG,YAAY,eAAe,OAAO,GAAG;AAClD,kBAAM,IAAI,cAAc;AAAA,cACtB,aAAa,IAAI,wBAAwB,GAAG,SAAS;AAAA,gBACnD;AAAA,cACF,CAAC;AAAA,cACD;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAEA;AAAA,QACF;AAEA,cAAM,YAAY,aAAa;AAC/B,YAAI,SAAS,UAAU,SAAS,OAAO,KAAK;AAE5C,YAAI,UAAU,SAAS,OAAO,KAAK,UAAU;AAC3C,gBAAM,eAAe,UAAU,KAAK;AAEpC,cACE,kBAAkB,QAClB,CAAC,eAAe,gBAAgB,YAAY,GAC5C;AACA,gBAAI,OAAO,iBAAiB,QAAW;AACrC,4BAAc,IAAI,IAAI,OAAO;AAAA,YAC/B,YAAY,GAAG,YAAY,eAAe,OAAO,GAAG;AAClD,oBAAM,IAAI,cAAc;AAAA,gBACtB,aAAa,IAAI,wBAAwB,GAAG,SAAS;AAAA,kBACnD;AAAA,gBACF,CAAC,iCACgC,YAAY;AAAA,gBAC7C;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAEA;AAAA,UACF;AAEA,mBAAS,eAAe,YAAY,KAAK;AAAA,QAC3C;AAEA,YAAI,WAAW,GAAG,YAAY,eAAe,OAAO,GAAG;AACrD,gBAAM,IAAI,cAAc;AAAA,YACtB,aAAa,IAAI,wBAAwB,GAAG,SAAS;AAAA,cACnD;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,cAAM,gBAAgB,GAAG,cAAc;AAAA,UACrC;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,iBAAiB,QAAW;AAI9B,gBAAM,IAAI,cAAc;AAAA,YACtB,aAAa,IAAI,wBAAwB,GAAG,SAAS;AAAA,cACnD;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,sBAAc,IAAI,IAAI;AAAA,MACxB;AAEA,aAAO;AAAA,IACT;AAaA,aAAS,mBAAmB,cAAc,MAAM,gBAAgB;AAC9D,UAAI;AAEJ,YAAM,iBACH,mBAAmB,KAAK,gBAAgB,QAAQ,qBAAqB,SAClE,SACA,iBAAiB;AAAA,QACf,CAAC,cAAc,UAAU,KAAK,UAAU,aAAa;AAAA,MACvD;AAEN,UAAI,eAAe;AACjB,eAAO,kBAAkB,cAAc,eAAe,cAAc;AAAA,MACtE;AAAA,IACF;AAEA,aAAS,eAAe,KAAK,MAAM;AACjC,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,IAAI;AAAA,IACvD;AAAA;AAAA;;;AC3SA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBAAgB;AACxB,YAAQ,mBAAmB;AAE3B,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,eAAe;AAEnB,QAAI,UAAU;AAWd,aAAS,cACP,QACA,WACA,gBACA,aACA,cACA;AACA,YAAM,SAAS,oBAAI,IAAI;AACvB;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,oBAAI,IAAI;AAAA,MACV;AACA,aAAO;AAAA,IACT;AAYA,aAAS,iBACP,QACA,WACA,gBACA,YACA,YACA;AACA,YAAM,gBAAgB,oBAAI,IAAI;AAC9B,YAAM,uBAAuB,oBAAI,IAAI;AAErC,iBAAW,QAAQ,YAAY;AAC7B,YAAI,KAAK,cAAc;AACrB;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,KAAK;AAAA,YACL;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,kBACP,QACA,WACA,gBACA,aACA,cACA,QACA,sBACA;AACA,iBAAW,aAAa,aAAa,YAAY;AAC/C,gBAAQ,UAAU,MAAM;AAAA,UACtB,KAAK,OAAO,KAAK,OAAO;AACtB,gBAAI,CAAC,kBAAkB,gBAAgB,SAAS,GAAG;AACjD;AAAA,YACF;AAEA,kBAAM,OAAO,iBAAiB,SAAS;AACvC,kBAAM,YAAY,OAAO,IAAI,IAAI;AAEjC,gBAAI,cAAc,QAAW;AAC3B,wBAAU,KAAK,SAAS;AAAA,YAC1B,OAAO;AACL,qBAAO,IAAI,MAAM,CAAC,SAAS,CAAC;AAAA,YAC9B;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,iBAAiB;AAChC,gBACE,CAAC,kBAAkB,gBAAgB,SAAS,KAC5C,CAAC,2BAA2B,QAAQ,WAAW,WAAW,GAC1D;AACA;AAAA,YACF;AAEA;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,UAAU;AAAA,cACV;AAAA,cACA;AAAA,YACF;AACA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,iBAAiB;AAChC,kBAAM,WAAW,UAAU,KAAK;AAEhC,gBACE,qBAAqB,IAAI,QAAQ,KACjC,CAAC,kBAAkB,gBAAgB,SAAS,GAC5C;AACA;AAAA,YACF;AAEA,iCAAqB,IAAI,QAAQ;AACjC,kBAAM,WAAW,UAAU,QAAQ;AAEnC,gBACE,CAAC,YACD,CAAC,2BAA2B,QAAQ,UAAU,WAAW,GACzD;AACA;AAAA,YACF;AAEA;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,SAAS;AAAA,cACT;AAAA,cACA;AAAA,YACF;AACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAMA,aAAS,kBAAkB,gBAAgB,MAAM;AAC/C,YAAM,QAAQ,GAAG,QAAQ;AAAA,QACvB,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAEA,WAAK,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,QAAQ,MAAM;AAClE,eAAO;AAAA,MACT;AAEA,YAAM,WAAW,GAAG,QAAQ;AAAA,QAC1B,YAAY;AAAA,QACZ;AAAA,QACA;AAAA,MACF;AAEA,WACG,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,QAAQ,OACnE;AACA,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,2BAA2B,QAAQ,UAAU,MAAM;AAC1D,YAAM,oBAAoB,SAAS;AAEnC,UAAI,CAAC,mBAAmB;AACtB,eAAO;AAAA,MACT;AAEA,YAAM,mBAAmB,GAAG,aAAa;AAAA,QACvC;AAAA,QACA;AAAA,MACF;AAEA,UAAI,oBAAoB,MAAM;AAC5B,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,gBAAgB,eAAe,GAAG;AACpD,eAAO,OAAO,UAAU,iBAAiB,IAAI;AAAA,MAC/C;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,iBAAiB,MAAM;AAC9B,aAAO,KAAK,QAAQ,KAAK,MAAM,QAAQ,KAAK,KAAK;AAAA,IACnD;AAAA;AAAA;;;ACpOA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gCAAgC;AACxC,YAAQ,wBAAwB;AAChC,YAAQ,mBAAmB;AAC3B,YAAQ,sBAAsB,QAAQ,uBAAuB;AAC7D,YAAQ,UAAU;AAClB,YAAQ,cAAc;AACtB,YAAQ,cAAc;AAEtB,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,oBAAoB;AAExB,QAAI,gBAAgB;AAEpB,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,QAAQ;AAEZ,QAAI,oBAAoB;AAExB,QAAI,iBAAiB;AAErB,QAAI,gBAAgB;AAEpB,QAAI,gBAAgB;AAEpB,QAAI,OAAO;AAEX,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,YAAY;AAEhB,QAAI,iBAAiB;AAErB,QAAI,UAAU;AAOd,QAAM,oBAAoB,GAAG,SAAS;AAAA,MACpC,CAAC,YAAY,YAAY,gBACtB,GAAG,eAAe;AAAA,QACjB,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAsCA,aAAS,QAAQ,MAAM;AAErB,gBAAU,SAAS,MAChB,GAAG,WAAW;AAAA,QACb;AAAA,QACA;AAAA,MACF;AACF,YAAM,EAAE,QAAQ,UAAAC,WAAU,gBAAgB,UAAU,IAAI;AAExD,oCAA8B,QAAQA,WAAU,cAAc;AAG9D,YAAM,aAAa,sBAAsB,IAAI;AAE7C,UAAI,EAAE,YAAY,aAAa;AAC7B,eAAO;AAAA,UACL,QAAQ;AAAA,QACV;AAAA,MACF;AAYA,UAAI;AACF,cAAM,EAAE,UAAU,IAAI;AACtB,cAAM,SAAS,iBAAiB,YAAY,WAAW,SAAS;AAEhE,aAAK,GAAG,WAAW,WAAW,MAAM,GAAG;AACrC,iBAAO,OAAO;AAAA,YACZ,CAAC,SAAS,cAAc,MAAM,WAAW,MAAM;AAAA,YAC/C,CAAC,UAAU;AACT,yBAAW,OAAO,KAAK,KAAK;AAC5B,qBAAO,cAAc,MAAM,WAAW,MAAM;AAAA,YAC9C;AAAA,UACF;AAAA,QACF;AAEA,eAAO,cAAc,QAAQ,WAAW,MAAM;AAAA,MAChD,SAAS,OAAO;AACd,mBAAW,OAAO,KAAK,KAAK;AAC5B,eAAO,cAAc,MAAM,WAAW,MAAM;AAAA,MAC9C;AAAA,IACF;AAOA,aAAS,YAAY,MAAM;AACzB,YAAM,SAAS,QAAQ,IAAI;AAE3B,WAAK,GAAG,WAAW,WAAW,MAAM,GAAG;AACrC,cAAM,IAAI,MAAM,qDAAqD;AAAA,MACvE;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,cAAc,MAAM,QAAQ;AACnC,aAAO,OAAO,WAAW,IACrB;AAAA,QACE;AAAA,MACF,IACA;AAAA,QACE;AAAA,QACA;AAAA,MACF;AAAA,IACN;AAQA,aAAS,8BAA8B,QAAQA,WAAU,mBAAmB;AAC1E,MAAAA,cAAa,GAAG,WAAW,WAAW,OAAO,wBAAwB;AAErE,OAAC,GAAG,UAAU,mBAAmB,MAAM;AAEvC,2BAAqB,SAClB,GAAG,cAAc,cAAc,iBAAiB,MAChD,GAAG,WAAW;AAAA,QACb;AAAA,QACA;AAAA,MACF;AAAA,IACJ;AAUA,aAAS,sBAAsB,MAAM;AACnC,UAAI,kBAAkB;AAEtB,YAAM;AAAA,QACJ;AAAA,QACA,UAAAA;AAAA,QACA;AAAA,QACA;AAAA,QACA,gBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,IAAI;AACJ,UAAI;AACJ,YAAM,YAAY,uBAAO,OAAO,IAAI;AAEpC,iBAAW,cAAcA,UAAS,aAAa;AAC7C,gBAAQ,WAAW,MAAM;AAAA,UACvB,KAAK,OAAO,KAAK;AACf,gBAAI,iBAAiB,MAAM;AACzB,kBAAI,cAAc,QAAW;AAC3B,uBAAO;AAAA,kBACL,IAAI,cAAc;AAAA,oBAChB;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAEA,0BAAY;AAAA,YACd,aACI,mBAAmB,WAAW,UAAU,QAC1C,qBAAqB,SACjB,SACA,iBAAiB,WAAW,eAChC;AACA,0BAAY;AAAA,YACd;AAEA;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,sBAAU,WAAW,KAAK,KAAK,IAAI;AACnC;AAAA,UAEF;AAAA,QACF;AAAA,MACF;AAEA,UAAI,CAAC,WAAW;AACd,YAAI,iBAAiB,MAAM;AACzB,iBAAO;AAAA,YACL,IAAI,cAAc;AAAA,cAChB,4BAA4B,aAAa;AAAA,YAC3C;AAAA,UACF;AAAA,QACF;AAEA,eAAO,CAAC,IAAI,cAAc,aAAa,4BAA4B,CAAC;AAAA,MACtE;AAIA,YAAM,uBACH,wBAAwB,UAAU,yBAAyB,QAC5D,0BAA0B,SACtB,wBACA,CAAC;AACP,YAAM,yBAAyB,GAAG,QAAQ;AAAA,QACxC;AAAA,QACA;AAAA,QACA,sBAAsB,QAAQ,sBAAsB,SAChD,oBACA,CAAC;AAAA,QACL;AAAA,UACE,WAAW;AAAA,QACb;AAAA,MACF;AAEA,UAAI,sBAAsB,QAAQ;AAChC,eAAO,sBAAsB;AAAA,MAC/B;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,gBAAgB,sBAAsB;AAAA,QACtC,eACE,kBAAkB,QAAQ,kBAAkB,SACxC,gBACA;AAAA,QACN,cACE,iBAAiB,QAAQ,iBAAiB,SACtC,eACA;AAAA,QACN,wBACE,2BAA2B,QAAQ,2BAA2B,SAC1D,yBACA;AAAA,QACN,QAAQ,CAAC;AAAA,MACX;AAAA,IACF;AAKA,aAAS,iBAAiB,YAAY,WAAW,WAAW;AAC1D,YAAM,WAAW,WAAW,OAAO,YAAY,UAAU,SAAS;AAElE,UAAI,YAAY,MAAM;AACpB,cAAM,IAAI,cAAc;AAAA,UACtB,uCAAuC,UAAU,SAAS;AAAA,UAC1D;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,YAAM,cAAc,GAAG,eAAe;AAAA,QACpC,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX;AAAA,QACA,UAAU;AAAA,MACZ;AACA,YAAM,OAAO;AAEb,cAAQ,UAAU,WAAW;AAAA,QAC3B,KAAK,KAAK,kBAAkB;AAC1B,iBAAO,cAAc,YAAY,UAAU,WAAW,MAAM,UAAU;AAAA,QAExE,KAAK,KAAK,kBAAkB;AAC1B,iBAAO;AAAA,YACL;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QAEF,KAAK,KAAK,kBAAkB;AAG1B,iBAAO,cAAc,YAAY,UAAU,WAAW,MAAM,UAAU;AAAA,MAC1E;AAAA,IACF;AAMA,aAAS,sBACP,YACA,YACA,aACA,MACA,QACA;AACA,cAAQ,GAAG,eAAe;AAAA,QACxB,OAAO,QAAQ;AAAA,QACf,CAAC,SAAS,CAAC,cAAc,UAAU,MAAM;AACvC,gBAAM,aAAa,GAAG,MAAM,SAAS,MAAM,cAAc,WAAW,IAAI;AACxE,gBAAM,SAAS;AAAA,YACb;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAEA,cAAI,WAAW,QAAW;AACxB,mBAAO;AAAA,UACT;AAEA,eAAK,GAAG,WAAW,WAAW,MAAM,GAAG;AACrC,mBAAO,OAAO,KAAK,CAAC,mBAAmB;AACrC,sBAAQ,YAAY,IAAI;AACxB,qBAAO;AAAA,YACT,CAAC;AAAA,UACH;AAEA,kBAAQ,YAAY,IAAI;AACxB,iBAAO;AAAA,QACT;AAAA,QACA,uBAAO,OAAO,IAAI;AAAA,MACpB;AAAA,IACF;AAMA,aAAS,cAAc,YAAY,YAAY,aAAa,MAAM,QAAQ;AACxE,YAAM,UAAU,uBAAO,OAAO,IAAI;AAClC,UAAI,kBAAkB;AAEtB,UAAI;AACF,mBAAW,CAAC,cAAc,UAAU,KAAK,OAAO,QAAQ,GAAG;AACzD,gBAAM,aAAa,GAAG,MAAM,SAAS,MAAM,cAAc,WAAW,IAAI;AACxE,gBAAM,SAAS;AAAA,YACb;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAEA,cAAI,WAAW,QAAW;AACxB,oBAAQ,YAAY,IAAI;AAExB,iBAAK,GAAG,WAAW,WAAW,MAAM,GAAG;AACrC,gCAAkB;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAAA,MACF,SAAS,OAAO;AACd,YAAI,iBAAiB;AAEnB,kBAAQ,GAAG,kBAAkB,kBAAkB,OAAO,EAAE,QAAQ,MAAM;AACpE,kBAAM;AAAA,UACR,CAAC;AAAA,QACH;AAEA,cAAM;AAAA,MACR;AAEA,UAAI,CAAC,iBAAiB;AACpB,eAAO;AAAA,MACT;AAIA,cAAQ,GAAG,kBAAkB,kBAAkB,OAAO;AAAA,IACxD;AAQA,aAAS,aAAa,YAAY,YAAY,QAAQ,YAAY,MAAM;AACtE,UAAI;AAEJ,YAAM,WAAW,YAAY,WAAW,QAAQ,YAAY,WAAW,CAAC,CAAC;AAEzE,UAAI,CAAC,UAAU;AACb;AAAA,MACF;AAEA,YAAM,aAAa,SAAS;AAC5B,YAAM,aACH,oBAAoB,SAAS,aAAa,QAC3C,sBAAsB,SAClB,oBACA,WAAW;AACjB,YAAM,OAAO;AAAA,QACX;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI;AAIF,cAAM,QAAQ,GAAG,QAAQ;AAAA,UACvB;AAAA,UACA,WAAW,CAAC;AAAA,UACZ,WAAW;AAAA,QACb;AAIA,cAAM,eAAe,WAAW;AAChC,cAAM,SAAS,UAAU,QAAQ,MAAM,cAAc,IAAI;AACzD,YAAI;AAEJ,aAAK,GAAG,WAAW,WAAW,MAAM,GAAG;AACrC,sBAAY,OAAO;AAAA,YAAK,CAAC,aACvB,cAAc,YAAY,YAAY,YAAY,MAAM,MAAM,QAAQ;AAAA,UACxE;AAAA,QACF,OAAO;AACL,sBAAY;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAEA,aAAK,GAAG,WAAW,WAAW,SAAS,GAAG;AAGxC,iBAAO,UAAU,KAAK,QAAW,CAAC,aAAa;AAC7C,kBAAM,SAAS,GAAG,cAAc;AAAA,cAC9B;AAAA,cACA;AAAA,eACC,GAAG,MAAM,aAAa,IAAI;AAAA,YAC7B;AACA,mBAAO,iBAAiB,OAAO,YAAY,UAAU;AAAA,UACvD,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT,SAAS,UAAU;AACjB,cAAM,SAAS,GAAG,cAAc;AAAA,UAC9B;AAAA,UACA;AAAA,WACC,GAAG,MAAM,aAAa,IAAI;AAAA,QAC7B;AACA,eAAO,iBAAiB,OAAO,YAAY,UAAU;AAAA,MACvD;AAAA,IACF;AAKA,aAAS,iBAAiB,YAAY,UAAU,YAAY,YAAY,MAAM;AAG5E,aAAO;AAAA,QACL,WAAW,SAAS;AAAA,QACpB;AAAA,QACA,YAAY,SAAS;AAAA,QACrB;AAAA,QACA;AAAA,QACA,QAAQ,WAAW;AAAA,QACnB,WAAW,WAAW;AAAA,QACtB,WAAW,WAAW;AAAA,QACtB,WAAW,WAAW;AAAA,QACtB,gBAAgB,WAAW;AAAA,MAC7B;AAAA,IACF;AAEA,aAAS,iBAAiB,OAAO,YAAY,YAAY;AAGvD,WAAK,GAAG,YAAY,eAAe,UAAU,GAAG;AAC9C,cAAM;AAAA,MACR;AAGA,iBAAW,OAAO,KAAK,KAAK;AAC5B,aAAO;AAAA,IACT;AAuBA,aAAS,cAAc,YAAY,YAAY,YAAY,MAAM,MAAM,QAAQ;AAE7E,UAAI,kBAAkB,OAAO;AAC3B,cAAM;AAAA,MACR;AAGA,WAAK,GAAG,YAAY,eAAe,UAAU,GAAG;AAC9C,cAAM,YAAY;AAAA,UAChB;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAEA,YAAI,cAAc,MAAM;AACtB,gBAAM,IAAI;AAAA,YACR,6CAA6C,KAAK,WAAW,IAAI,IAAI,KAAK,SAAS;AAAA,UACrF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,UAAU,GAAG;AAC3C,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAGA,WAAK,GAAG,YAAY,YAAY,UAAU,GAAG;AAC3C,eAAO,kBAAkB,YAAY,MAAM;AAAA,MAC7C;AAGA,WAAK,GAAG,YAAY,gBAAgB,UAAU,GAAG;AAC/C,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,WAAK,GAAG,YAAY,cAAc,UAAU,GAAG;AAC7C,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,uDACG,GAAG,SAAS,SAAS,UAAU;AAAA,MACpC;AAAA,IACJ;AAMA,aAAS,kBACP,YACA,YACA,YACA,MACA,MACA,QACA;AACA,UAAI,EAAE,GAAG,kBAAkB,kBAAkB,MAAM,GAAG;AACpD,cAAM,IAAI,cAAc;AAAA,UACtB,sDAAsD,KAAK,WAAW,IAAI,IAAI,KAAK,SAAS;AAAA,QAC9F;AAAA,MACF;AAGA,YAAM,WAAW,WAAW;AAC5B,UAAI,kBAAkB;AACtB,YAAM,mBAAmB,MAAM,KAAK,QAAQ,CAAC,MAAM,UAAU;AAG3D,cAAM,YAAY,GAAG,MAAM,SAAS,MAAM,OAAO,MAAS;AAE1D,YAAI;AACF,cAAI;AAEJ,eAAK,GAAG,WAAW,WAAW,IAAI,GAAG;AACnC,4BAAgB,KAAK;AAAA,cAAK,CAAC,aACzB;AAAA,gBACE;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,4BAAgB;AAAA,cACd;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAEA,eAAK,GAAG,WAAW,WAAW,aAAa,GAAG;AAC5C,8BAAkB;AAGlB,mBAAO,cAAc,KAAK,QAAW,CAAC,aAAa;AACjD,oBAAM,SAAS,GAAG,cAAc;AAAA,gBAC9B;AAAA,gBACA;AAAA,iBACC,GAAG,MAAM,aAAa,QAAQ;AAAA,cACjC;AACA,qBAAO,iBAAiB,OAAO,UAAU,UAAU;AAAA,YACrD,CAAC;AAAA,UACH;AAEA,iBAAO;AAAA,QACT,SAAS,UAAU;AACjB,gBAAM,SAAS,GAAG,cAAc;AAAA,YAC9B;AAAA,YACA;AAAA,aACC,GAAG,MAAM,aAAa,QAAQ;AAAA,UACjC;AACA,iBAAO,iBAAiB,OAAO,UAAU,UAAU;AAAA,QACrD;AAAA,MACF,CAAC;AACD,aAAO,kBAAkB,QAAQ,IAAI,gBAAgB,IAAI;AAAA,IAC3D;AAMA,aAAS,kBAAkB,YAAY,QAAQ;AAC7C,YAAM,mBAAmB,WAAW,UAAU,MAAM;AAEpD,UAAI,oBAAoB,MAAM;AAC5B,cAAM,IAAI;AAAA,UACR,eAAe,GAAG,SAAS,SAAS,UAAU,CAAC,eAAe,GAC9D,SAAS,SAAS,MAAM,CAAC,gDACkB,GAAG,SAAS;AAAA,YACnD;AAAA,UACF,CAAC;AAAA,QACL;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,sBACP,YACA,YACA,YACA,MACA,MACA,QACA;AACA,UAAI;AAEJ,YAAM,iBACH,wBAAwB,WAAW,iBAAiB,QACrD,0BAA0B,SACtB,wBACA,WAAW;AACjB,YAAM,eAAe,WAAW;AAChC,YAAM,cAAc,cAAc,QAAQ,cAAc,MAAM,UAAU;AAExE,WAAK,GAAG,WAAW,WAAW,WAAW,GAAG;AAC1C,eAAO,YAAY;AAAA,UAAK,CAAC,wBACvB;AAAA,YACE;AAAA,YACA;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAEA,aAAS,uBACP,iBACA,YACA,YACA,YACA,MACA,QACA;AACA,UAAI,mBAAmB,MAAM;AAC3B,cAAM,IAAI,cAAc;AAAA,UACtB,kBAAkB,WAAW,IAAI,0DAA0D,KAAK,WAAW,IAAI,IAAI,KAAK,SAAS,kBAAkB,WAAW,IAAI;AAAA,UAClK;AAAA,QACF;AAAA,MACF;AAGA,WAAK,GAAG,YAAY,cAAc,eAAe,GAAG;AAClD,cAAM,IAAI,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAEA,UAAI,OAAO,oBAAoB,UAAU;AACvC,cAAM,IAAI,cAAc;AAAA,UACtB,kBAAkB,WAAW,IAAI,0DAA0D,KAAK,WAAW,IAAI,IAAI,KAAK,SAAS,iBACrH,GAAG,SAAS,SAAS,MAAM,CAAC,gBAAgB,GACtD,SAAS,SAAS,eAAe,CAAC;AAAA,QACtC;AAAA,MACF;AAEA,YAAM,cAAc,WAAW,OAAO,QAAQ,eAAe;AAE7D,UAAI,eAAe,MAAM;AACvB,cAAM,IAAI,cAAc;AAAA,UACtB,kBAAkB,WAAW,IAAI,6BAA6B,eAAe;AAAA,UAC7E;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,UAAI,EAAE,GAAG,YAAY,cAAc,WAAW,GAAG;AAC/C,cAAM,IAAI,cAAc;AAAA,UACtB,kBAAkB,WAAW,IAAI,wCAAwC,eAAe;AAAA,UACxF;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,UAAI,CAAC,WAAW,OAAO,UAAU,YAAY,WAAW,GAAG;AACzD,cAAM,IAAI,cAAc;AAAA,UACtB,wBAAwB,YAAY,IAAI,iCAAiC,WAAW,IAAI;AAAA,UACxF;AAAA,YACE,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,oBACP,YACA,YACA,YACA,MACA,MACA,QACA;AAEA,YAAM,gBAAgB,iBAAiB,YAAY,YAAY,UAAU;AAIzE,UAAI,WAAW,UAAU;AACvB,cAAM,WAAW,WAAW,SAAS,QAAQ,WAAW,cAAc,IAAI;AAE1E,aAAK,GAAG,WAAW,WAAW,QAAQ,GAAG;AACvC,iBAAO,SAAS,KAAK,CAAC,qBAAqB;AACzC,gBAAI,CAAC,kBAAkB;AACrB,oBAAM,uBAAuB,YAAY,QAAQ,UAAU;AAAA,YAC7D;AAEA,mBAAO;AAAA,cACL;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF,CAAC;AAAA,QACH;AAEA,YAAI,CAAC,UAAU;AACb,gBAAM,uBAAuB,YAAY,QAAQ,UAAU;AAAA,QAC7D;AAAA,MACF;AAEA,aAAO,cAAc,YAAY,YAAY,QAAQ,MAAM,aAAa;AAAA,IAC1E;AAEA,aAAS,uBAAuB,YAAY,QAAQ,YAAY;AAC9D,aAAO,IAAI,cAAc;AAAA,QACvB,2BAA2B,WAAW,IAAI,eAAe,GACzD,SAAS,SAAS,MAAM,CAAC;AAAA,QACzB;AAAA,UACE,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAYA,QAAM,sBAAsB,SAAU,OAAO,cAAc,MAAM,cAAc;AAE7E,WACG,GAAG,cAAc,cAAc,KAAK,KACrC,OAAO,MAAM,eAAe,UAC5B;AACA,eAAO,MAAM;AAAA,MACf;AAEA,YAAM,gBAAgB,KAAK,OAAO,iBAAiB,YAAY;AAC/D,YAAM,0BAA0B,CAAC;AAEjC,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C,cAAM,OAAO,cAAc,CAAC;AAE5B,YAAI,KAAK,UAAU;AACjB,gBAAM,iBAAiB,KAAK,SAAS,OAAO,cAAc,IAAI;AAE9D,eAAK,GAAG,WAAW,WAAW,cAAc,GAAG;AAC7C,oCAAwB,CAAC,IAAI;AAAA,UAC/B,WAAW,gBAAgB;AACzB,mBAAO,KAAK;AAAA,UACd;AAAA,QACF;AAAA,MACF;AAEA,UAAI,wBAAwB,QAAQ;AAClC,eAAO,QAAQ,IAAI,uBAAuB,EAAE,KAAK,CAAC,oBAAoB;AACpE,mBAAS,IAAI,GAAG,IAAI,gBAAgB,QAAQ,KAAK;AAC/C,gBAAI,gBAAgB,CAAC,GAAG;AACtB,qBAAO,cAAc,CAAC,EAAE;AAAA,YAC1B;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAQA,YAAQ,sBAAsB;AAE9B,QAAM,uBAAuB,SAAU,QAAQ,MAAM,cAAc,MAAM;AAEvE,WAAK,GAAG,cAAc,cAAc,MAAM,KAAK,OAAO,WAAW,YAAY;AAC3E,cAAM,WAAW,OAAO,KAAK,SAAS;AAEtC,YAAI,OAAO,aAAa,YAAY;AAClC,iBAAO,OAAO,KAAK,SAAS,EAAE,MAAM,cAAc,IAAI;AAAA,QACxD;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAaA,YAAQ,uBAAuB;AAE/B,aAAS,YAAY,QAAQ,YAAY,WAAW;AAClD,YAAM,YAAY,UAAU,KAAK;AAEjC,UACE,cAAc,eAAe,mBAAmB,QAChD,OAAO,aAAa,MAAM,YAC1B;AACA,eAAO,eAAe;AAAA,MACxB,WACE,cAAc,eAAe,iBAAiB,QAC9C,OAAO,aAAa,MAAM,YAC1B;AACA,eAAO,eAAe;AAAA,MACxB,WAAW,cAAc,eAAe,qBAAqB,MAAM;AACjE,eAAO,eAAe;AAAA,MACxB;AAEA,aAAO,WAAW,UAAU,EAAE,SAAS;AAAA,IACzC;AAAA;AAAA;;;AC5gCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,aAAa;AAEjB,QAAI,UAAU;AAEd,QAAI,WAAW;AAEf,QAAI,yBAAyB;AAW7B,aAAS,wBAAwB,QAAQ,SAAS;AAChD,YAAM,sBAAsB;AAAA,QAC1B,gBAAgB;AAAA,QAChB,uBAAuB;AAAA,QACvB,mBAAmB;AAAA,QACnB,uBAAuB;AAAA,QACvB,OAAO;AAAA,QACP,GAAG;AAAA,MACL;AACA,YAAMC,aAAY,GAAG,QAAQ;AAAA,SAC1B,GAAG,uBAAuB,uBAAuB,mBAAmB;AAAA,MACvE;AACA,YAAM,UAAU,GAAG,SAAS,aAAa;AAAA,QACvC;AAAA,QACA,UAAAA;AAAA,MACF,CAAC;AACD,MAAC,CAAC,OAAO,UAAU,OAAO,SAAU,GAAG,WAAW,WAAW,KAAK;AAClE,aAAO,OAAO;AAAA,IAChB;AAAA;AAAA;;;AC1CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBAAoB;AAE5B,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,aAAa;AAEjB,QAAI,UAAU;AAEd,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,WAAW;AAEf,QAAI,UAAU;AAEd,QAAI,gBAAgB;AAcpB,aAAS,kBAAkB,eAAe,SAAS;AACjD,OAAE,GAAG,cAAc,cAAc,aAAa,MAC3C,GAAG,cAAc,cAAc,cAAc,QAAQ,MACrD,GAAG,WAAW;AAAA,QACb;AAAA,QACA,8JAA8J,GAC9J,SAAS,SAAS,aAAa,CAAC;AAAA,MAClC;AAEF,YAAM,sBAAsB,cAAc;AAE1C,YAAM,WAAW,GAAG,WAAW;AAAA,QAC7B,oBAAoB;AAAA,QACpB,CAAC,sBAAsB,kBAAkB;AAAA,QACzC,CAAC,sBAAsB,UAAU,iBAAiB;AAAA,MACpD;AAEA,iBAAW,WAAW;AAAA,QACpB,GAAG,SAAS;AAAA,QACZ,GAAG,eAAe;AAAA,MACpB,GAAG;AACD,YAAI,QAAQ,QAAQ,IAAI,GAAG;AACzB,kBAAQ,QAAQ,IAAI,IAAI;AAAA,QAC1B;AAAA,MACF;AAEA,YAAM,YAAY,oBAAoB,YAClC,cAAc,oBAAoB,SAAS,IAC3C;AACJ,YAAM,eAAe,oBAAoB,eACrC,cAAc,oBAAoB,YAAY,IAC9C;AACJ,YAAM,mBAAmB,oBAAoB,mBACzC,cAAc,oBAAoB,gBAAgB,IAClD;AAGJ,YAAM,aAAa,oBAAoB,aACnC,oBAAoB,WAAW,IAAI,cAAc,IACjD,CAAC;AAEL,aAAO,IAAI,QAAQ,cAAc;AAAA,QAC/B,aAAa,oBAAoB;AAAA,QACjC,OAAO;AAAA,QACP,UAAU;AAAA,QACV,cAAc;AAAA,QACd,OAAO,OAAO,OAAO,OAAO;AAAA,QAC5B;AAAA,QACA,aACE,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA,MAC9D,CAAC;AAGD,eAASC,SAAQ,SAAS;AACxB,YAAI,QAAQ,SAAS,eAAe,SAAS,MAAM;AACjD,gBAAM,UAAU,QAAQ;AAExB,cAAI,CAAC,SAAS;AACZ,kBAAM,IAAI,MAAM,iDAAiD;AAAA,UACnE;AAEA,iBAAO,IAAI,YAAY,YAAYA,SAAQ,OAAO,CAAC;AAAA,QACrD;AAEA,YAAI,QAAQ,SAAS,eAAe,SAAS,UAAU;AACrD,gBAAM,cAAc,QAAQ;AAE5B,cAAI,CAAC,aAAa;AAChB,kBAAM,IAAI,MAAM,iDAAiD;AAAA,UACnE;AAEA,gBAAM,eAAeA,SAAQ,WAAW;AACxC,iBAAO,IAAI,YAAY;AAAA,aACpB,GAAG,YAAY,oBAAoB,YAAY;AAAA,UAClD;AAAA,QACF;AAEA,eAAO,aAAa,OAAO;AAAA,MAC7B;AAEA,eAAS,aAAa,SAAS;AAC7B,cAAM,WAAW,QAAQ;AAEzB,YAAI,CAAC,UAAU;AACb,gBAAM,IAAI;AAAA,YACR,4BAA4B,GAAG,SAAS,SAAS,OAAO,CAAC;AAAA,UAC3D;AAAA,QACF;AAEA,cAAM,OAAO,QAAQ,QAAQ;AAE7B,YAAI,CAAC,MAAM;AACT,gBAAM,IAAI;AAAA,YACR,+CAA+C,QAAQ;AAAA,UACzD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,cAAc,SAAS;AAC9B,gBAAQ,GAAG,YAAY,kBAAkB,aAAa,OAAO,CAAC;AAAA,MAChE;AAEA,eAAS,iBAAiB,SAAS;AACjC,gBAAQ,GAAG,YAAY,qBAAqB,aAAa,OAAO,CAAC;AAAA,MACnE;AAGA,eAAS,UAAU,MAAM;AAEvB,YAAI,QAAQ,QAAQ,KAAK,QAAQ,QAAQ,KAAK,QAAQ,MAAM;AAG1D,kBAAQ,KAAK,MAAM;AAAA,YACjB,KAAK,eAAe,SAAS;AAC3B,qBAAO,eAAe,IAAI;AAAA,YAE5B,KAAK,eAAe,SAAS;AAC3B,qBAAO,eAAe,IAAI;AAAA,YAE5B,KAAK,eAAe,SAAS;AAC3B,qBAAO,kBAAkB,IAAI;AAAA,YAE/B,KAAK,eAAe,SAAS;AAC3B,qBAAO,cAAc,IAAI;AAAA,YAE3B,KAAK,eAAe,SAAS;AAC3B,qBAAO,aAAa,IAAI;AAAA,YAE1B,KAAK,eAAe,SAAS;AAC3B,qBAAO,oBAAoB,IAAI;AAAA,UACnC;AAAA,QACF;AAEA,cAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,cAAM,IAAI;AAAA,UACR,iIAAiI,OAAO;AAAA,QAC1I;AAAA,MACF;AAEA,eAAS,eAAe,qBAAqB;AAC3C,eAAO,IAAI,YAAY,kBAAkB;AAAA,UACvC,MAAM,oBAAoB;AAAA,UAC1B,aAAa,oBAAoB;AAAA,UACjC,gBAAgB,oBAAoB;AAAA,QACtC,CAAC;AAAA,MACH;AAEA,eAAS,yBAAyB,2BAA2B;AAG3D,YACE,0BAA0B,eAAe,QACzC,0BAA0B,SAAS,eAAe,SAAS,WAC3D;AACA,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,CAAC,0BAA0B,YAAY;AACzC,gBAAM,gCAAgC,GAAG,SAAS;AAAA,YAChD;AAAA,UACF;AACA,gBAAM,IAAI;AAAA,YACR,4CAA4C,4BAA4B;AAAA,UAC1E;AAAA,QACF;AAEA,eAAO,0BAA0B,WAAW,IAAI,gBAAgB;AAAA,MAClE;AAEA,eAAS,eAAe,qBAAqB;AAC3C,eAAO,IAAI,YAAY,kBAAkB;AAAA,UACvC,MAAM,oBAAoB;AAAA,UAC1B,aAAa,oBAAoB;AAAA,UACjC,YAAY,MAAM,yBAAyB,mBAAmB;AAAA,UAC9D,QAAQ,MAAM,iBAAiB,mBAAmB;AAAA,QACpD,CAAC;AAAA,MACH;AAEA,eAAS,kBAAkB,wBAAwB;AACjD,eAAO,IAAI,YAAY,qBAAqB;AAAA,UAC1C,MAAM,uBAAuB;AAAA,UAC7B,aAAa,uBAAuB;AAAA,UACpC,YAAY,MAAM,yBAAyB,sBAAsB;AAAA,UACjE,QAAQ,MAAM,iBAAiB,sBAAsB;AAAA,QACvD,CAAC;AAAA,MACH;AAEA,eAAS,cAAc,oBAAoB;AACzC,YAAI,CAAC,mBAAmB,eAAe;AACrC,gBAAM,yBAAyB,GAAG,SAAS,SAAS,kBAAkB;AACtE,gBAAM,IAAI;AAAA,YACR,+CAA+C,qBAAqB;AAAA,UACtE;AAAA,QACF;AAEA,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,MAAM,mBAAmB;AAAA,UACzB,aAAa,mBAAmB;AAAA,UAChC,OAAO,MAAM,mBAAmB,cAAc,IAAI,aAAa;AAAA,QACjE,CAAC;AAAA,MACH;AAEA,eAAS,aAAa,mBAAmB;AACvC,YAAI,CAAC,kBAAkB,YAAY;AACjC,gBAAM,wBAAwB,GAAG,SAAS,SAAS,iBAAiB;AACpE,gBAAM,IAAI;AAAA,YACR,4CAA4C,oBAAoB;AAAA,UAClE;AAAA,QACF;AAEA,eAAO,IAAI,YAAY,gBAAgB;AAAA,UACrC,MAAM,kBAAkB;AAAA,UACxB,aAAa,kBAAkB;AAAA,UAC/B,SAAS,GAAG,WAAW;AAAA,YACrB,kBAAkB;AAAA,YAClB,CAAC,uBAAuB,mBAAmB;AAAA,YAC3C,CAAC,wBAAwB;AAAA,cACvB,aAAa,mBAAmB;AAAA,cAChC,mBAAmB,mBAAmB;AAAA,YACxC;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAEA,eAAS,oBAAoB,0BAA0B;AACrD,YAAI,CAAC,yBAAyB,aAAa;AACzC,gBAAM,+BAA+B,GAAG,SAAS;AAAA,YAC/C;AAAA,UACF;AACA,gBAAM,IAAI;AAAA,YACR,6CAA6C,2BAA2B;AAAA,UAC1E;AAAA,QACF;AAEA,eAAO,IAAI,YAAY,uBAAuB;AAAA,UAC5C,MAAM,yBAAyB;AAAA,UAC/B,aAAa,yBAAyB;AAAA,UACtC,QAAQ,MAAM,sBAAsB,yBAAyB,WAAW;AAAA,UACxE,SAAS,yBAAyB;AAAA,QACpC,CAAC;AAAA,MACH;AAEA,eAAS,iBAAiB,mBAAmB;AAC3C,YAAI,CAAC,kBAAkB,QAAQ;AAC7B,gBAAM,IAAI;AAAA,YACR,yCAAyC,GAAG,SAAS;AAAA,cACnD;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,gBAAQ,GAAG,WAAW;AAAA,UACpB,kBAAkB;AAAA,UAClB,CAAC,uBAAuB,mBAAmB;AAAA,UAC3C;AAAA,QACF;AAAA,MACF;AAEA,eAAS,WAAW,oBAAoB;AACtC,cAAM,OAAOA,SAAQ,mBAAmB,IAAI;AAE5C,YAAI,EAAE,GAAG,YAAY,cAAc,IAAI,GAAG;AACxC,gBAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,gBAAM,IAAI;AAAA,YACR,oEAAoE,OAAO;AAAA,UAC7E;AAAA,QACF;AAEA,YAAI,CAAC,mBAAmB,MAAM;AAC5B,gBAAM,yBAAyB,GAAG,SAAS,SAAS,kBAAkB;AACtE,gBAAM,IAAI;AAAA,YACR,4CAA4C,qBAAqB;AAAA,UACnE;AAAA,QACF;AAEA,eAAO;AAAA,UACL,aAAa,mBAAmB;AAAA,UAChC,mBAAmB,mBAAmB;AAAA,UACtC;AAAA,UACA,MAAM,sBAAsB,mBAAmB,IAAI;AAAA,QACrD;AAAA,MACF;AAEA,eAAS,sBAAsB,0BAA0B;AACvD,gBAAQ,GAAG,WAAW;AAAA,UACpB;AAAA,UACA,CAAC,eAAe,WAAW;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AAEA,eAAS,gBAAgB,yBAAyB;AAChD,cAAM,OAAOA,SAAQ,wBAAwB,IAAI;AAEjD,YAAI,EAAE,GAAG,YAAY,aAAa,IAAI,GAAG;AACvC,gBAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,gBAAM,IAAI;AAAA,YACR,sEAAsE,OAAO;AAAA,UAC/E;AAAA,QACF;AAEA,cAAM,eACJ,wBAAwB,gBAAgB,QACnC,GAAG,cAAc;AAAA,WACf,GAAG,QAAQ,YAAY,wBAAwB,YAAY;AAAA,UAC5D;AAAA,QACF,IACA;AACN,eAAO;AAAA,UACL,aAAa,wBAAwB;AAAA,UACrC;AAAA,UACA;AAAA,UACA,mBAAmB,wBAAwB;AAAA,QAC7C;AAAA,MACF;AAEA,eAAS,eAAe,wBAAwB;AAC9C,YAAI,CAAC,uBAAuB,MAAM;AAChC,gBAAM,6BAA6B,GAAG,SAAS;AAAA,YAC7C;AAAA,UACF;AACA,gBAAM,IAAI;AAAA,YACR,gDAAgD,yBAAyB;AAAA,UAC3E;AAAA,QACF;AAEA,YAAI,CAAC,uBAAuB,WAAW;AACrC,gBAAM,6BAA6B,GAAG,SAAS;AAAA,YAC7C;AAAA,UACF;AACA,gBAAM,IAAI;AAAA,YACR,qDAAqD,yBAAyB;AAAA,UAChF;AAAA,QACF;AAEA,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,MAAM,uBAAuB;AAAA,UAC7B,aAAa,uBAAuB;AAAA,UACpC,cAAc,uBAAuB;AAAA,UACrC,WAAW,uBAAuB,UAAU,MAAM;AAAA,UAClD,MAAM,sBAAsB,uBAAuB,IAAI;AAAA,QACzD,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;AClYA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,WAAW;AACnB,YAAQ,oBAAoB;AAE5B,QAAI,OAAO;AAEX,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,eAAe;AAOnB,QAAM,WAAN,MAAe;AAAA,MACb,YACE,QAKA,aAEA,eACA;AACA,aAAK,UAAU;AACf,aAAK,aAAa,CAAC;AACnB,aAAK,mBAAmB,CAAC;AACzB,aAAK,kBAAkB,CAAC;AACxB,aAAK,iBAAiB,CAAC;AACvB,aAAK,qBAAqB,CAAC;AAC3B,aAAK,aAAa;AAClB,aAAK,YAAY;AACjB,aAAK,aAAa;AAClB,aAAK,eACH,kBAAkB,QAAQ,kBAAkB,SACxC,gBACA;AAEN,YAAI,aAAa;AACf,eAAK,GAAG,YAAY,aAAa,WAAW,GAAG;AAC7C,iBAAK,gBAAgB,KAAK,WAAW;AAAA,UACvC;AAEA,eAAK,GAAG,YAAY,iBAAiB,WAAW,GAAG;AACjD,iBAAK,iBAAiB,KAAK,WAAW;AAAA,UACxC;AAEA,eAAK,GAAG,YAAY,cAAc,WAAW,GAAG;AAC9C,iBAAK,WAAW,KAAK,WAAW;AAAA,UAClC;AAAA,QACF;AAAA,MACF;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,UAAU;AACR,YAAI,KAAK,WAAW,SAAS,GAAG;AAC9B,iBAAO,KAAK,WAAW,KAAK,WAAW,SAAS,CAAC;AAAA,QACnD;AAAA,MACF;AAAA,MAEA,gBAAgB;AACd,YAAI,KAAK,iBAAiB,SAAS,GAAG;AACpC,iBAAO,KAAK,iBAAiB,KAAK,iBAAiB,SAAS,CAAC;AAAA,QAC/D;AAAA,MACF;AAAA,MAEA,eAAe;AACb,YAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,iBAAO,KAAK,gBAAgB,KAAK,gBAAgB,SAAS,CAAC;AAAA,QAC7D;AAAA,MACF;AAAA,MAEA,qBAAqB;AACnB,YAAI,KAAK,gBAAgB,SAAS,GAAG;AACnC,iBAAO,KAAK,gBAAgB,KAAK,gBAAgB,SAAS,CAAC;AAAA,QAC7D;AAAA,MACF;AAAA,MAEA,cAAc;AACZ,YAAI,KAAK,eAAe,SAAS,GAAG;AAClC,iBAAO,KAAK,eAAe,KAAK,eAAe,SAAS,CAAC;AAAA,QAC3D;AAAA,MACF;AAAA,MAEA,kBAAkB;AAChB,YAAI,KAAK,mBAAmB,SAAS,GAAG;AACtC,iBAAO,KAAK,mBAAmB,KAAK,mBAAmB,SAAS,CAAC;AAAA,QACnE;AAAA,MACF;AAAA,MAEA,eAAe;AACb,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,cAAc;AACZ,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,eAAe;AACb,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,MAAM,MAAM;AACV,cAAM,SAAS,KAAK;AAKpB,gBAAQ,KAAK,MAAM;AAAA,UACjB,KAAK,OAAO,KAAK,eAAe;AAC9B,kBAAM,aAAa,GAAG,YAAY,cAAc,KAAK,QAAQ,CAAC;AAE9D,iBAAK,iBAAiB;AAAA,eACnB,GAAG,YAAY,iBAAiB,SAAS,IAAI,YAAY;AAAA,YAC5D;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,OAAO;AACtB,kBAAM,aAAa,KAAK,cAAc;AACtC,gBAAI;AACJ,gBAAI;AAEJ,gBAAI,YAAY;AACd,yBAAW,KAAK,aAAa,QAAQ,YAAY,IAAI;AAErD,kBAAI,UAAU;AACZ,4BAAY,SAAS;AAAA,cACvB;AAAA,YACF;AAEA,iBAAK,eAAe,KAAK,QAAQ;AAEjC,iBAAK,WAAW;AAAA,eACb,GAAG,YAAY,cAAc,SAAS,IAAI,YAAY;AAAA,YACzD;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK;AACf,iBAAK,aAAa,OAAO,aAAa,KAAK,KAAK,KAAK;AACrD;AAAA,UAEF,KAAK,OAAO,KAAK,sBAAsB;AACrC,kBAAM,WAAW,OAAO,YAAY,KAAK,SAAS;AAElD,iBAAK,WAAW;AAAA,eACb,GAAG,YAAY,cAAc,QAAQ,IAAI,WAAW;AAAA,YACvD;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK;AAAA,UACjB,KAAK,OAAO,KAAK,qBAAqB;AACpC,kBAAM,mBAAmB,KAAK;AAC9B,kBAAM,aAAa,oBACd,GAAG,aAAa,aAAa,QAAQ,gBAAgB,KACrD,GAAG,YAAY,cAAc,KAAK,QAAQ,CAAC;AAEhD,iBAAK,WAAW;AAAA,eACb,GAAG,YAAY,cAAc,UAAU,IAAI,aAAa;AAAA,YAC3D;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,qBAAqB;AACpC,kBAAM,aAAa,GAAG,aAAa,aAAa,QAAQ,KAAK,IAAI;AAEjE,iBAAK,gBAAgB;AAAA,eAClB,GAAG,YAAY,aAAa,SAAS,IAAI,YAAY;AAAA,YACxD;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,UAAU;AACzB,gBAAI;AAEJ,gBAAI;AACJ,gBAAI;AACJ,kBAAM,oBACH,qBAAqB,KAAK,aAAa,OAAO,QAC/C,uBAAuB,SACnB,qBACA,KAAK,YAAY;AAEvB,gBAAI,kBAAkB;AACpB,uBAAS,iBAAiB,KAAK;AAAA,gBAC7B,CAAC,QAAQ,IAAI,SAAS,KAAK,KAAK;AAAA,cAClC;AAEA,kBAAI,QAAQ;AACV,0BAAU,OAAO;AAAA,cACnB;AAAA,YACF;AAEA,iBAAK,YAAY;AAEjB,iBAAK,mBAAmB,KAAK,SAAS,OAAO,eAAe,MAAS;AAErE,iBAAK,gBAAgB;AAAA,eAClB,GAAG,YAAY,aAAa,OAAO,IAAI,UAAU;AAAA,YACpD;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,MAAM;AACrB,kBAAM,YAAY,GAAG,YAAY,iBAAiB,KAAK,aAAa,CAAC;AACrE,kBAAM,YAAY,GAAG,YAAY,YAAY,QAAQ,IACjD,SAAS,SACT;AAEJ,iBAAK,mBAAmB,KAAK,MAAS;AAEtC,iBAAK,gBAAgB;AAAA,eAClB,GAAG,YAAY,aAAa,QAAQ,IAAI,WAAW;AAAA,YACtD;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,cAAc;AAC7B,kBAAM,cAAc,GAAG,YAAY,cAAc,KAAK,aAAa,CAAC;AACpE,gBAAI;AACJ,gBAAI;AAEJ,iBAAK,GAAG,YAAY,mBAAmB,UAAU,GAAG;AAClD,2BAAa,WAAW,UAAU,EAAE,KAAK,KAAK,KAAK;AAEnD,kBAAI,YAAY;AACd,iCAAiB,WAAW;AAAA,cAC9B;AAAA,YACF;AAEA,iBAAK,mBAAmB;AAAA,cACtB,aAAa,WAAW,eAAe;AAAA,YACzC;AAEA,iBAAK,gBAAgB;AAAA,eAClB,GAAG,YAAY,aAAa,cAAc,IACvC,iBACA;AAAA,YACN;AAEA;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK,MAAM;AACrB,kBAAM,YAAY,GAAG,YAAY,cAAc,KAAK,aAAa,CAAC;AAClE,gBAAI;AAEJ,iBAAK,GAAG,YAAY,YAAY,QAAQ,GAAG;AACzC,0BAAY,SAAS,SAAS,KAAK,KAAK;AAAA,YAC1C;AAEA,iBAAK,aAAa;AAClB;AAAA,UACF;AAAA,UAEA;AAAA,QACF;AAAA,MACF;AAAA,MAEA,MAAM,MAAM;AACV,gBAAQ,KAAK,MAAM;AAAA,UACjB,KAAK,OAAO,KAAK;AACf,iBAAK,iBAAiB,IAAI;AAE1B;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,iBAAK,eAAe,IAAI;AAExB,iBAAK,WAAW,IAAI;AAEpB;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,iBAAK,aAAa;AAClB;AAAA,UAEF,KAAK,OAAO,KAAK;AAAA,UACjB,KAAK,OAAO,KAAK;AAAA,UACjB,KAAK,OAAO,KAAK;AACf,iBAAK,WAAW,IAAI;AAEpB;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,iBAAK,gBAAgB,IAAI;AAEzB;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,iBAAK,YAAY;AAEjB,iBAAK,mBAAmB,IAAI;AAE5B,iBAAK,gBAAgB,IAAI;AAEzB;AAAA,UAEF,KAAK,OAAO,KAAK;AAAA,UACjB,KAAK,OAAO,KAAK;AACf,iBAAK,mBAAmB,IAAI;AAE5B,iBAAK,gBAAgB,IAAI;AAEzB;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,iBAAK,aAAa;AAClB;AAAA,UAEF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,WAAW;AAOnB,aAAS,YAAY,QAAQ,YAAY,WAAW;AAClD,YAAM,OAAO,UAAU,KAAK;AAE5B,UACE,SAAS,eAAe,mBAAmB,QAC3C,OAAO,aAAa,MAAM,YAC1B;AACA,eAAO,eAAe;AAAA,MACxB;AAEA,UACE,SAAS,eAAe,iBAAiB,QACzC,OAAO,aAAa,MAAM,YAC1B;AACA,eAAO,eAAe;AAAA,MACxB;AAEA,UACE,SAAS,eAAe,qBAAqB,SAC5C,GAAG,YAAY,iBAAiB,UAAU,GAC3C;AACA,eAAO,eAAe;AAAA,MACxB;AAEA,WACG,GAAG,YAAY,cAAc,UAAU,MACvC,GAAG,YAAY,iBAAiB,UAAU,GAC3C;AACA,eAAO,WAAW,UAAU,EAAE,IAAI;AAAA,MACpC;AAAA,IACF;AAMA,aAAS,kBAAkB,UAAU,SAAS;AAC5C,aAAO;AAAA,QACL,SAAS,MAAM;AACb,gBAAM,OAAO,KAAK,CAAC;AACnB,mBAAS,MAAM,IAAI;AACnB,gBAAM,MAAM,GAAG,SAAS,sBAAsB,SAAS,KAAK,IAAI,EAAE;AAElE,cAAI,IAAI;AACN,kBAAM,SAAS,GAAG,MAAM,SAAS,IAAI;AAErC,gBAAI,WAAW,QAAW;AACxB,uBAAS,MAAM,IAAI;AAEnB,mBAAK,GAAG,KAAK,QAAQ,MAAM,GAAG;AAC5B,yBAAS,MAAM,MAAM;AAAA,cACvB;AAAA,YACF;AAEA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,QAEA,SAAS,MAAM;AACb,gBAAM,OAAO,KAAK,CAAC;AACnB,gBAAM,MAAM,GAAG,SAAS,sBAAsB,SAAS,KAAK,IAAI,EAAE;AAClE,cAAI;AAEJ,cAAI,IAAI;AACN,qBAAS,GAAG,MAAM,SAAS,IAAI;AAAA,UACjC;AAEA,mBAAS,MAAM,IAAI;AACnB,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACjaA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mBAAmB;AAC3B,YAAQ,mBAAmB;AAC3B,YAAQ,6BAA6B;AACrC,YAAQ,kBAAkB;AAC1B,YAAQ,uBAAuB;AAC/B,YAAQ,sBAAsB;AAC9B,YAAQ,aAAa;AACrB,YAAQ,6BAA6B;AACrC,YAAQ,4BAA4B;AACpC,YAAQ,cAAc;AAEtB,QAAI,SAAS;AAEb,aAAS,iBAAiB,MAAM;AAC9B,aACE,2BAA2B,IAAI,KAC/B,2BAA2B,IAAI,KAC/B,0BAA0B,IAAI;AAAA,IAElC;AAEA,aAAS,2BAA2B,MAAM;AACxC,aACE,KAAK,SAAS,OAAO,KAAK,wBAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,gBAAgB,MAAM;AAC7B,aACE,KAAK,SAAS,OAAO,KAAK,SAC1B,KAAK,SAAS,OAAO,KAAK,mBAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,YAAY,MAAM;AACzB,aACE,KAAK,SAAS,OAAO,KAAK,YAC1B,KAAK,SAAS,OAAO,KAAK,OAC1B,KAAK,SAAS,OAAO,KAAK,SAC1B,KAAK,SAAS,OAAO,KAAK,UAC1B,KAAK,SAAS,OAAO,KAAK,WAC1B,KAAK,SAAS,OAAO,KAAK,QAC1B,KAAK,SAAS,OAAO,KAAK,QAC1B,KAAK,SAAS,OAAO,KAAK,QAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,iBAAiB,MAAM;AAC9B,aACE,YAAY,IAAI,MACf,KAAK,SAAS,OAAO,KAAK,OACvB,KAAK,OAAO,KAAK,gBAAgB,IACjC,KAAK,SAAS,OAAO,KAAK,SAC1B,KAAK,OAAO,KAAK,CAAC,UAAU,iBAAiB,MAAM,KAAK,CAAC,IACzD,KAAK,SAAS,OAAO,KAAK;AAAA,IAElC;AAEA,aAAS,WAAW,MAAM;AACxB,aACE,KAAK,SAAS,OAAO,KAAK,cAC1B,KAAK,SAAS,OAAO,KAAK,aAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,2BAA2B,MAAM;AACxC,aACE,KAAK,SAAS,OAAO,KAAK,qBAC1B,qBAAqB,IAAI,KACzB,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,qBAAqB,MAAM;AAClC,aACE,KAAK,SAAS,OAAO,KAAK,0BAC1B,KAAK,SAAS,OAAO,KAAK,0BAC1B,KAAK,SAAS,OAAO,KAAK,6BAC1B,KAAK,SAAS,OAAO,KAAK,yBAC1B,KAAK,SAAS,OAAO,KAAK,wBAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAEA,aAAS,0BAA0B,MAAM;AACvC,aACE,KAAK,SAAS,OAAO,KAAK,oBAAoB,oBAAoB,IAAI;AAAA,IAE1E;AAEA,aAAS,oBAAoB,MAAM;AACjC,aACE,KAAK,SAAS,OAAO,KAAK,yBAC1B,KAAK,SAAS,OAAO,KAAK,yBAC1B,KAAK,SAAS,OAAO,KAAK,4BAC1B,KAAK,SAAS,OAAO,KAAK,wBAC1B,KAAK,SAAS,OAAO,KAAK,uBAC1B,KAAK,SAAS,OAAO,KAAK;AAAA,IAE9B;AAAA;AAAA;;;AC5GA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,4BAA4B;AAEpC,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAUlB,aAAS,0BAA0B,SAAS;AAC1C,aAAO;AAAA,QACL,SAAS,MAAM;AACb,qBAAW,cAAc,KAAK,aAAa;AACzC,gBAAI,EAAE,GAAG,YAAY,4BAA4B,UAAU,GAAG;AAC5D,oBAAM,UACJ,WAAW,SAAS,OAAO,KAAK,qBAChC,WAAW,SAAS,OAAO,KAAK,mBAC5B,WACA,MAAM,WAAW,KAAK,QAAQ;AACpC,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,OAAO,OAAO;AAAA,kBACd;AAAA,oBACE,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,cAAc;AAElB,QAAI,kBAAkB;AAEtB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAUlB,aAAS,wBAAwB,SAAS;AACxC,aAAO;AAAA,QACL,MAAM,MAAM;AACV,gBAAM,OAAO,QAAQ,cAAc;AAEnC,cAAI,MAAM;AACR,kBAAM,WAAW,QAAQ,YAAY;AAErC,gBAAI,CAAC,UAAU;AAEb,oBAAM,SAAS,QAAQ,UAAU;AACjC,oBAAM,YAAY,KAAK,KAAK;AAE5B,kBAAI,cAAc,GAAG,YAAY;AAAA,gBAC/B;AAAA,gBACA,sBAAsB,QAAQ,MAAM,SAAS;AAAA,cAC/C;AAEA,kBAAI,eAAe,IAAI;AACrB,8BAAc,GAAG,YAAY;AAAA,kBAC3B,uBAAuB,MAAM,SAAS;AAAA,gBACxC;AAAA,cACF;AAEA,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,uBAAuB,SAAS,cAAc,KAAK,IAAI,OACrD;AAAA,kBACF;AAAA,oBACE,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAOA,aAAS,sBAAsB,QAAQ,MAAM,WAAW;AACtD,UAAI,EAAE,GAAG,YAAY,gBAAgB,IAAI,GAAG;AAE1C,eAAO,CAAC;AAAA,MACV;AAEA,YAAM,iBAAiB,oBAAI,IAAI;AAC/B,YAAM,aAAa,uBAAO,OAAO,IAAI;AAErC,iBAAW,gBAAgB,OAAO,iBAAiB,IAAI,GAAG;AACxD,YAAI,CAAC,aAAa,UAAU,EAAE,SAAS,GAAG;AACxC;AAAA,QACF;AAEA,uBAAe,IAAI,YAAY;AAC/B,mBAAW,aAAa,IAAI,IAAI;AAEhC,mBAAW,qBAAqB,aAAa,cAAc,GAAG;AAC5D,cAAI;AAEJ,cAAI,CAAC,kBAAkB,UAAU,EAAE,SAAS,GAAG;AAC7C;AAAA,UACF;AAEA,yBAAe,IAAI,iBAAiB;AACpC,qBAAW,kBAAkB,IAAI,MAC7B,wBAAwB,WAAW,kBAAkB,IAAI,OACzD,QAAQ,0BAA0B,SAChC,wBACA,KAAK;AAAA,QACb;AAAA,MACF;AAEA,aAAO,CAAC,GAAG,cAAc,EACtB,KAAK,CAAC,OAAO,UAAU;AAEtB,cAAM,iBAAiB,WAAW,MAAM,IAAI,IAAI,WAAW,MAAM,IAAI;AAErE,YAAI,mBAAmB,GAAG;AACxB,iBAAO;AAAA,QACT;AAEA,aACG,GAAG,YAAY,iBAAiB,KAAK,KACtC,OAAO,UAAU,OAAO,KAAK,GAC7B;AACA,iBAAO;AAAA,QACT;AAEA,aACG,GAAG,YAAY,iBAAiB,KAAK,KACtC,OAAO,UAAU,OAAO,KAAK,GAC7B;AACA,iBAAO;AAAA,QACT;AAEA,gBAAQ,GAAG,gBAAgB,gBAAgB,MAAM,MAAM,MAAM,IAAI;AAAA,MACnE,CAAC,EACA,IAAI,CAAC,MAAM,EAAE,IAAI;AAAA,IACtB;AAMA,aAAS,uBAAuB,MAAM,WAAW;AAC/C,WACG,GAAG,YAAY,cAAc,IAAI,MACjC,GAAG,YAAY,iBAAiB,IAAI,GACrC;AACA,cAAM,qBAAqB,OAAO,KAAK,KAAK,UAAU,CAAC;AACvD,gBAAQ,GAAG,gBAAgB,gBAAgB,WAAW,kBAAkB;AAAA,MAC1E;AAEA,aAAO,CAAC;AAAA,IACV;AAAA;AAAA;;;AChJA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gCAAgC;AAExC,QAAI,gBAAgB;AAEpB,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,eAAe;AAWnB,aAAS,8BAA8B,SAAS;AAC9C,aAAO;AAAA,QACL,eAAe,MAAM;AACnB,gBAAM,gBAAgB,KAAK;AAE3B,cAAI,eAAe;AACjB,kBAAM,QAAQ,GAAG,aAAa;AAAA,cAC5B,QAAQ,UAAU;AAAA,cAClB;AAAA,YACF;AAEA,gBAAI,QAAQ,EAAE,GAAG,YAAY,iBAAiB,IAAI,GAAG;AACnD,oBAAM,WAAW,GAAG,SAAS,OAAO,aAAa;AACjD,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,oDAAoD,OAAO;AAAA,kBAC3D;AAAA,oBACE,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,mBAAmB,MAAM;AACvB,gBAAM,QAAQ,GAAG,aAAa;AAAA,YAC5B,QAAQ,UAAU;AAAA,YAClB,KAAK;AAAA,UACP;AAEA,cAAI,QAAQ,EAAE,GAAG,YAAY,iBAAiB,IAAI,GAAG;AACnD,kBAAM,WAAW,GAAG,SAAS,OAAO,KAAK,aAAa;AACtD,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,aAAa,KAAK,KAAK,KAAK,6CAA6C,OAAO;AAAA,gBAChF;AAAA,kBACE,OAAO,KAAK;AAAA,gBACd;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACpEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,qCAAqC;AAC7C,YAAQ,yBAAyB;AAEjC,QAAI,cAAc;AAElB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAWlB,aAAS,uBAAuB,SAAS;AACvC,aAAO;AAAA;AAAA,QAEL,GAAG,mCAAmC,OAAO;AAAA,QAE7C,SAAS,SAAS;AAChB,gBAAM,SAAS,QAAQ,YAAY;AACnC,gBAAM,WAAW,QAAQ,YAAY;AACrC,gBAAM,aAAa,QAAQ,cAAc;AAEzC,cAAI,CAAC,UAAU,YAAY,YAAY;AACrC,kBAAM,UAAU,QAAQ,KAAK;AAC7B,kBAAM,iBAAiB,SAAS,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI;AAC1D,kBAAM,eAAe,GAAG,gBAAgB;AAAA,cACtC;AAAA,cACA;AAAA,YACF;AACA,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,qBAAqB,OAAO,eAAe,WAAW,IAAI,IAAI,SAAS,IAAI,QACxE,GAAG,YAAY,YAAY,WAAW;AAAA,gBACzC;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAKA,aAAS,mCAAmC,SAAS;AACnD,YAAM,gBAAgB,uBAAO,OAAO,IAAI;AACxC,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,oBAAoB,SACtB,OAAO,cAAc,IACrB,YAAY;AAEhB,iBAAW,aAAa,mBAAmB;AACzC,sBAAc,UAAU,IAAI,IAAI,UAAU,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI;AAAA,MACtE;AAEA,YAAM,iBAAiB,QAAQ,YAAY,EAAE;AAE7C,iBAAW,OAAO,gBAAgB;AAChC,YAAI,IAAI,SAAS,OAAO,KAAK,sBAAsB;AACjD,cAAI;AAKJ,gBAAM,aACH,iBAAiB,IAAI,eAAe,QAAQ,mBAAmB,SAC5D,iBACA,CAAC;AACP,wBAAc,IAAI,KAAK,KAAK,IAAI,UAAU,IAAI,CAAC,QAAQ,IAAI,KAAK,KAAK;AAAA,QACvE;AAAA,MACF;AAEA,aAAO;AAAA,QACL,UAAU,eAAe;AACvB,gBAAM,gBAAgB,cAAc,KAAK;AACzC,gBAAM,YAAY,cAAc,aAAa;AAE7C,cAAI,cAAc,aAAa,WAAW;AACxC,uBAAW,WAAW,cAAc,WAAW;AAC7C,oBAAM,UAAU,QAAQ,KAAK;AAE7B,kBAAI,CAAC,UAAU,SAAS,OAAO,GAAG;AAChC,sBAAM,eAAe,GAAG,gBAAgB;AAAA,kBACtC;AAAA,kBACA;AAAA,gBACF;AACA,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,qBAAqB,OAAO,oBAAoB,aAAa,QAC1D,GAAG,YAAY,YAAY,WAAW;AAAA,oBACzC;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACvHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,sBAAsB;AAE9B,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,gBAAgB;AAEpB,QAAI,OAAO;AAEX,QAAI,qBAAqB;AAEzB,QAAI,SAAS;AAEb,QAAI,cAAc;AAUlB,aAAS,oBAAoB,SAAS;AACpC,YAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,oBAAoB,SACtB,OAAO,cAAc,IACrB,YAAY;AAEhB,iBAAW,aAAa,mBAAmB;AACzC,qBAAa,UAAU,IAAI,IAAI,UAAU;AAAA,MAC3C;AAEA,YAAM,iBAAiB,QAAQ,YAAY,EAAE;AAE7C,iBAAW,OAAO,gBAAgB;AAChC,YAAI,IAAI,SAAS,OAAO,KAAK,sBAAsB;AACjD,uBAAa,IAAI,KAAK,KAAK,IAAI,IAAI,UAAU,IAAI,CAAC,SAAS,KAAK,KAAK;AAAA,QACvE;AAAA,MACF;AAEA,aAAO;AAAA,QACL,UAAU,MAAM,MAAM,SAAS,OAAO,WAAW;AAC/C,gBAAM,OAAO,KAAK,KAAK;AACvB,gBAAM,YAAY,aAAa,IAAI;AAEnC,cAAI,CAAC,WAAW;AACd,oBAAQ;AAAA,cACN,IAAI,cAAc,aAAa,uBAAuB,IAAI,MAAM;AAAA,gBAC9D,OAAO;AAAA,cACT,CAAC;AAAA,YACH;AACA;AAAA,UACF;AAEA,gBAAM,oBAAoB,+BAA+B,SAAS;AAElE,cAAI,qBAAqB,CAAC,UAAU,SAAS,iBAAiB,GAAG;AAC/D,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,eAAe,IAAI,wBAAwB,iBAAiB;AAAA,gBAC5D;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,+BAA+B,WAAW;AACjD,YAAM,YAAY,UAAU,UAAU,SAAS,CAAC;AAChD,gBAAU,cAAc,GAAG,WAAW,WAAW,KAAK;AAEtD,cAAQ,UAAU,MAAM;AAAA,QACtB,KAAK,OAAO,KAAK;AACf,iBAAO,iCAAiC,UAAU,SAAS;AAAA,QAE7D,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,OAAO,KAAK,wBAAwB;AACvC,gBAAM,aAAa,UAAU,UAAU,SAAS,CAAC;AACjD,oBAAU,eAAe,GAAG,WAAW,WAAW,KAAK;AACvD,iBAAO,WAAW,SAAS,OAAO,KAAK,+BACnC,mBAAmB,kBAAkB,yBACrC,mBAAmB,kBAAkB;AAAA,QAC3C;AAAA,QAKA;AACE,WACG,GAAG,WAAW;AAAA,YACb;AAAA,YACA,uBAAuB,GAAG,SAAS,SAAS,UAAU,IAAI;AAAA,UAC5D;AAAA,MACN;AAAA,IACF;AAEA,aAAS,iCAAiC,WAAW;AACnD,cAAQ,WAAW;AAAA,QACjB,KAAK,KAAK,kBAAkB;AAC1B,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,KAAK,kBAAkB;AAC1B,iBAAO,mBAAmB,kBAAkB;AAAA,QAE9C,KAAK,KAAK,kBAAkB;AAC1B,iBAAO,mBAAmB,kBAAkB;AAAA,MAChD;AAAA,IACF;AAAA;AAAA;;;ACtKA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,yBAAyB;AAEjC,QAAI,gBAAgB;AAUpB,aAAS,uBAAuB,SAAS;AACvC,aAAO;AAAA,QACL,eAAe,MAAM;AACnB,gBAAM,eAAe,KAAK,KAAK;AAC/B,gBAAM,WAAW,QAAQ,YAAY,YAAY;AAEjD,cAAI,CAAC,UAAU;AACb,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,qBAAqB,YAAY;AAAA,gBACjC;AAAA,kBACE,OAAO,KAAK;AAAA,gBACd;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACnCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,qBAAqB;AAE7B,QAAI,cAAc;AAElB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,WAAW;AAUf,aAAS,mBAAmB,SAAS;AACnC,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,mBAAmB,SAAS,OAAO,WAAW,IAAI,uBAAO,OAAO,IAAI;AAC1E,YAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,iBAAW,OAAO,QAAQ,YAAY,EAAE,aAAa;AACnD,aAAK,GAAG,YAAY,sBAAsB,GAAG,GAAG;AAC9C,uBAAa,IAAI,KAAK,KAAK,IAAI;AAAA,QACjC;AAAA,MACF;AAEA,YAAM,YAAY;AAAA,QAChB,GAAG,OAAO,KAAK,gBAAgB;AAAA,QAC/B,GAAG,OAAO,KAAK,YAAY;AAAA,MAC7B;AACA,aAAO;AAAA,QACL,UAAU,MAAM,IAAI,QAAQ,IAAI,WAAW;AACzC,gBAAM,WAAW,KAAK,KAAK;AAE3B,cAAI,CAAC,iBAAiB,QAAQ,KAAK,CAAC,aAAa,QAAQ,GAAG;AAC1D,gBAAI;AAEJ,kBAAM,kBACH,cAAc,UAAU,CAAC,OAAO,QAAQ,gBAAgB,SACrD,cACA;AACN,kBAAM,QAAQ,kBAAkB,QAAQ,UAAU,cAAc;AAEhE,gBAAI,SAAS,kBAAkB,SAAS,QAAQ,GAAG;AACjD;AAAA,YACF;AAEA,kBAAM,kBAAkB,GAAG,gBAAgB;AAAA,cACzC;AAAA,cACA,QAAQ,kBAAkB,OAAO,SAAS,IAAI;AAAA,YAChD;AACA,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,iBAAiB,QAAQ,QACtB,GAAG,YAAY,YAAY,cAAc;AAAA,gBAC5C;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAM,oBAAoB;AAAA,MACxB,GAAG,SAAS;AAAA,MACZ,GAAG,eAAe;AAAA,IACpB,EAAE,IAAI,CAAC,SAAS,KAAK,IAAI;AAEzB,aAAS,UAAU,OAAO;AACxB,aACE,UAAU,WACR,GAAG,YAAY,4BAA4B,KAAK,MAC/C,GAAG,YAAY,2BAA2B,KAAK;AAAA,IAEtD;AAAA;AAAA;;;ACxFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,6BAA6B;AAErC,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAUb,aAAS,2BAA2B,SAAS;AAC3C,UAAI,iBAAiB;AACrB,aAAO;AAAA,QACL,SAAS,MAAM;AACb,2BAAiB,KAAK,YAAY;AAAA,YAChC,CAAC,eAAe,WAAW,SAAS,OAAO,KAAK;AAAA,UAClD,EAAE;AAAA,QACJ;AAAA,QAEA,oBAAoB,MAAM;AACxB,cAAI,CAAC,KAAK,QAAQ,iBAAiB,GAAG;AACpC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB;AAAA,gBACA;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACzCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AAOpB,aAAS,yBAAyB,SAAS;AACzC,UAAI,MAAM,OAAO;AAEjB,YAAM,YAAY,QAAQ,UAAU;AACpC,YAAM,kBACH,QACE,SACE,qBACC,cAAc,QAAQ,cAAc,SAChC,SACA,UAAU,aAAa,QAAQ,uBAAuB,SACxD,qBACA,cAAc,QAAQ,cAAc,SACpC,SACA,UAAU,aAAa,OAAO,QAAQ,UAAU,SAClD,QACA,cAAc,QAAQ,cAAc,SACpC,SACA,UAAU,gBAAgB,OAAO,QAAQ,SAAS,SACpD,OACA,cAAc,QAAQ,cAAc,SACpC,SACA,UAAU,oBAAoB;AACpC,UAAI,yBAAyB;AAC7B,aAAO;AAAA,QACL,iBAAiB,MAAM;AACrB,cAAI,gBAAgB;AAClB,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB;AAAA,gBACA;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AACA;AAAA,UACF;AAEA,cAAI,yBAAyB,GAAG;AAC9B,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB;AAAA,gBACA;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,YAAE;AAAA,QACJ;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AClEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,4BAA4B;AAEpC,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAM,kBAAkB;AAExB,aAAS,0BAA0B,SAAS;AAK1C,eAAS,WAAW,MAAM,mBAAmB,uBAAO,OAAO,IAAI,GAAG,QAAQ,GAAG;AAC3E,YAAI,KAAK,SAAS,OAAO,KAAK,iBAAiB;AAC7C,gBAAM,eAAe,KAAK,KAAK;AAE/B,cAAI,iBAAiB,YAAY,MAAM,MAAM;AAE3C,mBAAO;AAAA,UACT;AAEA,gBAAM,WAAW,QAAQ,YAAY,YAAY;AAEjD,cAAI,CAAC,UAAU;AAEb,mBAAO;AAAA,UACT;AAMA,cAAI;AACF,6BAAiB,YAAY,IAAI;AACjC,mBAAO,WAAW,UAAU,kBAAkB,KAAK;AAAA,UACrD,UAAE;AACA,6BAAiB,YAAY,IAAI;AAAA,UACnC;AAAA,QACF;AAEA,YACE,KAAK,SAAS,OAAO,KAAK;AAAA,SACzB,KAAK,KAAK,UAAU,YACnB,KAAK,KAAK,UAAU,gBACpB,KAAK,KAAK,UAAU,mBACpB,KAAK,KAAK,UAAU,gBACtB;AAEA;AAEA,cAAI,SAAS,iBAAiB;AAC5B,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,YAAI,kBAAkB,QAAQ,KAAK,cAAc;AAC/C,qBAAW,SAAS,KAAK,aAAa,YAAY;AAChD,gBAAI,WAAW,OAAO,kBAAkB,KAAK,GAAG;AAC9C,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL,MAAM,MAAM;AACV,cAAI,KAAK,KAAK,UAAU,cAAc,KAAK,KAAK,UAAU,UAAU;AAClE,gBAAI,WAAW,IAAI,GAAG;AACpB,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB;AAAA,kBACA;AAAA,oBACE,OAAO,CAAC,IAAI;AAAA,kBACd;AAAA,gBACF;AAAA,cACF;AACA,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACzFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,uBAAuB;AAE/B,QAAI,gBAAgB;AAUpB,aAAS,qBAAqB,SAAS;AAGrC,YAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,YAAM,aAAa,CAAC;AAEpB,YAAM,wBAAwB,uBAAO,OAAO,IAAI;AAChD,aAAO;AAAA,QACL,qBAAqB,MAAM;AAAA,QAE3B,mBAAmB,MAAM;AACvB,+BAAqB,IAAI;AACzB,iBAAO;AAAA,QACT;AAAA,MACF;AAIA,eAAS,qBAAqB,UAAU;AACtC,YAAI,aAAa,SAAS,KAAK,KAAK,GAAG;AACrC;AAAA,QACF;AAEA,cAAM,eAAe,SAAS,KAAK;AACnC,qBAAa,YAAY,IAAI;AAC7B,cAAM,cAAc,QAAQ,mBAAmB,SAAS,YAAY;AAEpE,YAAI,YAAY,WAAW,GAAG;AAC5B;AAAA,QACF;AAEA,8BAAsB,YAAY,IAAI,WAAW;AAEjD,mBAAW,cAAc,aAAa;AACpC,gBAAM,aAAa,WAAW,KAAK;AACnC,gBAAM,aAAa,sBAAsB,UAAU;AACnD,qBAAW,KAAK,UAAU;AAE1B,cAAI,eAAe,QAAW;AAC5B,kBAAM,iBAAiB,QAAQ,YAAY,UAAU;AAErD,gBAAI,gBAAgB;AAClB,mCAAqB,cAAc;AAAA,YACrC;AAAA,UACF,OAAO;AACL,kBAAM,YAAY,WAAW,MAAM,UAAU;AAC7C,kBAAM,UAAU,UACb,MAAM,GAAG,EAAE,EACX,IAAI,CAAC,MAAM,MAAM,EAAE,KAAK,QAAQ,GAAG,EACnC,KAAK,IAAI;AACZ,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,2BAA2B,UAAU,qBAClC,YAAY,KAAK,QAAQ,OAAO,MAAM;AAAA,gBACzC;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,qBAAW,IAAI;AAAA,QACjB;AAEA,8BAAsB,YAAY,IAAI;AAAA,MACxC;AAAA,IACF;AAAA;AAAA;;;ACpFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AAUpB,aAAS,yBAAyB,SAAS;AACzC,UAAI,sBAAsB,uBAAO,OAAO,IAAI;AAC5C,aAAO;AAAA,QACL,qBAAqB;AAAA,UACnB,QAAQ;AACN,kCAAsB,uBAAO,OAAO,IAAI;AAAA,UAC1C;AAAA,UAEA,MAAM,WAAW;AACf,kBAAM,SAAS,QAAQ,2BAA2B,SAAS;AAE3D,uBAAW,EAAE,KAAK,KAAK,QAAQ;AAC7B,oBAAM,UAAU,KAAK,KAAK;AAE1B,kBAAI,oBAAoB,OAAO,MAAM,MAAM;AACzC,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,UAAU,OACN,cAAc,OAAO,kCAAkC,UAAU,KAAK,KAAK,OAC3E,cAAc,OAAO;AAAA,oBACzB;AAAA,sBACE,OAAO,CAAC,MAAM,SAAS;AAAA,oBACzB;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,mBAAmB,MAAM;AACvB,8BAAoB,KAAK,SAAS,KAAK,KAAK,IAAI;AAAA,QAClD;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACnDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,wBAAwB;AAEhC,QAAI,gBAAgB;AAUpB,aAAS,sBAAsB,SAAS;AACtC,YAAM,gBAAgB,CAAC;AACvB,YAAM,eAAe,CAAC;AACtB,aAAO;AAAA,QACL,oBAAoB,MAAM;AACxB,wBAAc,KAAK,IAAI;AACvB,iBAAO;AAAA,QACT;AAAA,QAEA,mBAAmB,MAAM;AACvB,uBAAa,KAAK,IAAI;AACtB,iBAAO;AAAA,QACT;AAAA,QAEA,UAAU;AAAA,UACR,QAAQ;AACN,kBAAM,mBAAmB,uBAAO,OAAO,IAAI;AAE3C,uBAAW,aAAa,eAAe;AACrC,yBAAW,YAAY,QAAQ;AAAA,gBAC7B;AAAA,cACF,GAAG;AACD,iCAAiB,SAAS,KAAK,KAAK,IAAI;AAAA,cAC1C;AAAA,YACF;AAEA,uBAAW,eAAe,cAAc;AACtC,oBAAM,WAAW,YAAY,KAAK;AAElC,kBAAI,iBAAiB,QAAQ,MAAM,MAAM;AACvC,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,aAAa,QAAQ;AAAA,oBACrB;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC5DA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,wBAAwB;AAEhC,QAAI,gBAAgB;AAUpB,aAAS,sBAAsB,SAAS;AACtC,UAAI,eAAe,CAAC;AACpB,aAAO;AAAA,QACL,qBAAqB;AAAA,UACnB,QAAQ;AACN,2BAAe,CAAC;AAAA,UAClB;AAAA,UAEA,MAAM,WAAW;AACf,kBAAM,mBAAmB,uBAAO,OAAO,IAAI;AAC3C,kBAAM,SAAS,QAAQ,2BAA2B,SAAS;AAE3D,uBAAW,EAAE,KAAK,KAAK,QAAQ;AAC7B,+BAAiB,KAAK,KAAK,KAAK,IAAI;AAAA,YACtC;AAEA,uBAAW,eAAe,cAAc;AACtC,oBAAM,eAAe,YAAY,SAAS,KAAK;AAE/C,kBAAI,iBAAiB,YAAY,MAAM,MAAM;AAC3C,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,UAAU,OACN,cAAc,YAAY,iCAAiC,UAAU,KAAK,KAAK,OAC/E,cAAc,YAAY;AAAA,oBAC9B;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,mBAAmB,KAAK;AACtB,uBAAa,KAAK,GAAG;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACxDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,gBAAgB;AAExB,QAAI,kBAAkB;AAEtB,QAAI,SAAS;AASb,aAAS,cAAc,WAAW;AAChC,cAAQ,UAAU,MAAM;AAAA,QACtB,KAAK,OAAO,KAAK;AACf,iBAAO,EAAE,GAAG,WAAW,QAAQ,WAAW,UAAU,MAAM,EAAE;AAAA,QAE9D,KAAK,OAAO,KAAK;AACf,iBAAO,EAAE,GAAG,WAAW,QAAQ,UAAU,OAAO,IAAI,aAAa,EAAE;AAAA,QAErE,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AAAA,QACjB,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,MACX;AAAA,IACF;AAEA,aAAS,WAAW,QAAQ;AAC1B,aAAO,OACJ,IAAI,CAAC,eAAe;AAAA,QACnB,GAAG;AAAA,QACH,OAAO,cAAc,UAAU,KAAK;AAAA,MACtC,EAAE,EACD;AAAA,QAAK,CAAC,QAAQ,YACZ,GAAG,gBAAgB,gBAAgB,OAAO,KAAK,OAAO,OAAO,KAAK,KAAK;AAAA,MAC1E;AAAA,IACJ;AAAA;AAAA;;;AC9CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,mCAAmC;AAE3C,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,eAAe;AAEnB,aAAS,cAAc,QAAQ;AAC7B,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAO,OACJ;AAAA,UACC,CAAC,CAAC,cAAc,SAAS,MACvB,cAAc,YAAY,wBAC1B,cAAc,SAAS;AAAA,QAC3B,EACC,KAAK,OAAO;AAAA,MACjB;AAEA,aAAO;AAAA,IACT;AAWA,aAAS,iCAAiC,SAAS;AAIjD,YAAM,wBAAwB,IAAI,QAAQ;AAI1C,YAAM,+BAA+B,oBAAI,IAAI;AAC7C,aAAO;AAAA,QACL,aAAa,cAAc;AACzB,gBAAM,YAAY;AAAA,YAChB;AAAA,YACA;AAAA,YACA;AAAA,YACA,QAAQ,cAAc;AAAA,YACtB;AAAA,UACF;AAEA,qBAAW,CAAC,CAAC,cAAc,MAAM,GAAG,SAAS,OAAO,KAAK,WAAW;AAClE,kBAAM,YAAY,cAAc,MAAM;AACtC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,WAAW,YAAY,sBAAsB,SAAS;AAAA,gBACtD;AAAA,kBACE,OAAO,QAAQ,OAAO,OAAO;AAAA,gBAC/B;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AA2DA,aAAS,gCACP,SACA,8BACA,uBACA,YACA,cACA;AACA,YAAM,YAAY,CAAC;AACnB,YAAM,CAAC,UAAU,aAAa,IAAI;AAAA,QAChC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAGA;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,cAAc,WAAW,GAAG;AAG9B,iBAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AAC7C;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA,cAAc,CAAC;AAAA,UACjB;AAKA,mBAAS,IAAI,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AACjD;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA,cAAc,CAAC;AAAA,cACf,cAAc,CAAC;AAAA,YACjB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,aAAS,yCACP,SACA,WACA,8BACA,uBACA,sBACA,UACA,cACA;AACA,YAAM,WAAW,QAAQ,YAAY,YAAY;AAEjD,UAAI,CAAC,UAAU;AACb;AAAA,MACF;AAEA,YAAM,CAAC,WAAW,uBAAuB,IACvC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEF,UAAI,aAAa,WAAW;AAC1B;AAAA,MACF;AAGA;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAGA,iBAAW,0BAA0B,yBAAyB;AAE5D,YACE,sBAAsB;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,QACF,GACA;AACA;AAAA,QACF;AAEA,8BAAsB;AAAA,UACpB;AAAA,UACA;AAAA,UACA;AAAA,QACF;AACA;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,aAAS,iCACP,SACA,WACA,8BACA,uBACA,sBACA,eACA,eACA;AAEA,UAAI,kBAAkB,eAAe;AACnC;AAAA,MACF;AAEA,UACE,sBAAsB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MACF,GACA;AACA;AAAA,MACF;AAEA,4BAAsB,IAAI,eAAe,eAAe,oBAAoB;AAC5E,YAAM,YAAY,QAAQ,YAAY,aAAa;AACnD,YAAM,YAAY,QAAQ,YAAY,aAAa;AAEnD,UAAI,CAAC,aAAa,CAAC,WAAW;AAC5B;AAAA,MACF;AAEA,YAAM,CAAC,WAAW,wBAAwB,IACxC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACF,YAAM,CAAC,WAAW,wBAAwB,IACxC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAGF;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAGA,iBAAW,2BAA2B,0BAA0B;AAC9D;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAGA,iBAAW,2BAA2B,0BAA0B;AAC9D;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAIA,aAAS,qCACP,SACA,8BACA,uBACA,sBACA,aACA,eACA,aACA,eACA;AACA,YAAM,YAAY,CAAC;AACnB,YAAM,CAAC,WAAW,cAAc,IAAI;AAAA,QAClC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,YAAM,CAAC,WAAW,cAAc,IAAI;AAAA,QAClC;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAGA,iBAAW,iBAAiB,gBAAgB;AAC1C;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAGA,iBAAW,iBAAiB,gBAAgB;AAC1C;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAIA,iBAAW,iBAAiB,gBAAgB;AAC1C,mBAAW,iBAAiB,gBAAgB;AAC1C;AAAA,YACE;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,uBACP,SACA,WACA,8BACA,uBACA,UACA;AAKA,iBAAW,CAAC,cAAc,MAAM,KAAK,OAAO,QAAQ,QAAQ,GAAG;AAI7D,YAAI,OAAO,SAAS,GAAG;AACrB,mBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,qBAAS,IAAI,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAC1C,oBAAM,WAAW;AAAA,gBACf;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA;AAAA,gBACA;AAAA,gBACA,OAAO,CAAC;AAAA,gBACR,OAAO,CAAC;AAAA,cACV;AAEA,kBAAI,UAAU;AACZ,0BAAU,KAAK,QAAQ;AAAA,cACzB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAMA,aAAS,wBACP,SACA,WACA,8BACA,uBACA,kCACA,WACA,WACA;AAMA,iBAAW,CAAC,cAAc,OAAO,KAAK,OAAO,QAAQ,SAAS,GAAG;AAC/D,cAAM,UAAU,UAAU,YAAY;AAEtC,YAAI,SAAS;AACX,qBAAW,UAAU,SAAS;AAC5B,uBAAW,UAAU,SAAS;AAC5B,oBAAM,WAAW;AAAA,gBACf;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,cACF;AAEA,kBAAI,UAAU;AACZ,0BAAU,KAAK,QAAQ;AAAA,cACzB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,aAAS,aACP,SACA,8BACA,uBACA,kCACA,cACA,QACA,QACA;AACA,YAAM,CAAC,aAAa,OAAO,IAAI,IAAI;AACnC,YAAM,CAAC,aAAa,OAAO,IAAI,IAAI;AASnC,YAAM,uBACJ,oCACC,gBAAgB,gBACd,GAAG,YAAY,cAAc,WAAW,MACxC,GAAG,YAAY,cAAc,WAAW;AAE7C,UAAI,CAAC,sBAAsB;AAEzB,cAAM,QAAQ,MAAM,KAAK;AACzB,cAAM,QAAQ,MAAM,KAAK;AAEzB,YAAI,UAAU,OAAO;AACnB,iBAAO;AAAA,YACL,CAAC,cAAc,IAAI,KAAK,UAAU,KAAK,wBAAwB;AAAA,YAC/D,CAAC,KAAK;AAAA,YACN,CAAC,KAAK;AAAA,UACR;AAAA,QACF;AAEA,YAAI,CAAC,cAAc,OAAO,KAAK,GAAG;AAChC,iBAAO;AAAA,YACL,CAAC,cAAc,+BAA+B;AAAA,YAC9C,CAAC,KAAK;AAAA,YACN,CAAC,KAAK;AAAA,UACR;AAAA,QACF;AAAA,MACF;AAEA,YAAM,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAC/D,YAAM,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK;AAE/D,UAAI,SAAS,SAAS,gBAAgB,OAAO,KAAK,GAAG;AACnD,eAAO;AAAA,UACL;AAAA,YACE;AAAA,YACA,mCAAmC,GAAG,SAAS;AAAA,cAC7C;AAAA,YACF,CAAC,WAAW,GAAG,SAAS,SAAS,KAAK,CAAC;AAAA,UACzC;AAAA,UACA,CAAC,KAAK;AAAA,UACN,CAAC,KAAK;AAAA,QACR;AAAA,MACF;AAIA,YAAM,gBAAgB,MAAM;AAC5B,YAAM,gBAAgB,MAAM;AAE5B,UAAI,iBAAiB,eAAe;AAClC,cAAM,YAAY;AAAA,UAChB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,WACC,GAAG,YAAY,cAAc,KAAK;AAAA,UACnC;AAAA,WACC,GAAG,YAAY,cAAc,KAAK;AAAA,UACnC;AAAA,QACF;AACA,eAAO,kBAAkB,WAAW,cAAc,OAAO,KAAK;AAAA,MAChE;AAAA,IACF;AAEA,aAAS,cAAc,OAAO,OAAO;AACnC,YAAM,QAAQ,MAAM;AACpB,YAAM,QAAQ,MAAM;AAEpB,UAAI,UAAU,UAAa,MAAM,WAAW,GAAG;AAC7C,eAAO,UAAU,UAAa,MAAM,WAAW;AAAA,MACjD;AAEA,UAAI,UAAU,UAAa,MAAM,WAAW,GAAG;AAC7C,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,WAAW,MAAM,QAAQ;AAEjC,eAAO;AAAA,MAET;AAEA,YAAM,UAAU,IAAI,IAAI,MAAM,IAAI,CAAC,EAAE,MAAM,MAAM,MAAM,CAAC,KAAK,OAAO,KAAK,CAAC,CAAC;AAC3E,aAAO,MAAM,MAAM,CAAC,SAAS;AAC3B,cAAM,SAAS,KAAK;AACpB,cAAM,SAAS,QAAQ,IAAI,KAAK,KAAK,KAAK;AAE1C,YAAI,WAAW,QAAW;AACxB,iBAAO;AAAA,QACT;AAEA,eAAO,eAAe,MAAM,MAAM,eAAe,MAAM;AAAA,MACzD,CAAC;AAAA,IACH;AAEA,aAAS,eAAe,OAAO;AAC7B,cAAQ,GAAG,SAAS,QAAQ,GAAG,eAAe,eAAe,KAAK,CAAC;AAAA,IACrE;AAIA,aAAS,gBAAgB,OAAO,OAAO;AACrC,WAAK,GAAG,YAAY,YAAY,KAAK,GAAG;AACtC,gBAAQ,GAAG,YAAY,YAAY,KAAK,IACpC,gBAAgB,MAAM,QAAQ,MAAM,MAAM,IAC1C;AAAA,MACN;AAEA,WAAK,GAAG,YAAY,YAAY,KAAK,GAAG;AACtC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,eAAe,KAAK,GAAG;AACzC,gBAAQ,GAAG,YAAY,eAAe,KAAK,IACvC,gBAAgB,MAAM,QAAQ,MAAM,MAAM,IAC1C;AAAA,MACN;AAEA,WAAK,GAAG,YAAY,eAAe,KAAK,GAAG;AACzC,eAAO;AAAA,MACT;AAEA,WACG,GAAG,YAAY,YAAY,KAAK,MAChC,GAAG,YAAY,YAAY,KAAK,GACjC;AACA,eAAO,UAAU;AAAA,MACnB;AAEA,aAAO;AAAA,IACT;AAIA,aAAS,0BACP,SACA,8BACA,YACA,cACA;AACA,YAAM,SAAS,6BAA6B,IAAI,YAAY;AAE5D,UAAI,QAAQ;AACV,eAAO;AAAA,MACT;AAEA,YAAM,cAAc,uBAAO,OAAO,IAAI;AACtC,YAAM,gBAAgB,uBAAO,OAAO,IAAI;AAExC;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,YAAM,SAAS,CAAC,aAAa,OAAO,KAAK,aAAa,CAAC;AACvD,mCAA6B,IAAI,cAAc,MAAM;AACrD,aAAO;AAAA,IACT;AAGA,aAAS,oCACP,SACA,8BACA,UACA;AAEA,YAAM,SAAS,6BAA6B,IAAI,SAAS,YAAY;AAErE,UAAI,QAAQ;AACV,eAAO;AAAA,MACT;AAEA,YAAM,gBAAgB,GAAG,aAAa;AAAA,QACpC,QAAQ,UAAU;AAAA,QAClB,SAAS;AAAA,MACX;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA,SAAS;AAAA,MACX;AAAA,IACF;AAEA,aAAS,+BACP,SACA,YACA,cACA,aACA,eACA;AACA,iBAAW,aAAa,aAAa,YAAY;AAC/C,gBAAQ,UAAU,MAAM;AAAA,UACtB,KAAK,OAAO,KAAK,OAAO;AACtB,kBAAM,YAAY,UAAU,KAAK;AACjC,gBAAI;AAEJ,iBACG,GAAG,YAAY,cAAc,UAAU,MACvC,GAAG,YAAY,iBAAiB,UAAU,GAC3C;AACA,yBAAW,WAAW,UAAU,EAAE,SAAS;AAAA,YAC7C;AAEA,kBAAM,eAAe,UAAU,QAC3B,UAAU,MAAM,QAChB;AAEJ,gBAAI,CAAC,YAAY,YAAY,GAAG;AAC9B,0BAAY,YAAY,IAAI,CAAC;AAAA,YAC/B;AAEA,wBAAY,YAAY,EAAE,KAAK,CAAC,YAAY,WAAW,QAAQ,CAAC;AAChE;AAAA,UACF;AAAA,UAEA,KAAK,OAAO,KAAK;AACf,0BAAc,UAAU,KAAK,KAAK,IAAI;AACtC;AAAA,UAEF,KAAK,OAAO,KAAK,iBAAiB;AAChC,kBAAM,gBAAgB,UAAU;AAChC,kBAAM,qBAAqB,iBACtB,GAAG,aAAa,aAAa,QAAQ,UAAU,GAAG,aAAa,IAChE;AAEJ;AAAA,cACE;AAAA,cACA;AAAA,cACA,UAAU;AAAA,cACV;AAAA,cACA;AAAA,YACF;AAEA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,aAAS,kBAAkB,WAAW,cAAc,OAAO,OAAO;AAChE,UAAI,UAAU,SAAS,GAAG;AACxB,eAAO;AAAA,UACL,CAAC,cAAc,UAAU,IAAI,CAAC,CAAC,MAAM,MAAM,MAAM,CAAC;AAAA,UAClD,CAAC,OAAO,GAAG,UAAU,IAAI,CAAC,CAAC,EAAE,OAAO,MAAM,OAAO,EAAE,KAAK,CAAC;AAAA,UACzD,CAAC,OAAO,GAAG,UAAU,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,OAAO,EAAE,KAAK,CAAC;AAAA,QAC7D;AAAA,MACF;AAAA,IACF;AAKA,QAAM,UAAN,MAAc;AAAA,MACZ,cAAc;AACZ,aAAK,QAAQ,oBAAI,IAAI;AAAA,MACvB;AAAA,MAEA,IAAI,GAAG,GAAG,sBAAsB;AAC9B,YAAI;AAEJ,cAAM,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3C,cAAM,UACH,kBAAkB,KAAK,MAAM,IAAI,IAAI,OAAO,QAC7C,oBAAoB,SAChB,SACA,gBAAgB,IAAI,IAAI;AAE9B,YAAI,WAAW,QAAW;AACxB,iBAAO;AAAA,QACT;AAIA,eAAO,uBAAuB,OAAO,yBAAyB;AAAA,MAChE;AAAA,MAEA,IAAI,GAAG,GAAG,sBAAsB;AAC9B,cAAM,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AAE3C,cAAM,MAAM,KAAK,MAAM,IAAI,IAAI;AAE/B,YAAI,QAAQ,QAAW;AACrB,eAAK,MAAM,IAAI,MAAM,oBAAI,IAAI,CAAC,CAAC,MAAM,oBAAoB,CAAC,CAAC,CAAC;AAAA,QAC9D,OAAO;AACL,cAAI,IAAI,MAAM,oBAAoB;AAAA,QACpC;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACnzBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,8BAA8B;AAEtC,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAElB,QAAI,mBAAmB;AAEvB,QAAI,eAAe;AASnB,aAAS,4BAA4B,SAAS;AAC5C,aAAO;AAAA,QACL,eAAe,MAAM;AACnB,gBAAM,WAAW,QAAQ,QAAQ;AACjC,gBAAM,aAAa,QAAQ,cAAc;AAEzC,eACG,GAAG,YAAY,iBAAiB,QAAQ,MACxC,GAAG,YAAY,iBAAiB,UAAU,KAC3C,EAAE,GAAG,iBAAiB;AAAA,YACpB,QAAQ,UAAU;AAAA,YAClB;AAAA,YACA;AAAA,UACF,GACA;AACA,kBAAM,iBAAiB,GAAG,SAAS,SAAS,UAAU;AACtD,kBAAM,eAAe,GAAG,SAAS,SAAS,QAAQ;AAClD,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,sDAAsD,aAAa,2BAA2B,WAAW;AAAA,gBACzG;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,eAAe,MAAM;AACnB,gBAAM,WAAW,KAAK,KAAK;AAC3B,gBAAM,WAAW,gBAAgB,SAAS,QAAQ;AAClD,gBAAM,aAAa,QAAQ,cAAc;AAEzC,cACE,YACA,cACA,EAAE,GAAG,iBAAiB;AAAA,YACpB,QAAQ,UAAU;AAAA,YAClB;AAAA,YACA;AAAA,UACF,GACA;AACA,kBAAM,iBAAiB,GAAG,SAAS,SAAS,UAAU;AACtD,kBAAM,eAAe,GAAG,SAAS,SAAS,QAAQ;AAClD,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,aAAa,QAAQ,+CAA+C,aAAa,2BAA2B,WAAW;AAAA,gBACvH;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,gBAAgB,SAAS,MAAM;AACtC,YAAM,OAAO,QAAQ,YAAY,IAAI;AAErC,UAAI,MAAM;AACR,cAAM,QAAQ,GAAG,aAAa;AAAA,UAC5B,QAAQ,UAAU;AAAA,UAClB,KAAK;AAAA,QACP;AAEA,aAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC9FA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,6BAA6B;AAErC,QAAI,cAAc;AAElB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,cAAc;AAOlB,aAAS,2BAA2B,SAAS;AAC3C,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,iBAAW,OAAO,QAAQ,YAAY,EAAE,aAAa;AACnD,aAAK,GAAG,YAAY,sBAAsB,GAAG,GAAG;AAC9C,uBAAa,IAAI,KAAK,KAAK,IAAI;AAAA,QACjC;AAAA,MACF;AAEA,aAAO;AAAA,QACL,qBAAqB;AAAA,QACrB,qBAAqB;AAAA,QACrB,wBAAwB;AAAA,QACxB,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,QACnB,0BAA0B;AAAA,MAC5B;AAEA,eAAS,eAAe,MAAM;AAC5B,cAAM,WAAW,KAAK,KAAK;AAC3B,cAAM,UAAU,aAAa,QAAQ;AACrC,cAAM,eACJ,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,QAAQ,QAAQ;AACzE,YAAI;AAEJ,YAAI,SAAS;AACX,yBAAe,iBAAiB,QAAQ,IAAI;AAAA,QAC9C,WAAW,cAAc;AACvB,yBAAe,cAAc,YAAY;AAAA,QAC3C;AAEA,YAAI,cAAc;AAChB,cAAI,iBAAiB,KAAK,MAAM;AAC9B,kBAAM,UAAU,wBAAwB,KAAK,IAAI;AACjD,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,qBAAqB,OAAO,UAAU,QAAQ;AAAA,gBAC9C;AAAA,kBACE,OAAO,UAAU,CAAC,SAAS,IAAI,IAAI;AAAA,gBACrC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,gBAAM,eAAe,OAAO,KAAK;AAAA,YAC/B,GAAG;AAAA,YACH,GAAI,WAAW,QAAQ,WAAW,SAC9B,SACA,OAAO,WAAW;AAAA,UACxB,CAAC;AACD,gBAAM,kBAAkB,GAAG,gBAAgB;AAAA,YACzC;AAAA,YACA;AAAA,UACF;AACA,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,uBAAuB,QAAQ,kCAC5B,GAAG,YAAY,YAAY,cAAc;AAAA,cAC5C;AAAA,gBACE,OAAO,KAAK;AAAA,cACd;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAM,mBAAmB;AAAA,MACvB,CAAC,OAAO,KAAK,sBAAsB,GAAG,OAAO,KAAK;AAAA,MAClD,CAAC,OAAO,KAAK,sBAAsB,GAAG,OAAO,KAAK;AAAA,MAClD,CAAC,OAAO,KAAK,yBAAyB,GAAG,OAAO,KAAK;AAAA,MACrD,CAAC,OAAO,KAAK,qBAAqB,GAAG,OAAO,KAAK;AAAA,MACjD,CAAC,OAAO,KAAK,oBAAoB,GAAG,OAAO,KAAK;AAAA,MAChD,CAAC,OAAO,KAAK,4BAA4B,GACvC,OAAO,KAAK;AAAA,IAChB;AAEA,aAAS,cAAc,MAAM;AAC3B,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,eAAO,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,eAAO,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,eAAO,OAAO,KAAK;AAAA,MACrB;AAEA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,eAAO,OAAO,KAAK;AAAA,MACrB;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,MAClD;AAAA,IACJ;AAEA,aAAS,wBAAwB,MAAM;AACrC,cAAQ,MAAM;AAAA,QACZ,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAET,KAAK,OAAO,KAAK;AACf,iBAAO;AAAA,QAKT;AACE,WACG,GAAG,WAAW;AAAA,YACb;AAAA,YACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,UAClD;AAAA,MACN;AAAA,IACF;AAAA;AAAA;;;AC1KA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,4CACN;AACF,YAAQ,gCAAgC;AAExC,QAAI,WAAW;AAEf,QAAI,UAAU;AAEd,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,cAAc;AAQlB,aAAS,8BAA8B,SAAS;AAC9C,aAAO;AAAA;AAAA,QAEL,GAAG,0CAA0C,OAAO;AAAA,QACpD,OAAO;AAAA;AAAA,UAEL,MAAM,WAAW;AACf,gBAAI;AAEJ,kBAAM,WAAW,QAAQ,YAAY;AAErC,gBAAI,CAAC,UAAU;AACb,qBAAO;AAAA,YACT;AAEA,kBAAM,eAAe,IAAI;AAAA;AAAA;AAAA,eAEtB,uBAAuB,UAAU,eAAe,QACjD,yBAAyB,SACrB,SACA,qBAAqB,IAAI,CAAC,QAAQ,IAAI,KAAK,KAAK;AAAA,YACtD;AAEA,uBAAW,UAAU,SAAS,MAAM;AAClC,kBACE,CAAC,aAAa,IAAI,OAAO,IAAI,MAC5B,GAAG,YAAY,oBAAoB,MAAM,GAC1C;AACA,sBAAM,cAAc,GAAG,SAAS,SAAS,OAAO,IAAI;AACpD,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,UAAU,SAAS,IAAI,eAAe,OAAO,IAAI,cAAc,UAAU;AAAA,oBACzE;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAKA,aAAS,0CAA0C,SAAS;AAC1D,UAAI;AAEJ,YAAM,kBAAkB,uBAAO,OAAO,IAAI;AAC1C,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,qBACH,wBACC,WAAW,QAAQ,WAAW,SAC1B,SACA,OAAO,cAAc,OAAO,QAAQ,0BAA0B,SAChE,wBACA,YAAY;AAElB,iBAAW,aAAa,mBAAmB;AACzC,wBAAgB,UAAU,IAAI,KAAK,GAAG,QAAQ;AAAA,UAC5C,UAAU,KAAK,OAAO,YAAY,kBAAkB;AAAA,UACpD,CAAC,QAAQ,IAAI;AAAA,QACf;AAAA,MACF;AAEA,YAAM,iBAAiB,QAAQ,YAAY,EAAE;AAE7C,iBAAW,OAAO,gBAAgB;AAChC,YAAI,IAAI,SAAS,OAAO,KAAK,sBAAsB;AACjD,cAAI;AAKJ,gBAAM,YACH,iBAAiB,IAAI,eAAe,QAAQ,mBAAmB,SAC5D,iBACA,CAAC;AACP,0BAAgB,IAAI,KAAK,KAAK,KAAK,GAAG,QAAQ;AAAA,YAC5C,SAAS,OAAO,sBAAsB;AAAA,YACtC,CAAC,QAAQ,IAAI,KAAK;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,QACL,WAAW;AAAA;AAAA,UAET,MAAM,eAAe;AACnB,kBAAM,gBAAgB,cAAc,KAAK;AACzC,kBAAM,eAAe,gBAAgB,aAAa;AAElD,gBAAI,cAAc;AAChB,kBAAI;AAKJ,oBAAM,YACH,wBAAwB,cAAc,eAAe,QACtD,0BAA0B,SACtB,wBACA,CAAC;AACP,oBAAM,aAAa,IAAI,IAAI,SAAS,IAAI,CAAC,QAAQ,IAAI,KAAK,KAAK,CAAC;AAEhE,yBAAW,CAAC,SAAS,MAAM,KAAK,OAAO,QAAQ,YAAY,GAAG;AAC5D,oBAAI,CAAC,WAAW,IAAI,OAAO,GAAG;AAC5B,wBAAM,WAAW,GAAG,YAAY,QAAQ,OAAO,IAAI,KAC9C,GAAG,SAAS,SAAS,OAAO,IAAI,KAChC,GAAG,SAAS,OAAO,OAAO,IAAI;AACnC,0BAAQ;AAAA,oBACN,IAAI,cAAc;AAAA,sBAChB,eAAe,aAAa,eAAe,OAAO,cAAc,OAAO;AAAA,sBACvE;AAAA,wBACE,OAAO;AAAA,sBACT;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,uBAAuB,KAAK;AACnC,aACE,IAAI,KAAK,SAAS,OAAO,KAAK,iBAAiB,IAAI,gBAAgB;AAAA,IAEvE;AAAA;AAAA;;;ACjKA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,kBAAkB;AAE1B,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAQlB,aAAS,gBAAgB,SAAS;AAChC,aAAO;AAAA,QACL,MAAM,MAAM;AACV,gBAAM,OAAO,QAAQ,QAAQ;AAC7B,gBAAM,eAAe,KAAK;AAE1B,cAAI,MAAM;AACR,iBAAK,GAAG,YAAY,aAAa,GAAG,YAAY,cAAc,IAAI,CAAC,GAAG;AACpE,kBAAI,cAAc;AAChB,sBAAM,YAAY,KAAK,KAAK;AAC5B,sBAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,UAAU,SAAS,2CAA2C,OAAO;AAAA,oBACrE;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF,WAAW,CAAC,cAAc;AACxB,oBAAM,YAAY,KAAK,KAAK;AAC5B,oBAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,UAAU,SAAS,cAAc,OAAO,uDAAuD,SAAS;AAAA,kBACxG;AAAA,oBACE,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACtDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,+BAA+B;AAEvC,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,iBAAiB;AAUrB,aAAS,6BAA6B,SAAS;AAC7C,aAAO;AAAA,QACL,oBAAoB,MAAM;AACxB,cAAI,KAAK,cAAc,gBAAgB;AACrC,kBAAM,SAAS,QAAQ,UAAU;AACjC,kBAAM,mBAAmB,OAAO,oBAAoB;AAEpD,gBAAI,kBAAkB;AACpB,oBAAM,gBAAgB,KAAK,OAAO,KAAK,KAAK,QAAQ;AACpD,oBAAM,iBAAiB,uBAAO,OAAO,IAAI;AACzC,oBAAMC,YAAW,QAAQ,YAAY;AACrC,oBAAM,YAAY,uBAAO,OAAO,IAAI;AAEpC,yBAAW,cAAcA,UAAS,aAAa;AAC7C,oBAAI,WAAW,SAAS,OAAO,KAAK,qBAAqB;AACvD,4BAAU,WAAW,KAAK,KAAK,IAAI;AAAA,gBACrC;AAAA,cACF;AAEA,oBAAM,UAAU,GAAG,eAAe;AAAA,gBAChC;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,KAAK;AAAA,cACP;AAEA,kBAAI,OAAO,OAAO,GAAG;AACnB,sBAAM,sBAAsB,CAAC,GAAG,OAAO,OAAO,CAAC;AAC/C,sBAAM,2BAA2B,oBAAoB,MAAM,CAAC;AAC5D,sBAAM,uBAAuB,yBAAyB,KAAK;AAC3D,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,iBAAiB,OACb,iBAAiB,aAAa,4CAC9B;AAAA,oBACJ;AAAA,sBACE,OAAO;AAAA,oBACT;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAEA,yBAAW,cAAc,OAAO,OAAO,GAAG;AACxC,sBAAM,QAAQ,WAAW,CAAC;AAC1B,sBAAM,YAAY,MAAM,KAAK;AAE7B,oBAAI,UAAU,WAAW,IAAI,GAAG;AAC9B,0BAAQ;AAAA,oBACN,IAAI,cAAc;AAAA,sBAChB,iBAAiB,OACb,iBAAiB,aAAa,wDAC9B;AAAA,sBACJ;AAAA,wBACE,OAAO;AAAA,sBACT;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACrFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,UAAU;AAKlB,aAAS,QAAQ,MAAM,OAAO;AAC5B,YAAM,SAAS,oBAAI,IAAI;AAEvB,iBAAW,QAAQ,MAAM;AACvB,cAAM,MAAM,MAAM,IAAI;AACtB,cAAM,QAAQ,OAAO,IAAI,GAAG;AAE5B,YAAI,UAAU,QAAW;AACvB,iBAAO,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,QACxB,OAAO;AACL,gBAAM,KAAK,IAAI;AAAA,QACjB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACzBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oCAAoC;AAE5C,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAQpB,aAAS,kCAAkC,SAAS;AAClD,aAAO;AAAA,QACL,oBAAoB,eAAe;AACjC,cAAI;AAKJ,gBAAM,iBACH,wBAAwB,cAAc,eAAe,QACtD,0BAA0B,SACtB,wBACA,CAAC;AACP,iBAAO,mBAAmB,IAAI,cAAc,KAAK,KAAK,IAAI,aAAa;AAAA,QACzE;AAAA,QAEA,yBAAyB;AAAA,QACzB,wBAAwB;AAAA,QACxB,sBAAsB;AAAA,QACtB,qBAAqB;AAAA,MACvB;AAEA,eAAS,2BAA2B,UAAU;AAC5C,YAAI;AAEJ,cAAM,WAAW,SAAS,KAAK;AAI/B,cAAM,cACH,mBAAmB,SAAS,YAAY,QACzC,qBAAqB,SACjB,mBACA,CAAC;AAEP,mBAAW,YAAY,YAAY;AACjC,cAAI;AAEJ,gBAAM,YAAY,SAAS,KAAK;AAIhC,gBAAM,iBACH,sBAAsB,SAAS,eAAe,QAC/C,wBAAwB,SACpB,sBACA,CAAC;AACP,6BAAmB,GAAG,QAAQ,IAAI,SAAS,IAAI,aAAa;AAAA,QAC9D;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,mBAAmB,YAAY,eAAe;AACrD,cAAM,YAAY,GAAG,SAAS;AAAA,UAC5B;AAAA,UACA,CAAC,QAAQ,IAAI,KAAK;AAAA,QACpB;AAEA,mBAAW,CAAC,SAAS,QAAQ,KAAK,UAAU;AAC1C,cAAI,SAAS,SAAS,GAAG;AACvB,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,aAAa,UAAU,IAAI,OAAO;AAAA,gBAClC;AAAA,kBACE,OAAO,SAAS,IAAI,CAAC,SAAS,KAAK,IAAI;AAAA,gBACzC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AC3FA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAUpB,aAAS,wBAAwB,SAAS;AACxC,aAAO;AAAA,QACL,OAAO;AAAA,QACP,WAAW;AAAA,MACb;AAEA,eAAS,mBAAmB,YAAY;AACtC,YAAI;AAKJ,cAAM,iBACH,wBAAwB,WAAW,eAAe,QACnD,0BAA0B,SACtB,wBACA,CAAC;AACP,cAAM,YAAY,GAAG,SAAS;AAAA,UAC5B;AAAA,UACA,CAAC,QAAQ,IAAI,KAAK;AAAA,QACpB;AAEA,mBAAW,CAAC,SAAS,QAAQ,KAAK,UAAU;AAC1C,cAAI,SAAS,SAAS,GAAG;AACvB,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,yCAAyC,OAAO;AAAA,gBAChD;AAAA,kBACE,OAAO,SAAS,IAAI,CAAC,SAAS,KAAK,IAAI;AAAA,gBACzC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACtDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AAOpB,aAAS,yBAAyB,SAAS;AACzC,YAAM,sBAAsB,uBAAO,OAAO,IAAI;AAC9C,YAAM,SAAS,QAAQ,UAAU;AACjC,aAAO;AAAA,QACL,oBAAoB,MAAM;AACxB,gBAAM,gBAAgB,KAAK,KAAK;AAEhC,cACE,WAAW,QACX,WAAW,UACX,OAAO,aAAa,aAAa,GACjC;AACA,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,eAAe,aAAa;AAAA,gBAC5B;AAAA,kBACE,OAAO,KAAK;AAAA,gBACd;AAAA,cACF;AAAA,YACF;AACA;AAAA,UACF;AAEA,cAAI,oBAAoB,aAAa,GAAG;AACtC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,2CAA2C,aAAa;AAAA,gBACxD;AAAA,kBACE,OAAO,CAAC,oBAAoB,aAAa,GAAG,KAAK,IAAI;AAAA,gBACvD;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,gCAAoB,aAAa,IAAI,KAAK;AAAA,UAC5C;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACrDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,kCAAkC;AAE1C,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,cAAc;AAUlB,aAAS,gCAAgC,SAAS;AAChD,YAAM,qBAAqB,uBAAO,OAAO,IAAI;AAC7C,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,oBAAoB,SACtB,OAAO,cAAc,IACrB,YAAY;AAEhB,iBAAW,aAAa,mBAAmB;AACzC,2BAAmB,UAAU,IAAI,IAAI,CAAC,UAAU;AAAA,MAClD;AAEA,YAAM,iBAAiB,QAAQ,YAAY,EAAE;AAE7C,iBAAW,OAAO,gBAAgB;AAChC,YAAI,IAAI,SAAS,OAAO,KAAK,sBAAsB;AACjD,6BAAmB,IAAI,KAAK,KAAK,IAAI,CAAC,IAAI;AAAA,QAC5C;AAAA,MACF;AAEA,YAAM,mBAAmB,uBAAO,OAAO,IAAI;AAC3C,YAAM,oBAAoB,uBAAO,OAAO,IAAI;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA,QAIL,MAAM,MAAM;AACV,cAAI,EAAE,gBAAgB,SAAS,CAAC,KAAK,YAAY;AAC/C;AAAA,UACF;AAEA,cAAI;AAEJ,cACE,KAAK,SAAS,OAAO,KAAK,qBAC1B,KAAK,SAAS,OAAO,KAAK,kBAC1B;AACA,6BAAiB;AAAA,UACnB,YACG,GAAG,YAAY,sBAAsB,IAAI,MACzC,GAAG,YAAY,qBAAqB,IAAI,GACzC;AACA,kBAAM,WAAW,KAAK,KAAK;AAC3B,6BAAiB,kBAAkB,QAAQ;AAE3C,gBAAI,mBAAmB,QAAW;AAChC,gCAAkB,QAAQ,IAAI,iBAAiB,uBAAO,OAAO,IAAI;AAAA,YACnE;AAAA,UACF,OAAO;AACL,6BAAiB,uBAAO,OAAO,IAAI;AAAA,UACrC;AAEA,qBAAW,aAAa,KAAK,YAAY;AACvC,kBAAM,gBAAgB,UAAU,KAAK;AAErC,gBAAI,mBAAmB,aAAa,GAAG;AACrC,kBAAI,eAAe,aAAa,GAAG;AACjC,wBAAQ;AAAA,kBACN,IAAI,cAAc;AAAA,oBAChB,mBAAmB,aAAa;AAAA,oBAChC;AAAA,sBACE,OAAO,CAAC,eAAe,aAAa,GAAG,SAAS;AAAA,oBAClD;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,OAAO;AACL,+BAAe,aAAa,IAAI;AAAA,cAClC;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC9FA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAOlB,aAAS,yBAAyB,SAAS;AACzC,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,kBAAkB,SAAS,OAAO,WAAW,IAAI,uBAAO,OAAO,IAAI;AACzE,YAAM,kBAAkB,uBAAO,OAAO,IAAI;AAC1C,aAAO;AAAA,QACL,oBAAoB;AAAA,QACpB,mBAAmB;AAAA,MACrB;AAEA,eAAS,qBAAqB,MAAM;AAClC,YAAI;AAEJ,cAAM,WAAW,KAAK,KAAK;AAE3B,YAAI,CAAC,gBAAgB,QAAQ,GAAG;AAC9B,0BAAgB,QAAQ,IAAI,uBAAO,OAAO,IAAI;AAAA,QAChD;AAIA,cAAM,cACH,eAAe,KAAK,YAAY,QAAQ,iBAAiB,SACtD,eACA,CAAC;AACP,cAAM,aAAa,gBAAgB,QAAQ;AAE3C,mBAAW,YAAY,YAAY;AACjC,gBAAM,YAAY,SAAS,KAAK;AAChC,gBAAM,eAAe,gBAAgB,QAAQ;AAE7C,eACG,GAAG,YAAY,YAAY,YAAY,KACxC,aAAa,SAAS,SAAS,GAC/B;AACA,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,eAAe,QAAQ,IAAI,SAAS;AAAA,gBACpC;AAAA,kBACE,OAAO,SAAS;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,WAAW,SAAS,GAAG;AAChC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,eAAe,QAAQ,IAAI,SAAS;AAAA,gBACpC;AAAA,kBACE,OAAO,CAAC,WAAW,SAAS,GAAG,SAAS,IAAI;AAAA,gBAC9C;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,uBAAW,SAAS,IAAI,SAAS;AAAA,UACnC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AC1EA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iCAAiC;AAEzC,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAOlB,aAAS,+BAA+B,SAAS;AAC/C,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,kBAAkB,SAAS,OAAO,WAAW,IAAI,uBAAO,OAAO,IAAI;AACzE,YAAM,kBAAkB,uBAAO,OAAO,IAAI;AAC1C,aAAO;AAAA,QACL,2BAA2B;AAAA,QAC3B,0BAA0B;AAAA,QAC1B,yBAAyB;AAAA,QACzB,wBAAwB;AAAA,QACxB,sBAAsB;AAAA,QACtB,qBAAqB;AAAA,MACvB;AAEA,eAAS,qBAAqB,MAAM;AAClC,YAAI;AAEJ,cAAM,WAAW,KAAK,KAAK;AAE3B,YAAI,CAAC,gBAAgB,QAAQ,GAAG;AAC9B,0BAAgB,QAAQ,IAAI,uBAAO,OAAO,IAAI;AAAA,QAChD;AAIA,cAAM,cACH,eAAe,KAAK,YAAY,QAAQ,iBAAiB,SACtD,eACA,CAAC;AACP,cAAM,aAAa,gBAAgB,QAAQ;AAE3C,mBAAW,YAAY,YAAY;AACjC,gBAAM,YAAY,SAAS,KAAK;AAEhC,cAAI,SAAS,gBAAgB,QAAQ,GAAG,SAAS,GAAG;AAClD,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,UAAU,QAAQ,IAAI,SAAS;AAAA,gBAC/B;AAAA,kBACE,OAAO,SAAS;AAAA,gBAClB;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,WAAW,SAAS,GAAG;AAChC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,UAAU,QAAQ,IAAI,SAAS;AAAA,gBAC/B;AAAA,kBACE,OAAO,CAAC,WAAW,SAAS,GAAG,SAAS,IAAI;AAAA,gBAC9C;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,uBAAW,SAAS,IAAI,SAAS;AAAA,UACnC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,SAAS,MAAM,WAAW;AACjC,WACG,GAAG,YAAY,cAAc,IAAI,MACjC,GAAG,YAAY,iBAAiB,IAAI,MACpC,GAAG,YAAY,mBAAmB,IAAI,GACvC;AACA,eAAO,KAAK,UAAU,EAAE,SAAS,KAAK;AAAA,MACxC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACtFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,gBAAgB;AASpB,aAAS,wBAAwB,SAAS;AACxC,YAAM,qBAAqB,uBAAO,OAAO,IAAI;AAC7C,aAAO;AAAA,QACL,qBAAqB,MAAM;AAAA,QAE3B,mBAAmB,MAAM;AACvB,gBAAM,eAAe,KAAK,KAAK;AAE/B,cAAI,mBAAmB,YAAY,GAAG;AACpC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,yCAAyC,YAAY;AAAA,gBACrD;AAAA,kBACE,OAAO,CAAC,mBAAmB,YAAY,GAAG,KAAK,IAAI;AAAA,gBACrD;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,+BAAmB,YAAY,IAAI,KAAK;AAAA,UAC1C;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACxCA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,4BAA4B;AAEpC,QAAI,aAAa;AAEjB,QAAI,gBAAgB;AAUpB,aAAS,0BAA0B,SAAS;AAC1C,YAAM,iBAAiB,CAAC;AACxB,UAAI,aAAa,uBAAO,OAAO,IAAI;AACnC,aAAO;AAAA,QACL,aAAa;AAAA,UACX,QAAQ;AACN,2BAAe,KAAK,UAAU;AAC9B,yBAAa,uBAAO,OAAO,IAAI;AAAA,UACjC;AAAA,UAEA,QAAQ;AACN,kBAAM,iBAAiB,eAAe,IAAI;AAC1C,+BAAmB,GAAG,WAAW,WAAW,KAAK;AACjD,yBAAa;AAAA,UACf;AAAA,QACF;AAAA,QAEA,YAAY,MAAM;AAChB,gBAAM,YAAY,KAAK,KAAK;AAE5B,cAAI,WAAW,SAAS,GAAG;AACzB,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,4CAA4C,SAAS;AAAA,gBACrD;AAAA,kBACE,OAAO,CAAC,WAAW,SAAS,GAAG,KAAK,IAAI;AAAA,gBAC1C;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,uBAAW,SAAS,IAAI,KAAK;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACrDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AASpB,aAAS,yBAAyB,SAAS;AACzC,YAAM,sBAAsB,uBAAO,OAAO,IAAI;AAC9C,aAAO;AAAA,QACL,oBAAoB,MAAM;AACxB,gBAAM,gBAAgB,KAAK;AAE3B,cAAI,eAAe;AACjB,gBAAI,oBAAoB,cAAc,KAAK,GAAG;AAC5C,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,0CAA0C,cAAc,KAAK;AAAA,kBAC7D;AAAA,oBACE,OAAO;AAAA,sBACL,oBAAoB,cAAc,KAAK;AAAA,sBACvC;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF,OAAO;AACL,kCAAoB,cAAc,KAAK,IAAI;AAAA,YAC7C;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA,QAEA,oBAAoB,MAAM;AAAA,MAC5B;AAAA,IACF;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AAEnC,QAAI,gBAAgB;AAOpB,aAAS,yBAAyB,SAAS;AACzC,YAAM,SAAS,QAAQ,UAAU;AACjC,YAAM,wBAAwB,uBAAO,OAAO,IAAI;AAChD,YAAM,yBAAyB,SAC3B;AAAA,QACE,OAAO,OAAO,aAAa;AAAA,QAC3B,UAAU,OAAO,gBAAgB;AAAA,QACjC,cAAc,OAAO,oBAAoB;AAAA,MAC3C,IACA,CAAC;AACL,aAAO;AAAA,QACL,kBAAkB;AAAA,QAClB,iBAAiB;AAAA,MACnB;AAEA,eAAS,oBAAoB,MAAM;AACjC,YAAI;AAKJ,cAAM,uBACH,uBAAuB,KAAK,oBAAoB,QACjD,yBAAyB,SACrB,uBACA,CAAC;AAEP,mBAAW,iBAAiB,qBAAqB;AAC/C,gBAAM,YAAY,cAAc;AAChC,gBAAM,8BAA8B,sBAAsB,SAAS;AAEnE,cAAI,uBAAuB,SAAS,GAAG;AACrC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,YAAY,SAAS;AAAA,gBACrB;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF,WAAW,6BAA6B;AACtC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,yBAAyB,SAAS;AAAA,gBAClC;AAAA,kBACE,OAAO,CAAC,6BAA6B,aAAa;AAAA,gBACpD;AAAA,cACF;AAAA,YACF;AAAA,UACF,OAAO;AACL,kCAAsB,SAAS,IAAI;AAAA,UACrC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;ACtEA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,sBAAsB;AAE9B,QAAI,gBAAgB;AAOpB,aAAS,oBAAoB,SAAS;AACpC,YAAM,iBAAiB,uBAAO,OAAO,IAAI;AACzC,YAAM,SAAS,QAAQ,UAAU;AACjC,aAAO;AAAA,QACL,sBAAsB;AAAA,QACtB,sBAAsB;AAAA,QACtB,yBAAyB;AAAA,QACzB,qBAAqB;AAAA,QACrB,oBAAoB;AAAA,QACpB,2BAA2B;AAAA,MAC7B;AAEA,eAAS,cAAc,MAAM;AAC3B,cAAM,WAAW,KAAK,KAAK;AAE3B,YAAI,WAAW,QAAQ,WAAW,UAAU,OAAO,QAAQ,QAAQ,GAAG;AACpE,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,SAAS,QAAQ;AAAA,cACjB;AAAA,gBACE,OAAO,KAAK;AAAA,cACd;AAAA,YACF;AAAA,UACF;AACA;AAAA,QACF;AAEA,YAAI,eAAe,QAAQ,GAAG;AAC5B,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,qCAAqC,QAAQ;AAAA,cAC7C;AAAA,gBACE,OAAO,CAAC,eAAe,QAAQ,GAAG,KAAK,IAAI;AAAA,cAC7C;AAAA,YACF;AAAA,UACF;AAAA,QACF,OAAO;AACL,yBAAe,QAAQ,IAAI,KAAK;AAAA,QAClC;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;ACxDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAOpB,aAAS,wBAAwB,SAAS;AACxC,aAAO;AAAA,QACL,oBAAoB,eAAe;AACjC,cAAI;AAKJ,gBAAM,uBACH,wBAAwB,cAAc,yBAAyB,QAChE,0BAA0B,SACtB,wBACA,CAAC;AACP,gBAAM,2BAA2B,GAAG,SAAS;AAAA,YAC3C;AAAA,YACA,CAAC,SAAS,KAAK,SAAS,KAAK;AAAA,UAC/B;AAEA,qBAAW,CAAC,cAAc,aAAa,KAAK,yBAAyB;AACnE,gBAAI,cAAc,SAAS,GAAG;AAC5B,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,0CAA0C,YAAY;AAAA,kBACtD;AAAA,oBACE,OAAO,cAAc,IAAI,CAAC,SAAS,KAAK,SAAS,IAAI;AAAA,kBACvD;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AChDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,cAAc;AAElB,QAAI,WAAW;AAEf,QAAI,UAAU;AAEd,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAUlB,aAAS,wBAAwB,SAAS;AACxC,UAAI,sBAAsB,CAAC;AAC3B,aAAO;AAAA,QACL,qBAAqB;AAAA,UACnB,QAAQ;AACN,kCAAsB,CAAC;AAAA,UACzB;AAAA,QACF;AAAA,QAEA,mBAAmB,YAAY;AAC7B,8BAAoB,WAAW,SAAS,KAAK,KAAK,IAAI;AAAA,QACxD;AAAA,QAEA,UAAU,MAAM;AAGd,gBAAM,QAAQ,GAAG,YAAY;AAAA,YAC3B,QAAQ,mBAAmB;AAAA,UAC7B;AAEA,cAAI,EAAE,GAAG,YAAY,YAAY,IAAI,GAAG;AACtC,6BAAiB,SAAS,IAAI;AAC9B,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,QAEA,YAAY,MAAM;AAChB,gBAAM,QAAQ,GAAG,YAAY,cAAc,QAAQ,aAAa,CAAC;AAEjE,cAAI,EAAE,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC7C,6BAAiB,SAAS,IAAI;AAC9B,mBAAO;AAAA,UACT;AAEA,gBAAM,gBAAgB,GAAG,QAAQ;AAAA,YAC/B,KAAK;AAAA,YACL,CAAC,UAAU,MAAM,KAAK;AAAA,UACxB;AAEA,qBAAW,YAAY,OAAO,OAAO,KAAK,UAAU,CAAC,GAAG;AACtD,kBAAM,YAAY,aAAa,SAAS,IAAI;AAE5C,gBAAI,CAAC,cAAc,GAAG,YAAY,sBAAsB,QAAQ,GAAG;AACjE,oBAAM,WAAW,GAAG,SAAS,SAAS,SAAS,IAAI;AACnD,sBAAQ;AAAA,gBACN,IAAI,cAAc;AAAA,kBAChB,UAAU,KAAK,IAAI,IAAI,SAAS,IAAI,uBAAuB,OAAO;AAAA,kBAClE;AAAA,oBACE,OAAO;AAAA,kBACT;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,cAAI,KAAK,SAAS;AAChB;AAAA,cACE;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,cACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,YAAY,MAAM;AAChB,gBAAM,cAAc,GAAG,YAAY;AAAA,YACjC,QAAQ,mBAAmB;AAAA,UAC7B;AACA,gBAAM,YAAY,QAAQ,aAAa;AAEvC,cAAI,CAAC,cAAc,GAAG,YAAY,mBAAmB,UAAU,GAAG;AAChE,kBAAM,eAAe,GAAG,gBAAgB;AAAA,cACtC,KAAK,KAAK;AAAA,cACV,OAAO,KAAK,WAAW,UAAU,CAAC;AAAA,YACpC;AACA,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,UAAU,KAAK,KAAK,KAAK,6BAA6B,WAAW,IAAI,QAClE,GAAG,YAAY,YAAY,WAAW;AAAA,gBACzC;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,UAAU,MAAM;AACd,gBAAM,OAAO,QAAQ,aAAa;AAElC,eAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AACxC,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,4BAA4B,GAAG,SAAS;AAAA,kBACtC;AAAA,gBACF,CAAC,aAAa,GAAG,SAAS,OAAO,IAAI,CAAC;AAAA,gBACtC;AAAA,kBACE,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,WAAW,CAAC,SAAS,iBAAiB,SAAS,IAAI;AAAA,QACnD,UAAU,CAAC,SAAS,iBAAiB,SAAS,IAAI;AAAA,QAClD,YAAY,CAAC,SAAS,iBAAiB,SAAS,IAAI;AAAA,QACpD,aAAa,CAAC,SAAS,iBAAiB,SAAS,IAAI;AAAA,QACrD,cAAc,CAAC,SAAS,iBAAiB,SAAS,IAAI;AAAA,MACxD;AAAA,IACF;AAMA,aAAS,iBAAiB,SAAS,MAAM;AAEvC,YAAM,eAAe,QAAQ,aAAa;AAE1C,UAAI,CAAC,cAAc;AACjB;AAAA,MACF;AAEA,YAAM,QAAQ,GAAG,YAAY,cAAc,YAAY;AAEvD,UAAI,EAAE,GAAG,YAAY,YAAY,IAAI,GAAG;AACtC,cAAM,WAAW,GAAG,SAAS,SAAS,YAAY;AAClD,gBAAQ;AAAA,UACN,IAAI,cAAc;AAAA,YAChB,2BAA2B,OAAO,aAAa,GAAG,SAAS;AAAA,cACzD;AAAA,YACF,CAAC;AAAA,YACD;AAAA,cACE,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAGA,UAAI;AACF,cAAM,cAAc,KAAK;AAAA,UACvB;AAAA,UACA;AAAA;AAAA,QAEF;AAEA,YAAI,gBAAgB,QAAW;AAC7B,gBAAM,WAAW,GAAG,SAAS,SAAS,YAAY;AAClD,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,2BAA2B,OAAO,aAAa,GAAG,SAAS;AAAA,gBACzD;AAAA,cACF,CAAC;AAAA,cACD;AAAA,gBACE,OAAO;AAAA,cACT;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF,SAAS,OAAO;AACd,cAAM,WAAW,GAAG,SAAS,SAAS,YAAY;AAElD,YAAI,iBAAiB,cAAc,cAAc;AAC/C,kBAAQ,YAAY,KAAK;AAAA,QAC3B,OAAO;AACL,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,2BAA2B,OAAO,aAAa,GAAG,SAAS;AAAA,gBACzD;AAAA,cACF,CAAC,OAAO,MAAM;AAAA,cACd;AAAA,gBACE,OAAO;AAAA,gBACP,eAAe;AAAA,cACjB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,yBACP,SACA,MACA,MACA,cACA,qBACA;AACA,UAAI;AAEJ,YAAM,OAAO,OAAO,KAAK,YAAY;AACrC,YAAM,uBAAuB,KAAK,WAAW;AAE7C,UAAI,sBAAsB;AACxB,gBAAQ;AAAA,UACN,IAAI,cAAc;AAAA,YAChB,uBAAuB,KAAK,IAAI;AAAA,YAChC;AAAA,cACE,OAAO,CAAC,IAAI;AAAA,YACd;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAEA,YAAM,SACH,sBAAsB,aAAa,KAAK,CAAC,CAAC,OAAO,QAClD,wBAAwB,SACpB,SACA,oBAAoB;AAC1B,YAAM,gBAAgB,CAAC,SAAS,MAAM,SAAS,OAAO,KAAK;AAC3D,YAAM,cACH,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM,UACrD,OAAO,KAAK;AAEd,UAAI,eAAe;AACjB,gBAAQ;AAAA,UACN,IAAI,cAAc;AAAA,YAChB,UAAU,KAAK,IAAI,IAAI,KAAK,CAAC,CAAC;AAAA,YAC9B;AAAA,cACE,OAAO,CAAC,IAAI;AAAA,YACd;AAAA,UACF;AAAA,QACF;AACA;AAAA,MACF;AAEA,UAAI,YAAY;AACd,cAAM,eAAe,MAAM,KAAK;AAChC,cAAM,aAAa,oBAAoB,YAAY;AACnD,cAAM,qBACJ,WAAW,KAAK,SAAS,OAAO,KAAK;AAEvC,YAAI,oBAAoB;AACtB,kBAAQ;AAAA,YACN,IAAI,cAAc;AAAA,cAChB,aAAa,YAAY,6DAA6D,KAAK,IAAI;AAAA,cAC/F;AAAA,gBACE,OAAO,CAAC,IAAI;AAAA,cACd;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACvRA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,6BAA6B;AAErC,QAAI,gBAAgB;AAEpB,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,eAAe;AAUnB,aAAS,2BAA2B,SAAS;AAC3C,aAAO;AAAA,QACL,mBAAmB,MAAM;AACvB,gBAAM,QAAQ,GAAG,aAAa;AAAA,YAC5B,QAAQ,UAAU;AAAA,YAClB,KAAK;AAAA,UACP;AAEA,cAAI,SAAS,UAAa,EAAE,GAAG,YAAY,aAAa,IAAI,GAAG;AAC7D,kBAAM,eAAe,KAAK,SAAS,KAAK;AACxC,kBAAM,YAAY,GAAG,SAAS,OAAO,KAAK,IAAI;AAC9C,oBAAQ;AAAA,cACN,IAAI,cAAc;AAAA,gBAChB,cAAc,YAAY,+BAA+B,QAAQ;AAAA,gBACjE;AAAA,kBACE,OAAO,KAAK;AAAA,gBACd;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;AC7CA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iCAAiC;AAEzC,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,mBAAmB;AAEvB,QAAI,eAAe;AASnB,aAAS,+BAA+B,SAAS;AAC/C,UAAI,YAAY,uBAAO,OAAO,IAAI;AAClC,aAAO;AAAA,QACL,qBAAqB;AAAA,UACnB,QAAQ;AACN,wBAAY,uBAAO,OAAO,IAAI;AAAA,UAChC;AAAA,UAEA,MAAM,WAAW;AACf,kBAAM,SAAS,QAAQ,2BAA2B,SAAS;AAE3D,uBAAW,EAAE,MAAM,MAAM,aAAa,KAAK,QAAQ;AACjD,oBAAM,UAAU,KAAK,KAAK;AAC1B,oBAAM,SAAS,UAAU,OAAO;AAEhC,kBAAI,UAAU,MAAM;AAMlB,sBAAM,SAAS,QAAQ,UAAU;AACjC,sBAAM,WAAW,GAAG,aAAa,aAAa,QAAQ,OAAO,IAAI;AAEjE,oBACE,WACA,CAAC;AAAA,kBACC;AAAA,kBACA;AAAA,kBACA,OAAO;AAAA,kBACP;AAAA,kBACA;AAAA,gBACF,GACA;AACA,wBAAM,cAAc,GAAG,SAAS,SAAS,OAAO;AAChD,wBAAM,WAAW,GAAG,SAAS,SAAS,IAAI;AAC1C,0BAAQ;AAAA,oBACN,IAAI,cAAc;AAAA,sBAChB,cAAc,OAAO,cAAc,UAAU,sCAAsC,OAAO;AAAA,sBAC1F;AAAA,wBACE,OAAO,CAAC,QAAQ,IAAI;AAAA,sBACtB;AAAA,oBACF;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QAEA,mBAAmB,MAAM;AACvB,oBAAU,KAAK,SAAS,KAAK,KAAK,IAAI;AAAA,QACxC;AAAA,MACF;AAAA,IACF;AAOA,aAAS,qBACP,QACA,SACA,iBACA,cACA,sBACA;AACA,WACG,GAAG,YAAY,eAAe,YAAY,KAC3C,EAAE,GAAG,YAAY,eAAe,OAAO,GACvC;AACA,cAAM,iCACJ,mBAAmB,QAAQ,gBAAgB,SAAS,OAAO,KAAK;AAClE,cAAM,0BAA0B,yBAAyB;AAEzD,YAAI,CAAC,kCAAkC,CAAC,yBAAyB;AAC/D,iBAAO;AAAA,QACT;AAEA,cAAM,uBAAuB,aAAa;AAC1C,gBAAQ,GAAG,iBAAiB;AAAA,UAC1B;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,cAAQ,GAAG,iBAAiB,iBAAiB,QAAQ,SAAS,YAAY;AAAA,IAC5E;AAAA;AAAA;;;ACnHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBACN,QAAQ,iBACR,QAAQ,mBACN;AAEJ,QAAI,6BAA6B;AAEjC,QAAI,2BAA2B;AAE/B,QAAI,iCAAiC;AAErC,QAAI,0BAA0B;AAE9B,QAAI,uBAAuB;AAE3B,QAAI,0BAA0B;AAE9B,QAAI,sBAAsB;AAE1B,QAAI,8BAA8B;AAElC,QAAI,4BAA4B;AAEhC,QAAI,6BAA6B;AAEjC,QAAI,wBAAwB;AAE5B,QAAI,4BAA4B;AAEhC,QAAI,yBAAyB;AAE7B,QAAI,yBAAyB;AAE7B,QAAI,oCAAoC;AAExC,QAAI,+BAA+B;AAEnC,QAAI,8BAA8B;AAElC,QAAI,iCAAiC;AAErC,QAAI,mBAAmB;AAEvB,QAAI,gCAAgC;AAEpC,QAAI,qCAAqC;AAEzC,QAAI,2BAA2B;AAE/B,QAAI,4BAA4B;AAEhC,QAAI,mCAAmC;AAEvC,QAAI,4BAA4B;AAEhC,QAAI,kCAAkC;AAEtC,QAAI,2BAA2B;AAE/B,QAAI,6BAA6B;AAEjC,QAAI,4BAA4B;AAEhC,QAAI,4BAA4B;AAEhC,QAAI,uBAAuB;AAE3B,QAAI,2BAA2B;AAE/B,QAAI,2BAA2B;AAE/B,QAAI,8BAA8B;AAElC,QAAI,kCAAkC;AAmCtC,QAAM,mBAAmB,OAAO,OAAO;AAAA,MACrC,2BAA2B;AAAA,IAC7B,CAAC;AAQD,YAAQ,mBAAmB;AAC3B,QAAM,iBAAiB,OAAO,OAAO;AAAA,MACnC,2BAA2B;AAAA,MAC3B,0BAA0B;AAAA,MAC1B,4BAA4B;AAAA,MAC5B,8BAA8B;AAAA,MAC9B,oBAAoB;AAAA,MACpB,+BAA+B;AAAA,MAC/B,4BAA4B;AAAA,MAC5B,iBAAiB;AAAA,MACjB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,wBAAwB;AAAA,MACxB,uBAAuB;AAAA,MACvB,6BAA6B;AAAA,MAC7B,sBAAsB;AAAA,MACtB,yBAAyB;AAAA,MACzB,0BAA0B;AAAA,MAC1B,uBAAuB;AAAA,MACvB,qBAAqB;AAAA,MACrB,iCAAiC;AAAA,MACjC,wBAAwB;AAAA,MACxB,yBAAyB;AAAA,MACzB,yBAAyB;AAAA,MACzB,+BAA+B;AAAA,MAC/B,gCAAgC;AAAA,MAChC,kCAAkC;AAAA,MAClC,2BAA2B;AAAA,MAC3B,GAAG;AAAA,IACL,CAAC;AAKD,YAAQ,iBAAiB;AACzB,QAAM,oBAAoB,OAAO,OAAO;AAAA,MACtC,0BAA0B;AAAA,MAC1B,0BAA0B;AAAA,MAC1B,qBAAqB;AAAA,MACrB,0BAA0B;AAAA,MAC1B,gCAAgC;AAAA,MAChC,mCAAmC;AAAA,MACnC,0BAA0B;AAAA,MAC1B,oBAAoB;AAAA,MACpB,qBAAqB;AAAA,MACrB,iCAAiC;AAAA,MACjC,4BAA4B;AAAA,MAC5B,wBAAwB;AAAA,MACxB,yBAAyB;AAAA,MACzB,2BAA2B;AAAA,MAC3B,+BAA+B;AAAA,IACjC,CAAC;AACD,YAAQ,oBAAoB;AAAA;AAAA;;;AC/K5B;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,oBACN,QAAQ,uBACR,QAAQ,uBACN;AAEJ,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,YAAY;AAOhB,QAAM,uBAAN,MAA2B;AAAA,MACzB,YAAY,KAAK,SAAS;AACxB,aAAK,OAAO;AACZ,aAAK,aAAa;AAClB,aAAK,mBAAmB,oBAAI,IAAI;AAChC,aAAK,kCAAkC,oBAAI,IAAI;AAC/C,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY,OAAO;AACjB,aAAK,SAAS,KAAK;AAAA,MACrB;AAAA,MAEA,cAAc;AACZ,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,YAAY,MAAM;AAChB,YAAI;AAEJ,YAAI,KAAK,YAAY;AACnB,sBAAY,KAAK;AAAA,QACnB,OAAO;AACL,sBAAY,uBAAO,OAAO,IAAI;AAE9B,qBAAW,WAAW,KAAK,YAAY,EAAE,aAAa;AACpD,gBAAI,QAAQ,SAAS,OAAO,KAAK,qBAAqB;AACpD,wBAAU,QAAQ,KAAK,KAAK,IAAI;AAAA,YAClC;AAAA,UACF;AAEA,eAAK,aAAa;AAAA,QACpB;AAEA,eAAO,UAAU,IAAI;AAAA,MACvB;AAAA,MAEA,mBAAmB,MAAM;AACvB,YAAI,UAAU,KAAK,iBAAiB,IAAI,IAAI;AAE5C,YAAI,CAAC,SAAS;AACZ,oBAAU,CAAC;AACX,gBAAM,cAAc,CAAC,IAAI;AACzB,cAAI;AAEJ,iBAAQ,MAAM,YAAY,IAAI,GAAI;AAChC,uBAAW,aAAa,IAAI,YAAY;AACtC,kBAAI,UAAU,SAAS,OAAO,KAAK,iBAAiB;AAClD,wBAAQ,KAAK,SAAS;AAAA,cACxB,WAAW,UAAU,cAAc;AACjC,4BAAY,KAAK,UAAU,YAAY;AAAA,cACzC;AAAA,YACF;AAAA,UACF;AAEA,eAAK,iBAAiB,IAAI,MAAM,OAAO;AAAA,QACzC;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,kCAAkC,WAAW;AAC3C,YAAI,YAAY,KAAK,gCAAgC,IAAI,SAAS;AAElE,YAAI,CAAC,WAAW;AACd,sBAAY,CAAC;AACb,gBAAM,iBAAiB,uBAAO,OAAO,IAAI;AACzC,gBAAM,eAAe,CAAC,UAAU,YAAY;AAC5C,cAAI;AAEJ,iBAAQ,OAAO,aAAa,IAAI,GAAI;AAClC,uBAAW,UAAU,KAAK,mBAAmB,IAAI,GAAG;AAClD,oBAAM,WAAW,OAAO,KAAK;AAE7B,kBAAI,eAAe,QAAQ,MAAM,MAAM;AACrC,+BAAe,QAAQ,IAAI;AAC3B,sBAAM,WAAW,KAAK,YAAY,QAAQ;AAE1C,oBAAI,UAAU;AACZ,4BAAU,KAAK,QAAQ;AACvB,+BAAa,KAAK,SAAS,YAAY;AAAA,gBACzC;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,eAAK,gCAAgC,IAAI,WAAW,SAAS;AAAA,QAC/D;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,YAAQ,uBAAuB;AAE/B,QAAM,uBAAN,cAAmC,qBAAqB;AAAA,MACtD,YAAY,KAAK,QAAQ,SAAS;AAChC,cAAM,KAAK,OAAO;AAClB,aAAK,UAAU;AAAA,MACjB;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAEA,YAAQ,uBAAuB;AAE/B,QAAM,oBAAN,cAAgC,qBAAqB;AAAA,MACnD,YAAY,QAAQ,KAAK,UAAU,SAAS;AAC1C,cAAM,KAAK,OAAO;AAClB,aAAK,UAAU;AACf,aAAK,YAAY;AACjB,aAAK,kBAAkB,oBAAI,IAAI;AAC/B,aAAK,2BAA2B,oBAAI,IAAI;AAAA,MAC1C;AAAA,MAEA,KAAK,OAAO,WAAW,IAAI;AACzB,eAAO;AAAA,MACT;AAAA,MAEA,YAAY;AACV,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,kBAAkB,MAAM;AACtB,YAAI,SAAS,KAAK,gBAAgB,IAAI,IAAI;AAE1C,YAAI,CAAC,QAAQ;AACX,gBAAM,YAAY,CAAC;AACnB,gBAAM,WAAW,IAAI,UAAU,SAAS,KAAK,OAAO;AACpD,WAAC,GAAG,SAAS;AAAA,YACX;AAAA,aACC,GAAG,UAAU,mBAAmB,UAAU;AAAA,cACzC,oBAAoB,MAAM;AAAA,cAE1B,SAAS,UAAU;AACjB,0BAAU,KAAK;AAAA,kBACb,MAAM;AAAA,kBACN,MAAM,SAAS,aAAa;AAAA,kBAC5B,cAAc,SAAS,gBAAgB;AAAA,gBACzC,CAAC;AAAA,cACH;AAAA,YACF,CAAC;AAAA,UACH;AACA,mBAAS;AAET,eAAK,gBAAgB,IAAI,MAAM,MAAM;AAAA,QACvC;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,2BAA2B,WAAW;AACpC,YAAI,SAAS,KAAK,yBAAyB,IAAI,SAAS;AAExD,YAAI,CAAC,QAAQ;AACX,mBAAS,KAAK,kBAAkB,SAAS;AAEzC,qBAAW,QAAQ,KAAK,kCAAkC,SAAS,GAAG;AACpE,qBAAS,OAAO,OAAO,KAAK,kBAAkB,IAAI,CAAC;AAAA,UACrD;AAEA,eAAK,yBAAyB,IAAI,WAAW,MAAM;AAAA,QACrD;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,UAAU;AACR,eAAO,KAAK,UAAU,QAAQ;AAAA,MAChC;AAAA,MAEA,gBAAgB;AACd,eAAO,KAAK,UAAU,cAAc;AAAA,MACtC;AAAA,MAEA,eAAe;AACb,eAAO,KAAK,UAAU,aAAa;AAAA,MACrC;AAAA,MAEA,qBAAqB;AACnB,eAAO,KAAK,UAAU,mBAAmB;AAAA,MAC3C;AAAA,MAEA,cAAc;AACZ,eAAO,KAAK,UAAU,YAAY;AAAA,MACpC;AAAA,MAEA,eAAe;AACb,eAAO,KAAK,UAAU,aAAa;AAAA,MACrC;AAAA,MAEA,cAAc;AACZ,eAAO,KAAK,UAAU,YAAY;AAAA,MACpC;AAAA,MAEA,eAAe;AACb,eAAO,KAAK,UAAU,aAAa;AAAA,MACrC;AAAA,IACF;AAEA,YAAQ,oBAAoB;AAAA;AAAA;;;ACvO5B,IAAAC,oBAAA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AACzB,YAAQ,0BAA0B;AAClC,YAAQ,WAAW;AACnB,YAAQ,cAAc;AAEtB,QAAI,aAAa;AAEjB,QAAI,gBAAgB;AAEpB,QAAI,WAAW;AAEf,QAAI,YAAY;AAEhB,QAAI,YAAY;AAEhB,QAAI,kBAAkB;AAEtB,QAAI,qBAAqB;AAsBzB,aAAS,SACP,QACA,aACA,QAAQ,gBAAgB,gBACxB,SAEA,WAAW,IAAI,UAAU,SAAS,MAAM,GACxC;AACA,UAAI;AAEJ,YAAM,aACH,qBACC,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,eAC1D,QAAQ,uBAAuB,SAC7B,qBACA;AACN,sBAAgB,GAAG,WAAW,WAAW,OAAO,wBAAwB;AAExE,OAAC,GAAG,UAAU,mBAAmB,MAAM;AACvC,YAAM,WAAW,OAAO,OAAO,CAAC,CAAC;AACjC,YAAM,SAAS,CAAC;AAChB,YAAM,UAAU,IAAI,mBAAmB;AAAA,QACrC;AAAA,QACA;AAAA,QACA;AAAA,QACA,CAAC,UAAU;AACT,cAAI,OAAO,UAAU,WAAW;AAC9B,mBAAO;AAAA,cACL,IAAI,cAAc;AAAA,gBAChB;AAAA,cACF;AAAA,YACF;AAEA,kBAAM;AAAA,UACR;AAEA,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,MACF;AAGA,YAAM,WAAW,GAAG,SAAS;AAAA,QAC3B,MAAM,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC;AAAA,MACnC;AAEA,UAAI;AACF,SAAC,GAAG,SAAS;AAAA,UACX;AAAA,WACC,GAAG,UAAU,mBAAmB,UAAU,OAAO;AAAA,QACpD;AAAA,MACF,SAAS,GAAG;AACV,YAAI,MAAM,UAAU;AAClB,gBAAM;AAAA,QACR;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAKA,aAAS,YACP,aACA,gBACA,QAAQ,gBAAgB,mBACxB;AACA,YAAM,SAAS,CAAC;AAChB,YAAM,UAAU,IAAI,mBAAmB;AAAA,QACrC;AAAA,QACA;AAAA,QACA,CAAC,UAAU;AACT,iBAAO,KAAK,KAAK;AAAA,QACnB;AAAA,MACF;AACA,YAAM,WAAW,MAAM,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC;AAClD,OAAC,GAAG,SAAS,OAAO,cAAc,GAAG,SAAS,iBAAiB,QAAQ,CAAC;AACxE,aAAO;AAAA,IACT;AAQA,aAAS,eAAe,aAAa;AACnC,YAAM,SAAS,YAAY,WAAW;AAEtC,UAAI,OAAO,WAAW,GAAG;AACvB,cAAM,IAAI,MAAM,OAAO,IAAI,CAAC,UAAU,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC;AAAA,MACnE;AAAA,IACF;AAQA,aAAS,wBAAwB,aAAa,QAAQ;AACpD,YAAM,SAAS,YAAY,aAAa,MAAM;AAE9C,UAAI,OAAO,WAAW,GAAG;AACvB,cAAM,IAAI,MAAM,OAAO,IAAI,CAAC,UAAU,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC;AAAA,MACnE;AAAA,IACF;AAAA;AAAA;;;ACtJA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,eAAe;AACvB,YAAQ,mBAAmB;AAE3B,QAAI,aAAa;AAEjB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,UAAU;AAEd,QAAI,YAAY;AAEhB,QAAI,SAAS;AAEb,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,WAAW;AAEf,QAAI,UAAU;AAEd,QAAI,YAAY;AAEhB,QAAI,UAAU;AAEd,QAAI,gBAAgB;AAcpB,aAAS,aAAa,QAAQ,aAAa,SAAS;AAClD,OAAC,GAAG,QAAQ,cAAc,MAAM;AAChC,MAAC,eAAe,QAAQ,YAAY,SAAS,OAAO,KAAK,aACtD,GAAG,WAAW,WAAW,OAAO,kCAAkC;AAErE,WACG,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,iBACzD,SACD,YAAY,QAAQ,YAAY,SAC7B,SACA,QAAQ,oBAAoB,MAChC;AACA,SAAC,GAAG,UAAU,yBAAyB,aAAa,MAAM;AAAA,MAC5D;AAEA,YAAM,eAAe,OAAO,SAAS;AACrC,YAAM,iBAAiB,iBAAiB,cAAc,aAAa,OAAO;AAC1E,aAAO,iBAAiB,iBACpB,SACA,IAAI,QAAQ,cAAc,cAAc;AAAA,IAC9C;AAKA,aAAS,iBAAiB,cAAc,aAAa,SAAS;AAC5D,UAAI,YAAY,uBAAuB,aAAa;AAGpD,YAAM,WAAW,CAAC;AAClB,YAAM,oBAAoB,uBAAO,OAAO,IAAI;AAG5C,YAAM,gBAAgB,CAAC;AACvB,UAAI;AAEJ,YAAM,mBAAmB,CAAC;AAE1B,iBAAW,OAAO,YAAY,aAAa;AACzC,YAAI,IAAI,SAAS,OAAO,KAAK,mBAAmB;AAC9C,sBAAY;AAAA,QACd,WAAW,IAAI,SAAS,OAAO,KAAK,kBAAkB;AACpD,2BAAiB,KAAK,GAAG;AAAA,QAC3B,YAAY,GAAG,YAAY,sBAAsB,GAAG,GAAG;AACrD,mBAAS,KAAK,GAAG;AAAA,QACnB,YAAY,GAAG,YAAY,qBAAqB,GAAG,GAAG;AACpD,gBAAM,mBAAmB,IAAI,KAAK;AAClC,gBAAM,yBAAyB,kBAAkB,gBAAgB;AACjE,4BAAkB,gBAAgB,IAAI,yBAClC,uBAAuB,OAAO,CAAC,GAAG,CAAC,IACnC,CAAC,GAAG;AAAA,QACV,WAAW,IAAI,SAAS,OAAO,KAAK,sBAAsB;AACxD,wBAAc,KAAK,GAAG;AAAA,QACxB;AAAA,MACF;AAGA,UACE,OAAO,KAAK,iBAAiB,EAAE,WAAW,KAC1C,SAAS,WAAW,KACpB,cAAc,WAAW,KACzB,iBAAiB,WAAW,KAC5B,aAAa,MACb;AACA,eAAO;AAAA,MACT;AAEA,YAAM,UAAU,uBAAO,OAAO,IAAI;AAElC,iBAAW,gBAAgB,aAAa,OAAO;AAC7C,gBAAQ,aAAa,IAAI,IAAI,gBAAgB,YAAY;AAAA,MAC3D;AAEA,iBAAW,YAAY,UAAU;AAC/B,YAAI;AAEJ,cAAM,OAAO,SAAS,KAAK;AAC3B,gBAAQ,IAAI,KACT,mBAAmB,WAAW,IAAI,OAAO,QAC1C,qBAAqB,SACjB,mBACA,UAAU,QAAQ;AAAA,MAC1B;AAEA,YAAM,iBAAiB;AAAA;AAAA,QAErB,OAAO,aAAa,SAAS,iBAAiB,aAAa,KAAK;AAAA,QAChE,UAAU,aAAa,YAAY,iBAAiB,aAAa,QAAQ;AAAA,QACzE,cACE,aAAa,gBAAgB,iBAAiB,aAAa,YAAY;AAAA;AAAA,QAEzE,GAAI,aAAa,kBAAkB,CAAC,SAAS,CAAC;AAAA,QAC9C,GAAG,kBAAkB,gBAAgB;AAAA,MACvC;AAEA,aAAO;AAAA,QACL,cACG,aAAa,eAAe,QAAQ,eAAe,SAChD,UACC,wBAAwB,WAAW,iBAAiB,QACrD,0BAA0B,SAC1B,SACA,sBAAsB;AAAA,QAC5B,GAAG;AAAA,QACH,OAAO,OAAO,OAAO,OAAO;AAAA,QAC5B,YAAY;AAAA,UACV,GAAG,aAAa,WAAW,IAAI,gBAAgB;AAAA,UAC/C,GAAG,cAAc,IAAI,cAAc;AAAA,QACrC;AAAA,QACA,YAAY,uBAAO,OAAO,IAAI;AAAA,QAC9B,UACG,cAAc,eAAe,QAAQ,gBAAgB,SAClD,cACA,aAAa;AAAA,QACnB,mBAAmB,aAAa,kBAAkB,OAAO,gBAAgB;AAAA,QACzE,cACG,uBACC,YAAY,QAAQ,YAAY,SAC5B,SACA,QAAQ,iBAAiB,QAAQ,yBAAyB,SAC5D,uBACA;AAAA,MACR;AAGA,eAAS,YAAY,MAAM;AACzB,aAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AAErC,iBAAO,IAAI,YAAY,YAAY,YAAY,KAAK,MAAM,CAAC;AAAA,QAC7D;AAEA,aAAK,GAAG,YAAY,eAAe,IAAI,GAAG;AAExC,iBAAO,IAAI,YAAY,eAAe,YAAY,KAAK,MAAM,CAAC;AAAA,QAChE;AAEA,eAAO,iBAAiB,IAAI;AAAA,MAC9B;AAEA,eAAS,iBAAiB,MAAM;AAI9B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC1B;AAEA,eAAS,iBAAiB,WAAW;AACnC,cAAM,SAAS,UAAU,SAAS;AAClC,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,GAAG;AAAA,UACH,OAAO,GAAG,UAAU,UAAU,OAAO,MAAM,SAAS;AAAA,QACtD,CAAC;AAAA,MACH;AAEA,eAAS,gBAAgB,MAAM;AAC7B,aACG,GAAG,eAAe,qBAAqB,IAAI,MAC3C,GAAG,SAAS,uBAAuB,IAAI,GACxC;AAEA,iBAAO;AAAA,QACT;AAEA,aAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,iBAAO,iBAAiB,IAAI;AAAA,QAC9B;AAEA,aAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,iBAAO,iBAAiB,IAAI;AAAA,QAC9B;AAEA,aAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,iBAAO,oBAAoB,IAAI;AAAA,QACjC;AAEA,aAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,iBAAO,gBAAgB,IAAI;AAAA,QAC7B;AAEA,aAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,iBAAO,eAAe,IAAI;AAAA,QAC5B;AAEA,aAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,iBAAO,sBAAsB,IAAI;AAAA,QACnC;AAIA,SACG,GAAG,WAAW;AAAA,UACb;AAAA,UACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,QAClD;AAAA,MACJ;AAEA,eAAS,sBAAsB,MAAM;AACnC,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,wBAAwB,kBAAkB,OAAO,IAAI,OAAO,QAC7D,0BAA0B,SACtB,wBACA,CAAC;AACP,eAAO,IAAI,YAAY,uBAAuB;AAAA,UAC5C,GAAG;AAAA,UACH,QAAQ,OAAO;AAAA,YACb,IAAI,GAAG,UAAU,UAAU,OAAO,QAAQ,CAAC,WAAW;AAAA,cACpD,GAAG;AAAA,cACH,MAAM,YAAY,MAAM,IAAI;AAAA,YAC9B,EAAE;AAAA,YACF,GAAG,mBAAmB,UAAU;AAAA,UAClC;AAAA,UACA,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,eAAe,MAAM;AAC5B,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,wBAAwB,kBAAkB,KAAK,IAAI,OAAO,QAC3D,0BAA0B,SACtB,wBACA,CAAC;AACP,eAAO,IAAI,YAAY,gBAAgB;AAAA,UACrC,GAAG;AAAA,UACH,QAAQ,EAAE,GAAG,OAAO,QAAQ,GAAG,kBAAkB,UAAU,EAAE;AAAA,UAC7D,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,iBAAiB,MAAM;AAC9B,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,yBAAyB,kBAAkB,OAAO,IAAI,OAAO,QAC9D,2BAA2B,SACvB,yBACA,CAAC;AACP,YAAI,iBAAiB,OAAO;AAE5B,mBAAW,iBAAiB,YAAY;AACtC,cAAI;AAEJ,4BACG,qBAAqB,kBAAkB,aAAa,OAAO,QAC5D,uBAAuB,SACnB,qBACA;AAAA,QACR;AAEA,eAAO,IAAI,YAAY,kBAAkB;AAAA,UACvC,GAAG;AAAA,UACH;AAAA,UACA,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,iBAAiB,MAAM;AAC9B,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,yBAAyB,kBAAkB,OAAO,IAAI,OAAO,QAC9D,2BAA2B,SACvB,yBACA,CAAC;AACP,eAAO,IAAI,YAAY,kBAAkB;AAAA,UACvC,GAAG;AAAA,UACH,YAAY,MAAM;AAAA,YAChB,GAAG,KAAK,cAAc,EAAE,IAAI,gBAAgB;AAAA,YAC5C,GAAG,gBAAgB,UAAU;AAAA,UAC/B;AAAA,UACA,QAAQ,OAAO;AAAA,YACb,IAAI,GAAG,UAAU,UAAU,OAAO,QAAQ,WAAW;AAAA,YACrD,GAAG,cAAc,UAAU;AAAA,UAC7B;AAAA,UACA,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,oBAAoB,MAAM;AACjC,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,yBAAyB,kBAAkB,OAAO,IAAI,OAAO,QAC9D,2BAA2B,SACvB,yBACA,CAAC;AACP,eAAO,IAAI,YAAY,qBAAqB;AAAA,UAC1C,GAAG;AAAA,UACH,YAAY,MAAM;AAAA,YAChB,GAAG,KAAK,cAAc,EAAE,IAAI,gBAAgB;AAAA,YAC5C,GAAG,gBAAgB,UAAU;AAAA,UAC/B;AAAA,UACA,QAAQ,OAAO;AAAA,YACb,IAAI,GAAG,UAAU,UAAU,OAAO,QAAQ,WAAW;AAAA,YACrD,GAAG,cAAc,UAAU;AAAA,UAC7B;AAAA,UACA,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,gBAAgB,MAAM;AAC7B,YAAI;AAEJ,cAAM,SAAS,KAAK,SAAS;AAC7B,cAAM,cACH,yBAAyB,kBAAkB,OAAO,IAAI,OAAO,QAC9D,2BAA2B,SACvB,yBACA,CAAC;AACP,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,GAAG;AAAA,UACH,OAAO,MAAM;AAAA,YACX,GAAG,KAAK,SAAS,EAAE,IAAI,gBAAgB;AAAA,YACvC,GAAG,gBAAgB,UAAU;AAAA,UAC/B;AAAA,UACA,mBAAmB,OAAO,kBAAkB,OAAO,UAAU;AAAA,QAC/D,CAAC;AAAA,MACH;AAEA,eAAS,YAAY,OAAO;AAC1B,eAAO;AAAA,UACL,GAAG;AAAA,UACH,MAAM,YAAY,MAAM,IAAI;AAAA,UAC5B,MAAM,MAAM,SAAS,GAAG,UAAU,UAAU,MAAM,MAAM,SAAS;AAAA,QACnE;AAAA,MACF;AAEA,eAAS,UAAU,KAAK;AACtB,eAAO,EAAE,GAAG,KAAK,MAAM,YAAY,IAAI,IAAI,EAAE;AAAA,MAC/C;AAEA,eAAS,kBAAkB,OAAO;AAChC,cAAM,UAAU,CAAC;AAEjB,mBAAW,QAAQ,OAAO;AACxB,cAAI;AAGJ,gBAAM;AAAA;AAAA,aAEH,uBAAuB,KAAK,oBAAoB,QACjD,yBAAyB,SACrB,uBACA,CAAC;AAAA;AAEP,qBAAW,iBAAiB,qBAAqB;AAK/C,oBAAQ,cAAc,SAAS,IAAI,aAAa,cAAc,IAAI;AAAA,UACpE;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,aAAa,MAAM;AAC1B,YAAI;AAEJ,cAAM,OAAO,KAAK,KAAK;AACvB,cAAM,QACH,oBAAoB,WAAW,IAAI,OAAO,QAC3C,sBAAsB,SAClB,oBACA,QAAQ,IAAI;AAElB,YAAI,SAAS,QAAW;AACtB,gBAAM,IAAI,MAAM,kBAAkB,IAAI,IAAI;AAAA,QAC5C;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,eAAe,MAAM;AAC5B,YAAI,KAAK,SAAS,OAAO,KAAK,WAAW;AACvC,iBAAO,IAAI,YAAY,YAAY,eAAe,KAAK,IAAI,CAAC;AAAA,QAC9D;AAEA,YAAI,KAAK,SAAS,OAAO,KAAK,eAAe;AAC3C,iBAAO,IAAI,YAAY,eAAe,eAAe,KAAK,IAAI,CAAC;AAAA,QACjE;AAEA,eAAO,aAAa,IAAI;AAAA,MAC1B;AAEA,eAAS,eAAe,MAAM;AAC5B,YAAI;AAEJ,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,MAAM,KAAK,KAAK;AAAA,UAChB,cACG,oBAAoB,KAAK,iBAAiB,QAC3C,sBAAsB,SAClB,SACA,kBAAkB;AAAA;AAAA,UAExB,WAAW,KAAK,UAAU,IAAI,CAAC,EAAE,MAAM,MAAM,KAAK;AAAA,UAClD,cAAc,KAAK;AAAA,UACnB,MAAM,iBAAiB,KAAK,SAAS;AAAA,UACrC,SAAS;AAAA,QACX,CAAC;AAAA,MACH;AAEA,eAAS,cAAc,OAAO;AAC5B,cAAM,iBAAiB,uBAAO,OAAO,IAAI;AAEzC,mBAAW,QAAQ,OAAO;AACxB,cAAI;AAGJ,gBAAM;AAAA;AAAA,aAEH,eAAe,KAAK,YAAY,QAAQ,iBAAiB,SACtD,eACA,CAAC;AAAA;AAEP,qBAAW,SAAS,YAAY;AAC9B,gBAAI;AAEJ,2BAAe,MAAM,KAAK,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,cAIjC,MAAM,eAAe,MAAM,IAAI;AAAA,cAC/B,cACG,qBAAqB,MAAM,iBAAiB,QAC7C,uBAAuB,SACnB,SACA,mBAAmB;AAAA,cACzB,MAAM,iBAAiB,MAAM,SAAS;AAAA,cACtC,mBAAmB,qBAAqB,KAAK;AAAA,cAC7C,SAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,iBAAiB,MAAM;AAE9B,cAAM;AAAA;AAAA,UAEJ,SAAS,QAAQ,SAAS,SAAS,OAAO,CAAC;AAAA;AAC7C,cAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,mBAAW,OAAO,WAAW;AAC3B,cAAI;AAKJ,gBAAM,OAAO,eAAe,IAAI,IAAI;AACpC,uBAAa,IAAI,KAAK,KAAK,IAAI;AAAA,YAC7B;AAAA,YACA,cACG,mBAAmB,IAAI,iBAAiB,QACzC,qBAAqB,SACjB,SACA,iBAAiB;AAAA,YACvB,eAAe,GAAG,cAAc,cAAc,IAAI,cAAc,IAAI;AAAA,YACpE,mBAAmB,qBAAqB,GAAG;AAAA,YAC3C,SAAS;AAAA,UACX;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,mBAAmB,OAAO;AACjC,cAAM,gBAAgB,uBAAO,OAAO,IAAI;AAExC,mBAAW,QAAQ,OAAO;AACxB,cAAI;AAGJ,gBAAM;AAAA;AAAA,aAEH,gBAAgB,KAAK,YAAY,QAAQ,kBAAkB,SACxD,gBACA,CAAC;AAAA;AAEP,qBAAW,SAAS,aAAa;AAC/B,gBAAI;AAKJ,kBAAM,OAAO,eAAe,MAAM,IAAI;AACtC,0BAAc,MAAM,KAAK,KAAK,IAAI;AAAA,cAChC;AAAA,cACA,cACG,sBAAsB,MAAM,iBAAiB,QAC9C,wBAAwB,SACpB,SACA,oBAAoB;AAAA,cAC1B,eAAe,GAAG,cAAc;AAAA,gBAC9B,MAAM;AAAA,gBACN;AAAA,cACF;AAAA,cACA,mBAAmB,qBAAqB,KAAK;AAAA,cAC7C,SAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,kBAAkB,OAAO;AAChC,cAAM,eAAe,uBAAO,OAAO,IAAI;AAEvC,mBAAW,QAAQ,OAAO;AACxB,cAAI;AAGJ,gBAAM;AAAA;AAAA,aAEH,eAAe,KAAK,YAAY,QAAQ,iBAAiB,SACtD,eACA,CAAC;AAAA;AAEP,qBAAW,SAAS,aAAa;AAC/B,gBAAI;AAEJ,yBAAa,MAAM,KAAK,KAAK,IAAI;AAAA,cAC/B,cACG,qBAAqB,MAAM,iBAAiB,QAC7C,uBAAuB,SACnB,SACA,mBAAmB;AAAA,cACzB,mBAAmB,qBAAqB,KAAK;AAAA,cAC7C,SAAS;AAAA,YACX;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,eAAS,gBAAgB,OAAO;AAK9B,eAAO,MAAM;AAAA;AAAA,UAEX,CAAC,SAAS;AACR,gBAAI,sBAAsB;AAE1B;AAAA;AAAA,eAEG,wBACE,mBAAmB,KAAK,gBAAgB,QACzC,qBAAqB,SACjB,SACA,iBAAiB,IAAI,YAAY,OAAO,QAC5C,yBAAyB,SACvB,uBACA,CAAC;AAAA;AAAA,UAET;AAAA,QACF;AAAA,MACF;AAEA,eAAS,gBAAgB,OAAO;AAK9B,eAAO,MAAM;AAAA;AAAA,UAEX,CAAC,SAAS;AACR,gBAAI,iBAAiB;AAErB;AAAA;AAAA,eAEG,mBACE,cAAc,KAAK,WAAW,QAAQ,gBAAgB,SACnD,SACA,YAAY,IAAI,YAAY,OAAO,QACvC,oBAAoB,SAClB,kBACA,CAAC;AAAA;AAAA,UAET;AAAA,QACF;AAAA,MACF;AAEA,eAAS,UAAU,SAAS;AAC1B,YAAI;AAEJ,cAAM,OAAO,QAAQ,KAAK;AAC1B,cAAM,qBACH,wBAAwB,kBAAkB,IAAI,OAAO,QACtD,0BAA0B,SACtB,wBACA,CAAC;AAEP,gBAAQ,QAAQ,MAAM;AAAA,UACpB,KAAK,OAAO,KAAK,wBAAwB;AACvC,gBAAI;AAEJ,kBAAM,WAAW,CAAC,SAAS,GAAG,iBAAiB;AAC/C,mBAAO,IAAI,YAAY,kBAAkB;AAAA,cACvC;AAAA,cACA,cACG,uBAAuB,QAAQ,iBAAiB,QACjD,yBAAyB,SACrB,SACA,qBAAqB;AAAA,cAC3B,YAAY,MAAM,gBAAgB,QAAQ;AAAA,cAC1C,QAAQ,MAAM,cAAc,QAAQ;AAAA,cACpC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAEA,KAAK,OAAO,KAAK,2BAA2B;AAC1C,gBAAI;AAEJ,kBAAM,WAAW,CAAC,SAAS,GAAG,iBAAiB;AAC/C,mBAAO,IAAI,YAAY,qBAAqB;AAAA,cAC1C;AAAA,cACA,cACG,wBAAwB,QAAQ,iBAAiB,QAClD,0BAA0B,SACtB,SACA,sBAAsB;AAAA,cAC5B,YAAY,MAAM,gBAAgB,QAAQ;AAAA,cAC1C,QAAQ,MAAM,cAAc,QAAQ;AAAA,cACpC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAEA,KAAK,OAAO,KAAK,sBAAsB;AACrC,gBAAI;AAEJ,kBAAM,WAAW,CAAC,SAAS,GAAG,iBAAiB;AAC/C,mBAAO,IAAI,YAAY,gBAAgB;AAAA,cACrC;AAAA,cACA,cACG,wBAAwB,QAAQ,iBAAiB,QAClD,0BAA0B,SACtB,SACA,sBAAsB;AAAA,cAC5B,QAAQ,kBAAkB,QAAQ;AAAA,cAClC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAEA,KAAK,OAAO,KAAK,uBAAuB;AACtC,gBAAI;AAEJ,kBAAM,WAAW,CAAC,SAAS,GAAG,iBAAiB;AAC/C,mBAAO,IAAI,YAAY,iBAAiB;AAAA,cACtC;AAAA,cACA,cACG,wBAAwB,QAAQ,iBAAiB,QAClD,0BAA0B,SACtB,SACA,sBAAsB;AAAA,cAC5B,OAAO,MAAM,gBAAgB,QAAQ;AAAA,cACrC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAEA,KAAK,OAAO,KAAK,wBAAwB;AACvC,gBAAI;AAEJ,mBAAO,IAAI,YAAY,kBAAkB;AAAA,cACvC;AAAA,cACA,cACG,wBAAwB,QAAQ,iBAAiB,QAClD,0BAA0B,SACtB,SACA,sBAAsB;AAAA,cAC5B,gBAAgB,kBAAkB,OAAO;AAAA,cACzC;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,UAEA,KAAK,OAAO,KAAK,8BAA8B;AAC7C,gBAAI;AAEJ,kBAAM,WAAW,CAAC,SAAS,GAAG,iBAAiB;AAC/C,mBAAO,IAAI,YAAY,uBAAuB;AAAA,cAC5C;AAAA,cACA,cACG,wBAAwB,QAAQ,iBAAiB,QAClD,0BAA0B,SACtB,SACA,sBAAsB;AAAA,cAC5B,QAAQ,MAAM,mBAAmB,QAAQ;AAAA,cACzC;AAAA,cACA;AAAA,cACA,SAAS,QAAQ,OAAO;AAAA,YAC1B,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAM,cAAc,GAAG,QAAQ;AAAA,MAC7B,CAAC,GAAG,SAAS,sBAAsB,GAAG,eAAe,kBAAkB;AAAA,MACvE,CAAC,SAAS,KAAK;AAAA,IACjB;AAMA,aAAS,qBAAqB,MAAM;AAClC,YAAM,cAAc,GAAG,QAAQ;AAAA,QAC7B,YAAY;AAAA,QACZ;AAAA,MACF;AAEA,aAAO,eAAe,QAAQ,eAAe,SACzC,SACA,WAAW;AAAA,IACjB;AAKA,aAAS,kBAAkB,MAAM;AAC/B,YAAM,eAAe,GAAG,QAAQ;AAAA,QAC9B,YAAY;AAAA,QACZ;AAAA,MACF;AAEA,aAAO,gBAAgB,QAAQ,gBAAgB,SAC3C,SACA,YAAY;AAAA,IAClB;AAKA,aAAS,QAAQ,MAAM;AACrB,aAAO;AAAA,SACJ,GAAG,QAAQ,oBAAoB,YAAY,uBAAuB,IAAI;AAAA,MACzE;AAAA,IACF;AAAA;AAAA;;;ACvyBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,iBAAiB;AACzB,YAAQ,cAAc;AAEtB,QAAI,aAAa;AAEjB,QAAI,SAAS;AAEb,QAAI,UAAU;AAEd,QAAI,cAAc;AAElB,QAAI,UAAU;AAEd,QAAI,YAAY;AAEhB,QAAI,gBAAgB;AAYpB,aAAS,eAAe,aAAa,SAAS;AAC5C,MAAC,eAAe,QAAQ,YAAY,SAAS,OAAO,KAAK,aACtD,GAAG,WAAW,WAAW,OAAO,kCAAkC;AAErE,WACG,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,iBACzD,SACD,YAAY,QAAQ,YAAY,SAC7B,SACA,QAAQ,oBAAoB,MAChC;AACA,SAAC,GAAG,UAAU,gBAAgB,WAAW;AAAA,MAC3C;AAEA,YAAM,oBAAoB;AAAA,QACxB,aAAa;AAAA,QACb,OAAO,CAAC;AAAA,QACR,YAAY,CAAC;AAAA,QACb,YAAY,uBAAO,OAAO,IAAI;AAAA,QAC9B,mBAAmB,CAAC;AAAA,QACpB,aAAa;AAAA,MACf;AACA,YAAM,UAAU,GAAG,cAAc;AAAA,QAC/B;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAEA,UAAI,OAAO,WAAW,MAAM;AAC1B,mBAAW,QAAQ,OAAO,OAAO;AAC/B,kBAAQ,KAAK,MAAM;AAAA,YAIjB,KAAK;AAEH,qBAAO,QAAQ;AACf;AAAA,YAEF,KAAK;AAEH,qBAAO,WAAW;AAClB;AAAA,YAEF,KAAK;AAEH,qBAAO,eAAe;AACtB;AAAA,UACJ;AAAA,QACF;AAAA,MACF;AAEA,YAAM,aAAa;AAAA,QACjB,GAAG,OAAO;AAAA;AAAA,QACV,GAAG,YAAY,oBAAoB;AAAA,UAAO,CAAC,iBACzC,OAAO,WAAW;AAAA,YAChB,CAAC,cAAc,UAAU,SAAS,aAAa;AAAA,UACjD;AAAA,QACF;AAAA,MACF;AACA,aAAO,IAAI,QAAQ,cAAc,EAAE,GAAG,QAAQ,WAAW,CAAC;AAAA,IAC5D;AAMA,aAAS,YAAY,QAAQ,SAAS;AACpC,YAAMC,aAAY,GAAG,QAAQ,OAAO,QAAQ;AAAA,QAC1C,YACE,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA,QAC5D,8BACE,YAAY,QAAQ,YAAY,SAC5B,SACA,QAAQ;AAAA,MAChB,CAAC;AACD,aAAO,eAAeA,WAAU;AAAA,QAC9B,gBACE,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA,QAC5D,aACE,YAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ;AAAA,MAC9D,CAAC;AAAA,IACH;AAAA;AAAA;;;AClHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,0BAA0B;AAElC,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,aAAa;AAEjB,QAAI,kBAAkB;AAEtB,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,UAAU;AAOd,aAAS,wBAAwB,QAAQ;AACvC,YAAM,eAAe,OAAO,SAAS;AACrC,YAAM,WAAW,GAAG,WAAW;AAAA,QAC7B,WAAW,aAAa,KAAK;AAAA,QAC7B,CAAC,SAAS,KAAK;AAAA,QACf;AAAA,MACF;AACA,aAAO,IAAI,QAAQ,cAAc;AAAA,QAC/B,GAAG;AAAA,QACH,OAAO,OAAO,OAAO,OAAO;AAAA,QAC5B,YAAY,WAAW,aAAa,UAAU,EAAE,IAAI,aAAa;AAAA,QACjE,OAAO,iBAAiB,aAAa,KAAK;AAAA,QAC1C,UAAU,iBAAiB,aAAa,QAAQ;AAAA,QAChD,cAAc,iBAAiB,aAAa,YAAY;AAAA,MAC1D,CAAC;AAED,eAAS,YAAY,MAAM;AACzB,aAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AAErC,iBAAO,IAAI,YAAY,YAAY,YAAY,KAAK,MAAM,CAAC;AAAA,QAC7D,YAAY,GAAG,YAAY,eAAe,IAAI,GAAG;AAE/C,iBAAO,IAAI,YAAY,eAAe,YAAY,KAAK,MAAM,CAAC;AAAA,QAChE;AAEA,eAAO,iBAAiB,IAAI;AAAA,MAC9B;AAEA,eAAS,iBAAiB,MAAM;AAC9B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC1B;AAEA,eAAS,iBAAiB,WAAW;AACnC,eAAO,aAAa,iBAAiB,SAAS;AAAA,MAChD;AAEA,eAAS,cAAc,WAAW;AAChC,cAAM,SAAS,UAAU,SAAS;AAClC,eAAO,IAAI,YAAY,iBAAiB;AAAA,UACtC,GAAG;AAAA,UACH,WAAW,OAAO,OAAO,WAAW,CAAC,MAAM,CAAC;AAAA,UAC5C,MAAM,SAAS,OAAO,IAAI;AAAA,QAC5B,CAAC;AAAA,MACH;AAEA,eAAS,SAAS,MAAM;AACtB,eAAO,WAAW,MAAM,CAAC,SAAS,EAAE,GAAG,KAAK,MAAM,YAAY,IAAI,IAAI,EAAE,EAAE;AAAA,MAC5E;AAEA,eAAS,WAAW,WAAW;AAC7B,eAAO,WAAW,WAAW,CAAC,WAAW;AAAA,UACvC,GAAG;AAAA,UACH,MAAM,YAAY,MAAM,IAAI;AAAA,UAC5B,MAAM,MAAM,QAAQ,SAAS,MAAM,IAAI;AAAA,QACzC,EAAE;AAAA,MACJ;AAEA,eAAS,gBAAgB,WAAW;AAClC,eAAO,WAAW,WAAW,CAAC,WAAW;AAAA,UACvC,GAAG;AAAA,UACH,MAAM,YAAY,MAAM,IAAI;AAAA,QAC9B,EAAE;AAAA,MACJ;AAEA,eAAS,UAAU,OAAO;AACxB,eAAO,WAAW,KAAK,EAAE,IAAI,gBAAgB;AAAA,MAC/C;AAEA,eAAS,cAAc,MAAM;AAC3B,aACG,GAAG,YAAY,cAAc,IAAI,MACjC,GAAG,eAAe,qBAAqB,IAAI,GAC5C;AACA,iBAAO;AAAA,QACT;AAEA,aAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,gBAAM,SAAS,KAAK,SAAS;AAC7B,iBAAO,IAAI,YAAY,kBAAkB;AAAA,YACvC,GAAG;AAAA,YACH,YAAY,MAAM,UAAU,OAAO,UAAU;AAAA,YAC7C,QAAQ,MAAM,WAAW,OAAO,MAAM;AAAA,UACxC,CAAC;AAAA,QACH;AAEA,aAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,gBAAM,SAAS,KAAK,SAAS;AAC7B,iBAAO,IAAI,YAAY,qBAAqB;AAAA,YAC1C,GAAG;AAAA,YACH,YAAY,MAAM,UAAU,OAAO,UAAU;AAAA,YAC7C,QAAQ,MAAM,WAAW,OAAO,MAAM;AAAA,UACxC,CAAC;AAAA,QACH;AAEA,aAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,gBAAM,SAAS,KAAK,SAAS;AAC7B,iBAAO,IAAI,YAAY,iBAAiB;AAAA,YACtC,GAAG;AAAA,YACH,OAAO,MAAM,UAAU,OAAO,KAAK;AAAA,UACrC,CAAC;AAAA,QACH;AAEA,aAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,gBAAM,SAAS,KAAK,SAAS;AAC7B,iBAAO,IAAI,YAAY,gBAAgB;AAAA,YACrC,GAAG;AAAA,YACH,QAAQ,WAAW,OAAO,QAAQ,CAAC,UAAU,KAAK;AAAA,UACpD,CAAC;AAAA,QACH;AAEA,aAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,gBAAM,SAAS,KAAK,SAAS;AAC7B,iBAAO,IAAI,YAAY,uBAAuB;AAAA,YAC5C,GAAG;AAAA,YACH,QAAQ,MAAM,gBAAgB,OAAO,MAAM;AAAA,UAC7C,CAAC;AAAA,QACH;AAIA,SACG,GAAG,WAAW;AAAA,UACb;AAAA,UACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,QAClD;AAAA,MACJ;AAAA,IACF;AAEA,aAAS,WAAW,KAAK,aAAa;AACpC,YAAM,YAAY,uBAAO,OAAO,IAAI;AAEpC,iBAAW,OAAO,OAAO,KAAK,GAAG,EAAE,KAAK,gBAAgB,cAAc,GAAG;AACvE,kBAAU,GAAG,IAAI,YAAY,IAAI,GAAG,CAAC;AAAA,MACvC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,WAAW,OAAO;AACzB,aAAO,OAAO,OAAO,CAAC,QAAQ,IAAI,IAAI;AAAA,IACxC;AAEA,aAAS,OAAO,OAAO,UAAU;AAC/B,aAAO,MAAM,MAAM,EAAE,KAAK,CAAC,MAAM,SAAS;AACxC,cAAM,OAAO,SAAS,IAAI;AAC1B,cAAM,OAAO,SAAS,IAAI;AAC1B,gBAAQ,GAAG,gBAAgB,gBAAgB,MAAM,IAAI;AAAA,MACvD,CAAC;AAAA,IACH;AAAA;AAAA;;;AChLA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,2BAA2B;AACnC,YAAQ,cAAc;AACtB,YAAQ,YAAY;AAEpB,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,eAAe;AAEnB,QAAI,SAAS;AAEb,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,cAAc;AAElB,QAAI,iBAAiB;AAErB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,aAAS,YAAY,QAAQ;AAC3B,aAAO;AAAA,QACL;AAAA,QACA,CAAC,MAAM,EAAE,GAAG,YAAY,sBAAsB,CAAC;AAAA,QAC/C;AAAA,MACF;AAAA,IACF;AAEA,aAAS,yBAAyB,QAAQ;AACxC,aAAO;AAAA,QACL;AAAA,QACA,YAAY;AAAA,QACZ,eAAe;AAAA,MACjB;AAAA,IACF;AAEA,aAAS,cAAc,MAAM;AAC3B,aACE,EAAE,GAAG,SAAS,uBAAuB,IAAI,KACzC,EAAE,GAAG,eAAe,qBAAqB,IAAI;AAAA,IAEjD;AAEA,aAAS,oBAAoB,QAAQ,iBAAiB,YAAY;AAChE,YAAM,aAAa,OAAO,cAAc,EAAE,OAAO,eAAe;AAChE,YAAM,QAAQ,OAAO,OAAO,OAAO,WAAW,CAAC,EAAE,OAAO,UAAU;AAClE,aAAO;AAAA,QACL,sBAAsB,MAAM;AAAA,QAC5B,GAAG,WAAW,IAAI,CAAC,cAAc,eAAe,SAAS,CAAC;AAAA,QAC1D,GAAG,MAAM,IAAI,CAAC,SAAS,UAAU,IAAI,CAAC;AAAA,MACxC,EACG,OAAO,OAAO,EACd,KAAK,MAAM;AAAA,IAChB;AAEA,aAAS,sBAAsB,QAAQ;AACrC,UAAI,OAAO,eAAe,QAAQ,sBAAsB,MAAM,GAAG;AAC/D;AAAA,MACF;AAEA,YAAM,iBAAiB,CAAC;AACxB,YAAM,YAAY,OAAO,aAAa;AAEtC,UAAI,WAAW;AACb,uBAAe,KAAK,YAAY,UAAU,IAAI,EAAE;AAAA,MAClD;AAEA,YAAM,eAAe,OAAO,gBAAgB;AAE5C,UAAI,cAAc;AAChB,uBAAe,KAAK,eAAe,aAAa,IAAI,EAAE;AAAA,MACxD;AAEA,YAAM,mBAAmB,OAAO,oBAAoB;AAEpD,UAAI,kBAAkB;AACpB,uBAAe,KAAK,mBAAmB,iBAAiB,IAAI,EAAE;AAAA,MAChE;AAEA,aAAO,iBAAiB,MAAM,IAAI;AAAA,EAAa,eAAe,KAAK,IAAI,CAAC;AAAA;AAAA,IAC1E;AAiBA,aAAS,sBAAsB,QAAQ;AACrC,YAAM,YAAY,OAAO,aAAa;AAEtC,UAAI,aAAa,UAAU,SAAS,SAAS;AAC3C,eAAO;AAAA,MACT;AAEA,YAAM,eAAe,OAAO,gBAAgB;AAE5C,UAAI,gBAAgB,aAAa,SAAS,YAAY;AACpD,eAAO;AAAA,MACT;AAEA,YAAM,mBAAmB,OAAO,oBAAoB;AAEpD,UAAI,oBAAoB,iBAAiB,SAAS,gBAAgB;AAChE,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,UAAU,MAAM;AACvB,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO,YAAY,IAAI;AAAA,MACzB;AAEA,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO,YAAY,IAAI;AAAA,MACzB;AAEA,WAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,eAAO,eAAe,IAAI;AAAA,MAC5B;AAEA,WAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,eAAO,WAAW,IAAI;AAAA,MACxB;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,eAAO,UAAU,IAAI;AAAA,MACvB;AAEA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,eAAO,iBAAiB,IAAI;AAAA,MAC9B;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,MAClD;AAAA,IACJ;AAEA,aAAS,YAAY,MAAM;AACzB,aACE,iBAAiB,IAAI,IAAI,UAAU,KAAK,IAAI,KAAK,oBAAoB,IAAI;AAAA,IAE7E;AAEA,aAAS,2BAA2B,MAAM;AACxC,YAAM,aAAa,KAAK,cAAc;AACtC,aAAO,WAAW,SACd,iBAAiB,WAAW,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,KAAK,IACzD;AAAA,IACN;AAEA,aAAS,YAAY,MAAM;AACzB,aACE,iBAAiB,IAAI,IACrB,QAAQ,KAAK,IAAI,KACjB,2BAA2B,IAAI,IAC/B,YAAY,IAAI;AAAA,IAEpB;AAEA,aAAS,eAAe,MAAM;AAC5B,aACE,iBAAiB,IAAI,IACrB,aAAa,KAAK,IAAI,KACtB,2BAA2B,IAAI,IAC/B,YAAY,IAAI;AAAA,IAEpB;AAEA,aAAS,WAAW,MAAM;AACxB,YAAM,QAAQ,KAAK,SAAS;AAC5B,YAAM,gBAAgB,MAAM,SAAS,QAAQ,MAAM,KAAK,KAAK,IAAI;AACjE,aAAO,iBAAiB,IAAI,IAAI,WAAW,KAAK,OAAO;AAAA,IACzD;AAEA,aAAS,UAAU,MAAM;AACvB,YAAM,SAAS,KACZ,UAAU,EACV;AAAA,QACC,CAAC,OAAO,MACN,iBAAiB,OAAO,MAAM,CAAC,CAAC,IAChC,OACA,MAAM,OACN,gBAAgB,MAAM,iBAAiB;AAAA,MAC3C;AACF,aAAO,iBAAiB,IAAI,IAAI,QAAQ,KAAK,IAAI,KAAK,WAAW,MAAM;AAAA,IACzE;AAEA,aAAS,iBAAiB,MAAM;AAC9B,YAAM,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC,EAAE;AAAA,QAC7C,CAAC,GAAG,MAAM,iBAAiB,GAAG,MAAM,CAAC,CAAC,IAAI,OAAO,gBAAgB,CAAC;AAAA,MACpE;AACA,aACE,iBAAiB,IAAI,IACrB,SAAS,KAAK,IAAI,MACjB,KAAK,UAAU,YAAY,MAC5B,WAAW,MAAM;AAAA,IAErB;AAEA,aAAS,YAAY,MAAM;AACzB,YAAM,SAAS,OAAO,OAAO,KAAK,UAAU,CAAC,EAAE;AAAA,QAC7C,CAAC,GAAG,MACF,iBAAiB,GAAG,MAAM,CAAC,CAAC,IAC5B,OACA,EAAE,OACF,UAAU,EAAE,MAAM,IAAI,IACtB,OACA,OAAO,EAAE,IAAI,IACb,gBAAgB,EAAE,iBAAiB;AAAA,MACvC;AACA,aAAO,WAAW,MAAM;AAAA,IAC1B;AAEA,aAAS,WAAW,OAAO;AACzB,aAAO,MAAM,WAAW,IAAI,SAAS,MAAM,KAAK,IAAI,IAAI,QAAQ;AAAA,IAClE;AAEA,aAAS,UAAU,MAAM,cAAc,IAAI;AACzC,UAAI,KAAK,WAAW,GAAG;AACrB,eAAO;AAAA,MACT;AAEA,UAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,WAAW,GAAG;AACzC,eAAO,MAAM,KAAK,IAAI,eAAe,EAAE,KAAK,IAAI,IAAI;AAAA,MACtD;AAEA,aACE,QACA,KACG;AAAA,QACC,CAAC,KAAK,MACJ,iBAAiB,KAAK,OAAO,aAAa,CAAC,CAAC,IAC5C,OACA,cACA,gBAAgB,GAAG;AAAA,MACvB,EACC,KAAK,IAAI,IACZ,OACA,cACA;AAAA,IAEJ;AAEA,aAAS,gBAAgB,KAAK;AAC5B,YAAM,cAAc,GAAG,cAAc;AAAA,QACnC,IAAI;AAAA,QACJ,IAAI;AAAA,MACN;AACA,UAAI,UAAU,IAAI,OAAO,OAAO,OAAO,IAAI,IAAI;AAE/C,UAAI,YAAY;AACd,mBAAW,OAAO,GAAG,SAAS,OAAO,UAAU,CAAC;AAAA,MAClD;AAEA,aAAO,UAAU,gBAAgB,IAAI,iBAAiB;AAAA,IACxD;AAEA,aAAS,eAAe,WAAW;AACjC,aACE,iBAAiB,SAAS,IAC1B,gBACA,UAAU,OACV,UAAU,UAAU,IAAI,KACvB,UAAU,eAAe,gBAAgB,MAC1C,SACA,UAAU,UAAU,KAAK,KAAK;AAAA,IAElC;AAEA,aAAS,gBAAgB,QAAQ;AAC/B,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AAEA,UAAI,WAAW,YAAY,4BAA4B;AACrD,cAAM,YAAY,GAAG,SAAS,OAAO;AAAA,UACnC,MAAM,OAAO,KAAK;AAAA,UAClB,OAAO;AAAA,QACT,CAAC;AACD,eAAO,wBAAwB,QAAQ;AAAA,MACzC;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB,QAAQ;AACnC,UAAI,OAAO,kBAAkB,MAAM;AACjC,eAAO;AAAA,MACT;AAEA,YAAM,YAAY,GAAG,SAAS,OAAO;AAAA,QACnC,MAAM,OAAO,KAAK;AAAA,QAClB,OAAO,OAAO;AAAA,MAChB,CAAC;AACD,aAAO,sBAAsB,QAAQ;AAAA,IACvC;AAEA,aAAS,iBAAiB,KAAK,cAAc,IAAI,eAAe,MAAM;AACpE,YAAM,EAAE,YAAY,IAAI;AAExB,UAAI,eAAe,MAAM;AACvB,eAAO;AAAA,MACT;AAEA,YAAM,eAAe,GAAG,SAAS,OAAO;AAAA,QACtC,MAAM,OAAO,KAAK;AAAA,QAClB,OAAO;AAAA,QACP,QAAQ,GAAG,aAAa,0BAA0B,WAAW;AAAA,MAC/D,CAAC;AACD,YAAM,SACJ,eAAe,CAAC,eAAe,OAAO,cAAc;AACtD,aAAO,SAAS,YAAY,QAAQ,OAAO,OAAO,WAAW,IAAI;AAAA,IACnE;AAAA;AAAA;;;ACjVA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,YAAY;AAEpB,QAAI,SAAS;AAOb,aAAS,UAAU,WAAW;AAC5B,YAAM,cAAc,CAAC;AAErB,iBAAW,OAAO,WAAW;AAC3B,oBAAY,KAAK,GAAG,IAAI,WAAW;AAAA,MACrC;AAEA,aAAO;AAAA,QACL,MAAM,OAAO,KAAK;AAAA,QAClB;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACzBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,qBAAqB;AAE7B,QAAI,SAAS;AAEb,QAAI,WAAW;AAQf,aAAS,mBAAmB,aAAa;AACvC,YAAM,aAAa,CAAC;AACpB,YAAM,WAAW,uBAAO,OAAO,IAAI;AAEnC,iBAAW,kBAAkB,YAAY,aAAa;AACpD,gBAAQ,eAAe,MAAM;AAAA,UAC3B,KAAK,OAAO,KAAK;AACf,uBAAW,KAAK,cAAc;AAC9B;AAAA,UAEF,KAAK,OAAO,KAAK;AACf,qBAAS,eAAe,KAAK,KAAK,IAAI;AAAA,cACpC,eAAe;AAAA,YACjB;AACA;AAAA,UAEF;AAAA,QACF;AAAA,MACF;AAGA,YAAM,wBAAwB,uBAAO,OAAO,IAAI;AAEhD,iBAAW,aAAa,YAAY;AAClC,cAAM,eAAe,oBAAI,IAAI;AAE7B,mBAAW,gBAAgB,oBAAoB,UAAU,YAAY,GAAG;AACtE,wCAA8B,cAAc,UAAU,YAAY;AAAA,QACpE;AAEA,cAAM,gBAAgB,UAAU,OAAO,UAAU,KAAK,QAAQ;AAG9D,8BAAsB,aAAa,IAAI;AAAA,UACrC,MAAM,OAAO,KAAK;AAAA,UAClB,aAAa,YAAY,YAAY;AAAA,YACnC,CAAC,SACC,SAAS,aACR,KAAK,SAAS,OAAO,KAAK,uBACzB,aAAa,IAAI,KAAK,KAAK,KAAK;AAAA,UACtC;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAIA,aAAS,8BAA8B,WAAW,UAAU,UAAU;AACpE,UAAI,CAAC,UAAU,IAAI,QAAQ,GAAG;AAC5B,kBAAU,IAAI,QAAQ;AACtB,cAAM,gBAAgB,SAAS,QAAQ;AAEvC,YAAI,kBAAkB,QAAW;AAC/B,qBAAW,UAAU,eAAe;AAClC,0CAA8B,WAAW,UAAU,MAAM;AAAA,UAC3D;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,aAAS,oBAAoB,cAAc;AACzC,YAAM,eAAe,CAAC;AACtB,OAAC,GAAG,SAAS,OAAO,cAAc;AAAA,QAChC,eAAe,MAAM;AACnB,uBAAa,KAAK,KAAK,KAAK,KAAK;AAAA,QACnC;AAAA,MACF,CAAC;AACD,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvFA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,yBAAyB;AAEjC,QAAI,eAAe;AAEnB,QAAI,SAAS;AAEb,QAAI,UAAU;AAEd,QAAI,aAAa;AA8DjB,aAAS,uBAAuB,QAAQ;AACtC,YAAM,aAAa,GAAG,QAAQ,UAAU,MAAM,IAC1C,SACA,IAAI,QAAQ,OAAO,MAAM;AAC7B,YAAM,OAAO,UAAU;AACvB,YAAM,QAAQ,IAAI,OAAO,MAAM,SAAS;AACxC,UAAI,eAAe;AACnB,UAAI,iCAAiC;AAErC,aAAO,MAAM,QAAQ,EAAE,SAAS,WAAW,UAAU,KAAK;AACxD,cAAM,eAAe,MAAM;AAC3B,cAAM,YAAY,aAAa;AAO/B,cAAM,kBAAkB,EAAE,GAAG,OAAO;AAAA,UAClC,aAAa;AAAA,QACf;AAEA,YAAI,gCAAgC;AAClC,cACE,mBACA,aAAa,SAAS,WAAW,UAAU,QAC3C;AACA,4BAAgB;AAAA,UAClB;AAAA,QACF;AAEA,cAAM,YAAY,KAAK,MAAM,aAAa,OAAO,aAAa,GAAG;AAEjE,YAAI,cAAc,WAAW,UAAU,cAAc;AACnD,2BAAiB,GAAG,aAAa,kBAAkB,aAAa,OAAO;AAAA,YACrE,UAAU;AAAA,UACZ,CAAC;AAAA,QACH,OAAO;AACL,0BAAgB;AAAA,QAClB;AAEA,yCAAiC;AAAA,MACnC;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACxHA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,kBAAkB;AAC1B,YAAQ,mBAAmB;AAE3B,QAAI,aAAa;AAEjB,QAAI,gBAAgB;AAEpB,QAAI,cAAc;AAQlB,aAAS,gBAAgB,MAAM;AAC7B,YAAM,QAAQ,iBAAiB,IAAI;AAEnC,UAAI,OAAO;AACT,cAAM;AAAA,MACR;AAEA,aAAO;AAAA,IACT;AAMA,aAAS,iBAAiB,MAAM;AAC9B,aAAO,SAAS,aACb,GAAG,WAAW,WAAW,OAAO,+BAA+B;AAElE,UAAI,KAAK,WAAW,IAAI,GAAG;AACzB,eAAO,IAAI,cAAc;AAAA,UACvB,SAAS,IAAI;AAAA,QACf;AAAA,MACF;AAEA,UAAI;AACF,SAAC,GAAG,YAAY,YAAY,IAAI;AAAA,MAClC,SAAS,OAAO;AACd,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;ACjDA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,sBAAsB,QAAQ,qBAAqB;AAC3D,YAAQ,sBAAsB;AAC9B,YAAQ,uBAAuB;AAE/B,QAAI,WAAW;AAEf,QAAI,aAAa;AAEjB,QAAI,UAAU;AAEd,QAAI,WAAW;AAEf,QAAI,cAAc;AAElB,QAAI,WAAW;AAEf,QAAI,gBAAgB;AAEpB,QAAI,iBAAiB;AAErB,QAAI;AACJ,YAAQ,qBAAqB;AAE7B,KAAC,SAAUC,qBAAoB;AAC7B,MAAAA,oBAAmB,cAAc,IAAI;AACrC,MAAAA,oBAAmB,mBAAmB,IAAI;AAC1C,MAAAA,oBAAmB,yBAAyB,IAAI;AAChD,MAAAA,oBAAmB,yBAAyB,IAAI;AAChD,MAAAA,oBAAmB,4BAA4B,IAC7C;AACF,MAAAA,oBAAmB,+BAA+B,IAChD;AACF,MAAAA,oBAAmB,eAAe,IAAI;AACtC,MAAAA,oBAAmB,oBAAoB,IAAI;AAC3C,MAAAA,oBAAmB,oBAAoB,IAAI;AAC3C,MAAAA,oBAAmB,aAAa,IAAI;AACpC,MAAAA,oBAAmB,kBAAkB,IAAI;AACzC,MAAAA,oBAAmB,mBAAmB,IAAI;AAC1C,MAAAA,oBAAmB,uBAAuB,IAAI;AAC9C,MAAAA,oBAAmB,8BAA8B,IAC/C;AACF,MAAAA,oBAAmB,8BAA8B,IAC/C;AACF,MAAAA,oBAAmB,4BAA4B,IAC7C;AAAA,IACJ;AAAA,MACE,uBAAuB,QAAQ,qBAAqB,qBAAqB,CAAC;AAAA,IAC5E;AAEA,QAAI;AACJ,YAAQ,sBAAsB;AAE9B,KAAC,SAAUC,sBAAqB;AAC9B,MAAAA,qBAAoB,qBAAqB,IAAI;AAC7C,MAAAA,qBAAoB,qBAAqB,IAAI;AAC7C,MAAAA,qBAAoB,4BAA4B,IAC9C;AACF,MAAAA,qBAAoB,oBAAoB,IAAI;AAC5C,MAAAA,qBAAoB,6BAA6B,IAC/C;AACF,MAAAA,qBAAoB,0BAA0B,IAAI;AAAA,IACpD;AAAA,MACE,wBACG,QAAQ,sBAAsB,sBAAsB,CAAC;AAAA,IAC1D;AAMA,aAAS,oBAAoB,WAAW,WAAW;AAEjD,aAAO,kBAAkB,WAAW,SAAS,EAAE;AAAA,QAC7C,CAAC,WAAW,OAAO,QAAQ;AAAA,MAC7B;AAAA,IACF;AAMA,aAAS,qBAAqB,WAAW,WAAW;AAElD,aAAO,kBAAkB,WAAW,SAAS,EAAE;AAAA,QAC7C,CAAC,WAAW,OAAO,QAAQ;AAAA,MAC7B;AAAA,IACF;AAEA,aAAS,kBAAkB,WAAW,WAAW;AAC/C,aAAO;AAAA,QACL,GAAG,gBAAgB,WAAW,SAAS;AAAA,QACvC,GAAG,qBAAqB,WAAW,SAAS;AAAA,MAC9C;AAAA,IACF;AAEA,aAAS,qBAAqB,WAAW,WAAW;AAClD,YAAM,gBAAgB,CAAC;AACvB,YAAM,iBAAiB;AAAA,QACrB,UAAU,cAAc;AAAA,QACxB,UAAU,cAAc;AAAA,MAC1B;AAEA,iBAAW,gBAAgB,eAAe,SAAS;AACjD,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,aAAa,IAAI;AAAA,QACnC,CAAC;AAAA,MACH;AAEA,iBAAW,CAAC,cAAc,YAAY,KAAK,eAAe,WAAW;AACnE,cAAM,WAAW,KAAK,aAAa,MAAM,aAAa,IAAI;AAE1D,mBAAW,UAAU,SAAS,OAAO;AACnC,eAAK,GAAG,YAAY,oBAAoB,MAAM,GAAG;AAC/C,0BAAc,KAAK;AAAA,cACjB,MAAM,mBAAmB;AAAA,cACzB,aAAa,kBAAkB,OAAO,IAAI,iBAAiB,aAAa,IAAI;AAAA,YAC9E,CAAC;AAAA,UACH;AAAA,QACF;AAEA,mBAAW,UAAU,SAAS,SAAS;AACrC,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aAAa,GAAG,OAAO,IAAI,qBAAqB,aAAa,IAAI;AAAA,UACnE,CAAC;AAAA,QACH;AAEA,YAAI,aAAa,gBAAgB,CAAC,aAAa,cAAc;AAC3D,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aAAa,oCAAoC,aAAa,IAAI;AAAA,UACpE,CAAC;AAAA,QACH;AAEA,mBAAW,YAAY,aAAa,WAAW;AAC7C,cAAI,CAAC,aAAa,UAAU,SAAS,QAAQ,GAAG;AAC9C,0BAAc,KAAK;AAAA,cACjB,MAAM,mBAAmB;AAAA,cACzB,aAAa,GAAG,QAAQ,qBAAqB,aAAa,IAAI;AAAA,YAChE,CAAC;AAAA,UACH;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,gBAAgB,WAAW,WAAW;AAC7C,YAAM,gBAAgB,CAAC;AACvB,YAAM,YAAY;AAAA,QAChB,OAAO,OAAO,UAAU,WAAW,CAAC;AAAA,QACpC,OAAO,OAAO,UAAU,WAAW,CAAC;AAAA,MACtC;AAEA,iBAAW,WAAW,UAAU,SAAS;AACvC,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,cAAc,GAAG,SAAS,uBAAuB,OAAO,IACpD,mBAAmB,QAAQ,IAAI,uDAC/B,GAAG,QAAQ,IAAI;AAAA,QACrB,CAAC;AAAA,MACH;AAEA,iBAAW,CAAC,SAAS,OAAO,KAAK,UAAU,WAAW;AACpD,aACG,GAAG,YAAY,YAAY,OAAO,MAClC,GAAG,YAAY,YAAY,OAAO,GACnC;AACA,wBAAc,KAAK,GAAG,oBAAoB,SAAS,OAAO,CAAC;AAAA,QAC7D,YACG,GAAG,YAAY,aAAa,OAAO,MACnC,GAAG,YAAY,aAAa,OAAO,GACpC;AACA,wBAAc,KAAK,GAAG,qBAAqB,SAAS,OAAO,CAAC;AAAA,QAC9D,YACG,GAAG,YAAY,mBAAmB,OAAO,MACzC,GAAG,YAAY,mBAAmB,OAAO,GAC1C;AACA,wBAAc,KAAK,GAAG,2BAA2B,SAAS,OAAO,CAAC;AAAA,QACpE,YACG,GAAG,YAAY,cAAc,OAAO,MACpC,GAAG,YAAY,cAAc,OAAO,GACrC;AACA,wBAAc;AAAA,YACZ,GAAG,iBAAiB,SAAS,OAAO;AAAA,YACpC,GAAG,iCAAiC,SAAS,OAAO;AAAA,UACtD;AAAA,QACF,YACG,GAAG,YAAY,iBAAiB,OAAO,MACvC,GAAG,YAAY,iBAAiB,OAAO,GACxC;AACA,wBAAc;AAAA,YACZ,GAAG,iBAAiB,SAAS,OAAO;AAAA,YACpC,GAAG,iCAAiC,SAAS,OAAO;AAAA,UACtD;AAAA,QACF,WAAW,QAAQ,gBAAgB,QAAQ,aAAa;AACtD,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aACE,GAAG,QAAQ,IAAI,iBACZ,aAAa,OAAO,CAAC,OAAO,aAAa,OAAO,CAAC;AAAA,UACxD,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,2BAA2B,SAAS,SAAS;AACpD,YAAM,gBAAgB,CAAC;AACvB,YAAM,aAAa;AAAA,QACjB,OAAO,OAAO,QAAQ,UAAU,CAAC;AAAA,QACjC,OAAO,OAAO,QAAQ,UAAU,CAAC;AAAA,MACnC;AAEA,iBAAW,YAAY,WAAW,OAAO;AACvC,aAAK,GAAG,YAAY,sBAAsB,QAAQ,GAAG;AACnD,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aAAa,oBAAoB,SAAS,IAAI,kBAAkB,QAAQ,IAAI;AAAA,UAC9E,CAAC;AAAA,QACH,OAAO;AACL,wBAAc,KAAK;AAAA,YACjB,MAAM,oBAAoB;AAAA,YAC1B,aAAa,qBAAqB,SAAS,IAAI,kBAAkB,QAAQ,IAAI;AAAA,UAC/E,CAAC;AAAA,QACH;AAAA,MACF;AAEA,iBAAW,YAAY,WAAW,SAAS;AACzC,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI;AAAA,QAC/C,CAAC;AAAA,MACH;AAEA,iBAAW,CAAC,UAAU,QAAQ,KAAK,WAAW,WAAW;AACvD,cAAM,SAAS;AAAA,UACb,SAAS;AAAA,UACT,SAAS;AAAA,QACX;AAEA,YAAI,CAAC,QAAQ;AACX,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aACE,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,sBAC7B,OAAO,SAAS,IAAI,CAAC,OAAO,OAAO,SAAS,IAAI,CAAC;AAAA,UACxD,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,qBAAqB,SAAS,SAAS;AAC9C,YAAM,gBAAgB,CAAC;AACvB,YAAM,oBAAoB,KAAK,QAAQ,SAAS,GAAG,QAAQ,SAAS,CAAC;AAErE,iBAAW,mBAAmB,kBAAkB,OAAO;AACrD,sBAAc,KAAK;AAAA,UACjB,MAAM,oBAAoB;AAAA,UAC1B,aAAa,GAAG,gBAAgB,IAAI,4BAA4B,QAAQ,IAAI;AAAA,QAC9E,CAAC;AAAA,MACH;AAEA,iBAAW,mBAAmB,kBAAkB,SAAS;AACvD,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,gBAAgB,IAAI,gCAAgC,QAAQ,IAAI;AAAA,QAClF,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAoB,SAAS,SAAS;AAC7C,YAAM,gBAAgB,CAAC;AACvB,YAAM,aAAa,KAAK,QAAQ,UAAU,GAAG,QAAQ,UAAU,CAAC;AAEhE,iBAAW,YAAY,WAAW,OAAO;AACvC,sBAAc,KAAK;AAAA,UACjB,MAAM,oBAAoB;AAAA,UAC1B,aAAa,GAAG,SAAS,IAAI,2BAA2B,QAAQ,IAAI;AAAA,QACtE,CAAC;AAAA,MACH;AAEA,iBAAW,YAAY,WAAW,SAAS;AACzC,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,SAAS,IAAI,+BAA+B,QAAQ,IAAI;AAAA,QAC1E,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iCAAiC,SAAS,SAAS;AAC1D,YAAM,gBAAgB,CAAC;AACvB,YAAM,iBAAiB,KAAK,QAAQ,cAAc,GAAG,QAAQ,cAAc,CAAC;AAE5E,iBAAW,gBAAgB,eAAe,OAAO;AAC/C,sBAAc,KAAK;AAAA,UACjB,MAAM,oBAAoB;AAAA,UAC1B,aAAa,GAAG,aAAa,IAAI,uCAAuC,QAAQ,IAAI;AAAA,QACtF,CAAC;AAAA,MACH;AAEA,iBAAW,gBAAgB,eAAe,SAAS;AACjD,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,QAAQ,IAAI,mCAAmC,aAAa,IAAI;AAAA,QAClF,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,SAAS,SAAS;AAC1C,YAAM,gBAAgB,CAAC;AACvB,YAAM,aAAa;AAAA,QACjB,OAAO,OAAO,QAAQ,UAAU,CAAC;AAAA,QACjC,OAAO,OAAO,QAAQ,UAAU,CAAC;AAAA,MACnC;AAEA,iBAAW,YAAY,WAAW,SAAS;AACzC,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI;AAAA,QAC/C,CAAC;AAAA,MACH;AAEA,iBAAW,CAAC,UAAU,QAAQ,KAAK,WAAW,WAAW;AACvD,sBAAc,KAAK,GAAG,eAAe,SAAS,UAAU,QAAQ,CAAC;AACjE,cAAM,SAAS;AAAA,UACb,SAAS;AAAA,UACT,SAAS;AAAA,QACX;AAEA,YAAI,CAAC,QAAQ;AACX,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aACE,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,sBAC7B,OAAO,SAAS,IAAI,CAAC,OAAO,OAAO,SAAS,IAAI,CAAC;AAAA,UACxD,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,eAAe,SAAS,UAAU,UAAU;AACnD,YAAM,gBAAgB,CAAC;AACvB,YAAM,WAAW,KAAK,SAAS,MAAM,SAAS,IAAI;AAElD,iBAAW,UAAU,SAAS,SAAS;AACrC,sBAAc,KAAK;AAAA,UACjB,MAAM,mBAAmB;AAAA,UACzB,aAAa,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,QAAQ,OAAO,IAAI;AAAA,QAClE,CAAC;AAAA,MACH;AAEA,iBAAW,CAAC,QAAQ,MAAM,KAAK,SAAS,WAAW;AACjD,cAAM,SAAS;AAAA,UACb,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAEA,YAAI,CAAC,QAAQ;AACX,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aACE,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,QAAQ,OAAO,IAAI,0BAChD,OAAO,OAAO,IAAI,CAAC,OAAO,OAAO,OAAO,IAAI,CAAC;AAAA,UACpD,CAAC;AAAA,QACH,WAAW,OAAO,iBAAiB,QAAW;AAC5C,cAAI,OAAO,iBAAiB,QAAW;AACrC,0BAAc,KAAK;AAAA,cACjB,MAAM,oBAAoB;AAAA,cAC1B,aAAa,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,QAAQ,OAAO,IAAI;AAAA,YAClE,CAAC;AAAA,UACH,OAAO;AAIL,kBAAM,cAAc,eAAe,OAAO,cAAc,OAAO,IAAI;AACnE,kBAAM,cAAc,eAAe,OAAO,cAAc,OAAO,IAAI;AAEnE,gBAAI,gBAAgB,aAAa;AAC/B,4BAAc,KAAK;AAAA,gBACjB,MAAM,oBAAoB;AAAA,gBAC1B,aAAa,GAAG,QAAQ,IAAI,IAAI,SAAS,IAAI,QAAQ,OAAO,IAAI,kCAAkC,WAAW,OAAO,WAAW;AAAA,cACjI,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,iBAAW,UAAU,SAAS,OAAO;AACnC,aAAK,GAAG,YAAY,oBAAoB,MAAM,GAAG;AAC/C,wBAAc,KAAK;AAAA,YACjB,MAAM,mBAAmB;AAAA,YACzB,aAAa,kBAAkB,OAAO,IAAI,OAAO,QAAQ,IAAI,IAAI,SAAS,IAAI;AAAA,UAChF,CAAC;AAAA,QACH,OAAO;AACL,wBAAc,KAAK;AAAA,YACjB,MAAM,oBAAoB;AAAA,YAC1B,aAAa,mBAAmB,OAAO,IAAI,OAAO,QAAQ,IAAI,IAAI,SAAS,IAAI;AAAA,UACjF,CAAC;AAAA,QACH;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,sCAAsC,SAAS,SAAS;AAC/D,WAAK,GAAG,YAAY,YAAY,OAAO,GAAG;AACxC;AAAA;AAAA,WAEI,GAAG,YAAY,YAAY,OAAO,KAClC;AAAA,YACE,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,WACA,GAAG,YAAY,eAAe,OAAO,KACrC,sCAAsC,SAAS,QAAQ,MAAM;AAAA;AAAA,MAEnE;AAEA,WAAK,GAAG,YAAY,eAAe,OAAO,GAAG;AAE3C,gBACG,GAAG,YAAY,eAAe,OAAO,KACtC,sCAAsC,QAAQ,QAAQ,QAAQ,MAAM;AAAA,MAExE;AAEA;AAAA;AAAA,SAEI,GAAG,YAAY,aAAa,OAAO,KAAK,QAAQ,SAAS,QAAQ;AAAA,SACjE,GAAG,YAAY,eAAe,OAAO,KACrC,sCAAsC,SAAS,QAAQ,MAAM;AAAA;AAAA,IAEnE;AAEA,aAAS,0CAA0C,SAAS,SAAS;AACnE,WAAK,GAAG,YAAY,YAAY,OAAO,GAAG;AAExC,gBACG,GAAG,YAAY,YAAY,OAAO,KACnC,0CAA0C,QAAQ,QAAQ,QAAQ,MAAM;AAAA,MAE5E;AAEA,WAAK,GAAG,YAAY,eAAe,OAAO,GAAG;AAC3C;AAAA;AAAA;AAAA,WAGI,GAAG,YAAY,eAAe,OAAO,KACrC;AAAA,YACE,QAAQ;AAAA,YACR,QAAQ;AAAA,UACV;AAAA,UACD,EAAE,GAAG,YAAY,eAAe,OAAO,KACtC,0CAA0C,QAAQ,QAAQ,OAAO;AAAA;AAAA,MAEvE;AAEA,cAAQ,GAAG,YAAY,aAAa,OAAO,KAAK,QAAQ,SAAS,QAAQ;AAAA,IAC3E;AAEA,aAAS,aAAa,MAAM;AAC1B,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,cAAc,IAAI,GAAG;AACvC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,iBAAiB,IAAI,GAAG;AAC1C,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,aAAa,IAAI,GAAG;AACtC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,YAAY,IAAI,GAAG;AACrC,eAAO;AAAA,MACT;AAEA,WAAK,GAAG,YAAY,mBAAmB,IAAI,GAAG;AAC5C,eAAO;AAAA,MACT;AAIA,OACG,GAAG,WAAW;AAAA,QACb;AAAA,QACA,uBAAuB,GAAG,SAAS,SAAS,IAAI;AAAA,MAClD;AAAA,IACJ;AAEA,aAAS,eAAe,OAAO,MAAM;AACnC,YAAM,OAAO,GAAG,cAAc,cAAc,OAAO,IAAI;AACvD,aAAO,SAAS,GAAG,WAAW,WAAW,KAAK;AAC9C,cAAQ,GAAG,SAAS,QAAQ,GAAG,eAAe,eAAe,GAAG,CAAC;AAAA,IACnE;AAEA,aAAS,KAAK,UAAU,UAAU;AAChC,YAAM,QAAQ,CAAC;AACf,YAAM,UAAU,CAAC;AACjB,YAAM,YAAY,CAAC;AACnB,YAAM,UAAU,GAAG,QAAQ,QAAQ,UAAU,CAAC,EAAE,KAAK,MAAM,IAAI;AAC/D,YAAM,UAAU,GAAG,QAAQ,QAAQ,UAAU,CAAC,EAAE,KAAK,MAAM,IAAI;AAE/D,iBAAW,WAAW,UAAU;AAC9B,cAAM,UAAU,OAAO,QAAQ,IAAI;AAEnC,YAAI,YAAY,QAAW;AACzB,kBAAQ,KAAK,OAAO;AAAA,QACtB,OAAO;AACL,oBAAU,KAAK,CAAC,SAAS,OAAO,CAAC;AAAA,QACnC;AAAA,MACF;AAEA,iBAAW,WAAW,UAAU;AAC9B,YAAI,OAAO,QAAQ,IAAI,MAAM,QAAW;AACtC,gBAAM,KAAK,OAAO;AAAA,QACpB;AAAA,MACF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACliBA;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,WAAO,eAAe,SAAS,sBAAsB;AAAA,MACnD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,qBAAqB;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,uBAAuB;AAAA,MACpD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,qBAAqB;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,YAAY;AAAA,MACzC,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,UAAU;AAAA,MACnB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,gBAAgB;AAAA,MAC7C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,cAAc;AAAA,MACvB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,kBAAkB;AAAA,MAC/C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,gBAAgB;AAAA,MACzB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,qBAAqB;AAAA,MAClD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,mBAAmB;AAAA,MAC5B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,gBAAgB;AAAA,MACzB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,oBAAoB;AAAA,MACjD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,kBAAkB;AAAA,MAC3B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,WAAW;AAAA,MACpB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,kBAAkB;AAAA,MAC/C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,gBAAgB;AAAA,MAC7C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,cAAc;AAAA,MACvB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,uBAAuB;AAAA,MACpD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,qBAAqB;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,wBAAwB;AAAA,MACrD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,qBAAqB;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,yBAAyB;AAAA,MACtD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,uBAAuB;AAAA,MAChC;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,wBAAwB;AAAA,MACrD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,sBAAsB;AAAA,MAC/B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,2BAA2B;AAAA,MACxD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,yBAAyB;AAAA,MAClC;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,mBAAmB;AAAA,MAChD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,oBAAoB;AAAA,MACjD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,iBAAiB;AAAA,MAC1B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,2BAA2B;AAAA,MACxD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,yBAAyB;AAAA,MAClC;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,4BAA4B;AAAA,MACzD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,aAAa;AAAA,MACtB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,aAAa;AAAA,MACtB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,aAAa;AAAA,MAC1C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,aAAa;AAAA,MACtB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,sBAAsB;AAAA,MACnD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,oBAAoB;AAAA,MAC7B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,0BAA0B;AAAA,MACvD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,wBAAwB;AAAA,MACjC;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,eAAe;AAAA,MAC5C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,aAAa;AAAA,MACtB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,gBAAgB;AAAA,MAC7C,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,cAAc;AAAA,MACvB;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,uBAAuB;AAAA,MACpD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,qBAAqB;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,eAAe,SAAS,qBAAqB;AAAA,MAClD,YAAY;AAAA,MACZ,KAAK,WAAY;AACf,eAAO,UAAU;AAAA,MACnB;AAAA,IACF,CAAC;AAED,QAAI,yBAAyB;AAE7B,QAAI,mBAAmB;AAEvB,QAAI,wBAAwB;AAE5B,QAAI,2BAA2B;AAE/B,QAAI,qBAAqB;AAEzB,QAAI,kBAAkB;AAEtB,QAAI,gBAAgB;AAEpB,QAAI,2BAA2B;AAE/B,QAAI,eAAe;AAEnB,QAAI,eAAe;AAEnB,QAAI,gBAAgB;AAEpB,QAAI,uBAAuB;AAE3B,QAAI,gBAAgB;AAEpB,QAAI,YAAY;AAEhB,QAAI,oBAAoB;AAExB,QAAI,aAAa;AAEjB,QAAI,sBAAsB;AAE1B,QAAI,0BAA0B;AAE9B,QAAI,mBAAmB;AAEvB,QAAI,mBAAmB;AAEvB,QAAI,uBAAuB;AAAA;AAAA;;;ACxO3B;AAAA;AAAA;AAKA,WAAO,UAAU,MAAM,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAStC,YAAY,QAAQ,WAAW,oBAAI,IAAI,GAAG,UAAU,GAAG;AACrD,aAAK,SAAS;AACd,aAAK,YAAY;AACjB,aAAK,UAAU;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ;AACN,cAAM,EAAC,QAAQ,WAAW,QAAO,IAAI;AACrC,eAAO,IAAI,iBAAiB,QAAQ,IAAI,IAAI,SAAS,GAAG,OAAO;AAAA,MACjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,MAAM,KAAK;AAET,cAAM,WAAW,OAAO,KAAK,UAAU,IAAI,GAAG;AAC9C,YAAG,UAAU;AACX,iBAAO;AAAA,QACT;AAGA,cAAM,aAAa,KAAK,SAAS,KAAK;AACtC,aAAK;AAGL,YAAG,KAAK;AACN,eAAK,UAAU,IAAI,KAAK,UAAU;AAAA,QACpC;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,MAAM,KAAK;AACT,eAAO,KAAK,UAAU,IAAI,GAAG;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,YAAY;AACV,eAAO,CAAC,GAAG,KAAK,UAAU,KAAK,CAAC;AAAA,MAClC;AAAA,IACF;AAAA;AAAA;;;AC/EA;AAAA;AAAA,KAAC,SAAUC,SAAQC,YAAW;AAC1B;AAEA,UAAID,QAAO,cAAc;AACrB;AAAA,MACJ;AAEA,UAAI,aAAa;AACjB,UAAI,gBAAgB,CAAC;AACrB,UAAI,wBAAwB;AAC5B,UAAI,MAAMA,QAAO;AACjB,UAAI;AAEJ,eAASE,cAAa,UAAU;AAE9B,YAAI,OAAO,aAAa,YAAY;AAClC,qBAAW,IAAI,SAAS,KAAK,QAAQ;AAAA,QACvC;AAEA,YAAI,OAAO,IAAI,MAAM,UAAU,SAAS,CAAC;AACzC,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAClC,eAAK,CAAC,IAAI,UAAU,IAAI,CAAC;AAAA,QAC7B;AAEA,YAAI,OAAO,EAAE,UAAoB,KAAW;AAC5C,sBAAc,UAAU,IAAI;AAC5B,0BAAkB,UAAU;AAC5B,eAAO;AAAA,MACT;AAEA,eAAS,eAAe,QAAQ;AAC5B,eAAO,cAAc,MAAM;AAAA,MAC/B;AAEA,eAAS,IAAI,MAAM;AACf,YAAI,WAAW,KAAK;AACpB,YAAI,OAAO,KAAK;AAChB,gBAAQ,KAAK,QAAQ;AAAA,UACrB,KAAK;AACD,qBAAS;AACT;AAAA,UACJ,KAAK;AACD,qBAAS,KAAK,CAAC,CAAC;AAChB;AAAA,UACJ,KAAK;AACD,qBAAS,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AACzB;AAAA,UACJ,KAAK;AACD,qBAAS,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClC;AAAA,UACJ;AACI,qBAAS,MAAMD,YAAW,IAAI;AAC9B;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,aAAa,QAAQ;AAG1B,YAAI,uBAAuB;AAGvB,qBAAW,cAAc,GAAG,MAAM;AAAA,QACtC,OAAO;AACH,cAAI,OAAO,cAAc,MAAM;AAC/B,cAAI,MAAM;AACN,oCAAwB;AACxB,gBAAI;AACA,kBAAI,IAAI;AAAA,YACZ,UAAE;AACE,6BAAe,MAAM;AACrB,sCAAwB;AAAA,YAC5B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,eAAS,gCAAgC;AACrC,4BAAoB,SAAS,QAAQ;AACjC,kBAAQ,SAAS,WAAY;AAAE,yBAAa,MAAM;AAAA,UAAG,CAAC;AAAA,QAC1D;AAAA,MACJ;AAEA,eAAS,oBAAoB;AAGzB,YAAID,QAAO,eAAe,CAACA,QAAO,eAAe;AAC7C,cAAI,4BAA4B;AAChC,cAAI,eAAeA,QAAO;AAC1B,UAAAA,QAAO,YAAY,WAAW;AAC1B,wCAA4B;AAAA,UAChC;AACA,UAAAA,QAAO,YAAY,IAAI,GAAG;AAC1B,UAAAA,QAAO,YAAY;AACnB,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,eAAS,mCAAmC;AAKxC,YAAI,gBAAgB,kBAAkB,KAAK,OAAO,IAAI;AACtD,YAAI,kBAAkB,SAAS,OAAO;AAClC,cAAI,MAAM,WAAWA,WACjB,OAAO,MAAM,SAAS,YACtB,MAAM,KAAK,QAAQ,aAAa,MAAM,GAAG;AACzC,yBAAa,CAAC,MAAM,KAAK,MAAM,cAAc,MAAM,CAAC;AAAA,UACxD;AAAA,QACJ;AAEA,YAAIA,QAAO,kBAAkB;AACzB,UAAAA,QAAO,iBAAiB,WAAW,iBAAiB,KAAK;AAAA,QAC7D,OAAO;AACH,UAAAA,QAAO,YAAY,aAAa,eAAe;AAAA,QACnD;AAEA,4BAAoB,SAAS,QAAQ;AACjC,UAAAA,QAAO,YAAY,gBAAgB,QAAQ,GAAG;AAAA,QAClD;AAAA,MACJ;AAEA,eAAS,sCAAsC;AAC3C,YAAI,UAAU,IAAI,eAAe;AACjC,gBAAQ,MAAM,YAAY,SAAS,OAAO;AACtC,cAAI,SAAS,MAAM;AACnB,uBAAa,MAAM;AAAA,QACvB;AAEA,4BAAoB,SAAS,QAAQ;AACjC,kBAAQ,MAAM,YAAY,MAAM;AAAA,QACpC;AAAA,MACJ;AAEA,eAAS,wCAAwC;AAC7C,YAAI,OAAO,IAAI;AACf,4BAAoB,SAAS,QAAQ;AAGjC,cAAI,SAAS,IAAI,cAAc,QAAQ;AACvC,iBAAO,qBAAqB,WAAY;AACpC,yBAAa,MAAM;AACnB,mBAAO,qBAAqB;AAC5B,iBAAK,YAAY,MAAM;AACvB,qBAAS;AAAA,UACb;AACA,eAAK,YAAY,MAAM;AAAA,QAC3B;AAAA,MACJ;AAEA,eAAS,kCAAkC;AACvC,4BAAoB,SAAS,QAAQ;AACjC,qBAAW,cAAc,GAAG,MAAM;AAAA,QACtC;AAAA,MACJ;AAGA,UAAI,WAAW,OAAO,kBAAkB,OAAO,eAAeA,OAAM;AACpE,iBAAW,YAAY,SAAS,aAAa,WAAWA;AAGxD,UAAI,CAAC,EAAE,SAAS,KAAKA,QAAO,OAAO,MAAM,oBAAoB;AAEzD,sCAA8B;AAAA,MAElC,WAAW,kBAAkB,GAAG;AAE5B,yCAAiC;AAAA,MAErC,WAAWA,QAAO,gBAAgB;AAE9B,4CAAoC;AAAA,MAExC,WAAW,OAAO,wBAAwB,IAAI,cAAc,QAAQ,GAAG;AAEnE,8CAAsC;AAAA,MAE1C,OAAO;AAEH,wCAAgC;AAAA,MACpC;AAEA,eAAS,eAAeE;AACxB,eAAS,iBAAiB;AAAA,IAC9B,GAAE,OAAO,SAAS,cAAc,OAAO,WAAW,cAAc,UAAO,SAAS,IAAI;AAAA;AAAA;;;ACzLpF;AAAA;AAAA;AAKA;AAEA,QAAM,SAAS,KAAK,UAAU,KAAK;AAEnC,WAAO,UAAU,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMnC,YAAY,WAAW;AAGrB,YAAG,EAAE,UAAU,OAAO,SAAS;AAC7B,gBAAM,IAAI,MAAM,0BAA0B;AAAA,QAC5C;AACA,YAAG,cAAc,UAAU;AACzB,eAAK,YAAY,EAAC,MAAM,UAAS;AAAA,QACnC,WAAU,cAAc,QAAQ;AAC9B,eAAK,YAAY,EAAC,MAAM,QAAO;AAAA,QACjC,OAAO;AACL,gBAAM,IAAI,MAAM,0BAA0B,SAAS,IAAI;AAAA,QACzD;AACA,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,OAAO,KAAK;AACV,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,MAAM,SAAS;AACb,cAAM,OAAO,IAAI,YAAY,EAAE,OAAO,KAAK,QAAQ;AACnD,cAAM,SAAS,IAAI;AAAA,UACjB,MAAM,OAAO,OAAO,OAAO,KAAK,WAAW,IAAI;AAAA,QAAC;AAElD,YAAI,MAAM;AACV,iBAAQ,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACrC,iBAAO,OAAO,CAAC,EAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG;AAAA,QAC/C;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AC9CA;AAAA;AAAA;AAKA,WAAO,UAAU,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO9B,YAAY,MAAM;AAEhB,aAAK,UAAU,KAAK,KAAK;AAEzB,aAAK,OAAO;AAEZ,aAAK,MAAM,oBAAI,IAAI;AACnB,iBAAQ,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACnC,eAAK,IAAI,IAAI,KAAK,CAAC,GAAG,IAAI;AAAA,QAC5B;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,UAAU;AACR,eAAO,CAAC,KAAK;AAAA,MACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,OAAO;AAEL,cAAM,EAAC,SAAS,IAAG,IAAI;AACvB,cAAM,OAAO,QAAQ,MAAM;AAO3B,YAAI,IAAI;AACR,YAAI,MAAM;AACV,cAAM,SAAS,QAAQ;AACvB,iBAAQ,IAAI,GAAG,IAAI,QAAQ,EAAE,GAAG;AAC9B,gBAAM,UAAU,QAAQ,CAAC;AACzB,gBAAM,OAAO,IAAI,IAAI,OAAO;AAC5B,eAAI,MAAM,QAAQ,UAAU,OACxB,QAAQ,IAAI,KAAK,UAAU,QAAQ,IAAI,CAAC,KACzC,CAAC,QAAQ,IAAK,SAAS,KAAM,UAAU,QAAQ,IAAI,CAAC,IAAK;AAC1D,gBAAI;AACJ,kBAAM;AAAA,UACR;AAAA,QACF;AAGA,YAAG,MAAM,MAAM;AACb,eAAK,OAAO;AAAA,QACd,OAAO;AAEL,gBAAM,OAAO,IAAI,IAAI,CAAC,IAAI,MAAM,IAAI,MAAM;AAC1C,kBAAQ,GAAG,IAAI,QAAQ,IAAI;AAC3B,kBAAQ,IAAI,IAAI;AAGhB,qBAAU,WAAW,SAAS;AAC5B,gBAAG,UAAU,GAAG;AACd,kBAAI,IAAI,SAAS,CAAC,IAAI,IAAI,OAAO,CAAC;AAAA,YACpC;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AClFA;AAAA;AAAA;AAOA,QAAM,MAAM;AACZ,QAAM,iBAAiB,MAAM;AAC7B,QAAM,aAAa;AAEnB,QAAM,kBAAkB;AACxB,QAAM,kBAAkB;AACxB,QAAM,eAAe;AACrB,QAAM,qBAAqB;AAG3B,QAAM,QAAQ,CAAC;AACf,KAAC,MAAM;AACL,YAAM,MAAM;AAEZ,YAAM,gBACJ;AAcF,YAAM,aACJ,gBACA;AACF,YAAM,WACJ,aACA;AAKF,YAAM,mBACJ,YACW,aAAa,iBACV,WAAW,aAAa,WAAW;AAEnD,YAAM,QAAQ;AACd,YAAM,QAAQ;AACd,YAAM,WAAW,cAAc,MAAM;AACrC,YAAM,WAAW;AACjB,YAAM,UAAU,QAAQ,QAAQ,QAAQ,WAAW,MAAM,WAAW;AACpE,YAAM,KAAK;AACX,YAAM,MAAM;AAGZ,YAAM,UAAU,QAAQ,MAAM,MAAM,QAAQ,MAAM;AAClD,YAAM,WAAW,MAAM;AACvB,YAAM,SAAS,QAAQ,MAAM,MAAM,QAAQ,MAAM,UAAU,MAAM;AACjE,YAAM,YAAY,kBAAkB,MAAM,MAAM,QAAQ,MAAM,MAAM;AAGpE,YAAM,OAAO;AACb,YAAM,QAAQ,IAAI,OAAO,MAAM,MAAM,GAAG;AAGxC,YAAM,OAAO,IAAI;AAAA,QACf,MAAM,MAAM,UAAU,WAAW,SAAS,YAAY,MAAM;AAAA,MAAG;AAAA,IACnE,GAAG;AAEH,WAAO,UAAU,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ5B,OAAO,MAAM,OAAO;AAElB,cAAM,UAAU,CAAC;AAEjB,cAAM,SAAS,CAAC;AAGhB,cAAM,QAAQ,MAAM,MAAM,MAAM,IAAI;AACpC,YAAI,aAAa;AACjB,mBAAU,QAAQ,OAAO;AACvB;AAGA,cAAG,MAAM,MAAM,KAAK,IAAI,GAAG;AACzB;AAAA,UACF;AAGA,gBAAM,QAAQ,KAAK,MAAM,MAAM,IAAI;AACnC,cAAG,UAAU,MAAM;AACjB,kBAAM,IAAI,MAAM,iCAAiC,aAAa,GAAG;AAAA,UACnE;AAGA,gBAAM,OAAO,EAAC,SAAS,MAAM,WAAW,MAAM,QAAQ,MAAM,OAAO,KAAI;AAGvE,cAAG,MAAM,CAAC,MAAM,QAAW;AACzB,iBAAK,UAAU,EAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC,EAAC;AAAA,UAC5D,OAAO;AACL,iBAAK,UAAU,EAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC,EAAC;AAAA,UAC5D;AAGA,eAAK,YAAY,EAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC,EAAC;AAG5D,cAAG,MAAM,CAAC,MAAM,QAAW;AACzB,iBAAK,SAAS,EAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC,EAAC;AAAA,UAC3D,WAAU,MAAM,CAAC,MAAM,QAAW;AAChC,iBAAK,SAAS,EAAC,UAAU,iBAAiB,OAAO,MAAM,CAAC,EAAC;AAAA,UAC3D,OAAO;AACL,iBAAK,SAAS;AAAA,cACZ,UAAU;AAAA,cACV,OAAO;AAAA,cACP,UAAU;AAAA,gBACR,UAAU;AAAA,cACZ;AAAA,YACF;AACA,gBAAG,MAAM,CAAC,MAAM,QAAW;AACzB,mBAAK,OAAO,SAAS,QAAQ,MAAM,CAAC;AAAA,YACtC,WAAU,MAAM,CAAC,MAAM,QAAW;AAChC,mBAAK,OAAO,SAAS,QAAQ;AAC7B,mBAAK,OAAO,WAAW,MAAM,CAAC;AAAA,YAChC,OAAO;AACL,mBAAK,OAAO,SAAS,QAAQ;AAAA,YAC/B;AACA,iBAAK,OAAO,QAAQ,UAAU,MAAM,CAAC,CAAC;AAAA,UACxC;AAGA,cAAG,MAAM,CAAC,MAAM,QAAW;AACzB,iBAAK,QAAQ;AAAA,cACX,UAAU;AAAA,cACV,OAAO,MAAM,CAAC;AAAA,YAChB;AAAA,UACF,WAAU,MAAM,EAAE,MAAM,QAAW;AACjC,iBAAK,QAAQ;AAAA,cACX,UAAU;AAAA,cACV,OAAO,MAAM,EAAE;AAAA,YACjB;AAAA,UACF,OAAO;AACL,iBAAK,QAAQ;AAAA,cACX,UAAU;AAAA,cACV,OAAO;AAAA,YACT;AAAA,UACF;AAGA,cAAG,EAAE,KAAK,MAAM,SAAS,SAAS;AAChC,mBAAO,KAAK,MAAM,KAAK,IAAI,CAAC,IAAI;AAChC,oBAAQ,KAAK,IAAI;AAAA,UACnB,OAAO;AACL,gBAAI,SAAS;AACb,kBAAM,QAAQ,OAAO,KAAK,MAAM,KAAK;AACrC,uBAAU,KAAK,OAAO;AACpB,kBAAG,gBAAgB,GAAG,IAAI,GAAG;AAC3B,yBAAS;AACT;AAAA,cACF;AAAA,YACF;AACA,gBAAG,QAAQ;AACT,oBAAM,KAAK,IAAI;AACf,sBAAQ,KAAK,IAAI;AAAA,YACnB;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,UAAU,SAAS;AACxB,YAAG,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC1B,oBAAU,OAAO,qBAAqB,OAAO;AAAA,QAC/C;AACA,cAAM,QAAQ,CAAC;AACf,mBAAU,QAAQ,SAAS;AACzB,gBAAM,KAAK,OAAO,cAAc,IAAI,CAAC;AAAA,QACvC;AACA,eAAO,MAAM,KAAK,EAAE,KAAK,EAAE;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,OAAO,wBAAwB,GAAG,GAAG,GAAG,GAAG;AACzC,YAAI,QAAQ;AAGZ,YAAG,EAAE,aAAa,iBAAiB;AACjC,mBAAS,IAAI,EAAE,KAAK;AAAA,QACtB,OAAO;AACL,mBAAS,GAAG,EAAE,KAAK;AAAA,QACrB;AAGA,iBAAS,KAAK,EAAE,KAAK;AAGrB,YAAG,EAAE,aAAa,iBAAiB;AACjC,mBAAS,IAAI,EAAE,KAAK;AAAA,QACtB,WAAU,EAAE,aAAa,iBAAiB;AACxC,mBAAS,EAAE;AAAA,QACb,OAAO;AACL,mBAAS,IAAI,QAAQ,EAAE,KAAK,CAAC;AAC7B,cAAG,EAAE,SAAS,UAAU,gBAAgB;AACtC,gBAAG,EAAE,UAAU;AACb,uBAAS,IAAI,EAAE,QAAQ;AAAA,YACzB;AAAA,UACF,WAAU,EAAE,SAAS,UAAU,YAAY;AACzC,qBAAS,MAAM,EAAE,SAAS,KAAK;AAAA,UACjC;AAAA,QACF;AAIA,YAAG,EAAE,aAAa,iBAAiB;AACjC,mBAAS,KAAK,EAAE,KAAK;AAAA,QACvB,WAAU,EAAE,aAAa,iBAAiB;AACxC,mBAAS,IAAI,EAAE,KAAK;AAAA,QACtB;AAEA,iBAAS;AACT,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,cAAc,MAAM;AACzB,eAAO,OAAO;AAAA,UACZ,KAAK;AAAA,UAAS,KAAK;AAAA,UAAW,KAAK;AAAA,UAAQ,KAAK;AAAA,QAAK;AAAA,MACzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,OAAO,qBAAqB,SAAS;AACnC,cAAM,QAAQ,CAAC;AAEf,cAAM,cAAc;AAAA,UAClB,cAAc;AAAA,UACd,KAAK;AAAA,UACL,SAAS;AAAA,QACX;AAEA,mBAAU,aAAa,SAAS;AAC9B,gBAAM,UAAU,QAAQ,SAAS;AACjC,kBAAQ,QAAQ,YAAU;AACxB,kBAAM,OAAO,CAAC;AACd,uBAAU,iBAAiB,QAAQ;AACjC,oBAAM,eAAe,OAAO,aAAa;AACzC,oBAAM,eAAe;AAAA,gBACnB,UAAU,YAAY,aAAa,IAAI;AAAA,gBACvC,OAAO,aAAa;AAAA,cACtB;AACA,kBAAG,aAAa,aAAa,cAAc;AACzC,6BAAa,WAAW;AAAA,kBACtB,UAAU;AAAA,gBACZ;AACA,oBAAG,cAAc,cAAc;AAC7B,+BAAa,SAAS,QAAQ,aAAa;AAAA,gBAC7C;AACA,oBAAG,cAAc,cAAc;AAC7B,sBAAG,EAAE,cAAc,eAAe;AAChC,iCAAa,SAAS,QAAQ;AAAA,kBAChC;AACA,+BAAa,WAAW,aAAa;AAAA,gBACvC,WAAU,EAAE,cAAc,eAAe;AACvC,+BAAa,SAAS,QAAQ;AAAA,gBAChC;AAAA,cACF;AACA,mBAAK,aAAa,IAAI;AAAA,YACxB;AACA,gBAAG,cAAc,YAAY;AAC3B,mBAAK,QAAQ;AAAA,gBACX,UAAU;AAAA,gBACV,OAAO;AAAA,cACT;AAAA,YACF,OAAO;AACL,mBAAK,QAAQ;AAAA,gBACX,UAAU,UAAU,WAAW,IAAI,IACjC,kBAAkB;AAAA,gBACpB,OAAO;AAAA,cACT;AAAA,YACF;AACA,kBAAM,KAAK,IAAI;AAAA,UACjB,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAUA,aAAS,gBAAgB,IAAI,IAAI;AAE/B,UAAG,EAAE,GAAG,QAAQ,aAAa,GAAG,QAAQ,YACtC,GAAG,OAAO,aAAa,GAAG,OAAO,WAAW;AAC5C,eAAO;AAAA,MACT;AAEA,UAAG,EAAE,GAAG,QAAQ,UAAU,GAAG,QAAQ,SACnC,GAAG,UAAU,UAAU,GAAG,UAAU,SACpC,GAAG,OAAO,UAAU,GAAG,OAAO,QAAQ;AACtC,eAAO;AAAA,MACT;AACA,UAAG,GAAG,OAAO,aAAa,cAAc;AAEtC,eAAO;AAAA,MACT;AACA,aACG,GAAG,OAAO,SAAS,aAAa,GAAG,OAAO,SAAS,YACnD,GAAG,OAAO,aAAa,GAAG,OAAO,YACjC,GAAG,OAAO,SAAS,UAAU,GAAG,OAAO,SAAS;AAAA,IAErD;AAEA,QAAM,eAAe;AAIrB,aAAS,QAAQ,GAAG;AAClB,aAAO,EAAE,QAAQ,cAAc,SAAS,OAAO;AAC7C,gBAAO,OAAO;AAAA,UACZ,KAAK;AAAK,mBAAO;AAAA,UACjB,KAAK;AAAM,mBAAO;AAAA,UAClB,KAAK;AAAM,mBAAO;AAAA,UAClB,KAAK;AAAM,mBAAO;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAM,iBACJ;AAIF,aAAS,UAAU,GAAG;AACpB,aAAO,EAAE,QAAQ,gBAAgB,SAAS,OAAO,MAAM,GAAG,GAAG;AAC3D,YAAG,MAAM;AACP,kBAAO,MAAM;AAAA,YACX,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAK,qBAAO;AAAA,YACjB,KAAK;AAAM,qBAAO;AAAA,YAClB,KAAK;AAAM,qBAAO;AAAA,UACpB;AAAA,QACF;AACA,YAAG,GAAG;AACJ,iBAAO,OAAO,aAAa,SAAS,GAAG,EAAE,CAAC;AAAA,QAC5C;AACA,YAAG,GAAG;AAEJ,gBAAM,IAAI,MAAM,sBAAsB;AAAA,QACxC;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;;;AClZA;AAAA;AAAA;AAKA,QAAM,mBAAmB;AACzB,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,QAAM,SAAS;AAEf,WAAO,UAAU,MAAM,UAAU;AAAA,MAC/B,YAAY;AAAA,QACV,sBAAsB,MAAM,IAAI,cAAc,QAAQ;AAAA,QACtD,iBAAiB,oBAAI,IAAI;AAAA,QACzB,oBAAoB;AAAA,MACtB,IAAI,CAAC,GAAG;AACN,aAAK,OAAO;AACZ,aAAK,gBAAgB,oBAAI,IAAI;AAC7B,aAAK,kBAAkB,IAAI,iBAAiB,UAAU,cAAc;AACpE,aAAK,sBAAsB;AAC3B,aAAK,oBAAoB;AACzB,aAAK,QAAQ;AACb,aAAK,iBAAiB;AAAA,MACxB;AAAA;AAAA,MAGA,MAAM,KAAK,SAAS;AAClB,aAAK,iBAAiB,oBAAI,IAAI;AAC9B,aAAK,QAAQ;AAIb,mBAAU,QAAQ,SAAS;AAIzB,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,QAAO,CAAC;AAC1D,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,OAAM,CAAC;AACzD,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,MAAK,CAAC;AAAA,QAC1D;AAiBA,cAAM,mBAAmB,oBAAI,IAAI;AACjC,cAAM,gBAAgB,CAAC,GAAG,KAAK,cAAc,KAAK,CAAC;AACnD,YAAI,IAAI;AACR,mBAAU,MAAM,eAAe;AAE7B,cAAG,EAAE,IAAI,QAAQ,GAAG;AAClB,kBAAM,KAAK,OAAO;AAAA,UACpB;AAEA,gBAAM,KAAK,uBAAuB,EAAC,IAAI,iBAAgB,CAAC;AAAA,QAC1D;AAIA,cAAM,SAAS,CAAC,GAAG,iBAAiB,KAAK,CAAC,EAAE,KAAK;AAEjD,cAAM,YAAY,CAAC;AACnB,mBAAU,QAAQ,QAAQ;AAGxB,gBAAM,SAAS,iBAAiB,IAAI,IAAI;AACxC,cAAG,OAAO,SAAS,GAAG;AACpB,sBAAU,KAAK,MAAM;AACrB;AAAA,UACF;AAMA,gBAAM,KAAK,OAAO,CAAC;AACnB,eAAK,gBAAgB,MAAM,EAAE;AAAA,QAO/B;AAKA,mBAAU,UAAU,WAAW;AAG7B,gBAAM,eAAe,CAAC;AAGtB,qBAAU,MAAM,QAAQ;AAGtB,gBAAG,KAAK,gBAAgB,MAAM,EAAE,GAAG;AACjC;AAAA,YACF;AAIA,kBAAM,SAAS,IAAI,iBAAiB,KAAK;AAKzC,mBAAO,MAAM,EAAE;AAIf,kBAAM,SAAS,MAAM,KAAK,iBAAiB,IAAI,MAAM;AACrD,yBAAa,KAAK,MAAM;AAAA,UAC1B;AAIA,uBAAa,KAAK,kBAAkB;AACpC,qBAAU,UAAU,cAAc;AAMhC,kBAAM,SAAS,OAAO,OAAO,UAAU;AACvC,uBAAU,MAAM,QAAQ;AACtB,mBAAK,gBAAgB,MAAM,EAAE;AAAA,YAC/B;AAAA,UACF;AAAA,QACF;AAQA,cAAM,aAAa,CAAC;AACpB,mBAAU,QAAQ,KAAK,OAAO;AAK5B,gBAAM,QAAQ,OAAO;AAAA,YACnB,KAAK,0BAA0B,KAAK,OAAO;AAAA,YAC3C,KAAK;AAAA,YACL,KAAK,0BAA0B,KAAK,MAAM;AAAA,YAC1C,KAAK,0BAA0B,KAAK,KAAK;AAAA,UAC3C;AAEA,qBAAW,KAAK,KAAK;AAAA,QACvB;AAGA,mBAAW,KAAK;AAGhB,eAAO,WAAW,KAAK,EAAE;AAAA,MAC3B;AAAA;AAAA,MAGA,MAAM,qBAAqB,IAAI;AAG7B,cAAM,SAAS,CAAC;AAIhB,cAAM,OAAO,KAAK,cAAc,IAAI,EAAE;AACtC,cAAM,QAAQ,KAAK;AAGnB,mBAAU,QAAQ,OAAO;AAMvB,gBAAM,OAAO;AAAA,YACX,SAAS;AAAA,YAAM,WAAW,KAAK;AAAA,YAAW,QAAQ;AAAA,YAAM,OAAO;AAAA,UACjE;AAIA,eAAK,UAAU,KAAK;AAAA,YAClB;AAAA,YAAI,KAAK;AAAA,YAAS;AAAA,UAAS;AAC7B,eAAK,SAAS,KAAK;AAAA,YACjB;AAAA,YAAI,KAAK;AAAA,YAAQ;AAAA,UAAQ;AAC3B,eAAK,QAAQ,KAAK;AAAA,YAChB;AAAA,YAAI,KAAK;AAAA,YAAO;AAAA,UAAO;AACzB,iBAAO,KAAK,OAAO,cAAc,IAAI,CAAC;AAAA,QACxC;AAGA,eAAO,KAAK;AAIZ,cAAM,KAAK,KAAK,oBAAoB;AACpC,mBAAU,SAAS,QAAQ;AACzB,aAAG,OAAO,KAAK;AAAA,QACjB;AACA,aAAK,OAAO,MAAM,GAAG,OAAO;AAC5B,eAAO,KAAK;AAAA,MACd;AAAA;AAAA,MAGA,MAAM,qBAAqB,SAAS,MAAM,QAAQ,UAAU;AAK1D,YAAI;AACJ,YAAG,KAAK,gBAAgB,MAAM,OAAO,GAAG;AACtC,eAAK,KAAK,gBAAgB,MAAM,OAAO;AAAA,QACzC,WAAU,OAAO,MAAM,OAAO,GAAG;AAC/B,eAAK,OAAO,MAAM,OAAO;AAAA,QAC3B,OAAO;AACL,eAAK,KAAK,cAAc,IAAI,OAAO,EAAE;AAAA,QACvC;AAIA,cAAM,KAAK,KAAK,oBAAoB;AACpC,WAAG,OAAO,QAAQ;AAIlB,YAAG,aAAa,KAAK;AACnB,aAAG,OAAO,KAAK,oBAAoB,IAAI,CAAC;AAAA,QAC1C;AAGA,WAAG,OAAO,EAAE;AAIZ,eAAO,GAAG,OAAO;AAAA,MACnB;AAAA;AAAA,MAGA,MAAM,iBAAiB,IAAI,QAAQ;AACjC,cAAM,iBAAiB,KAAK,eAAe,IAAI,EAAE,KAAK;AACtD,YAAG,iBAAiB,KAAK,mBAAmB;AAC1C,gBAAM,IAAI;AAAA,YACR,4BAA4B,KAAK,iBAAiB;AAAA,UAAa;AAAA,QACnE;AACA,aAAK,eAAe,IAAI,IAAI,iBAAiB,CAAC;AAK9C,cAAM,KAAK,KAAK,oBAAoB;AACpC,cAAM,gBAAgB,MAAM,KAAK,oBAAoB,IAAI,MAAM;AAO/D,cAAM,SAAS,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE,KAAK;AAC9C,mBAAU,QAAQ,QAAQ;AAExB,aAAG,OAAO,IAAI;AAGd,cAAI,aAAa;AAGjB,cAAI;AAGJ,gBAAM,WAAW,IAAI,SAAS,cAAc,IAAI,IAAI,CAAC;AACrD,cAAI,IAAI;AACR,iBAAM,SAAS,QAAQ,GAAG;AACxB,kBAAM,cAAc,SAAS,KAAK;AAElC,gBAAG,EAAE,IAAI,MAAM,GAAG;AAChB,oBAAM,KAAK,OAAO;AAAA,YACpB;AAGA,gBAAI,aAAa,OAAO,MAAM;AAG9B,gBAAI,OAAO;AAIX,kBAAM,gBAAgB,CAAC;AAGvB,gBAAI,kBAAkB;AACtB,uBAAU,WAAW,aAAa;AAGhC,kBAAG,KAAK,gBAAgB,MAAM,OAAO,GAAG;AACtC,wBAAQ,KAAK,gBAAgB,MAAM,OAAO;AAAA,cAC5C,OAAO;AAIL,oBAAG,CAAC,WAAW,MAAM,OAAO,GAAG;AAC7B,gCAAc,KAAK,OAAO;AAAA,gBAC5B;AAGA,wBAAQ,WAAW,MAAM,OAAO;AAAA,cAClC;AAQA,kBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,kCAAkB;AAClB;AAAA,cACF;AAAA,YACF;AAEA,gBAAG,iBAAiB;AAClB;AAAA,YACF;AAGA,uBAAU,WAAW,eAAe;AAIlC,oBAAM,SAAS,MAAM,KAAK,iBAAiB,SAAS,UAAU;AAI9D,sBAAQ,WAAW,MAAM,OAAO;AAGhC,sBAAQ,IAAI,OAAO,IAAI;AAIvB,2BAAa,OAAO;AAQpB,kBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,kCAAkB;AAClB;AAAA,cACF;AAAA,YACF;AAEA,gBAAG,iBAAiB;AAClB;AAAA,YACF;AAKA,gBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,2BAAa;AACb,6BAAe;AAAA,YACjB;AAAA,UACF;AAGA,aAAG,OAAO,UAAU;AAGpB,mBAAS;AAAA,QACX;AAIA,eAAO,EAAC,MAAM,MAAM,GAAG,OAAO,GAAG,OAAM;AAAA,MACzC;AAAA;AAAA,MAGA,2BAA2B,IAAI,WAAW;AACxC,YAAG,UAAU,aAAa,aAAa;AACrC,iBAAO;AAAA,QACT;AAMA,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAO,UAAU,UAAU,KAAK,QAAQ;AAAA,QAC1C;AAAA,MACF;AAAA;AAAA,MAGA,oBAAoB,MAAM;AACxB,eAAO,IAAI,KAAK,UAAU,KAAK;AAAA,MACjC;AAAA;AAAA,MAGA,MAAM,oBAAoB,IAAI,QAAQ;AAGpC,cAAM,gBAAgB,oBAAI,IAAI;AAI9B,cAAM,QAAQ,KAAK,cAAc,IAAI,EAAE,EAAE;AAGzC,YAAI,IAAI;AACR,mBAAU,QAAQ,OAAO;AAEvB,cAAG,EAAE,IAAI,QAAQ,GAAG;AAClB,kBAAM,KAAK,OAAO;AAAA,UACpB;AAKA,gBAAM,QAAQ,IAAI;AAAA,YAChB,KAAK,yBAAyB;AAAA,cAC5B;AAAA,cAAM,WAAW,KAAK;AAAA,cAAS,UAAU;AAAA,cACzC;AAAA,cAAI;AAAA,cAAQ;AAAA,YACd,CAAC;AAAA,YACD,KAAK,yBAAyB;AAAA,cAC5B;AAAA,cAAM,WAAW,KAAK;AAAA,cAAQ,UAAU;AAAA,cACxC;AAAA,cAAI;AAAA,cAAQ;AAAA,YACd,CAAC;AAAA,YACD,KAAK,yBAAyB;AAAA,cAC5B;AAAA,cAAM,WAAW,KAAK;AAAA,cAAO,UAAU;AAAA,cACvC;AAAA,cAAI;AAAA,cAAQ;AAAA,YACd,CAAC;AAAA,UACH,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,uBAAuB,EAAC,IAAI,iBAAgB,GAAG;AAGnD,cAAM,OAAO,MAAM,KAAK,qBAAqB,EAAE;AAI/C,cAAM,SAAS,iBAAiB,IAAI,IAAI;AACxC,YAAG,CAAC,QAAQ;AACV,2BAAiB,IAAI,MAAM,CAAC,EAAE,CAAC;AAAA,QACjC,OAAO;AACL,iBAAO,KAAK,EAAE;AAAA,QAChB;AAAA,MACF;AAAA,MAEA,sBAAsB,EAAC,MAAM,UAAS,GAAG;AACvC,YAAG,UAAU,aAAa,aAAa;AACrC;AAAA,QACF;AACA,cAAM,KAAK,UAAU;AACrB,cAAM,OAAO,KAAK,cAAc,IAAI,EAAE;AACtC,YAAG,MAAM;AACP,eAAK,MAAM,IAAI,IAAI;AAAA,QACrB,OAAO;AACL,eAAK,cAAc,IAAI,IAAI,EAAC,OAAO,oBAAI,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,KAAI,CAAC;AAAA,QACjE;AAAA,MACF;AAAA,MAEA,MAAM,yBACJ,EAAC,MAAM,WAAW,UAAU,IAAI,QAAQ,cAAa,GAAG;AACxD,YAAG,EAAE,UAAU,aAAa,eAAe,UAAU,UAAU,KAAK;AAClE;AAAA,QACF;AAMA,cAAM,UAAU,UAAU;AAC1B,cAAM,OAAO,MAAM,KAAK;AAAA,UACtB;AAAA,UAAS;AAAA,UAAM;AAAA,UAAQ;AAAA,QAAQ;AAKjC,cAAM,UAAU,cAAc,IAAI,IAAI;AACtC,YAAG,SAAS;AACV,kBAAQ,KAAK,OAAO;AAAA,QACtB,OAAO;AACL,wBAAc,IAAI,MAAM,CAAC,OAAO,CAAC;AAAA,QACnC;AAAA,MACF;AAAA;AAAA,MAGA,0BAA0B,WAAW;AACnC,YAAG,UAAU,aAAa,eACxB,CAAC,UAAU,MAAM,WAAW,KAAK,gBAAgB,MAAM,GAAG;AAE1D,iBAAO;AAAA,YACL,UAAU;AAAA,YACV,OAAO,KAAK,gBAAgB,MAAM,UAAU,KAAK;AAAA,UACnD;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,SAAS;AACb,eAAO,IAAI,QAAQ,CAAAC,aAAW,aAAaA,QAAO,CAAC;AAAA,MACrD;AAAA,IACF;AAEA,aAAS,mBAAmB,GAAG,GAAG;AAChC,aAAO,EAAE,OAAO,EAAE,OAAO,KAAK,EAAE,OAAO,EAAE,OAAO,IAAI;AAAA,IACtD;AAAA;AAAA;;;AC/gBA;AAAA;AAAA;AAKA,QAAM,gBAAgB;AACtB,QAAM,YAAY;AAElB,WAAO,UAAU,MAAM,kBAAkB,UAAU;AAAA,MACjD,cAAc;AACZ,cAAM;AACN,aAAK,OAAO;AACZ,aAAK,sBAAsB,MAAM,IAAI,cAAc,MAAM;AAAA,MAC3D;AAAA;AAAA,MAGA,2BAA2B,IAAI,WAAW,KAAK;AAC7C,YAAG,UAAU,aAAa,aAAa;AACrC,iBAAO;AAAA,QACT;AACA,YAAG,QAAQ,SAAS;AAClB,iBAAO;AAAA,YACL,UAAU;AAAA,YACV,OAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAQ,UAAU,UAAU,KAAK,QAAQ;AAAA,QAC3C;AAAA,MACF;AAAA;AAAA,MAGA,oBAAoB,MAAM;AACxB,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA;AAAA,MAGA,MAAM,oBAAoB,IAAI,QAAQ;AAGpC,cAAM,gBAAgB,oBAAI,IAAI;AAI9B,cAAM,QAAQ,KAAK,cAAc,IAAI,EAAE,EAAE;AAGzC,YAAI,IAAI;AACR,mBAAU,QAAQ,OAAO;AAKvB,cAAI;AACJ,cAAI;AACJ,cAAG,KAAK,QAAQ,aAAa,eAAe,KAAK,QAAQ,UAAU,IAAI;AACrE,sBAAU,KAAK,QAAQ;AACvB,uBAAW;AAAA,UACb,WACE,KAAK,OAAO,aAAa,eAAe,KAAK,OAAO,UAAU,IAAI;AAKlE,sBAAU,KAAK,OAAO;AACtB,uBAAW;AAAA,UACb,OAAO;AAEL;AAAA,UACF;AAEA,cAAG,EAAE,IAAI,QAAQ,GAAG;AAClB,kBAAM,KAAK,OAAO;AAAA,UACpB;AAIA,gBAAM,OAAO,MAAM,KAAK;AAAA,YACtB;AAAA,YAAS;AAAA,YAAM;AAAA,YAAQ;AAAA,UAAQ;AACjC,gBAAM,UAAU,cAAc,IAAI,IAAI;AACtC,cAAG,SAAS;AACV,oBAAQ,KAAK,OAAO;AAAA,UACtB,OAAO;AACL,0BAAc,IAAI,MAAM,CAAC,OAAO,CAAC;AAAA,UACnC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AC1FA;AAAA;AAAA;AAKA,QAAM,mBAAmB;AAGzB,QAAM,gBAAgB;AACtB,QAAM,WAAW;AACjB,QAAM,SAAS;AAEf,WAAO,UAAU,MAAM,cAAc;AAAA,MACnC,YAAY;AAAA,QACV,sBAAsB,MAAM,IAAI,cAAc,QAAQ;AAAA,QACtD,iBAAiB,oBAAI,IAAI;AAAA,QACzB,oBAAoB;AAAA,MACtB,IAAI,CAAC,GAAG;AACN,aAAK,OAAO;AACZ,aAAK,gBAAgB,oBAAI,IAAI;AAC7B,aAAK,kBAAkB,IAAI,iBAAiB,UAAU,cAAc;AACpE,aAAK,sBAAsB;AAC3B,aAAK,oBAAoB;AACzB,aAAK,QAAQ;AACb,aAAK,iBAAiB;AAAA,MACxB;AAAA;AAAA,MAGA,KAAK,SAAS;AACZ,aAAK,iBAAiB,oBAAI,IAAI;AAC9B,aAAK,QAAQ;AAIb,mBAAU,QAAQ,SAAS;AAIzB,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,QAAO,CAAC;AAC1D,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,OAAM,CAAC;AACzD,eAAK,sBAAsB,EAAC,MAAM,WAAW,KAAK,MAAK,CAAC;AAAA,QAC1D;AAiBA,cAAM,mBAAmB,oBAAI,IAAI;AACjC,cAAM,gBAAgB,CAAC,GAAG,KAAK,cAAc,KAAK,CAAC;AACnD,mBAAU,MAAM,eAAe;AAE7B,eAAK,uBAAuB,EAAC,IAAI,iBAAgB,CAAC;AAAA,QACpD;AAIA,cAAM,SAAS,CAAC,GAAG,iBAAiB,KAAK,CAAC,EAAE,KAAK;AAEjD,cAAM,YAAY,CAAC;AACnB,mBAAU,QAAQ,QAAQ;AAGxB,gBAAM,SAAS,iBAAiB,IAAI,IAAI;AACxC,cAAG,OAAO,SAAS,GAAG;AACpB,sBAAU,KAAK,MAAM;AACrB;AAAA,UACF;AAMA,gBAAM,KAAK,OAAO,CAAC;AACnB,eAAK,gBAAgB,MAAM,EAAE;AAAA,QAO/B;AAKA,mBAAU,UAAU,WAAW;AAG7B,gBAAM,eAAe,CAAC;AAGtB,qBAAU,MAAM,QAAQ;AAGtB,gBAAG,KAAK,gBAAgB,MAAM,EAAE,GAAG;AACjC;AAAA,YACF;AAIA,kBAAM,SAAS,IAAI,iBAAiB,KAAK;AAKzC,mBAAO,MAAM,EAAE;AAIf,kBAAM,SAAS,KAAK,iBAAiB,IAAI,MAAM;AAC/C,yBAAa,KAAK,MAAM;AAAA,UAC1B;AAIA,uBAAa,KAAK,kBAAkB;AACpC,qBAAU,UAAU,cAAc;AAMhC,kBAAM,SAAS,OAAO,OAAO,UAAU;AACvC,uBAAU,MAAM,QAAQ;AACtB,mBAAK,gBAAgB,MAAM,EAAE;AAAA,YAC/B;AAAA,UACF;AAAA,QACF;AAQA,cAAM,aAAa,CAAC;AACpB,mBAAU,QAAQ,KAAK,OAAO;AAK5B,gBAAM,QAAQ,OAAO;AAAA,YACnB,KAAK,0BAA0B,EAAC,WAAW,KAAK,QAAO,CAAC;AAAA,YACxD,KAAK;AAAA,YACL,KAAK,0BAA0B,EAAC,WAAW,KAAK,OAAM,CAAC;AAAA,YACvD,KAAK,0BAA0B,EAAC,WAAW,KAAK,MAAK,CAAC;AAAA,UACxD;AAEA,qBAAW,KAAK,KAAK;AAAA,QACvB;AAGA,mBAAW,KAAK;AAGhB,eAAO,WAAW,KAAK,EAAE;AAAA,MAC3B;AAAA;AAAA,MAGA,qBAAqB,IAAI;AAGvB,cAAM,SAAS,CAAC;AAIhB,cAAM,OAAO,KAAK,cAAc,IAAI,EAAE;AACtC,cAAM,QAAQ,KAAK;AAGnB,mBAAU,QAAQ,OAAO;AAMvB,gBAAM,OAAO;AAAA,YACX,SAAS;AAAA,YAAM,WAAW,KAAK;AAAA,YAAW,QAAQ;AAAA,YAAM,OAAO;AAAA,UACjE;AAIA,eAAK,UAAU,KAAK;AAAA,YAClB;AAAA,YAAI,KAAK;AAAA,YAAS;AAAA,UAAS;AAC7B,eAAK,SAAS,KAAK;AAAA,YACjB;AAAA,YAAI,KAAK;AAAA,YAAQ;AAAA,UAAQ;AAC3B,eAAK,QAAQ,KAAK;AAAA,YAChB;AAAA,YAAI,KAAK;AAAA,YAAO;AAAA,UAAO;AACzB,iBAAO,KAAK,OAAO,cAAc,IAAI,CAAC;AAAA,QACxC;AAGA,eAAO,KAAK;AAIZ,cAAM,KAAK,KAAK,oBAAoB;AACpC,mBAAU,SAAS,QAAQ;AACzB,aAAG,OAAO,KAAK;AAAA,QACjB;AACA,aAAK,OAAO,GAAG,OAAO;AACtB,eAAO,KAAK;AAAA,MACd;AAAA;AAAA,MAGA,qBAAqB,SAAS,MAAM,QAAQ,UAAU;AAKpD,YAAI;AACJ,YAAG,KAAK,gBAAgB,MAAM,OAAO,GAAG;AACtC,eAAK,KAAK,gBAAgB,MAAM,OAAO;AAAA,QACzC,WAAU,OAAO,MAAM,OAAO,GAAG;AAC/B,eAAK,OAAO,MAAM,OAAO;AAAA,QAC3B,OAAO;AACL,eAAK,KAAK,cAAc,IAAI,OAAO,EAAE;AAAA,QACvC;AAIA,cAAM,KAAK,KAAK,oBAAoB;AACpC,WAAG,OAAO,QAAQ;AAIlB,YAAG,aAAa,KAAK;AACnB,aAAG,OAAO,KAAK,oBAAoB,IAAI,CAAC;AAAA,QAC1C;AAGA,WAAG,OAAO,EAAE;AAIZ,eAAO,GAAG,OAAO;AAAA,MACnB;AAAA;AAAA,MAGA,iBAAiB,IAAI,QAAQ;AAC3B,cAAM,iBAAiB,KAAK,eAAe,IAAI,EAAE,KAAK;AACtD,YAAG,iBAAiB,KAAK,mBAAmB;AAC1C,gBAAM,IAAI;AAAA,YACR,4BAA4B,KAAK,iBAAiB;AAAA,UAAa;AAAA,QACnE;AACA,aAAK,eAAe,IAAI,IAAI,iBAAiB,CAAC;AAK9C,cAAM,KAAK,KAAK,oBAAoB;AACpC,cAAM,gBAAgB,KAAK,oBAAoB,IAAI,MAAM;AAOzD,cAAM,SAAS,CAAC,GAAG,cAAc,KAAK,CAAC,EAAE,KAAK;AAC9C,mBAAU,QAAQ,QAAQ;AAExB,aAAG,OAAO,IAAI;AAGd,cAAI,aAAa;AAGjB,cAAI;AAGJ,gBAAM,WAAW,IAAI,SAAS,cAAc,IAAI,IAAI,CAAC;AACrD,iBAAM,SAAS,QAAQ,GAAG;AACxB,kBAAM,cAAc,SAAS,KAAK;AAGlC,gBAAI,aAAa,OAAO,MAAM;AAG9B,gBAAI,OAAO;AAIX,kBAAM,gBAAgB,CAAC;AAGvB,gBAAI,kBAAkB;AACtB,uBAAU,WAAW,aAAa;AAGhC,kBAAG,KAAK,gBAAgB,MAAM,OAAO,GAAG;AACtC,wBAAQ,KAAK,gBAAgB,MAAM,OAAO;AAAA,cAC5C,OAAO;AAIL,oBAAG,CAAC,WAAW,MAAM,OAAO,GAAG;AAC7B,gCAAc,KAAK,OAAO;AAAA,gBAC5B;AAGA,wBAAQ,WAAW,MAAM,OAAO;AAAA,cAClC;AAQA,kBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,kCAAkB;AAClB;AAAA,cACF;AAAA,YACF;AAEA,gBAAG,iBAAiB;AAClB;AAAA,YACF;AAGA,uBAAU,WAAW,eAAe;AAIlC,oBAAM,SAAS,KAAK,iBAAiB,SAAS,UAAU;AAIxD,sBAAQ,WAAW,MAAM,OAAO;AAGhC,sBAAQ,IAAI,OAAO,IAAI;AAIvB,2BAAa,OAAO;AAQpB,kBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,kCAAkB;AAClB;AAAA,cACF;AAAA,YACF;AAEA,gBAAG,iBAAiB;AAClB;AAAA,YACF;AAKA,gBAAG,WAAW,WAAW,KAAK,OAAO,YAAY;AAC/C,2BAAa;AACb,6BAAe;AAAA,YACjB;AAAA,UACF;AAGA,aAAG,OAAO,UAAU;AAGpB,mBAAS;AAAA,QACX;AAIA,eAAO,EAAC,MAAM,GAAG,OAAO,GAAG,OAAM;AAAA,MACnC;AAAA;AAAA,MAGA,2BAA2B,IAAI,WAAW;AACxC,YAAG,UAAU,aAAa,aAAa;AACrC,iBAAO;AAAA,QACT;AAMA,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAO,UAAU,UAAU,KAAK,QAAQ;AAAA,QAC1C;AAAA,MACF;AAAA;AAAA,MAGA,oBAAoB,MAAM;AACxB,eAAO,IAAI,KAAK,UAAU,KAAK;AAAA,MACjC;AAAA;AAAA,MAGA,oBAAoB,IAAI,QAAQ;AAG9B,cAAM,gBAAgB,oBAAI,IAAI;AAI9B,cAAM,QAAQ,KAAK,cAAc,IAAI,EAAE,EAAE;AAGzC,mBAAU,QAAQ,OAAO;AAKvB,eAAK,yBAAyB;AAAA,YAC5B;AAAA,YAAM,WAAW,KAAK;AAAA,YAAS,UAAU;AAAA,YACzC;AAAA,YAAI;AAAA,YAAQ;AAAA,UACd,CAAC;AACD,eAAK,yBAAyB;AAAA,YAC5B;AAAA,YAAM,WAAW,KAAK;AAAA,YAAQ,UAAU;AAAA,YACxC;AAAA,YAAI;AAAA,YAAQ;AAAA,UACd,CAAC;AACD,eAAK,yBAAyB;AAAA,YAC5B;AAAA,YAAM,WAAW,KAAK;AAAA,YAAO,UAAU;AAAA,YACvC;AAAA,YAAI;AAAA,YAAQ;AAAA,UACd,CAAC;AAAA,QACH;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,uBAAuB,EAAC,IAAI,iBAAgB,GAAG;AAG7C,cAAM,OAAO,KAAK,qBAAqB,EAAE;AAIzC,cAAM,SAAS,iBAAiB,IAAI,IAAI;AACxC,YAAG,CAAC,QAAQ;AACV,2BAAiB,IAAI,MAAM,CAAC,EAAE,CAAC;AAAA,QACjC,OAAO;AACL,iBAAO,KAAK,EAAE;AAAA,QAChB;AAAA,MACF;AAAA,MAEA,sBAAsB,EAAC,MAAM,UAAS,GAAG;AACvC,YAAG,UAAU,aAAa,aAAa;AACrC;AAAA,QACF;AACA,cAAM,KAAK,UAAU;AACrB,cAAM,OAAO,KAAK,cAAc,IAAI,EAAE;AACtC,YAAG,MAAM;AACP,eAAK,MAAM,IAAI,IAAI;AAAA,QACrB,OAAO;AACL,eAAK,cAAc,IAAI,IAAI,EAAC,OAAO,oBAAI,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,KAAI,CAAC;AAAA,QACjE;AAAA,MACF;AAAA,MAEA,yBACE,EAAC,MAAM,WAAW,UAAU,IAAI,QAAQ,cAAa,GAAG;AACxD,YAAG,EAAE,UAAU,aAAa,eAAe,UAAU,UAAU,KAAK;AAClE;AAAA,QACF;AAMA,cAAM,UAAU,UAAU;AAC1B,cAAM,OAAO,KAAK,qBAAqB,SAAS,MAAM,QAAQ,QAAQ;AAKtE,cAAM,UAAU,cAAc,IAAI,IAAI;AACtC,YAAG,SAAS;AACV,kBAAQ,KAAK,OAAO;AAAA,QACtB,OAAO;AACL,wBAAc,IAAI,MAAM,CAAC,OAAO,CAAC;AAAA,QACnC;AAAA,MACF;AAAA;AAAA,MAGA,0BAA0B,EAAC,UAAS,GAAG;AACrC,YAAG,UAAU,aAAa,eACxB,CAAC,UAAU,MAAM,WAAW,KAAK,gBAAgB,MAAM,GAAG;AAE1D,iBAAO;AAAA,YACL,UAAU;AAAA,YACV,OAAO,KAAK,gBAAgB,MAAM,UAAU,KAAK;AAAA,UACnD;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,mBAAmB,GAAG,GAAG;AAChC,aAAO,EAAE,OAAO,EAAE,OAAO,KAAK,EAAE,OAAO,EAAE,OAAO,IAAI;AAAA,IACtD;AAAA;AAAA;;;AC3fA;AAAA;AAAA;AAKA,QAAM,gBAAgB;AACtB,QAAM,gBAAgB;AAEtB,WAAO,UAAU,MAAM,sBAAsB,cAAc;AAAA,MACzD,cAAc;AACZ,cAAM;AACN,aAAK,OAAO;AACZ,aAAK,sBAAsB,MAAM,IAAI,cAAc,MAAM;AAAA,MAC3D;AAAA;AAAA,MAGA,2BAA2B,IAAI,WAAW,KAAK;AAC7C,YAAG,UAAU,aAAa,aAAa;AACrC,iBAAO;AAAA,QACT;AACA,YAAG,QAAQ,SAAS;AAClB,iBAAO;AAAA,YACL,UAAU;AAAA,YACV,OAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,UACL,UAAU;AAAA,UACV,OAAQ,UAAU,UAAU,KAAK,QAAQ;AAAA,QAC3C;AAAA,MACF;AAAA;AAAA,MAGA,oBAAoB,MAAM;AACxB,eAAO,KAAK,UAAU;AAAA,MACxB;AAAA;AAAA,MAGA,oBAAoB,IAAI,QAAQ;AAG9B,cAAM,gBAAgB,oBAAI,IAAI;AAI9B,cAAM,QAAQ,KAAK,cAAc,IAAI,EAAE,EAAE;AAGzC,mBAAU,QAAQ,OAAO;AAKvB,cAAI;AACJ,cAAI;AACJ,cAAG,KAAK,QAAQ,aAAa,eAAe,KAAK,QAAQ,UAAU,IAAI;AACrE,sBAAU,KAAK,QAAQ;AACvB,uBAAW;AAAA,UACb,WACE,KAAK,OAAO,aAAa,eAAe,KAAK,OAAO,UAAU,IAAI;AAKlE,sBAAU,KAAK,OAAO;AACtB,uBAAW;AAAA,UACb,OAAO;AAEL;AAAA,UACF;AAIA,gBAAM,OAAO,KAAK,qBAAqB,SAAS,MAAM,QAAQ,QAAQ;AACtE,gBAAM,UAAU,cAAc,IAAI,IAAI;AACtC,cAAG,SAAS;AACV,oBAAQ,KAAK,OAAO;AAAA,UACtB,OAAO;AACL,0BAAc,IAAI,MAAM,CAAC,OAAO,CAAC;AAAA,UACnC;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;ACpFA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oHAAoH,GAAG,mIAAmI;AAAA,QACzQ;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAoCA,QAAM,YAAY;AAClB,QAAM,YAAY;AAClB,QAAM,gBAAgB;AACtB,QAAM,gBAAgB;AAGtB,QAAI;AACJ,QAAI;AACF,0BAAoB;AAAA,IACtB,SAAQ,GAAG;AAAA,IAAC;AAGZ,aAAS,gBAAgB,OAAoB;AAE3C,UAAG,CAAC,MAAM,QAAQ,KAAK,GAAG;AACxB,eAAO,QAAQ,OAAO,qBAAqB,KAAK;AAAA,MAClD;AACA,aAAO;AAAA,IACT;AAGA,YAAQ,SAAS;AACjB,YAAQ,mBAAmB;AAS3B,YAAQ,qBAAqB,SAAS,KAAK;AACzC,UAAG,KAAK;AACN,4BAAoB;AAAA,MACtB;AACA,aAAO;AAAA,IACT;AA4BA,YAAQ,WAAW,eAAe,OAAO,SAAS;AAChD,YAAM,UAAU,gBAAgB,OAAO,OAAO;AAE9C,UAAG,QAAQ,WAAW;AACpB,YAAG,CAAC,mBAAmB;AACrB,gBAAM,IAAI,MAAM,mCAAmC;AAAA,QACrD;AACA,YAAG,QAAQ,qBAAqB;AAC9B,gBAAM,IAAI;AAAA,YACR;AAAA,UAAwD;AAAA,QAC5D;AACA,eAAO,IAAI,QAAQ,CAACC,UAAS,WAC3B,kBAAkB,SAAS,SAAS,SAAS,CAAC,KAAK,cACjD,MAAM,OAAO,GAAG,IAAIA,SAAQ,SAAS,CAAC,CAAC;AAAA,MAC7C;AAEA,UAAG,QAAQ,cAAc,aAAa;AACpC,eAAO,IAAI,UAAU,OAAO,EAAE,KAAK,OAAO;AAAA,MAC5C;AACA,UAAG,QAAQ,cAAc,aAAa;AACpC,YAAG,QAAQ,qBAAqB;AAC9B,gBAAM,IAAI;AAAA,YACR;AAAA,UAAwD;AAAA,QAC5D;AACA,eAAO,IAAI,UAAU,OAAO,EAAE,KAAK,OAAO;AAAA,MAC5C;AACA,UAAG,EAAE,eAAe,UAAU;AAC5B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACxE;AACA,YAAM,IAAI;AAAA,QACR,qDAAqD,QAAQ;AAAA,MAAS;AAAA,IAC1E;AA2BA,YAAQ,gBAAgB,SAAS,OAAO,SAAS;AAC/C,YAAM,UAAU,gBAAgB,OAAO,OAAO;AAE9C,UAAG,QAAQ,WAAW;AACpB,YAAG,CAAC,mBAAmB;AACrB,gBAAM,IAAI,MAAM,mCAAmC;AAAA,QACrD;AACA,YAAG,QAAQ,qBAAqB;AAC9B,gBAAM,IAAI;AAAA,YACR;AAAA,UAAwD;AAAA,QAC5D;AACA,eAAO,kBAAkB,aAAa,SAAS,OAAO;AAAA,MACxD;AACA,UAAG,QAAQ,cAAc,aAAa;AACpC,eAAO,IAAI,cAAc,OAAO,EAAE,KAAK,OAAO;AAAA,MAChD;AACA,UAAG,QAAQ,cAAc,aAAa;AACpC,YAAG,QAAQ,qBAAqB;AAC9B,gBAAM,IAAI;AAAA,YACR;AAAA,UAAwD;AAAA,QAC5D;AACA,eAAO,IAAI,cAAc,OAAO,EAAE,KAAK,OAAO;AAAA,MAChD;AACA,UAAG,EAAE,eAAe,UAAU;AAC5B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACxE;AACA,YAAM,IAAI;AAAA,QACR,qDAAqD,QAAQ;AAAA,MAAS;AAAA,IAC1E;AAAA;AAAA;;;AC1LA;AAAA;AAOA,WAAO,UAAU;AAAA;AAAA;;;ACPjB;AAAA;AAAA;AAKA,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AASjB,QAAI,UAAU,MAAM;AASpB,QAAI,YAAY,OAAM,OAAO,MAAM,aACjC,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AASxC,QAAI,WAAW,OAAK,IAAI,SAAS,CAAC,MAC/B,OAAO,CAAC,EAAE,QAAQ,GAAG,MAAM,MAAM,KAAK,IAAI,CAAC,KAAK;AASnD,QAAI,gBAAgB,OAAK,IAAI,SAAS,CAAC,KAAK,OAAO,KAAK,CAAC,EAAE,WAAW;AAStE,QAAI,WAAW,OAAM,OAAO,MAAM,YAChC,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AASxC,QAAI,YAAY,OAAK,CAAC,MAAM,WAAW,CAAC,CAAC,KAAK,SAAS,CAAC;AASxD,QAAI,WAAW,OAAK,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AAS1D,QAAI,WAAW,OAAM,OAAO,MAAM,YAChC,OAAO,UAAU,SAAS,KAAK,CAAC,MAAM;AASxC,QAAI,cAAc,OAAK,OAAO,MAAM;AAAA;AAAA;;;AC3FpC;AAAA;AAAA;AAKA,QAAM,QAAQ;AAEd,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AASjB,QAAI,YAAY,OAAK;AAKnB,UAAG,MAAM,SAAS,CAAC,KACjB,EAAG,YAAY,KAAO,UAAU,KAAO,WAAW,IAAK;AACvD,cAAM,WAAW,OAAO,KAAK,CAAC,EAAE;AAChC,eAAQ,WAAW,KAAK,EAAE,SAAS;AAAA,MACrC;AACA,aAAO;AAAA,IACT;AASA,QAAI,qBAAqB;AAAA;AAAA;AAAA;AAAA,MAItB,MAAM,SAAS,CAAC,KAAK,OAAO,KAAK,CAAC,EAAE,WAAW,KAAM,SAAS;AAAA;AASjE,QAAI,UAAU;AAAA;AAAA;AAAA;AAAA,MAIZ,MAAM,SAAS,CAAC,KAAM,YAAY;AAAA;AASpC,QAAI,SAAS;AAAA;AAAA;AAAA;AAAA,MAIX,MAAM,SAAS,CAAC,KAAM,WAAW;AAAA;AAOnC,QAAI,UAAU,OAAK;AAKjB,aAAO,MAAM,SAAS,CAAC,KACrB,YAAY,KACZ,OAAO,KAAK,CAAC,EACV,OAAO,SAAO,QAAQ,SAAS,QAAQ,QAAQ,EAAE,WAAW;AAAA,IACnE;AAOA,QAAI,gBAAgB,OAAK;AAKvB,aAAO,IAAI,QAAQ,CAAC,KAAK,EAAE,SAAS;AAAA,IACtC;AASA,QAAI,cAAc,OAAK;AAKrB,UAAG,MAAM,SAAS,CAAC,GAAG;AACpB,YAAG,SAAS,GAAG;AACb,gBAAM,KAAK,EAAE,KAAK;AAClB,iBAAO,CAAC,MAAM,SAAS,EAAE,KAAK,GAAG,QAAQ,IAAI,MAAM;AAAA,QACrD;AACA,eAAQ,OAAO,KAAK,CAAC,EAAE,WAAW,KAChC,EAAG,YAAY,KAAO,UAAU,KAAO,WAAW;AAAA,MACtD;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACvHA;AAAA;AAAA;AAKA,WAAO,UAAU,MAAM,oBAAoB,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQ/C,YACE,UAAU,0CACV,OAAO,gBACP,UAAU,CAAC,GAAG;AACd,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,aAAK,UAAU;AACf,aAAK,UAAU;AAAA,MACjB;AAAA,IACF;AAAA;AAAA;;;ACtBA;AAAA;AAAA;AAKA,QAAM,aAAa;AACnB,QAAM,QAAQ;AAEd,QAAM,mBAAmB,uBAAwB;AACjD,QAAM,cAAc;AAGpB,QAAM,cAAc;AACpB,QAAM,qBAAqB;AAC3B,QAAM,oBAAoB;AAC1B,QAAM,2BACJ;AACF,QAAM,gBAAgB;AAEtB,QAAM,WAAW;AAAA,MACf,SAAS;AAAA,QACP,QAAQ;AAAA,MACV;AAAA,IACF;AAEA,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AACjB,QAAI,mBAAmB;AACvB,QAAI,cAAc;AAClB,QAAI,gBAAgB;AAUpB,QAAI,QAAQ,SAAS,OAAO;AAC1B,UAAG,SAAS,OAAO,UAAU,UAAU;AACrC,YAAI;AACJ,YAAG,MAAM,QAAQ,KAAK,GAAG;AACvB,iBAAO,CAAC;AACR,mBAAQ,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACpC,iBAAK,CAAC,IAAI,IAAI,MAAM,MAAM,CAAC,CAAC;AAAA,UAC9B;AAAA,QACF,WAAU,iBAAiB,KAAK;AAC9B,iBAAO,oBAAI,IAAI;AACf,qBAAU,CAAC,GAAG,CAAC,KAAK,OAAO;AACzB,iBAAK,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC;AAAA,UAC1B;AAAA,QACF,WAAU,iBAAiB,KAAK;AAC9B,iBAAO,oBAAI,IAAI;AACf,qBAAU,KAAK,OAAO;AACpB,iBAAK,IAAI,IAAI,MAAM,CAAC,CAAC;AAAA,UACvB;AAAA,QACF,WAAU,MAAM,SAAS,KAAK,GAAG;AAC/B,iBAAO,CAAC;AACR,qBAAU,OAAO,OAAO;AACtB,iBAAK,GAAG,IAAI,IAAI,MAAM,MAAM,GAAG,CAAC;AAAA,UAClC;AAAA,QACF,OAAO;AACL,iBAAO,MAAM,SAAS;AAAA,QACxB;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAUA,QAAI,UAAU,SAAS,OAAO;AAC5B,aAAO,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAAA,IAC9C;AAWA,QAAI,eAAe,CAAC,UAAU,CAAC,MAAM;AACnC,YAAM,YAAY,OAAO,KAAK,OAAO,EAAE;AAAA,QACrC,OAAK,EAAE,YAAY,MAAM;AAAA,MAAQ;AAEnC,UAAG,WAAW;AACZ,cAAM,IAAI;AAAA,UACR,+CACA,SAAS,QAAQ,SAAS;AAAA,QAAiB;AAAA,MAC/C;AAEA,aAAO,OAAO,OAAO,EAAC,QAAQ,SAAS,QAAQ,OAAM,GAAG,OAAO;AAAA,IACjE;AAoBA,QAAI,kBAAkB,YAAU;AAC9B,YAAM,OAAO,CAAC;AAEd,YAAM,UAAU,OAAO,MAAM,kBAAkB;AAC/C,eAAQ,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACtC,YAAI,QAAQ,QAAQ,CAAC,EAAE,MAAM,iBAAiB;AAC9C,YAAG,CAAC,OAAO;AACT;AAAA,QACF;AACA,cAAM,SAAS,EAAC,QAAQ,MAAM,CAAC,EAAC;AAChC,cAAM,SAAS,MAAM,CAAC;AACtB,eAAO,QAAQ,yBAAyB,KAAK,MAAM,GAAI;AACrD,iBAAO,MAAM,CAAC,CAAC,IAAK,MAAM,CAAC,MAAM,SAAa,MAAM,CAAC,IAAI,MAAM,CAAC;AAAA,QAClE;AACA,cAAM,MAAM,OAAO,OAAO;AAC1B,YAAG,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG;AAC3B,eAAK,GAAG,EAAE,KAAK,MAAM;AAAA,QACvB,WAAU,KAAK,eAAe,GAAG,GAAG;AAClC,eAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,MAAM;AAAA,QAChC,OAAO;AACL,eAAK,GAAG,IAAI;AAAA,QACd;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAOA,QAAI,oBAAoB,CAAC,GAAG,YAAY;AACtC,UAAG,MAAM,SAAS,CAAC,GAAG;AACpB;AAAA,MACF;AAEA,UAAG,MAAM,QAAQ,CAAC,KAAK,EAAE,MAAM,QAAM,MAAM,SAAS,EAAE,CAAC,GAAG;AACxD;AAAA,MACF;AACA,UAAG,WAAW,MAAM,SAAS,CAAC,GAAG;AAC/B,gBAAO,OAAO,KAAK,CAAC,EAAE,QAAQ;AAAA,UAC5B,KAAK;AAEH;AAAA,UACF,KAAK;AAEH,gBAAG,cAAc,KACf,IAAI,QAAQ,EAAE,UAAU,CAAC,EAAE,MAAM,QAAM,MAAM,SAAS,EAAE,CAAC,GAAG;AAC5D;AAAA,YACF;AAAA,QACJ;AAAA,MACF;AAEA,YAAM,IAAI;AAAA,QACR;AAAA,QAEwB;AAAA,QACxB,EAAC,MAAM,sBAAsB,OAAO,EAAC;AAAA,MAAC;AAAA,IAC1C;AAUA,QAAI,cAAc,CAAC,SAAS,aAAa;AACvC,UAAG,QAAQ,eAAe,QAAQ,GAAG;AACnC,cAAM,QAAQ,QAAQ,QAAQ;AAC9B,eAAQ,CAAC,MAAM,QAAQ,KAAK,KAAK,MAAM,SAAS;AAAA,MAClD;AACA,aAAO;AAAA,IACT;AAWA,QAAI,WAAW,CAAC,SAAS,UAAU,UAAU;AAC3C,UAAG,IAAI,YAAY,SAAS,QAAQ,GAAG;AACrC,YAAI,MAAM,QAAQ,QAAQ;AAC1B,cAAM,SAAS,WAAW,OAAO,GAAG;AACpC,YAAG,MAAM,QAAQ,GAAG,KAAK,QAAQ;AAC/B,cAAG,QAAQ;AACT,kBAAM,IAAI,OAAO;AAAA,UACnB;AACA,mBAAQ,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAClC,gBAAG,IAAI,cAAc,OAAO,IAAI,CAAC,CAAC,GAAG;AACnC,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF,WAAU,CAAC,MAAM,QAAQ,KAAK,GAAG;AAE/B,iBAAO,IAAI,cAAc,OAAO,GAAG;AAAA,QACrC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAmBA,QAAI,WAAW,CAAC,SAAS,UAAU,OAAO,YAAY;AACpD,gBAAU,WAAW,CAAC;AACtB,UAAG,EAAE,qBAAqB,UAAU;AAClC,gBAAQ,kBAAkB;AAAA,MAC5B;AACA,UAAG,EAAE,kBAAkB,UAAU;AAC/B,gBAAQ,eAAe;AAAA,MACzB;AACA,UAAG,EAAE,oBAAoB,UAAU;AACjC,gBAAQ,iBAAiB;AAAA,MAC3B;AACA,UAAG,EAAE,kBAAkB,UAAU;AAC/B,gBAAQ,eAAe;AAAA,MACzB;AAEA,UAAG,QAAQ,cAAc;AACvB,gBAAQ,QAAQ,IAAI;AAAA,MACtB,WAAU,MAAM,QAAQ,KAAK,GAAG;AAC9B,YAAG,MAAM,WAAW,KAAK,QAAQ,mBAC/B,CAAC,QAAQ,eAAe,QAAQ,GAAG;AACnC,kBAAQ,QAAQ,IAAI,CAAC;AAAA,QACvB;AACA,YAAG,QAAQ,cAAc;AACvB,kBAAQ,MAAM,OAAO,QAAQ,QAAQ,CAAC;AACtC,kBAAQ,QAAQ,IAAI,CAAC;AAAA,QACvB;AACA,iBAAQ,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,GAAG;AACpC,cAAI,SAAS,SAAS,UAAU,MAAM,CAAC,GAAG,OAAO;AAAA,QACnD;AAAA,MACF,WAAU,QAAQ,eAAe,QAAQ,GAAG;AAE1C,cAAM,WAAY,CAAC,QAAQ,kBACzB,IAAI,SAAS,SAAS,UAAU,KAAK;AAGvC,YAAG,CAAC,MAAM,QAAQ,QAAQ,QAAQ,CAAC,MAChC,CAAC,YAAY,QAAQ,kBAAkB;AACxC,kBAAQ,QAAQ,IAAI,CAAC,QAAQ,QAAQ,CAAC;AAAA,QACxC;AAGA,YAAG,CAAC,UAAU;AACZ,cAAG,QAAQ,cAAc;AACvB,oBAAQ,QAAQ,EAAE,QAAQ,KAAK;AAAA,UACjC,OAAO;AACL,oBAAQ,QAAQ,EAAE,KAAK,KAAK;AAAA,UAC9B;AAAA,QACF;AAAA,MACF,OAAO;AAEL,gBAAQ,QAAQ,IAAI,QAAQ,kBAAkB,CAAC,KAAK,IAAI;AAAA,MAC1D;AAAA,IACF;AAUA,QAAI,YAAY,CAAC,SAAS,aAAa,CAAC,EAAE,OAAO,QAAQ,QAAQ,KAAK,CAAC,CAAC;AAQxE,QAAI,iBAAiB,CAAC,SAAS,aAAa;AAC1C,aAAO,QAAQ,QAAQ;AAAA,IACzB;AAYA,QAAI,cAAc,CAAC,SAAS,UAAU,OAAO,YAAY;AACvD,gBAAU,WAAW,CAAC;AACtB,UAAG,EAAE,qBAAqB,UAAU;AAClC,gBAAQ,kBAAkB;AAAA,MAC5B;AAGA,YAAM,SAAS,IAAI,UAAU,SAAS,QAAQ,EAAE;AAAA,QAC9C,OAAK,CAAC,IAAI,cAAc,GAAG,KAAK;AAAA,MAAC;AAEnC,UAAG,OAAO,WAAW,GAAG;AACtB,YAAI,eAAe,SAAS,QAAQ;AAAA,MACtC,WAAU,OAAO,WAAW,KAAK,CAAC,QAAQ,iBAAiB;AACzD,gBAAQ,QAAQ,IAAI,OAAO,CAAC;AAAA,MAC9B,OAAO;AACL,gBAAQ,QAAQ,IAAI;AAAA,MACtB;AAAA,IACF;AASA,QAAI,oBAAoB,CAAC,OAAO,YAAY;AAC1C,gBAAU,WAAW,CAAC;AACtB,YAAM,SAAS,QAAQ,UAAU,IAAI,iBAAiB,KAAK;AAC3D,aAAO,iBAAiB,QAAQ,KAAK;AAAA,IACvC;AAgBA,QAAI,gBAAgB,CAAC,IAAI,OAAO;AAE9B,UAAG,OAAO,IAAI;AACZ,eAAO;AAAA,MACT;AAGA,UAAG,WAAW,QAAQ,EAAE,KAAK,WAAW,QAAQ,EAAE,KAChD,GAAG,QAAQ,MAAM,GAAG,QAAQ,KAC5B,GAAG,OAAO,MAAM,GAAG,OAAO,KAC1B,GAAG,WAAW,MAAM,GAAG,WAAW,KAClC,GAAG,QAAQ,MAAM,GAAG,QAAQ,GAAG;AAC/B,eAAO;AAAA,MACT;AAGA,UAAG,MAAM,SAAS,EAAE,KACjB,SAAS,MACV,MAAM,SAAS,EAAE,KAChB,SAAS,IAAK;AACf,eAAO,GAAG,KAAK,MAAM,GAAG,KAAK;AAAA,MAC/B;AAEA,aAAO;AAAA,IACT;AAUA,QAAI,uBAAuB,CAAC,GAAG,MAAM;AACnC,UAAG,EAAE,SAAS,EAAE,QAAQ;AACtB,eAAO;AAAA,MACT;AACA,UAAG,EAAE,SAAS,EAAE,QAAQ;AACtB,eAAO;AAAA,MACT;AACA,UAAG,MAAM,GAAG;AACV,eAAO;AAAA,MACT;AACA,aAAQ,IAAI,IAAK,KAAK;AAAA,IACxB;AAUA,aAAS,iBAAiB,QAAQ,SAAS;AACzC,UAAG,MAAM,QAAQ,OAAO,GAAG;AACzB,iBAAQ,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACtC,kBAAQ,CAAC,IAAI,iBAAiB,QAAQ,QAAQ,CAAC,CAAC;AAAA,QAClD;AAAA,MACF,WAAU,WAAW,OAAO,OAAO,GAAG;AACpC,gBAAQ,OAAO,IAAI,iBAAiB,QAAQ,QAAQ,OAAO,CAAC;AAAA,MAC9D,WAAU,MAAM,SAAS,OAAO,GAAG;AAEjC,YAAG,WAAW,YAAY,OAAO,GAAG;AAClC,kBAAQ,KAAK,IAAI,OAAO,MAAM,QAAQ,KAAK,CAAC;AAAA,QAC9C;AAGA,cAAM,OAAO,OAAO,KAAK,OAAO,EAAE,KAAK;AACvC,iBAAQ,KAAK,GAAG,KAAK,KAAK,QAAQ,EAAE,IAAI;AACtC,gBAAM,MAAM,KAAK,EAAE;AACnB,cAAG,QAAQ,OAAO;AAChB,oBAAQ,GAAG,IAAI,iBAAiB,QAAQ,QAAQ,GAAG,CAAC;AAAA,UACtD;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACtcA;AAAA;AAAA;AAKA,QAAM,MAAM;AACZ,QAAM,MAAM;AAEZ,WAAO,UAAU;AAAA;AAAA,MAEf,iBAAiB;AAAA,MAEjB,qBAAqB;AAAA,MAErB;AAAA,MACA,UAAU,MAAM;AAAA,MAChB,WAAW,MAAM;AAAA,MACjB,UAAU,MAAM;AAAA,MAChB,SAAS,MAAM;AAAA,MACf,UAAU,MAAM;AAAA,MAChB,mBAAmB,MAAM;AAAA,MACzB,iBAAiB,MAAM;AAAA,MACvB,kBAAkB,MAAM;AAAA,MACxB,YAAY,MAAM;AAAA,MAClB,gBAAgB,MAAM;AAAA,MAEtB;AAAA,MACA,aAAa,MAAM;AAAA,MACnB,YAAY,MAAM;AAAA,MAClB,aAAa,MAAM;AAAA,MACnB,YAAY,MAAM;AAAA,IACpB;AAAA;AAAA;;;AC/BA;AAAA;AAAA;AAKA,WAAO,UAAU,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA,MAIlC,cAAc;AACZ,aAAK,YAAY,CAAC;AAAA,MACpB;AAAA,MAEA,WAAW,QAAQ;AACjB,cAAMC,QAAO;AACb,QAAAA,MAAK,UAAU;AACf,eAAO,WAAoB;AACzB,iBAAOA,MAAK,IAAI,MAAMA,OAAM,SAAS;AAAA,QACvC;AAAA,MACF;AAAA,MAEA,MAAM,IAAI,KAAK;AACb,YAAI,UAAU,KAAK,UAAU,GAAG;AAChC,YAAG,SAAS;AAEV,iBAAO,QAAQ,QAAQ,OAAO;AAAA,QAChC;AAGA,kBAAU,KAAK,UAAU,GAAG,IAAI,KAAK,QAAQ,GAAG;AAEhD,YAAI;AACF,iBAAO,MAAM;AAAA,QACf,UAAE;AACA,iBAAO,KAAK,UAAU,GAAG;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACrCA;AAAA;AAAA;AAKA,QAAM,QAAQ;AAEd,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAOjB,QAAI,UAAU;AAAA,MACZ,QAAQ;AAAA;AAAA,QAEN,MAAM;AAAA,UACJ;AAAA,UAAQ;AAAA,UAAU;AAAA,UAAa;AAAA,UAAQ;AAAA,UAAS;AAAA,QAClD;AAAA;AAAA,QAEA,OAAO;AAAA,MACT;AAAA,MACA,MAAM;AAAA,QACJ,MAAM;AAAA,UACJ;AAAA,UAAQ;AAAA,UAAY;AAAA,UAAU;AAAA,UAAa;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAC3D;AAAA,UAAY;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAa;AAAA,UAAQ;AAAA,UAAS;AAAA,QAC5D;AAAA;AAAA,QAEA,OAAO;AAAA,MACT;AAAA,IACF;AACA,QAAI,QAAQ,CAAC,KAAK,WAAW;AAC3B,YAAM,SAAS,CAAC;AAChB,YAAM,IAAI,IAAI,QAAQ,UAAU,MAAM;AACtC,YAAM,IAAI,EAAE,MAAM,KAAK,GAAG;AAC1B,UAAI,IAAI,EAAE,KAAK;AACf,aAAM,KAAK;AACT,eAAO,EAAE,KAAK,CAAC,CAAC,IAAK,EAAE,CAAC,MAAM,SAAa,OAAO,EAAE,CAAC;AAAA,MACvD;AAGA,UAAI,OAAO,WAAW,WAAW,OAAO,SAAS,SAC9C,OAAO,WAAW,UAAU,OAAO,SAAS,MAAO;AACpD,eAAO,OAAO,OAAO,KAAK,QAAQ,MAAM,OAAO,MAAM,EAAE;AACvD,eAAO,YAAY,OAAO,UAAU,QAAQ,MAAM,OAAO,MAAM,EAAE;AACjE,eAAO,OAAO;AAAA,MAChB;AAEA,aAAO,iBAAiB,IAAI,kBAAkB,OAAO,IAAI;AACzD,aAAO;AAAA,IACT;AAUA,QAAI,cAAc,CAAC,MAAM,QAAQ;AAE/B,UAAG,SAAS,MAAM;AAChB,eAAO;AAAA,MACT;AAEA,UAAG,IAAI,WAAW,GAAG,GAAG;AACtB,eAAO;AAAA,MACT;AAGA,UAAG,CAAC,QAAQ,MAAM,SAAS,IAAI,GAAG;AAChC,eAAO,IAAI,MAAM,QAAQ,EAAE;AAAA,MAC7B;AAGA,YAAM,MAAM,IAAI,MAAM,GAAG;AAGzB,YAAM,YAAY;AAAA,QAChB,UAAU,KAAK,YAAY;AAAA,MAC7B;AAEA,UAAG,IAAI,cAAc,MAAM;AACzB,kBAAU,YAAY,IAAI;AAC1B,kBAAU,OAAO,IAAI;AACrB,kBAAU,QAAQ,IAAI;AAAA,MACxB,OAAO;AACL,kBAAU,YAAY,KAAK;AAE3B,YAAG,IAAI,SAAS,IAAI;AAClB,oBAAU,OAAO,KAAK;AACtB,cAAG,IAAI,UAAU,MAAM;AACrB,sBAAU,QAAQ,IAAI;AAAA,UACxB,OAAO;AACL,sBAAU,QAAQ,KAAK;AAAA,UACzB;AAAA,QACF,OAAO;AACL,cAAG,IAAI,KAAK,QAAQ,GAAG,MAAM,GAAG;AAE9B,sBAAU,OAAO,IAAI;AAAA,UACvB,OAAO;AAEL,gBAAI,OAAO,KAAK;AAGhB,mBAAO,KAAK,OAAO,GAAG,KAAK,YAAY,GAAG,IAAI,CAAC;AAC/C,iBAAI,KAAK,SAAS,KAAK,KAAK,cAAc,KAAK,OAAO,EAAE,MAAM,KAAK;AACjE,sBAAQ;AAAA,YACV;AACA,oBAAQ,IAAI;AAEZ,sBAAU,OAAO;AAAA,UACnB;AACA,oBAAU,QAAQ,IAAI;AAAA,QACxB;AAAA,MACF;AAEA,UAAG,IAAI,SAAS,IAAI;AAElB,kBAAU,OAAO,IAAI,kBAAkB,UAAU,IAAI;AAAA,MACvD;AAGA,UAAI,OAAO,UAAU;AACrB,UAAG,UAAU,cAAc,MAAM;AAC/B,gBAAQ,OAAO,UAAU;AAAA,MAC3B;AACA,cAAQ,UAAU;AAClB,UAAG,UAAU,UAAU,MAAM;AAC3B,gBAAQ,MAAM,UAAU;AAAA,MAC1B;AACA,UAAG,IAAI,aAAa,MAAM;AACxB,gBAAQ,MAAM,IAAI;AAAA,MACpB;AAGA,UAAG,SAAS,IAAI;AACd,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAUA,QAAI,aAAa,CAAC,MAAM,QAAQ;AAE9B,UAAG,SAAS,MAAM;AAChB,eAAO;AAAA,MACT;AAEA,UAAG,CAAC,QAAQ,MAAM,SAAS,IAAI,GAAG;AAChC,eAAO,IAAI,MAAM,QAAQ,EAAE;AAAA,MAC7B;AAGA,UAAI,OAAO;AACX,UAAG,KAAK,SAAS,IAAI;AACnB,iBAAS,KAAK,YAAY,MAAM,QAAQ,KAAK,aAAa;AAAA,MAC5D,WAAU,IAAI,QAAQ,IAAI,GAAG;AAE3B,gBAAQ;AAAA,MACV;AAGA,UAAG,IAAI,QAAQ,IAAI,MAAM,GAAG;AAC1B,eAAO;AAAA,MACT;AAGA,YAAM,MAAM,IAAI,MAAM,IAAI,OAAO,KAAK,MAAM,CAAC;AAI7C,YAAM,eAAe,KAAK,eAAe,MAAM,GAAG;AAClD,YAAM,cAAc,IAAI,eAAe,MAAM,GAAG;AAChD,YAAM,OAAQ,IAAI,YAAY,IAAI,QAAS,IAAI;AAC/C,aAAM,aAAa,SAAS,KAAK,YAAY,SAAS,MAAM;AAC1D,YAAG,aAAa,CAAC,MAAM,YAAY,CAAC,GAAG;AACrC;AAAA,QACF;AACA,qBAAa,MAAM;AACnB,oBAAY,MAAM;AAAA,MACpB;AAGA,UAAI,OAAO;AACX,UAAG,aAAa,SAAS,GAAG;AAG1B,qBAAa,IAAI;AACjB,iBAAQ,IAAI,GAAG,IAAI,aAAa,QAAQ,EAAE,GAAG;AAC3C,kBAAQ;AAAA,QACV;AAAA,MACF;AAGA,cAAQ,YAAY,KAAK,GAAG;AAG5B,UAAG,IAAI,UAAU,MAAM;AACrB,gBAAQ,MAAM,IAAI;AAAA,MACpB;AACA,UAAG,IAAI,aAAa,MAAM;AACxB,gBAAQ,MAAM,IAAI;AAAA,MACpB;AAGA,UAAG,SAAS,IAAI;AACd,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAOA,QAAI,oBAAoB,UAAQ;AAI9B,UAAG,KAAK,WAAW,GAAG;AACpB,eAAO;AAAA,MACT;AAEA,YAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,YAAM,SAAS,CAAC;AAEhB,aAAM,MAAM,SAAS,GAAG;AACtB,cAAM,OAAO,MAAM,MAAM;AACzB,cAAM,OAAO,MAAM,WAAW;AAE9B,YAAG,SAAS,KAAK;AACf,cAAG,MAAM;AAEP,mBAAO,KAAK,EAAE;AAAA,UAChB;AACA;AAAA,QACF;AAEA,YAAG,SAAS,MAAM;AAChB,iBAAO,IAAI;AACX,cAAG,MAAM;AAEP,mBAAO,KAAK,EAAE;AAAA,UAChB;AACA;AAAA,QACF;AAEA,eAAO,KAAK,IAAI;AAAA,MAClB;AAGA,UAAG,KAAK,CAAC,MAAM,OAAO,OAAO,SAAS,KAAK,OAAO,CAAC,MAAM,IAAI;AAC3D,eAAO,QAAQ,EAAE;AAAA,MACnB;AACA,UAAG,OAAO,WAAW,KAAK,OAAO,CAAC,MAAM,IAAI;AAC1C,eAAO;AAAA,MACT;AAEA,aAAO,OAAO,KAAK,GAAG;AAAA,IACxB;AAMA,QAAM,kBAAkB;AAWxB,QAAI,aAAa,OAAK,MAAM,SAAS,CAAC,KAAK,gBAAgB,KAAK,CAAC;AAUjE,QAAI,aAAa,OAAK,MAAM,SAAS,CAAC;AAAA;AAAA;;;AC5StC;AAAA;AAAA;AAKA,QAAM,EAAC,iBAAiB,aAAY,IAAI;AACxC,QAAM,EAAC,oBAAmB,IAAI;AAC9B,QAAM,cAAc;AACpB,QAAM,eAAe;AACrB,QAAM,EAAC,YAAW,IAAI;AAEtB,QAAM,oBAAoB;AAa1B,WAAO,UAAU,CAAC;AAAA,MAChB;AAAA,MACA,UAAU,CAAC;AAAA,MACX;AAAA,IACF,IAAI,EAAC,SAAS,CAAC,EAAC,MAAM;AACpB,gBAAU,aAAa,OAAO;AAC9B,YAAM,QAAQ,IAAI,aAAa;AAC/B,aAAO,MAAM,WAAW,MAAM;AAE9B,qBAAe,OAAO,KAAK;AACzB,YAAG,IAAI,QAAQ,OAAO,MAAM,KAAK,IAAI,QAAQ,QAAQ,MAAM,GAAG;AAC5D,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAqB,EAAC,MAAM,2BAA2B,IAAG;AAAA,UAAC;AAAA,QAC/D;AACA,YAAG,UAAU,IAAI,QAAQ,OAAO,MAAM,GAAG;AACvC,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAqB,EAAC,MAAM,2BAA2B,IAAG;AAAA,UAAC;AAAA,QAC/D;AAEA,YAAI;AACJ,YAAI;AACF,gBAAM,MAAM,KAAK,KAAK,KAAK,OAAO;AAAA,QACpC,SAAQ,GAAG;AACT,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,2BAA2B,KAAK,OAAO,EAAC;AAAA,UAAC;AAAA,QACpD;AAEA,YAAG,IAAI,UAAU,KAAK;AACpB,gBAAM,IAAI;AAAA,YACR,oCAAoC,IAAI;AAAA,YACxC;AAAA,YAA4B;AAAA,cAC1B,MAAM;AAAA,cACN;AAAA,cACA,gBAAgB,IAAI;AAAA,YACtB;AAAA,UAAC;AAAA,QACL;AAEA,YAAI,MAAM,EAAC,YAAY,MAAM,aAAa,KAAK,UAAU,IAAI,SAAQ;AACrE,YAAI,YAAY;AAGhB,cAAM,cAAc,IAAI,kBAAkB,cAAc;AACxD,YAAI;AACJ,YAAG,kBAAkB,KAAK,IAAI,sBAAsB,CAAC,GAAG;AACtD,uBAAa,IAAI,kBAAkB,MAAM;AAAA,QAC3C;AACA,YAAG,cAAc,gBAAgB,uBAAuB;AAEtD,gBAAM,cAAc,gBAAgB,UAAU;AAC9C,gBAAM,gBAAgB,YAAY,mBAAmB;AACrD,cAAG,MAAM,QAAQ,aAAa,GAAG;AAC/B,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,iCAAiC,IAAG;AAAA,YAAC;AAAA,UAChD;AACA,cAAG,eAAe;AAChB,gBAAI,aAAa,cAAc;AAAA,UACjC;AAGA,sBAAY,YAAY;AACxB,cAAG,aACD,UAAU,QAAQ,yBAClB,EAAE,eAAe,IAAI,MAAM,6BAA6B,GAAG;AAC3D,kBAAM,MAAM,OAAO,YAAY,KAAK,UAAU,MAAM,CAAC;AAAA,UACvD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,KAAK,KAAK,KAAK,SAAS;AAC/B,YAAM,OAAO;AACb,YAAM,MAAM,IAAI,IAAI;AACpB,aAAO,IAAI,QAAQ,CAACC,UAAS,WAAW;AACtC,YAAI,SAAS,MAAMA,SAAQ,GAAG;AAC9B,YAAI,UAAU,SAAO,OAAO,GAAG;AAC/B,YAAI,KAAK,OAAO,KAAK,IAAI;AACzB,mBAAU,KAAK,SAAS;AACtB,cAAI,iBAAiB,GAAG,QAAQ,CAAC,CAAC;AAAA,QACpC;AACA,YAAI,KAAK;AAAA,MACX,CAAC;AAAA,IACH;AAAA;AAAA;;;ACpHA;AAAA;AAAA;AAKA,QAAM,YAAY;AAElB,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAOjB,QAAI,uBAAuB,SAASC,SAAQ;AAC1C,UAAG,OAAO,mBAAmB,aAAa;AACxC,QAAAA,QAAO,gBAAgB,MAAM;AAE7B,QAAAA,QAAO,kBAAkB,KAAK;AAAA,MAChC;AAAA,IACF;AAOA,QAAI,eAAe,SAASA,SAAQ;AAElC,UAAG,OAAO,WAAW,oBAAoB,aAAa;AACpD,eAAO,eAAe,YAAY,mBAAmB;AAAA,UACnD,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,OAAOA,QAAO;AAAA,QAChB,CAAC;AAAA,MACH;AAAA,IACF;AAAA;AAAA;;;ACtCA;AAAA;AAAA;AACA,WAAO,UAAU,SAAU,SAAS;AAClC,cAAQ,UAAU,OAAO,QAAQ,IAAI,aAAa;AAChD,iBAAS,SAAS,KAAK,MAAM,QAAQ,SAAS,OAAO,MAAM;AACzD,gBAAM,OAAO;AAAA,QACf;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACPA;AAAA;AAAA;AACA,WAAO,UAAU;AAEjB,YAAQ,OAAO;AACf,YAAQ,SAAS;AAEjB,aAAS,QAAS,MAAM;AACtB,UAAIC,QAAO;AACX,UAAI,EAAEA,iBAAgB,UAAU;AAC9B,QAAAA,QAAO,IAAI,QAAQ;AAAA,MACrB;AAEA,MAAAA,MAAK,OAAO;AACZ,MAAAA,MAAK,OAAO;AACZ,MAAAA,MAAK,SAAS;AAEd,UAAI,QAAQ,OAAO,KAAK,YAAY,YAAY;AAC9C,aAAK,QAAQ,SAAU,MAAM;AAC3B,UAAAA,MAAK,KAAK,IAAI;AAAA,QAChB,CAAC;AAAA,MACH,WAAW,UAAU,SAAS,GAAG;AAC/B,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AAChD,UAAAA,MAAK,KAAK,UAAU,CAAC,CAAC;AAAA,QACxB;AAAA,MACF;AAEA,aAAOA;AAAA,IACT;AAEA,YAAQ,UAAU,aAAa,SAAU,MAAM;AAC7C,UAAI,KAAK,SAAS,MAAM;AACtB,cAAM,IAAI,MAAM,kDAAkD;AAAA,MACpE;AAEA,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,KAAK;AAEhB,UAAI,MAAM;AACR,aAAK,OAAO;AAAA,MACd;AAEA,UAAI,MAAM;AACR,aAAK,OAAO;AAAA,MACd;AAEA,UAAI,SAAS,KAAK,MAAM;AACtB,aAAK,OAAO;AAAA,MACd;AACA,UAAI,SAAS,KAAK,MAAM;AACtB,aAAK,OAAO;AAAA,MACd;AAEA,WAAK,KAAK;AACV,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,WAAK,OAAO;AAEZ,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,cAAc,SAAU,MAAM;AAC9C,UAAI,SAAS,KAAK,MAAM;AACtB;AAAA,MACF;AAEA,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,WAAW,IAAI;AAAA,MAC3B;AAEA,UAAI,OAAO,KAAK;AAChB,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,UAAI,MAAM;AACR,aAAK,OAAO;AAAA,MACd;AAEA,WAAK,OAAO;AACZ,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,OAAO;AAAA,MACd;AACA,WAAK;AAAA,IACP;AAEA,YAAQ,UAAU,WAAW,SAAU,MAAM;AAC3C,UAAI,SAAS,KAAK,MAAM;AACtB;AAAA,MACF;AAEA,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,WAAW,IAAI;AAAA,MAC3B;AAEA,UAAI,OAAO,KAAK;AAChB,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,UAAI,MAAM;AACR,aAAK,OAAO;AAAA,MACd;AAEA,WAAK,OAAO;AACZ,UAAI,CAAC,KAAK,MAAM;AACd,aAAK,OAAO;AAAA,MACd;AACA,WAAK;AAAA,IACP;AAEA,YAAQ,UAAU,OAAO,WAAY;AACnC,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AAChD,aAAK,MAAM,UAAU,CAAC,CAAC;AAAA,MACzB;AACA,aAAO,KAAK;AAAA,IACd;AAEA,YAAQ,UAAU,UAAU,WAAY;AACtC,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAK;AAChD,gBAAQ,MAAM,UAAU,CAAC,CAAC;AAAA,MAC5B;AACA,aAAO,KAAK;AAAA,IACd;AAEA,YAAQ,UAAU,MAAM,WAAY;AAClC,UAAI,CAAC,KAAK,MAAM;AACd,eAAO;AAAA,MACT;AAEA,UAAI,MAAM,KAAK,KAAK;AACpB,WAAK,OAAO,KAAK,KAAK;AACtB,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,OAAO;AAAA,MACnB,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AACA,WAAK;AACL,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,QAAQ,WAAY;AACpC,UAAI,CAAC,KAAK,MAAM;AACd,eAAO;AAAA,MACT;AAEA,UAAI,MAAM,KAAK,KAAK;AACpB,WAAK,OAAO,KAAK,KAAK;AACtB,UAAI,KAAK,MAAM;AACb,aAAK,KAAK,OAAO;AAAA,MACnB,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AACA,WAAK;AACL,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,UAAU,SAAU,IAAI,OAAO;AAC/C,cAAQ,SAAS;AACjB,eAAS,SAAS,KAAK,MAAM,IAAI,GAAG,WAAW,MAAM,KAAK;AACxD,WAAG,KAAK,OAAO,OAAO,OAAO,GAAG,IAAI;AACpC,iBAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAEA,YAAQ,UAAU,iBAAiB,SAAU,IAAI,OAAO;AACtD,cAAQ,SAAS;AACjB,eAAS,SAAS,KAAK,MAAM,IAAI,KAAK,SAAS,GAAG,WAAW,MAAM,KAAK;AACtE,WAAG,KAAK,OAAO,OAAO,OAAO,GAAG,IAAI;AACpC,iBAAS,OAAO;AAAA,MAClB;AAAA,IACF;AAEA,YAAQ,UAAU,MAAM,SAAU,GAAG;AACnC,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,QAAQ,IAAI,GAAG,KAAK;AAEjE,iBAAS,OAAO;AAAA,MAClB;AACA,UAAI,MAAM,KAAK,WAAW,MAAM;AAC9B,eAAO,OAAO;AAAA,MAChB;AAAA,IACF;AAEA,YAAQ,UAAU,aAAa,SAAU,GAAG;AAC1C,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,QAAQ,IAAI,GAAG,KAAK;AAEjE,iBAAS,OAAO;AAAA,MAClB;AACA,UAAI,MAAM,KAAK,WAAW,MAAM;AAC9B,eAAO,OAAO;AAAA,MAChB;AAAA,IACF;AAEA,YAAQ,UAAU,MAAM,SAAU,IAAI,OAAO;AAC3C,cAAQ,SAAS;AACjB,UAAI,MAAM,IAAI,QAAQ;AACtB,eAAS,SAAS,KAAK,MAAM,WAAW,QAAO;AAC7C,YAAI,KAAK,GAAG,KAAK,OAAO,OAAO,OAAO,IAAI,CAAC;AAC3C,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,aAAa,SAAU,IAAI,OAAO;AAClD,cAAQ,SAAS;AACjB,UAAI,MAAM,IAAI,QAAQ;AACtB,eAAS,SAAS,KAAK,MAAM,WAAW,QAAO;AAC7C,YAAI,KAAK,GAAG,KAAK,OAAO,OAAO,OAAO,IAAI,CAAC;AAC3C,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,SAAS,SAAU,IAAI,SAAS;AAChD,UAAI;AACJ,UAAI,SAAS,KAAK;AAClB,UAAI,UAAU,SAAS,GAAG;AACxB,cAAM;AAAA,MACR,WAAW,KAAK,MAAM;AACpB,iBAAS,KAAK,KAAK;AACnB,cAAM,KAAK,KAAK;AAAA,MAClB,OAAO;AACL,cAAM,IAAI,UAAU,4CAA4C;AAAA,MAClE;AAEA,eAAS,IAAI,GAAG,WAAW,MAAM,KAAK;AACpC,cAAM,GAAG,KAAK,OAAO,OAAO,CAAC;AAC7B,iBAAS,OAAO;AAAA,MAClB;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,gBAAgB,SAAU,IAAI,SAAS;AACvD,UAAI;AACJ,UAAI,SAAS,KAAK;AAClB,UAAI,UAAU,SAAS,GAAG;AACxB,cAAM;AAAA,MACR,WAAW,KAAK,MAAM;AACpB,iBAAS,KAAK,KAAK;AACnB,cAAM,KAAK,KAAK;AAAA,MAClB,OAAO;AACL,cAAM,IAAI,UAAU,4CAA4C;AAAA,MAClE;AAEA,eAAS,IAAI,KAAK,SAAS,GAAG,WAAW,MAAM,KAAK;AAClD,cAAM,GAAG,KAAK,OAAO,OAAO,CAAC;AAC7B,iBAAS,OAAO;AAAA,MAClB;AAEA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,UAAU,WAAY;AACtC,UAAI,MAAM,IAAI,MAAM,KAAK,MAAM;AAC/B,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,MAAM,KAAK;AACxD,YAAI,CAAC,IAAI,OAAO;AAChB,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,iBAAiB,WAAY;AAC7C,UAAI,MAAM,IAAI,MAAM,KAAK,MAAM;AAC/B,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,MAAM,KAAK;AACxD,YAAI,CAAC,IAAI,OAAO;AAChB,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,QAAQ,SAAU,MAAM,IAAI;AAC5C,WAAK,MAAM,KAAK;AAChB,UAAI,KAAK,GAAG;AACV,cAAM,KAAK;AAAA,MACb;AACA,aAAO,QAAQ;AACf,UAAI,OAAO,GAAG;AACZ,gBAAQ,KAAK;AAAA,MACf;AACA,UAAI,MAAM,IAAI,QAAQ;AACtB,UAAI,KAAK,QAAQ,KAAK,GAAG;AACvB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,GAAG;AACZ,eAAO;AAAA,MACT;AACA,UAAI,KAAK,KAAK,QAAQ;AACpB,aAAK,KAAK;AAAA,MACZ;AACA,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,QAAQ,IAAI,MAAM,KAAK;AACpE,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO,WAAW,QAAQ,IAAI,IAAI,KAAK,SAAS,OAAO,MAAM;AAC3D,YAAI,KAAK,OAAO,KAAK;AAAA,MACvB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,eAAe,SAAU,MAAM,IAAI;AACnD,WAAK,MAAM,KAAK;AAChB,UAAI,KAAK,GAAG;AACV,cAAM,KAAK;AAAA,MACb;AACA,aAAO,QAAQ;AACf,UAAI,OAAO,GAAG;AACZ,gBAAQ,KAAK;AAAA,MACf;AACA,UAAI,MAAM,IAAI,QAAQ;AACtB,UAAI,KAAK,QAAQ,KAAK,GAAG;AACvB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,GAAG;AACZ,eAAO;AAAA,MACT;AACA,UAAI,KAAK,KAAK,QAAQ;AACpB,aAAK,KAAK;AAAA,MACZ;AACA,eAAS,IAAI,KAAK,QAAQ,SAAS,KAAK,MAAM,WAAW,QAAQ,IAAI,IAAI,KAAK;AAC5E,iBAAS,OAAO;AAAA,MAClB;AACA,aAAO,WAAW,QAAQ,IAAI,MAAM,KAAK,SAAS,OAAO,MAAM;AAC7D,YAAI,KAAK,OAAO,KAAK;AAAA,MACvB;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,SAAS,SAAU,OAAO,gBAAgB,OAAO;AACjE,UAAI,QAAQ,KAAK,QAAQ;AACvB,gBAAQ,KAAK,SAAS;AAAA,MACxB;AACA,UAAI,QAAQ,GAAG;AACb,gBAAQ,KAAK,SAAS;AAAA,MACxB;AAEA,eAAS,IAAI,GAAG,SAAS,KAAK,MAAM,WAAW,QAAQ,IAAI,OAAO,KAAK;AACrE,iBAAS,OAAO;AAAA,MAClB;AAEA,UAAI,MAAM,CAAC;AACX,eAAS,IAAI,GAAG,UAAU,IAAI,aAAa,KAAK;AAC9C,YAAI,KAAK,OAAO,KAAK;AACrB,iBAAS,KAAK,WAAW,MAAM;AAAA,MACjC;AACA,UAAI,WAAW,MAAM;AACnB,iBAAS,KAAK;AAAA,MAChB;AAEA,UAAI,WAAW,KAAK,QAAQ,WAAW,KAAK,MAAM;AAChD,iBAAS,OAAO;AAAA,MAClB;AAEA,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,iBAAS,OAAO,MAAM,QAAQ,MAAM,CAAC,CAAC;AAAA,MACxC;AACA,aAAO;AAAA,IACT;AAEA,YAAQ,UAAU,UAAU,WAAY;AACtC,UAAI,OAAO,KAAK;AAChB,UAAI,OAAO,KAAK;AAChB,eAAS,SAAS,MAAM,WAAW,MAAM,SAAS,OAAO,MAAM;AAC7D,YAAI,IAAI,OAAO;AACf,eAAO,OAAO,OAAO;AACrB,eAAO,OAAO;AAAA,MAChB;AACA,WAAK,OAAO;AACZ,WAAK,OAAO;AACZ,aAAO;AAAA,IACT;AAEA,aAAS,OAAQA,OAAM,MAAM,OAAO;AAClC,UAAI,WAAW,SAASA,MAAK,OAC3B,IAAI,KAAK,OAAO,MAAM,MAAMA,KAAI,IAChC,IAAI,KAAK,OAAO,MAAM,KAAK,MAAMA,KAAI;AAEvC,UAAI,SAAS,SAAS,MAAM;AAC1B,QAAAA,MAAK,OAAO;AAAA,MACd;AACA,UAAI,SAAS,SAAS,MAAM;AAC1B,QAAAA,MAAK,OAAO;AAAA,MACd;AAEA,MAAAA,MAAK;AAEL,aAAO;AAAA,IACT;AAEA,aAAS,KAAMA,OAAM,MAAM;AACzB,MAAAA,MAAK,OAAO,IAAI,KAAK,MAAMA,MAAK,MAAM,MAAMA,KAAI;AAChD,UAAI,CAACA,MAAK,MAAM;AACd,QAAAA,MAAK,OAAOA,MAAK;AAAA,MACnB;AACA,MAAAA,MAAK;AAAA,IACP;AAEA,aAAS,QAASA,OAAM,MAAM;AAC5B,MAAAA,MAAK,OAAO,IAAI,KAAK,MAAM,MAAMA,MAAK,MAAMA,KAAI;AAChD,UAAI,CAACA,MAAK,MAAM;AACd,QAAAA,MAAK,OAAOA,MAAK;AAAA,MACnB;AACA,MAAAA,MAAK;AAAA,IACP;AAEA,aAAS,KAAM,OAAO,MAAM,MAAM,MAAM;AACtC,UAAI,EAAE,gBAAgB,OAAO;AAC3B,eAAO,IAAI,KAAK,OAAO,MAAM,MAAM,IAAI;AAAA,MACzC;AAEA,WAAK,OAAO;AACZ,WAAK,QAAQ;AAEb,UAAI,MAAM;AACR,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AAEA,UAAI,MAAM;AACR,aAAK,OAAO;AACZ,aAAK,OAAO;AAAA,MACd,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AAAA,IACF;AAEA,QAAI;AAEF,yBAAyB,OAAO;AAAA,IAClC,SAAS,IAAI;AAAA,IAAC;AAAA;AAAA;;;ACzad;AAAA;AAAA;AAGA,QAAM,UAAU;AAEhB,QAAM,MAAM,OAAO,KAAK;AACxB,QAAM,SAAS,OAAO,QAAQ;AAC9B,QAAM,oBAAoB,OAAO,kBAAkB;AACnD,QAAM,cAAc,OAAO,YAAY;AACvC,QAAM,UAAU,OAAO,QAAQ;AAC/B,QAAM,UAAU,OAAO,SAAS;AAChC,QAAM,oBAAoB,OAAO,gBAAgB;AACjD,QAAM,WAAW,OAAO,SAAS;AACjC,QAAM,QAAQ,OAAO,OAAO;AAC5B,QAAM,oBAAoB,OAAO,gBAAgB;AAEjD,QAAM,cAAc,MAAM;AAU1B,QAAM,WAAN,MAAe;AAAA,MACb,YAAa,SAAS;AACpB,YAAI,OAAO,YAAY;AACrB,oBAAU,EAAE,KAAK,QAAQ;AAE3B,YAAI,CAAC;AACH,oBAAU,CAAC;AAEb,YAAI,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,YAAY,QAAQ,MAAM;AACnE,gBAAM,IAAI,UAAU,mCAAmC;AAEzD,cAAM,MAAM,KAAK,GAAG,IAAI,QAAQ,OAAO;AAEvC,cAAM,KAAK,QAAQ,UAAU;AAC7B,aAAK,iBAAiB,IAAK,OAAO,OAAO,aAAc,cAAc;AACrE,aAAK,WAAW,IAAI,QAAQ,SAAS;AACrC,YAAI,QAAQ,UAAU,OAAO,QAAQ,WAAW;AAC9C,gBAAM,IAAI,UAAU,yBAAyB;AAC/C,aAAK,OAAO,IAAI,QAAQ,UAAU;AAClC,aAAK,OAAO,IAAI,QAAQ;AACxB,aAAK,iBAAiB,IAAI,QAAQ,kBAAkB;AACpD,aAAK,iBAAiB,IAAI,QAAQ,kBAAkB;AACpD,aAAK,MAAM;AAAA,MACb;AAAA;AAAA,MAGA,IAAI,IAAK,IAAI;AACX,YAAI,OAAO,OAAO,YAAY,KAAK;AACjC,gBAAM,IAAI,UAAU,mCAAmC;AAEzD,aAAK,GAAG,IAAI,MAAM;AAClB,aAAK,IAAI;AAAA,MACX;AAAA,MACA,IAAI,MAAO;AACT,eAAO,KAAK,GAAG;AAAA,MACjB;AAAA,MAEA,IAAI,WAAY,YAAY;AAC1B,aAAK,WAAW,IAAI,CAAC,CAAC;AAAA,MACxB;AAAA,MACA,IAAI,aAAc;AAChB,eAAO,KAAK,WAAW;AAAA,MACzB;AAAA,MAEA,IAAI,OAAQ,IAAI;AACd,YAAI,OAAO,OAAO;AAChB,gBAAM,IAAI,UAAU,sCAAsC;AAE5D,aAAK,OAAO,IAAI;AAChB,aAAK,IAAI;AAAA,MACX;AAAA,MACA,IAAI,SAAU;AACZ,eAAO,KAAK,OAAO;AAAA,MACrB;AAAA;AAAA,MAGA,IAAI,iBAAkB,IAAI;AACxB,YAAI,OAAO,OAAO;AAChB,eAAK;AAEP,YAAI,OAAO,KAAK,iBAAiB,GAAG;AAClC,eAAK,iBAAiB,IAAI;AAC1B,eAAK,MAAM,IAAI;AACf,eAAK,QAAQ,EAAE,QAAQ,SAAO;AAC5B,gBAAI,SAAS,KAAK,iBAAiB,EAAE,IAAI,OAAO,IAAI,GAAG;AACvD,iBAAK,MAAM,KAAK,IAAI;AAAA,UACtB,CAAC;AAAA,QACH;AACA,aAAK,IAAI;AAAA,MACX;AAAA,MACA,IAAI,mBAAoB;AAAE,eAAO,KAAK,iBAAiB;AAAA,MAAE;AAAA,MAEzD,IAAI,SAAU;AAAE,eAAO,KAAK,MAAM;AAAA,MAAE;AAAA,MACpC,IAAI,YAAa;AAAE,eAAO,KAAK,QAAQ,EAAE;AAAA,MAAO;AAAA,MAEhD,SAAU,IAAI,OAAO;AACnB,gBAAQ,SAAS;AACjB,iBAAS,SAAS,KAAK,QAAQ,EAAE,MAAM,WAAW,QAAO;AACvD,gBAAM,OAAO,OAAO;AACpB,sBAAY,MAAM,IAAI,QAAQ,KAAK;AACnC,mBAAS;AAAA,QACX;AAAA,MACF;AAAA,MAEA,QAAS,IAAI,OAAO;AAClB,gBAAQ,SAAS;AACjB,iBAAS,SAAS,KAAK,QAAQ,EAAE,MAAM,WAAW,QAAO;AACvD,gBAAM,OAAO,OAAO;AACpB,sBAAY,MAAM,IAAI,QAAQ,KAAK;AACnC,mBAAS;AAAA,QACX;AAAA,MACF;AAAA,MAEA,OAAQ;AACN,eAAO,KAAK,QAAQ,EAAE,QAAQ,EAAE,IAAI,OAAK,EAAE,GAAG;AAAA,MAChD;AAAA,MAEA,SAAU;AACR,eAAO,KAAK,QAAQ,EAAE,QAAQ,EAAE,IAAI,OAAK,EAAE,KAAK;AAAA,MAClD;AAAA,MAEA,QAAS;AACP,YAAI,KAAK,OAAO,KACZ,KAAK,QAAQ,KACb,KAAK,QAAQ,EAAE,QAAQ;AACzB,eAAK,QAAQ,EAAE,QAAQ,SAAO,KAAK,OAAO,EAAE,IAAI,KAAK,IAAI,KAAK,CAAC;AAAA,QACjE;AAEA,aAAK,KAAK,IAAI,oBAAI,IAAI;AACtB,aAAK,QAAQ,IAAI,IAAI,QAAQ;AAC7B,aAAK,MAAM,IAAI;AAAA,MACjB;AAAA,MAEA,OAAQ;AACN,eAAO,KAAK,QAAQ,EAAE,IAAI,SACxB,QAAQ,MAAM,GAAG,IAAI,QAAQ;AAAA,UAC3B,GAAG,IAAI;AAAA,UACP,GAAG,IAAI;AAAA,UACP,GAAG,IAAI,OAAO,IAAI,UAAU;AAAA,QAC9B,CAAC,EAAE,QAAQ,EAAE,OAAO,OAAK,CAAC;AAAA,MAC9B;AAAA,MAEA,UAAW;AACT,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA,MAEA,IAAK,KAAK,OAAO,QAAQ;AACvB,iBAAS,UAAU,KAAK,OAAO;AAE/B,YAAI,UAAU,OAAO,WAAW;AAC9B,gBAAM,IAAI,UAAU,yBAAyB;AAE/C,cAAM,MAAM,SAAS,KAAK,IAAI,IAAI;AAClC,cAAM,MAAM,KAAK,iBAAiB,EAAE,OAAO,GAAG;AAE9C,YAAI,KAAK,KAAK,EAAE,IAAI,GAAG,GAAG;AACxB,cAAI,MAAM,KAAK,GAAG,GAAG;AACnB,gBAAI,MAAM,KAAK,KAAK,EAAE,IAAI,GAAG,CAAC;AAC9B,mBAAO;AAAA,UACT;AAEA,gBAAM,OAAO,KAAK,KAAK,EAAE,IAAI,GAAG;AAChC,gBAAM,OAAO,KAAK;AAIlB,cAAI,KAAK,OAAO,GAAG;AACjB,gBAAI,CAAC,KAAK,iBAAiB;AACzB,mBAAK,OAAO,EAAE,KAAK,KAAK,KAAK;AAAA,UACjC;AAEA,eAAK,MAAM;AACX,eAAK,SAAS;AACd,eAAK,QAAQ;AACb,eAAK,MAAM,KAAK,MAAM,KAAK;AAC3B,eAAK,SAAS;AACd,eAAK,IAAI,GAAG;AACZ,eAAK,IAAI;AACT,iBAAO;AAAA,QACT;AAEA,cAAM,MAAM,IAAI,MAAM,KAAK,OAAO,KAAK,KAAK,MAAM;AAGlD,YAAI,IAAI,SAAS,KAAK,GAAG,GAAG;AAC1B,cAAI,KAAK,OAAO;AACd,iBAAK,OAAO,EAAE,KAAK,KAAK;AAE1B,iBAAO;AAAA,QACT;AAEA,aAAK,MAAM,KAAK,IAAI;AACpB,aAAK,QAAQ,EAAE,QAAQ,GAAG;AAC1B,aAAK,KAAK,EAAE,IAAI,KAAK,KAAK,QAAQ,EAAE,IAAI;AACxC,aAAK,IAAI;AACT,eAAO;AAAA,MACT;AAAA,MAEA,IAAK,KAAK;AACR,YAAI,CAAC,KAAK,KAAK,EAAE,IAAI,GAAG,EAAG,QAAO;AAClC,cAAM,MAAM,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE;AACjC,eAAO,CAAC,QAAQ,MAAM,GAAG;AAAA,MAC3B;AAAA,MAEA,IAAK,KAAK;AACR,eAAOC,KAAI,MAAM,KAAK,IAAI;AAAA,MAC5B;AAAA,MAEA,KAAM,KAAK;AACT,eAAOA,KAAI,MAAM,KAAK,KAAK;AAAA,MAC7B;AAAA,MAEA,MAAO;AACL,cAAM,OAAO,KAAK,QAAQ,EAAE;AAC5B,YAAI,CAAC;AACH,iBAAO;AAET,YAAI,MAAM,IAAI;AACd,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,IAAK,KAAK;AACR,YAAI,MAAM,KAAK,KAAK,EAAE,IAAI,GAAG,CAAC;AAAA,MAChC;AAAA,MAEA,KAAM,KAAK;AAET,aAAK,MAAM;AAEX,cAAM,MAAM,KAAK,IAAI;AAErB,iBAAS,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,gBAAM,MAAM,IAAI,CAAC;AACjB,gBAAM,YAAY,IAAI,KAAK;AAC3B,cAAI,cAAc;AAEhB,iBAAK,IAAI,IAAI,GAAG,IAAI,CAAC;AAAA,eAClB;AACH,kBAAM,SAAS,YAAY;AAE3B,gBAAI,SAAS,GAAG;AACd,mBAAK,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM;AAAA,YAC/B;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,MAEA,QAAS;AACP,aAAK,KAAK,EAAE,QAAQ,CAAC,OAAO,QAAQA,KAAI,MAAM,KAAK,KAAK,CAAC;AAAA,MAC3D;AAAA,IACF;AAEA,QAAMA,OAAM,CAACC,OAAM,KAAK,UAAU;AAChC,YAAM,OAAOA,MAAK,KAAK,EAAE,IAAI,GAAG;AAChC,UAAI,MAAM;AACR,cAAM,MAAM,KAAK;AACjB,YAAI,QAAQA,OAAM,GAAG,GAAG;AACtB,cAAIA,OAAM,IAAI;AACd,cAAI,CAACA,MAAK,WAAW;AACnB,mBAAO;AAAA,QACX,OAAO;AACL,cAAI,OAAO;AACT,gBAAIA,MAAK,iBAAiB;AACxB,mBAAK,MAAM,MAAM,KAAK,IAAI;AAC5B,YAAAA,MAAK,QAAQ,EAAE,YAAY,IAAI;AAAA,UACjC;AAAA,QACF;AACA,eAAO,IAAI;AAAA,MACb;AAAA,IACF;AAEA,QAAM,UAAU,CAACA,OAAM,QAAQ;AAC7B,UAAI,CAAC,OAAQ,CAAC,IAAI,UAAU,CAACA,MAAK,OAAO;AACvC,eAAO;AAET,YAAM,OAAO,KAAK,IAAI,IAAI,IAAI;AAC9B,aAAO,IAAI,SAAS,OAAO,IAAI,SAC3BA,MAAK,OAAO,KAAM,OAAOA,MAAK,OAAO;AAAA,IAC3C;AAEA,QAAM,OAAO,CAAAA,UAAQ;AACnB,UAAIA,MAAK,MAAM,IAAIA,MAAK,GAAG,GAAG;AAC5B,iBAAS,SAASA,MAAK,QAAQ,EAAE,MAC/BA,MAAK,MAAM,IAAIA,MAAK,GAAG,KAAK,WAAW,QAAO;AAI9C,gBAAM,OAAO,OAAO;AACpB,cAAIA,OAAM,MAAM;AAChB,mBAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAEA,QAAM,MAAM,CAACA,OAAM,SAAS;AAC1B,UAAI,MAAM;AACR,cAAM,MAAM,KAAK;AACjB,YAAIA,MAAK,OAAO;AACd,UAAAA,MAAK,OAAO,EAAE,IAAI,KAAK,IAAI,KAAK;AAElC,QAAAA,MAAK,MAAM,KAAK,IAAI;AACpB,QAAAA,MAAK,KAAK,EAAE,OAAO,IAAI,GAAG;AAC1B,QAAAA,MAAK,QAAQ,EAAE,WAAW,IAAI;AAAA,MAChC;AAAA,IACF;AAEA,QAAM,QAAN,MAAY;AAAA,MACV,YAAa,KAAK,OAAO,QAAQ,KAAK,QAAQ;AAC5C,aAAK,MAAM;AACX,aAAK,QAAQ;AACb,aAAK,SAAS;AACd,aAAK,MAAM;AACX,aAAK,SAAS,UAAU;AAAA,MAC1B;AAAA,IACF;AAEA,QAAM,cAAc,CAACA,OAAM,IAAI,MAAM,UAAU;AAC7C,UAAI,MAAM,KAAK;AACf,UAAI,QAAQA,OAAM,GAAG,GAAG;AACtB,YAAIA,OAAM,IAAI;AACd,YAAI,CAACA,MAAK,WAAW;AACnB,gBAAM;AAAA,MACV;AACA,UAAI;AACF,WAAG,KAAK,OAAO,IAAI,OAAO,IAAI,KAAKA,KAAI;AAAA,IAC3C;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC7UjB;AAAA;AAAA;AAKA,QAAM,MAAM;AAEZ,QAAM,sBAAsB;AAE5B,WAAO,UAAU,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMrC,YAAY,EAAC,UAAAC,UAAQ,GAAG;AACtB,aAAK,WAAWA;AAGhB,aAAK,QAAQ,IAAI,IAAI,EAAC,KAAK,oBAAmB,CAAC;AAAA,MACjD;AAAA,MAEA,aAAa,WAAW;AACtB,eAAO,KAAK,MAAM,IAAI,SAAS;AAAA,MACjC;AAAA,MAEA,aAAa,WAAW,cAAc;AACpC,aAAK,MAAM,IAAI,WAAW,YAAY;AAAA,MACxC;AAAA,IACF;AAAA;AAAA;;;AC7BA;AAAA;AAAA;AAKA,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,IACZ,IAAI;AACJ,QAAM;AAAA,MACJ,SAAS;AAAA,IACX,IAAI;AACJ,QAAM,EAAC,YAAW,IAAI;AACtB,QAAM,cAAc;AACpB,QAAM,kBAAkB;AAExB,QAAM,mBAAmB;AAEzB,WAAO,UAAU,MAAM,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMrC,YAAY,EAAC,YAAW,GAAG;AACzB,aAAK,aAAa,oBAAI,IAAI;AAC1B,aAAK,cAAc;AAAA,MACrB;AAAA,MAEA,MAAM,QAAQ;AAAA,QACZ;AAAA,QAAW;AAAA,QAAS;AAAA,QAAgB;AAAA,QAAM,SAAS,oBAAI,IAAI;AAAA,MAC7D,GAAG;AAED,YAAG,WAAW,UAAU,OAAO,KAAK,QAAQ,UAAU,GAAG;AACvD,oBAAU,QAAQ,UAAU;AAAA,QAC9B;AAGA,kBAAU,SAAS,OAAO;AAG1B,cAAM,cAAc,CAAC;AACrB,mBAAU,OAAO,SAAS;AACxB,cAAG,UAAU,GAAG,GAAG;AAEjB,gBAAIC,YAAW,KAAK,KAAK,GAAG;AAC5B,gBAAG,CAACA,WAAU;AAEZ,cAAAA,YAAW,MAAM,KAAK;AAAA,gBACpB,EAAC,WAAW,KAAK,KAAK,gBAAgB,MAAM,OAAM;AAAA,cAAC;AAAA,YACvD;AAGA,gBAAG,SAASA,SAAQ,GAAG;AACrB,0BAAY,KAAK,GAAGA,SAAQ;AAAA,YAC9B,OAAO;AACL,0BAAY,KAAKA,SAAQ;AAAA,YAC3B;AACA;AAAA,UACF;AACA,cAAG,QAAQ,MAAM;AAEf,wBAAY,KAAK,IAAI,gBAAgB,EAAC,UAAU,KAAI,CAAC,CAAC;AACtD;AAAA,UACF;AACA,cAAG,CAAC,UAAU,GAAG,GAAG;AAClB,sCAA0B,OAAO;AAAA,UACnC;AAEA,gBAAM,MAAM,KAAK,UAAU,GAAG;AAC9B,cAAI,WAAW,KAAK,KAAK,GAAG;AAC5B,cAAG,CAAC,UAAU;AAEZ,uBAAW,IAAI,gBAAgB,EAAC,UAAU,IAAG,CAAC;AAC9C,iBAAK,sBAAsB,EAAC,KAAK,UAAU,KAAK,SAAQ,CAAC;AAAA,UAC3D;AACA,sBAAY,KAAK,QAAQ;AAAA,QAC3B;AAEA,eAAO;AAAA,MACT;AAAA,MAEA,KAAK,KAAK;AAGR,YAAI,WAAW,KAAK,WAAW,IAAI,GAAG;AACtC,YAAG,CAAC,UAAU;AAEZ,gBAAM,SAAS,KAAK,YAAY,IAAI,GAAG;AACvC,cAAG,QAAQ;AACT,uBAAW,OAAO,IAAI,QAAQ;AAC9B,gBAAG,UAAU;AACX,mBAAK,WAAW,IAAI,KAAK,QAAQ;AAAA,YACnC;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,MAEA,sBAAsB,EAAC,KAAK,UAAU,IAAG,GAAG;AAC1C,aAAK,WAAW,IAAI,KAAK,QAAQ;AACjC,YAAG,QAAQ,QAAW;AACpB,cAAI,SAAS,KAAK,YAAY,IAAI,GAAG;AACrC,cAAG,CAAC,QAAQ;AACV,qBAAS,oBAAI,IAAI;AACjB,iBAAK,YAAY,IAAI,KAAK,MAAM;AAAA,UAClC;AACA,iBAAO,IAAI,KAAK,QAAQ;AAAA,QAC1B;AACA,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,sBAAsB,EAAC,WAAW,KAAK,gBAAgB,MAAM,OAAM,GAAG;AAE1E,cAAM,YAAY,MAAM,GAAG;AAC3B,cAAM,EAAC,SAAS,UAAS,IAAI,MAAM,KAAK;AAAA,UACtC,EAAC,WAAW,KAAK,gBAAgB,OAAM;AAAA,QAAC;AAG1C,eAAO,UAAU,eAAe;AAChC,4BAAoB,EAAC,SAAS,KAAI,CAAC;AAGnC,cAAM,WAAW,MAAM,KAAK;AAAA,UAC1B,EAAC,WAAW,SAAS,gBAAgB,MAAM,OAAM;AAAA,QAAC;AACpD,aAAK,sBAAsB,EAAC,KAAK,KAAK,UAAU,KAAK,UAAU,IAAG,CAAC;AACnE,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,cAAc,EAAC,WAAW,KAAK,gBAAgB,OAAM,GAAG;AAE5D,YAAG,OAAO,OAAO,kBAAkB;AACjC,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,cACE,MAAM,UAAU,mBAAmB,gBACjC,kCACA;AAAA,cACF,KAAK;AAAA,YACP;AAAA,UAAC;AAAA,QACL;AAIA,YAAG,OAAO,IAAI,GAAG,GAAG;AAClB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA;AAAA,cACE,MAAM,UAAU,mBAAmB,gBACjC,gCACA;AAAA,cACF;AAAA,YACF;AAAA,UAAC;AAAA,QACL;AAGA,eAAO,IAAI,GAAG;AAEd,YAAI;AACJ,YAAI;AAEJ,YAAI;AACF,sBAAY,MAAM,eAAe,GAAG;AACpC,oBAAU,UAAU,YAAY;AAEhC,cAAG,UAAU,OAAO,GAAG;AACrB,sBAAU,KAAK,MAAM,OAAO;AAAA,UAC9B;AAAA,QACF,SAAQ,GAAG;AACT,gBAAM,IAAI;AAAA,YACR;AAAA,YAMA;AAAA,YACA,EAAC,MAAM,iCAAiC,KAAK,OAAO,EAAC;AAAA,UAAC;AAAA,QAC1D;AAGA,YAAG,CAAC,UAAU,OAAO,GAAG;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAqB,EAAC,MAAM,0BAA0B,IAAG;AAAA,UAAC;AAAA,QAC9D;AAGA,YAAG,EAAE,cAAc,UAAU;AAC3B,oBAAU,EAAC,YAAY,CAAC,EAAC;AAAA,QAC3B,OAAO;AACL,oBAAU,EAAC,YAAY,QAAQ,UAAU,EAAC;AAAA,QAC5C;AAGA,YAAG,UAAU,YAAY;AACvB,cAAG,CAAC,SAAS,QAAQ,UAAU,CAAC,GAAG;AACjC,oBAAQ,UAAU,IAAI,CAAC,QAAQ,UAAU,CAAC;AAAA,UAC5C;AACA,kBAAQ,UAAU,EAAE,KAAK,UAAU,UAAU;AAAA,QAC/C;AAEA,eAAO,EAAC,SAAS,UAAS;AAAA,MAC5B;AAAA,IACF;AAEA,aAAS,0BAA0B,KAAK;AACtC,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QAAsB;AAAA,UACpB,MAAM;AAAA,UAAyB,SAAS;AAAA,QAC1C;AAAA,MAAC;AAAA,IACL;AASA,aAAS,oBAAoB,EAAC,SAAS,KAAI,GAAG;AAC5C,UAAG,CAAC,SAAS;AACX;AAAA,MACF;AAEA,YAAM,MAAM,QAAQ,UAAU;AAE9B,UAAG,UAAU,GAAG,GAAG;AACjB,gBAAQ,UAAU,IAAI,YAAY,MAAM,GAAG;AAC3C;AAAA,MACF;AAEA,UAAG,SAAS,GAAG,GAAG;AAChB,iBAAQ,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAClC,gBAAM,UAAU,IAAI,CAAC;AACrB,cAAG,UAAU,OAAO,GAAG;AACrB,gBAAI,CAAC,IAAI,YAAY,MAAM,OAAO;AAClC;AAAA,UACF;AACA,cAAG,UAAU,OAAO,GAAG;AACrB,gCAAoB,EAAC,SAAS,EAAC,YAAY,QAAO,GAAG,KAAI,CAAC;AAAA,UAC5D;AAAA,QACF;AACA;AAAA,MACF;AAEA,UAAG,CAAC,UAAU,GAAG,GAAG;AAElB;AAAA,MACF;AAGA,iBAAU,QAAQ,KAAK;AACrB,4BAAoB,EAAC,SAAS,IAAI,IAAI,GAAG,KAAI,CAAC;AAAA,MAChD;AAAA,IACF;AAAA;AAAA;;;ACpQA,IAAAC,kBAAA;AAAA;AAAA;AAMA,WAAO,UAAU,uBAAwB;AAAA;AAAA;;;ACNzC;AAAA;AAAA;AAKA,QAAM,cAAc;AAEpB,QAAM;AAAA,MACJ,SAAS;AAAA,IACX,IAAI;AAEJ,QAAM;AAAA,MACJ,SAAS;AAAA,IACX,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAIjB,QAAI,sBAAsB;AAa1B,QAAI,oBAAoB,CAAC,EAAC,UAAU,CAAC,EAAC,MAAM;AAE1C,YAAM,eAAe,CAAC,EAAE;AAAA,QACtB,QAAQ,OAAO,IAAI,mBAAmB,CAAC;AAAA,QACvC,QAAQ,eAAe,SAAS,QAAQ,YAAY,IAAI,CAAC;AAAA,QACzD,IAAI,sBAAsB,IAAI,sBAAsB,CAAC;AAAA,MACvD;AAEA,aAAO,aAAa,WAAW,IAAI,OAAO;AAAA,IAC5C;AAwBA,QAAI,cAAc,CAAC;AAAA,MACjB;AAAA,MACA;AAAA,IACF,MAAM;AACJ,cAAQ,EAAC,OAAO,UAAU,QAAQ,aAAY,CAAC;AAAA,IACjD;AAEA,aAAS,QAAQ,EAAC,OAAO,SAAQ,GAAG;AAClC,UAAI,SAAS;AACb,eAAQ,IAAI,GAAG,UAAU,IAAI,SAAS,QAAQ,EAAE,GAAG;AACjD,iBAAS;AACT,cAAM,UAAU,SAAS,CAAC;AAC1B,YAAG,SAAS,OAAO,GAAG;AACpB,mBAAS,QAAQ,EAAC,OAAO,UAAU,QAAO,CAAC;AAAA,QAC7C,WAAU,OAAO,YAAY,YAAY;AACvC,kBAAQ,EAAC,OAAO,MAAM,MAAM;AAC1B,qBAAS;AAAA,UACX,EAAC,CAAC;AAAA,QACJ,WAAU,OAAO,YAAY,UAAU;AACrC,cAAG,MAAM,QAAQ,SAAS;AACxB,oBAAQ,MAAM,IAAI,EAAE,EAAC,OAAO,MAAM,MAAM;AACtC,uBAAS;AAAA,YACX,EAAC,CAAC;AAAA,UACJ,OAAO;AACL,qBAAS;AAAA,UACX;AAAA,QACF,OAAO;AACL,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAK;AAAA,UAAC;AAAA,QACX;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,QAAM,qBAAqB,oBAAI,IAAI;AAAA,MACjC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,MAEA;AAAA,IACF,CAAC;AAGD,QAAI,mBAAmB,SAAS,iBAAiB,EAAC,OAAO,KAAI,GAAG;AAE9D,UAAG,MAAM,UAAU,aAAa,mBAAmB,IAAI,MAAM,IAAI,GAAG;AAClE,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UACA,EAAC,MAAK;AAAA,QACR;AAAA,MACF;AACA,WAAK;AAAA,IACP;AAGA,QAAI,kBAAkB,SAAS,gBAAgB,EAAC,OAAO,KAAI,GAAG;AAC5D,cAAQ,IAAI,UAAU,MAAM,OAAO,IAAI,EAAC,MAAK,CAAC;AAC9C,WAAK;AAAA,IACP;AAGA,QAAI,yBAAyB,SAAS,uBAAuB,EAAC,OAAO,KAAI,GAAG;AAC1E,UAAG,MAAM,UAAU,WAAW;AAC5B,gBAAQ,KAAK,YAAY,MAAM,OAAO,IAAI,EAAC,MAAK,CAAC;AAAA,MACnD;AACA,WAAK;AAAA,IACP;AAGA,QAAI,wBAAwB,SAAS,sBAAsB,EAAC,MAAK,GAAG;AAClE,YAAM,IAAI;AAAA,QACR;AAAA,QACA;AAAA,QACA,EAAC,MAAK;AAAA,MACR;AAAA,IACF;AAaA,QAAI,yBAAyB,SAAS,EAAC,aAAY,IAAI,CAAC,GAAG;AACzD,UAAI,sBAAsB,eAAe,SAAS,YAAY,IAAI;AAAA,IACpE;AAAA;AAAA;;;ACnLA;AAAA;AAAA;AAKA,QAAM,OAAO;AACb,QAAM,cAAc;AAEpB,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ;AAAA,IACF,IAAI;AAEJ,QAAM;AAAA,MACJ,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,SAAS;AAAA,MACT,sBAAsB;AAAA,IACxB,IAAI;AAEJ,QAAM,wBAAwB,oBAAI,IAAI;AACtC,QAAM,iCAAiC;AAEvC,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAcjB,QAAI,UAAU,OAAO;AAAA,MACnB;AAAA,MAAW;AAAA,MAAU;AAAA,MACrB,YAAY;AAAA,MACZ,oBAAoB;AAAA,MACpB,SAAS,oBAAI,IAAI;AAAA,IACnB,MAAM;AAEJ,UAAG,UAAU,QAAQ,KAAK,cAAc,YACtC,SAAS,SAAS,UAAU,CAAC,GAAG;AAChC,mBAAW,SAAS,UAAU;AAAA,MAChC;AACA,YAAM,OAAO,SAAS,QAAQ;AAG9B,UAAG,KAAK,WAAW,GAAG;AACpB,eAAO;AAAA,MACT;AAGA,YAAM,SAAS,CAAC;AAChB,YAAM,sBAAsB;AAAA,QAC1B,CAAC,EAAC,OAAO,KAAI,MAAM;AACjB,iBAAO,KAAK,KAAK;AACjB,eAAK;AAAA,QACP;AAAA,MACF;AAEA,UAAG,QAAQ,cAAc;AACvB,4BAAoB,KAAK,QAAQ,YAAY;AAAA,MAC/C;AAEA,YAAM,kBAAkB;AAExB,gBAAU,EAAC,GAAG,SAAS,cAAc,oBAAmB;AAGxD,YAAM,WAAW,MAAM,QAAQ,gBAAgB,QAAQ;AAAA,QACrD;AAAA,QACA,SAAS;AAAA,QACT,gBAAgB,QAAQ;AAAA,QACxB,MAAM,QAAQ;AAAA,MAChB,CAAC;AAGD,UAAG,UAAU,SAAS,CAAC,EAAE,QAAQ,KAC/B,OAAO,SAAS,CAAC,EAAE,SAAS,YAAY,MAAM,WAAW;AAEzD,oBAAY,SAAS,CAAC,EAAE,SAAS,YAAY;AAAA,MAC/C;AAIA,UAAI,OAAO;AAIX,UAAG,CAAC,aAAa,CAAC,KAAK,iBAAiB;AAEtC,eAAO,KAAK,MAAM;AAClB,aAAK,kBAAkB;AAAA,MACzB;AAEA,iBAAU,mBAAmB,UAAU;AACrC,YAAI,EAAC,UAAU,IAAG,IAAI;AAGtB,oBAAY;AAGZ,YAAG,QAAQ,MAAM;AAGf,cAAG,CAAC,qBAAqB,OAAO,KAAK,UAAU,SAAS,EAAE,WAAW,GAAG;AACtE,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,gCAA+B;AAAA,YAAC;AAAA,UAC3C;AACA,iBAAO,YAAY,IAAI,kBAAkB,OAAO,EAAE,MAAM;AACxD;AAAA,QACF;AAGA,cAAM,YAAY,gBAAgB,aAAa,SAAS;AACxD,YAAG,WAAW;AACZ,cAAG,gBAAgB,cAAc;AAE/B,uBAAU,SAAS,UAAU,QAAQ;AACnC,2BAAa,EAAC,OAAO,SAAS,gBAAe,CAAC;AAAA,YAChD;AAAA,UACF;AAEA,iBAAO,YAAY,UAAU;AAC7B;AAAA,QACF;AAGA,YAAG,UAAU,GAAG,KAAK,cAAc,KAAK;AACtC,gBAAM,IAAI,UAAU;AAAA,QACtB;AAGA,YAAG,CAAC,UAAU,GAAG,GAAG;AAClB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAsB,EAAC,MAAM,yBAAyB,SAAS,IAAG;AAAA,UAAC;AAAA,QACvE;AAMA,eAAO,KAAK,MAAM;AAGlB,cAAM,UAAU,oBAAI,IAAI;AAGxB,YAAG,cAAc,KAAK;AACpB,cAAG,IAAI,UAAU,MAAM,KAAK;AAC1B,kBAAM,IAAI;AAAA,cACR,kCAAkC,IAAI,UAAU;AAAA,cAChD;AAAA,cACA,EAAC,MAAM,0BAA0B,SAAS,IAAG;AAAA,YAAC;AAAA,UAClD;AACA,cAAG,UAAU,kBACX,UAAU,mBAAmB,eAAe;AAC5C,kBAAM,IAAI;AAAA,cACR,eAAe,IAAI,UAAU,IAAI,0BACjC,UAAU;AAAA,cACV;AAAA,cACA,EAAC,MAAM,4BAA4B,SAAS,IAAG;AAAA,YAAC;AAAA,UACpD;AACA,eAAK,iBAAiB;AACtB,eAAK,UAAU,IAAI,IAAI,UAAU;AACjC,kBAAQ,IAAI,YAAY,IAAI;AAAA,QAC9B;AAGA,aAAK,iBACH,KAAK,kBAAkB,UAAU;AAGnC,YAAG,WAAW,KAAK;AACjB,cAAI,OAAO,IAAI,OAAO;AAEtB,cAAG,SAAS,QAAQ,eAAe,IAAI,GAAG;AAAA,UAE1C,WAAU,eAAe,IAAI,GAAG;AAC9B,mBAAO,YAAY,KAAK,OAAO,GAAG,IAAI;AAAA,UACxC,OAAO;AACL,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cAAsB,EAAC,MAAM,oBAAoB,SAAS,IAAG;AAAA,YAAC;AAAA,UAClE;AAEA,eAAK,OAAO,IAAI;AAChB,kBAAQ,IAAI,SAAS,IAAI;AAAA,QAC3B;AAGA,YAAG,YAAY,KAAK;AAClB,gBAAM,QAAQ,IAAI,QAAQ;AAC1B,cAAG,UAAU,MAAM;AACjB,mBAAO,KAAK,QAAQ;AAAA,UACtB,WAAU,CAAC,UAAU,KAAK,GAAG;AAC3B,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cAAsB,EAAC,MAAM,yBAAyB,SAAS,IAAG;AAAA,YAAC;AAAA,UACvE,WAAU,CAAC,eAAe,KAAK,KAAK,IAAI,eAAe,MAAM,CAAG,GAAG;AACjE,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cAAsB,EAAC,MAAM,yBAAyB,SAAS,IAAG;AAAA,YAAC;AAAA,UACvE,OAAO;AACL,kBAAM,QAAQ;AAAA,cAAW;AAAA,cAAM;AAAA,cAAO,EAAC,OAAO,MAAM,MAAM,KAAI;AAAA,cAC5D;AAAA,cAAW;AAAA,cAAW;AAAA,YAAO;AAC/B,gBAAG,CAAC,eAAe,KAAK,GAAG;AACzB,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP;AAAA,oBACF;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AACA,iBAAK,QAAQ,IAAI;AAAA,UACnB;AACA,kBAAQ,IAAI,UAAU,IAAI;AAAA,QAC5B;AAGA,YAAG,eAAe,KAAK;AACrB,gBAAM,QAAQ,IAAI,WAAW;AAC7B,cAAG,UAAU,MAAM;AACjB,mBAAO,KAAK,WAAW;AAAA,UACzB,WAAU,CAAC,UAAU,KAAK,GAAG;AAC3B,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,4BAA4B,SAAS,IAAG;AAAA,YAAC;AAAA,UACpD,OAAO;AACL,gBAAG,CAAC,MAAM,MAAM,WAAW,GAAG;AAC5B,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP,UAAU;AAAA,oBACZ;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AACA,iBAAK,WAAW,IAAI,MAAM,YAAY;AAAA,UACxC;AACA,kBAAQ,IAAI,aAAa,IAAI;AAAA,QAC/B;AAGA,YAAG,gBAAgB,KAAK;AACtB,gBAAM,QAAQ,IAAI,YAAY;AAC9B,cAAG,UAAU,mBAAmB,eAAe;AAC7C,kBAAM,IAAI;AAAA,cACR,4DACA,UAAU;AAAA,cACV;AAAA,cACA,EAAC,MAAM,0BAA0B,SAAS,IAAG;AAAA,YAAC;AAAA,UAClD;AACA,cAAG,UAAU,MAAM;AACjB,mBAAO,KAAK,YAAY;AAAA,UAC1B,WAAU,UAAU,SAAS,UAAU,OAAO;AAC5C,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,0BAA0B,SAAS,IAAG;AAAA,YAAC;AAAA,UAClD,OAAO;AACL,iBAAK,YAAY,IAAI;AAAA,UACvB;AACA,kBAAQ,IAAI,cAAc,IAAI;AAAA,QAChC;AAIA,YAAG,gBAAgB,KAAK;AACtB,gBAAM,QAAQ,IAAI,YAAY;AAC9B,cAAG,UAAU,mBAAmB,eAAe;AAC7C,kBAAM,IAAI;AAAA,cACR,4DACA,UAAU;AAAA,cACV;AAAA,cACA,EAAC,MAAM,yBAAyB,SAAS,IAAG;AAAA,YAAC;AAAA,UACjD;AACA,cAAG,OAAO,UAAU,WAAW;AAC7B,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,4BAA4B,SAAS,SAAQ;AAAA,YAAC;AAAA,UACzD;AACA,kBAAQ,IAAI,cAAc,IAAI;AAAA,QAChC;AAGA,YAAG,aAAa,KAAK;AACnB,gBAAM,QAAQ,IAAI,SAAS;AAC3B,cAAG,UAAU,mBAAmB,eAAe;AAC7C,kBAAM,IAAI;AAAA,cACR,yDACA,UAAU;AAAA,cACV;AAAA,cACA,EAAC,MAAM,yBAAyB,SAAS,IAAG;AAAA,YAAC;AAAA,UACjD;AACA,cAAG,CAAC,UAAU,KAAK,GAAG;AACpB,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,yBAAyB,SAAS,SAAQ;AAAA,YAAC;AAAA,UACtD;AAGA,gBAAM,iBAAiB,MAAM,QAAQ,gBAAgB,QAAQ;AAAA,YAC3D;AAAA,YACA,SAAS;AAAA,YACT,gBAAgB,QAAQ;AAAA,YACxB,MAAM,QAAQ;AAAA,UAChB,CAAC;AACD,cAAG,eAAe,WAAW,GAAG;AAC9B,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,0BAA0B,SAAS,SAAQ;AAAA,YAAC;AAAA,UACvD;AACA,gBAAM,kBAAkB,eAAe,CAAC,EAAE,aAAa,SAAS;AAChE,cAAG,iBAAiB;AAIlB,kBAAM;AAAA,UACR,OAAO;AACL,kBAAM,YAAY,eAAe,CAAC,EAAE;AACpC,gBAAG,aAAa,WAAW;AACzB,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBACA,EAAC,MAAM,yBAAyB,SAAS,SAAQ;AAAA,cAAC;AAAA,YACtD;AAGA,uBAAU,OAAO,WAAW;AAC1B,kBAAG,CAAC,IAAI,eAAe,GAAG,GAAG;AAC3B,oBAAI,GAAG,IAAI,UAAU,GAAG;AAAA,cAC1B;AAAA,YACF;AAMA,2BAAe,CAAC,EAAE,aAAa,WAAW,GAAG;AAAA,UAC/C;AAEA,kBAAQ,IAAI,WAAW,IAAI;AAAA,QAC7B;AAKA,gBAAQ,IAAI,cAAc,IAAI,YAAY,KAAK,KAAK;AAGpD,mBAAU,OAAO,KAAK;AACpB,cAAI,qBAAqB;AAAA,YACvB,WAAW;AAAA,YACX,UAAU;AAAA,YACV,MAAM;AAAA,YACN;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAED,cAAG,UAAU,IAAI,GAAG,CAAC,KAAK,cAAc,IAAI,GAAG,GAAG;AAChD,kBAAM,SAAS,IAAI,GAAG,EAAE,UAAU;AAClC,gBAAIC,WAAU;AACd,gBAAG,UAAU,MAAM,GAAG;AACpB,oBAAM,MAAM,YAAY,QAAQ,MAAM,MAAM;AAE5C,kBAAG,OAAO,IAAI,GAAG,GAAG;AAClB,gBAAAA,WAAU;AAAA,cACZ,OAAO;AACL,uBAAO,IAAI,GAAG;AAAA,cAChB;AAAA,YACF;AAEA,gBAAGA,UAAS;AACV,kBAAI;AACF,sBAAM,IAAI,QAAQ;AAAA,kBAChB,WAAW,KAAK,MAAM;AAAA,kBACtB,UAAU,IAAI,GAAG,EAAE,UAAU;AAAA,kBAC7B,mBAAmB;AAAA,kBACnB;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH,SAAQ,GAAG;AACT,sBAAM,IAAI;AAAA,kBACR;AAAA,kBACA;AAAA,kBACA;AAAA,oBACE,MAAM;AAAA,oBACN,SAAS,IAAI,GAAG,EAAE,UAAU;AAAA,oBAC5B,MAAM;AAAA,kBACR;AAAA,gBAAC;AAAA,cACL;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAGA,wBAAgB,aAAa,WAAW;AAAA,UACtC,SAAS;AAAA,UACT;AAAA,QACF,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAaA,QAAI,uBAAuB,CAAC;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,oBAAoB;AAAA,IACtB,MAAM;AACJ,UAAG,QAAQ,IAAI,IAAI,GAAG;AAEpB,YAAG,QAAQ,IAAI,IAAI,GAAG;AACpB;AAAA,QACF;AAEA,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UACA,EAAC,MAAM,sBAAsB,SAAS,UAAU,KAAI;AAAA,QAAC;AAAA,MACzD;AAGA,cAAQ,IAAI,MAAM,KAAK;AAGvB,UAAI;AACJ,UAAG,SAAS,eAAe,IAAI,GAAG;AAChC,gBAAQ,SAAS,IAAI;AAAA,MACvB;AAEA,UAAG,SAAS,WACT,UAAU,KAAK,MACd,MAAM,YAAY,KAAK,YAAY,UACpC,IAAI,eAAe,WAAW,GAAG,GAAG;AAErC,cAAMC,aAAY,CAAC,cAAc,OAAO,YAAY;AACpD,cAAM,OAAO,OAAO,KAAK,KAAK;AAC9B,YAAG,KAAK,WAAW,KAAK,KAAK,KAAK,OAAK,CAACA,WAAU,SAAS,CAAC,CAAC,GAAG;AAC9D,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,wBAAwB,SAAS,UAAU,KAAI;AAAA,UAAC;AAAA,QAC3D;AAAA,MACF,WAAU,IAAI,UAAU,IAAI,GAAG;AAC7B,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UACA,EAAC,MAAM,wBAAwB,SAAS,UAAU,KAAI;AAAA,QAAC;AAAA,MAC3D,WAAU,KAAK,MAAM,aAAa,GAAG;AACnC,YAAG,QAAQ,cAAc;AACvB,uBAAa;AAAA,YACX,OAAO;AAAA,cACL,MAAM,CAAC,aAAa;AAAA,cACpB,MAAM;AAAA,cACN,OAAO;AAAA,cACP,SACE;AAAA,cAEF,SAAS;AAAA,gBACP;AAAA,cACF;AAAA,YACF;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AACA;AAAA,MACF,WAAU,SAAS,IAAI;AACrB,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UACA,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,QAAC;AAAA,MACxD;AAGA,YAAM,kBAAkB,UAAU,SAAS,IAAI,IAAI;AAGnD,UAAG,UAAU,SAAS,IAAI,IAAI,GAAG;AAC/B,kBAAU,SAAS,OAAO,IAAI;AAAA,MAChC;AAGA,UAAI,aAAa;AACjB,UAAG,UAAU,KAAK,KAAK,UAAU,MAAM;AACrC,qBAAa;AACb,gBAAQ,EAAC,OAAO,MAAK;AAAA,MACvB;AAEA,UAAG,CAAC,UAAU,KAAK,GAAG;AACpB,cAAM,IAAI;AAAA,UACR;AAAA,UAEA;AAAA,UACA,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,QAAC;AAAA,MACxD;AAGA,YAAM,UAAU,CAAC;AACjB,gBAAU,SAAS,IAAI,MAAM,OAAO;AACpC,cAAQ,UAAU;AAGlB,YAAM,YAAY,CAAC,cAAc,OAAO,aAAa,YAAY,OAAO;AAGxE,UAAG,IAAI,eAAe,WAAW,GAAG,GAAG;AACrC,kBAAU;AAAA,UACR;AAAA,UAAY;AAAA,UAAc;AAAA,UAAU;AAAA,UAAS;AAAA,UAAW;AAAA,QAAY;AAAA,MACxE;AAEA,iBAAU,MAAM,OAAO;AACrB,YAAG,CAAC,UAAU,SAAS,EAAE,GAAG;AAC1B,gBAAM,IAAI;AAAA,YACR,gEAAgE;AAAA,YAChE;AAAA,YACA,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACxD;AAAA,MACF;AAIA,YAAM,QAAQ,KAAK,QAAQ,GAAG;AAC9B,cAAQ,gBAAiB,QAAQ;AAEjC,UAAG,cAAc,OAAO;AACtB,YAAG,SAAS,OAAO;AACjB,gBAAM,IAAI;AAAA,YACR;AAAA,YACgB;AAAA,YAChB,EAAC,MAAM,4BAA4B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACzD;AACA,YAAG,WAAW,OAAO;AACnB,gBAAM,IAAI;AAAA,YACR;AAAA,YACkB;AAAA,YAClB,EAAC,MAAM,4BAA4B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACzD;AACA,cAAM,UAAU,MAAM,UAAU;AAChC,YAAG,CAAC,UAAU,OAAO,GAAG;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAsB,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,UAAC;AAAA,QAC1E;AAEA,YAAG,QAAQ,MAAM,aAAa,GAAG;AAC/B,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SACE;AAAA,gBAEF,SAAS;AAAA,kBACP;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA,cAAG,iBAAiB;AAClB,sBAAU,SAAS,IAAI,MAAM,eAAe;AAAA,UAC9C,OAAO;AACL,sBAAU,SAAS,OAAO,IAAI;AAAA,UAChC;AACA;AAAA,QACF;AAGA,cAAMC,MAAK;AAAA,UACT;AAAA,UAAW;AAAA,UAAS,EAAC,OAAO,MAAM,MAAM,MAAK;AAAA,UAAG;AAAA,UAAU;AAAA,UAC1D;AAAA,QAAO;AACT,YAAG,CAAC,eAAeA,GAAE,GAAG;AACtB,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAsB,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,UAAC;AAAA,QAC1E;AAEA,gBAAQ,KAAK,IAAIA;AACjB,gBAAQ,UAAU;AAAA,MACpB,WAAU,SAAS,OAAO;AACxB,YAAIA,MAAK,MAAM,KAAK;AACpB,YAAGA,OAAM,CAAC,UAAUA,GAAE,GAAG;AACvB,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAsB,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,UAAC;AAAA,QAC1E;AACA,YAAGA,QAAO,MAAM;AAEd,kBAAQ,KAAK,IAAI;AAAA,QACnB,WAAU,CAAC,IAAI,UAAUA,GAAE,KAAKA,IAAG,MAAM,aAAa,GAAG;AACvD,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SACE;AAAA,gBAEF,SAAS;AAAA,kBACP,IAAAA;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA,cAAG,iBAAiB;AAClB,sBAAU,SAAS,IAAI,MAAM,eAAe;AAAA,UAC9C,OAAO;AACL,sBAAU,SAAS,OAAO,IAAI;AAAA,UAChC;AACA;AAAA,QACF,WAAUA,QAAO,MAAM;AAErB,UAAAA,MAAK;AAAA,YACH;AAAA,YAAWA;AAAA,YAAI,EAAC,OAAO,MAAM,MAAM,MAAK;AAAA,YAAG;AAAA,YAAU;AAAA,YAAS;AAAA,UAAO;AACvE,cAAG,CAAC,eAAeA,GAAE,KAAK,CAAC,IAAI,UAAUA,GAAE,GAAG;AAC5C,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,YAAC;AAAA,UACpD;AAGA,cAAG,KAAK,MAAM,cAAc,GAAG;AAC7B,kBAAM,cAAc,IAAI,IAAI,OAAO,EAAE,IAAI,MAAM,IAAI;AACnD,kBAAM,UAAU;AAAA,cACd;AAAA,cAAW;AAAA,cAAM,EAAC,OAAO,MAAM,MAAM,MAAK;AAAA,cAC1C;AAAA,cAAU;AAAA,cAAa;AAAA,YAAO;AAChC,gBAAG,YAAYA,KAAI;AACjB,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBACA,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,cAAC;AAAA,YACpD;AAAA,UACF;AAEA,kBAAQ,KAAK,IAAIA;AAEjB,kBAAQ,UAAW,cACjB,CAAC,QAAQ,iBACTA,IAAG,MAAM,gBAAgB,MAAM;AAAA,QACnC;AAAA,MACF;AAEA,UAAG,EAAE,SAAS,UAAU;AAEtB,YAAG,QAAQ,eAAe;AACxB,gBAAM,SAAS,KAAK,OAAO,GAAG,KAAK;AACnC,cAAG,SAAS,eAAe,MAAM,GAAG;AAElC,gBAAI,qBAAqB;AAAA,cACvB;AAAA,cAAW;AAAA,cAAU,MAAM;AAAA,cAAQ;AAAA,cAAS;AAAA,YAC9C,CAAC;AAAA,UACH;AAEA,cAAG,UAAU,SAAS,IAAI,MAAM,GAAG;AAEjC,kBAAM,SAAS,KAAK,OAAO,QAAQ,CAAC;AACpC,oBAAQ,KAAK,IAAI,UAAU,SAAS,IAAI,MAAM,EAAE,KAAK,IAAI;AAAA,UAC3D,OAAO;AAEL,oBAAQ,KAAK,IAAI;AAAA,UACnB;AAAA,QACF,WAAU,SAAS,SAAS;AAE1B,kBAAQ,KAAK,IAAI;AAAA,QACnB,OAAO;AAEL,cAAG,EAAE,YAAY,YAAY;AAC3B,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,uBAAuB,SAAS,UAAU,KAAI;AAAA,YAAC;AAAA,UAC1D;AAEA,kBAAQ,KAAK,IAAI,UAAU,QAAQ,IAAI;AAAA,QACzC;AAAA,MACF;AAGA,UAAG,MAAM,YAAY,MAAM,QACxB,QAAQ,IAAI,YAAY,MAAM,QAAQ,MAAM,YAAY,MAAM,OAAQ;AACvE,kBAAU,UAAU,IAAI,IAAI;AAC5B,gBAAQ,YAAY;AAAA,MACtB;AAGA,cAAQ,IAAI,MAAM,IAAI;AAEtB,UAAG,WAAW,OAAO;AACnB,YAAI,OAAO,MAAM,OAAO;AACxB,YAAG,CAAC,UAAU,IAAI,GAAG;AACnB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,wBAAwB,SAAS,SAAQ;AAAA,UAAC;AAAA,QACrD;AAEA,YAAI,SAAS,WAAW,SAAS,SAAU;AACzC,cAAG,IAAI,eAAe,WAAW,CAAG,GAAG;AACrC,kBAAM,IAAI;AAAA,cACR,gEACI,IAAI;AAAA,cACR;AAAA,cACA,EAAC,MAAM,wBAAwB,SAAS,SAAQ;AAAA,YAAC;AAAA,UACrD;AAAA,QACF,WAAU,SAAS,SAAS,SAAS,UAAU;AAE7C,iBAAO;AAAA,YACL;AAAA,YAAW;AAAA,YAAM,EAAC,OAAO,MAAM,MAAM,MAAK;AAAA,YAAG;AAAA,YAAU;AAAA,YACvD;AAAA,UAAO;AACT,cAAG,CAAC,eAAe,IAAI,GAAG;AACxB,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,wBAAwB,SAAS,SAAQ;AAAA,YAAC;AAAA,UACrD;AACA,cAAG,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC3B,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cACA,EAAC,MAAM,wBAAwB,SAAS,SAAQ;AAAA,YAAC;AAAA,UACrD;AAAA,QACF;AAGA,gBAAQ,OAAO,IAAI;AAAA,MACrB;AAEA,UAAG,gBAAgB,OAAO;AAExB,cAAM,YAAY,UAAU,MAAM,YAAY,CAAC,IAC7C,CAAC,MAAM,YAAY,CAAC,IAAK,MAAM,YAAY,KAAK,CAAC;AACnD,cAAM,kBAAkB,CAAC,SAAS,QAAQ,UAAU,WAAW;AAC/D,YAAI,UAAU;AACd,cAAM,SAAS,UAAU,SAAS,MAAM;AAGxC,YAAG,IAAI,eAAe,WAAW,GAAG,GAAG;AACrC,0BAAgB,KAAK,UAAU,OAAO,OAAO;AAG7C,cAAG,UAAU,SAAS,OAAO,GAAG;AAC9B,gBAAG,UAAU,WAAW,GAAG;AACzB,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBACA,EAAC,MAAM,6BAA6B,SAAS,SAAQ;AAAA,cAAC;AAAA,YAC1D;AAAA,UACF,WAAU,UAAU,SAAS,QAAQ,GAAG;AACtC,gBAAG,UAAU,KAAK,SAChB,QAAQ,YAAY,QAAQ,SAAS,QAAQ,YAC7C,QAAQ,MAAM,GAAG;AACjB,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBACA,EAAC,MAAM,6BAA6B,SAAS,SAAQ;AAAA,cAAC;AAAA,YAC1D;AAAA,UACF,OAAO;AAEL,uBAAW,UAAU,WAAW,SAAS,IAAI;AAAA,UAC/C;AAEA,cAAG,UAAU,SAAS,OAAO,GAAG;AAG9B,oBAAQ,OAAO,IAAI,QAAQ,OAAO,KAAK;AAGvC,gBAAG,CAAC,CAAC,OAAO,QAAQ,EAAE,SAAS,QAAQ,OAAO,CAAC,GAAG;AAChD,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBACA,EAAC,MAAM,wBAAwB,SAAS,SAAQ;AAAA,cAAC;AAAA,YACrD;AAAA,UACF;AAAA,QACF,OAAO;AAGL,qBAAW,CAAC,SAAS,MAAM,YAAY,CAAC;AAGxC,qBAAW,UAAU,UAAU;AAAA,QACjC;AAGA,mBAAW,UAAU,MAAM,OAAK,gBAAgB,SAAS,CAAC,CAAC;AAG3D,mBAAW,EAAE,UAAU,UAAU,SAAS,OAAO;AAEjD,YAAG,CAAC,SAAS;AACX,gBAAM,IAAI;AAAA,YACR,qFAC2B,gBAAgB,KAAK,IAAI;AAAA,YACpD;AAAA,YACA,EAAC,MAAM,6BAA6B,SAAS,SAAQ;AAAA,UAAC;AAAA,QAC1D;AAEA,YAAG,QAAQ,WACT,CAAC,UAAU,MAAM,OAAK,CAAC,UAAU,MAAM,EAAE,SAAS,CAAC,CAAC,GAAG;AACvD,gBAAM,IAAI;AAAA,YACR;AAAA,YAC2C;AAAA,YAC3C,EAAC,MAAM,4BAA4B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACzD;AAGA,gBAAQ,YAAY,IAAI;AAAA,MAC1B;AAGA,UAAG,YAAY,OAAO;AACpB,YAAG,EAAE,gBAAgB,UAAU,CAAC,QAAQ,YAAY,EAAE,SAAS,QAAQ,GAAG;AACxE,gBAAM,IAAI;AAAA,YACR,iEACI,MAAM,QAAQ,CAAC,cAAc,IAAI;AAAA,YAAM;AAAA,YAC3C,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACxD;AACA,YAAG,CAAC,UAAU,MAAM,QAAQ,CAAC,KAAK,MAAM,QAAQ,EAAE,QAAQ,GAAG,MAAM,GAAG;AACpE,gBAAM,IAAI;AAAA,YACR,0DACI,MAAM,QAAQ,CAAC,cAAc,IAAI;AAAA,YAAM;AAAA,YAC3C,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACxD;AACA,gBAAQ,QAAQ,IAAI,MAAM,QAAQ;AAAA,MACpC;AAGA,UAAG,cAAc,OAAO;AACtB,gBAAQ,UAAU,IAAI,MAAM,UAAU;AAAA,MACxC;AAEA,UAAG,eAAe,SAAS,EAAE,WAAW,QAAQ;AAC9C,YAAI,WAAW,MAAM,WAAW;AAChC,YAAG,aAAa,QAAQ,CAAC,UAAU,QAAQ,GAAG;AAC5C,gBAAM,IAAI;AAAA,YACR;AAAA,YACqB;AAAA,YACrB,EAAC,MAAM,4BAA4B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACzD;AAGA,YAAG,aAAa,MAAM;AACpB,qBAAW,SAAS,YAAY;AAAA,QAClC;AACA,gBAAQ,WAAW,IAAI;AAAA,MACzB;AAGA,UAAG,aAAa,OAAO;AACrB,YAAG,KAAK,MAAM,MAAM,GAAG;AACrB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACxD;AACA,YAAG,IAAI,UAAU,QAAQ,KAAK,CAAC,GAAG;AAChC,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,2BAA2B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACxD;AACA,YAAG,OAAO,MAAM,SAAS,MAAM,WAAW;AACxC,kBAAQ,UAAU,MAAM,SAAS,MAAM;AAAA,QACzC,OAAO;AACL,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,yBAAyB,SAAS,SAAQ;AAAA,UAAC;AAAA,QACtD;AAAA,MACF;AAEA,UAAG,gBAAgB,OAAO;AACxB,cAAM,YAAY,MAAM,YAAY;AACpC,YAAG,cAAc,QAAQ,cAAc,SAAS,cAAc,OAAO;AACnE,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YACA,EAAC,MAAM,0BAA0B,SAAS,SAAQ;AAAA,UAAC;AAAA,QACvD;AACA,gBAAQ,YAAY,IAAI;AAAA,MAC1B;AAEA,UAAG,WAAW,OAAO;AACnB,cAAM,OAAO,MAAM,OAAO;AAC1B,YAAG,CAAC,UAAU,IAAI,KAAM,SAAS,WAAW,KAAK,QAAQ,GAAG,MAAM,GAAI;AACpE,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YACA,EAAC,MAAM,uBAAuB,SAAS,SAAQ;AAAA,UAAC;AAAA,QACpD;AACA,gBAAQ,OAAO,IAAI;AAAA,MACrB;AAGA,YAAM,KAAK,QAAQ,KAAK;AACxB,UAAG,OAAO,cAAc,OAAO,aAAa;AAC1C,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UAAsB,EAAC,MAAM,yBAAyB,SAAS,SAAQ;AAAA,QAAC;AAAA,MAC5E;AAGA,UAAG,mBAAmB,gBAAgB,aAAa,CAAC,mBAAmB;AAGrE,kBAAU,UAAU,IAAI,IAAI;AAC5B,gBAAQ,YAAY;AACpB,YAAG,CAAC,aAAa,iBAAiB,OAAO,GAAG;AAC1C,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,+BAA+B,SAAS,UAAU,KAAI;AAAA,UAAC;AAAA,QAClE;AAAA,MACF;AAAA,IACF;AAgBA,QAAI,YAAY,CAAC,WAAW,OAAO,YAAY,YAAY;AACzD,aAAO;AAAA,QAAW;AAAA,QAAW;AAAA,QAAO;AAAA,QAAY;AAAA,QAAW;AAAA,QACzD;AAAA,MAAO;AAAA,IACX;AAoBA,aAAS,WAAW,WAAW,OAAO,YAAY,UAAU,SAAS,SAAS;AAE5E,UAAG,UAAU,QAAQ,CAAC,UAAU,KAAK,KAAK,IAAI,UAAU,KAAK,GAAG;AAC9D,eAAO;AAAA,MACT;AAGA,UAAG,MAAM,MAAM,aAAa,GAAG;AAC7B,eAAO;AAAA,MACT;AAGA,UAAG,YAAY,SAAS,eAAe,KAAK,KAC1C,QAAQ,IAAI,KAAK,MAAM,MAAM;AAC7B,YAAI,qBAAqB;AAAA,UACvB;AAAA,UAAW;AAAA,UAAU,MAAM;AAAA,UAAO;AAAA,UAAS;AAAA,QAC7C,CAAC;AAAA,MACH;AAEA,mBAAa,cAAc,CAAC;AAC5B,UAAG,WAAW,OAAO;AACnB,cAAM,UAAU,UAAU,SAAS,IAAI,KAAK;AAG5C,YAAG,YAAY,MAAM;AACnB,iBAAO;AAAA,QACT;AAEA,YAAG,UAAU,OAAO,KAAK,SAAS,SAAS;AAEzC,iBAAO,QAAQ,KAAK;AAAA,QACtB;AAAA,MACF;AAGA,YAAM,QAAQ,MAAM,QAAQ,GAAG;AAC/B,UAAG,QAAQ,GAAG;AACZ,cAAM,SAAS,MAAM,OAAO,GAAG,KAAK;AACpC,cAAM,SAAS,MAAM,OAAO,QAAQ,CAAC;AAIrC,YAAG,WAAW,OAAO,OAAO,QAAQ,IAAI,MAAM,GAAG;AAC/C,iBAAO;AAAA,QACT;AAGA,YAAG,YAAY,SAAS,eAAe,MAAM,GAAG;AAC9C,cAAI,qBAAqB;AAAA,YACvB;AAAA,YAAW;AAAA,YAAU,MAAM;AAAA,YAAQ;AAAA,YAAS;AAAA,UAC9C,CAAC;AAAA,QACH;AAGA,cAAM,UAAU,UAAU,SAAS,IAAI,MAAM;AAC7C,YAAG,WAAW,QAAQ,SAAS;AAC7B,iBAAO,QAAQ,KAAK,IAAI;AAAA,QAC1B;AAGA,YAAG,eAAe,KAAK,GAAG;AACxB,iBAAO;AAAA,QACT;AAAA,MACF;AAUA,UAAG,WAAW,SAAS,YAAY,WAAW;AAE5C,cAAM,kBAAkB,UAAU,QAAQ,IAAI;AAuB9C,gBAAQ;AAAA,MACV,WAAU,WAAW,MAAM;AAEzB,YAAI;AACJ,YAAI;AACJ,YAAG,WAAW,WAAW;AACvB,cAAG,UAAU,OAAO,GAAG;AACrB,mBAAO,YAAY,QAAQ,MAAM,UAAU,OAAO,CAAC;AACnD,8BAAkB,YAAY,MAAM,KAAK;AAAA,UAC3C,OAAO;AACL,mBAAO,UAAU,OAAO;AACxB,8BAAkB;AAAA,UACpB;AAAA,QACF,OAAO;AACL,iBAAO,QAAQ;AACf,4BAAkB,YAAY,QAAQ,MAAM,KAAK;AAAA,QACnD;AAuBA,gBAAQ;AAAA,MACV;AAyBA,aAAO;AAAA,IACT;AAUA,QAAI,oBAAoB,aAAW;AACjC,YAAM,MAAM,KAAK,UAAU,EAAC,gBAAgB,QAAQ,eAAc,CAAC;AACnE,YAAM,SAAS,sBAAsB,IAAI,GAAG;AAC5C,UAAG,QAAQ;AACT,eAAO;AAAA,MACT;AAEA,YAAM,iBAAiB;AAAA,QACrB,gBAAgB,QAAQ;AAAA,QACxB,UAAU,oBAAI,IAAI;AAAA,QAClB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,yBAAyB;AAAA,QACzB,WAAW,CAAC;AAAA,MACd;AAEA,UAAG,sBAAsB,SAAS,gCAAgC;AAGhE,8BAAsB,MAAM;AAAA,MAC9B;AACA,4BAAsB,IAAI,KAAK,cAAc;AAC7C,aAAO;AAQP,eAAS,wBAAwB;AAC/B,cAAM,YAAY;AAGlB,YAAG,UAAU,SAAS;AACpB,iBAAO,UAAU;AAAA,QACnB;AACA,cAAM,UAAU,UAAU,UAAU,CAAC;AAGrC,cAAM,eAAe,UAAU,eAAe,CAAC;AAC/C,cAAM,cAAc,CAAC;AAGrB,cAAM,mBAAmB,UAAU,WAAW,KAAK,SAAS,YAAY;AAGxE,cAAM,mBAAmB,UAAU,YAAY;AAI/C,cAAM,WAAW,UAAU;AAC3B,cAAM,QAAQ,CAAC,GAAG,SAAS,KAAK,CAAC,EAAE,KAAK,qBAAqB;AAC7D,mBAAU,QAAQ,OAAO;AACvB,gBAAM,UAAU,SAAS,IAAI,IAAI;AACjC,cAAG,YAAY,MAAM;AACnB;AAAA,UACF;AAEA,cAAI,YAAY,QAAQ,YAAY,KAAK;AACzC,sBAAY,CAAC,EAAE,OAAO,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE;AAE/C,cAAG,QAAQ,KAAK,MAAM,MAAM;AAC1B;AAAA,UACF;AAEA,gBAAM,MAAM,SAAS,QAAQ,KAAK,CAAC;AACnC,qBAAU,OAAO,KAAK;AACpB,gBAAI,QAAQ,QAAQ,GAAG;AACvB,kBAAM,YAAY,IAAI,UAAU,GAAG;AAEnC,gBAAG,CAAC,OAAO;AAET,sBAAQ,GAAG,IAAI,QAAQ,CAAC;AAExB,kBAAG,CAAC,aAAa,CAAC,QAAQ,eAAe;AAEvC,4BAAY,GAAG,IAAI,CAAC,IAAI;AACxB,sBAAM,iBAAiB,EAAC,KAAK,OAAO,YAAY,GAAG,EAAC;AACpD,oBAAG,IAAI,CAAC,KAAK,cAAc;AACzB,+BAAa,IAAI,CAAC,CAAC,EAAE,KAAK,cAAc;AAAA,gBAC1C,OAAO;AACL,+BAAa,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc;AAAA,gBACxC;AAAA,cACF;AAAA,YACF,WAAU,CAAC,aAAa,CAAC,QAAQ,eAAe;AAE9C,0BAAY,GAAG,EAAE,KAAK,IAAI;AAAA,YAC5B;AAGA,gBAAG,CAAC,MAAM,SAAS,GAAG;AACpB,oBAAM,SAAS,IAAI;AAAA,gBACjB,aAAa,CAAC;AAAA,gBACd,SAAS,CAAC;AAAA,gBACV,QAAQ,CAAC;AAAA,cACX;AAAA,YACF;AACA,oBAAQ,MAAM,SAAS;AACvB,8BAAkB,MAAM,MAAM,MAAM,GAAG,OAAO;AAE9C,gBAAG,QAAQ,SAAS;AAElB,gCAAkB,MAAM,MAAM,OAAO,GAAG,UAAU;AAAA,YACpD,WAAU,QAAQ,OAAO,MAAM,SAAS;AACtC,gCAAkB,MAAM,MAAM,MAAM,GAAG,OAAO;AAC9C,gCAAkB,MAAM,MAAM,WAAW,GAAG,OAAO;AACnD,gCAAkB,MAAM,MAAM,OAAO,GAAG,OAAO;AAAA,YACjD,WAAU,WAAW,SAAS;AAE5B,gCAAkB,MAAM,MAAM,OAAO,GAAG,QAAQ,OAAO,CAAC;AAAA,YAC1D,WAAU,eAAe,WAAW,gBAAgB,SAAS;AAE3D,oBAAM,WAAW,QAAQ,WAAW;AACpC,oBAAM,YAAY,QAAQ,YAAY;AACtC,kBAAG,YAAY,WAAW;AACxB;AAAA,kBAAkB;AAAA,kBAAM,MAAM,WAAW;AAAA,kBACvC,GAAG,QAAQ,IAAI,SAAS,GAAG,YAAY;AAAA,gBAAC;AAAA,cAC5C,WAAU,UAAU;AAClB,kCAAkB,MAAM,MAAM,WAAW,GAAG,SAAS,YAAY,CAAC;AAAA,cACpE,WAAU,WAAW;AACnB,kCAAkB,MAAM,MAAM,WAAW,GAAG,IAAI,SAAS,EAAE;AAAA,cAC7D,OAAO;AACL,kCAAkB,MAAM,MAAM,WAAW,GAAG,OAAO;AAAA,cACrD;AAAA,YACF,WAAU,eAAe,SAAS;AAChC;AAAA,gBAAkB;AAAA,gBAAM,MAAM,WAAW;AAAA,iBACtC,QAAQ,WAAW,KAAK,SAAS,YAAY;AAAA,cAAC;AAAA,YACnD,WAAU,gBAAgB,SAAS;AACjC,kBAAG,QAAQ,YAAY,GAAG;AACxB;AAAA,kBAAkB;AAAA,kBAAM,MAAM,WAAW;AAAA,kBACvC,IAAI,QAAQ,YAAY,CAAC;AAAA,gBAAE;AAAA,cAC/B,OAAO;AACL,kCAAkB,MAAM,MAAM,WAAW,GAAG,OAAO;AAAA,cACrD;AAAA,YACF,WAAU,kBAAkB;AAC1B,gCAAkB,MAAM,MAAM,WAAW,GAAG,IAAI,gBAAgB,EAAE;AAClE,gCAAkB,MAAM,MAAM,WAAW,GAAG,OAAO;AACnD,gCAAkB,MAAM,MAAM,OAAO,GAAG,OAAO;AAAA,YACjD,OAAO;AAEL,gCAAkB,MAAM,MAAM,WAAW,GAAG,eAAe;AAC3D,gCAAkB,MAAM,MAAM,WAAW,GAAG,OAAO;AACnD,gCAAkB,MAAM,MAAM,OAAO,GAAG,OAAO;AAAA,YACjD;AAAA,UACF;AAAA,QACF;AAGA,mBAAUC,QAAO,cAAc;AAC7B,uBAAa,cAAcA,MAAK,CAAC;AAAA,QACnC;AAEA,eAAO;AAAA,MACT;AAUA,eAAS,aAAa,QAAQA,MAAK,KAAK;AACtC,cAAM,UAAU,OAAOA,IAAG;AAC1B,cAAM,OAAO,OAAOA,IAAG,IAAI,CAAC;AAE5B,YAAI;AACJ,YAAI;AACJ,mBAAU,SAAS,SAAS;AAC1B,gBAAM,MAAM;AACZ,cAAG,OAAO,IAAI,QAAQ;AACpB,qBAAS;AAAA,UACX,OAAO;AACL,qBAAS,IAAI,GAAG;AAAA,UAClB;AACA,cAAG,UAAU,MAAM;AACjB,iBAAK,MAAM,EAAE,KAAK,KAAK;AAAA,UACzB,OAAO;AACL,iBAAK,MAAM,IAAI,CAAC,KAAK;AAAA,UACvB;AAAA,QACF;AAEA,mBAAUA,QAAO,MAAM;AACrB,cAAGA,SAAQ,IAAI;AACb;AAAA,UACF;AACA,uBAAa,MAAMA,MAAK,MAAM,CAAC;AAAA,QACjC;AAAA,MACF;AASA,eAAS,kBAAkB,MAAM,OAAO,qBAAqB;AAC3D,YAAG,CAAC,MAAM,eAAe,mBAAmB,GAAG;AAC7C,gBAAM,mBAAmB,IAAI;AAAA,QAC/B;AAAA,MACF;AAOA,eAAS,sBAAsB;AAC7B,cAAM,QAAQ,CAAC;AACf,cAAM,WAAW,KAAK,MAAM,KAAK,QAAQ;AACzC,cAAM,QAAQ,KAAK;AACnB,cAAM,UAAU;AAChB,cAAM,aAAa,KAAK;AACxB,cAAM,YAAY,KAAK,MAAM,KAAK,SAAS;AAC3C,YAAG,KAAK,iBAAiB;AACvB,gBAAM,kBAAkB,KAAK,gBAAgB,MAAM;AAAA,QACrD;AACA,cAAM,0BAA0B,KAAK;AACrC,YAAG,WAAW,MAAM;AAClB,gBAAM,OAAO,IAAI,KAAK,OAAO;AAAA,QAC/B;AACA,YAAG,eAAe,MAAM;AACtB,gBAAM,WAAW,IAAI,KAAK,WAAW;AAAA,QACvC;AACA,YAAG,YAAY,MAAM;AACnB,gBAAM,QAAQ,IAAI,KAAK,QAAQ;AAAA,QACjC;AACA,eAAO;AAAA,MACT;AAMA,eAAS,2BAA2B;AAClC,YAAG,CAAC,KAAK,iBAAiB;AACxB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,gBAAgB,MAAM;AAAA,MACpC;AAAA,IACF;AAaA,QAAI,kBAAkB,CAAC,KAAK,KAAK,SAAS;AAExC,UAAG,QAAQ,MAAM;AACf,YAAG,SAAS,YAAY;AACtB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAGA,UAAG,IAAI,SAAS,IAAI,GAAG,GAAG;AACxB,cAAM,QAAQ,IAAI,SAAS,IAAI,GAAG;AAElC,YAAG,aAAa,IAAI,GAAG;AAErB,iBAAO;AAAA,QACT;AACA,YAAG,MAAM,eAAe,IAAI,GAAG;AAE7B,iBAAO,MAAM,IAAI;AAAA,QACnB;AAAA,MACF;AAGA,UAAG,SAAS,eAAe,QAAQ,KAAK;AACtC,eAAO,IAAI,IAAI;AAAA,MACjB;AAGA,UAAG,SAAS,gBAAgB,QAAQ,KAAK;AACvC,eAAO,IAAI,IAAI;AAAA,MACjB;AAEA,UAAG,SAAS,YAAY;AACtB,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAUA,QAAI,iBAAiB,CAAC,WAAW,YAAY;AAC3C,UAAG,QAAQ,SAAS,KAAK,OAAO;AAC9B,eAAO,CAAC,UAAU,kBAChB,UAAU,kBAAkB,aAAa,QAAQ,SAAS;AAAA,MAC9D,OAAO;AACL,eAAO,UAAU,mBAAmB;AAAA,MACtC;AAAA,IACF;AASA,QAAI,YAAY,OAAK;AACnB,UAAG,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK;AAChC,eAAO;AAAA,MACT;AACA,cAAO,GAAG;AAAA,QACR,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AACH,iBAAO;AAAA,MACX;AACA,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,IAAI,IAAI;AAE5B,UAAI,EAAE,MAAM,OAAO,OAAO,aACtB,EAAE,MAAM,OAAO,OAAO,WAAY;AACpC,eAAO,OAAO;AAAA,MAChB;AAEA,YAAM,UAAU,MAAM,QAAQ,EAAE;AAChC,UAAG,YAAY,MAAM,QAAQ,EAAE,GAAG;AAChC,eAAO;AAAA,MACT;AACA,UAAG,SAAS;AACV,YAAG,GAAG,WAAW,GAAG,QAAQ;AAC1B,iBAAO;AAAA,QACT;AACA,iBAAQ,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,GAAG;AACjC,cAAG,CAAC,aAAa,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG;AAC9B,mBAAO;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,OAAO,KAAK,EAAE;AAC1B,YAAM,MAAM,OAAO,KAAK,EAAE;AAC1B,UAAG,IAAI,WAAW,IAAI,QAAQ;AAC5B,eAAO;AAAA,MACT;AACA,iBAAU,MAAM,IAAI;AAClB,YAAI,KAAK,GAAG,EAAE;AACd,YAAI,KAAK,GAAG,EAAE;AAEd,YAAG,OAAO,cAAc;AACtB,cAAG,MAAM,QAAQ,EAAE,KAAK,MAAM,QAAQ,EAAE,GAAG;AACzC,iBAAK,GAAG,MAAM,EAAE,KAAK;AACrB,iBAAK,GAAG,MAAM,EAAE,KAAK;AAAA,UACvB;AAAA,QACF;AACA,YAAG,CAAC,aAAa,IAAI,EAAE,GAAG;AACxB,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACtkDA;AAAA;AAAA;AAKA,QAAM,cAAc;AAEpB,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA,MACf,UAAU;AAAA,MACV,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,WAAW;AAAA,IACb,IAAI;AAEJ,QAAM;AAAA,MACJ,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,SAAS;AAAA,MACT,gBAAgB;AAAA,IAClB,IAAI;AAEJ,QAAM;AAAA,MACJ,YAAY;AAAA,IACd,IAAI;AAEJ,QAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV,SAAS;AAAA,MACT,WAAW;AAAA,MACX,mBAAmB;AAAA,IACrB,IAAI;AAEJ,QAAM;AAAA,MACJ,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAoBjB,QAAI,SAAS,OAAO;AAAA,MAClB;AAAA,MACA,iBAAiB;AAAA,MACjB;AAAA,MACA,UAAU,CAAC;AAAA,MACX,aAAa;AAAA,MACb,cAAc;AAAA,MACd,oBAAoB;AAAA,IACtB,MAAM;AAEJ,UAAG,YAAY,QAAQ,YAAY,QAAW;AAC5C,eAAO;AAAA,MACT;AAGA,UAAG,mBAAmB,YAAY;AAChC,kBAAU,OAAO,OAAO,CAAC,GAAG,SAAS,EAAC,SAAS,MAAK,CAAC;AAAA,MACvD;AAEA,UAAG,CAAC,SAAS,OAAO,KAAK,CAAC,UAAU,OAAO,GAAG;AAE5C,YAAG,CAAC,eAAe,mBAAmB,QACpC;AAAA,UAAW;AAAA,UAAW;AAAA,UAAgB,EAAC,OAAO,KAAI;AAAA,UAChD;AAAA,QAAO,MAAM,WAAW;AAE1B,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBACT,SAAS;AAAA,kBACP,OAAO;AAAA;AAAA;AAAA,gBAGT;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA,iBAAO;AAAA,QACT;AAGA,eAAO,aAAa,EAAC,WAAW,gBAAgB,OAAO,SAAS,QAAO,CAAC;AAAA,MAC1E;AAGA,UAAG,SAAS,OAAO,GAAG;AACpB,YAAIC,QAAO,CAAC;AACZ,cAAM,YAAY;AAAA,UAChB;AAAA,UAAW;AAAA,UAAgB;AAAA,QAAY,KAAK,CAAC;AAC/C,qBAAa,cAAc,UAAU,SAAS,OAAO;AACrD,iBAAQ,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AAEtC,cAAI,IAAI,MAAM,IAAI,OAAO;AAAA,YACvB;AAAA,YACA;AAAA,YACA,SAAS,QAAQ,CAAC;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AACD,cAAG,cAAc,SAAS,CAAC,GAAG;AAC5B,gBAAI,EAAC,SAAS,EAAC;AAAA,UACjB;AAEA,cAAG,MAAM,MAAM;AAUb;AAAA,UACF;AAEA,cAAG,SAAS,CAAC,GAAG;AACd,YAAAA,QAAOA,MAAK,OAAO,CAAC;AAAA,UACtB,OAAO;AACL,YAAAA,MAAK,KAAK,CAAC;AAAA,UACb;AAAA,QACF;AACA,eAAOA;AAAA,MACT;AAKA,YAAM,yBAAyB;AAAA,QAC7B;AAAA,QAAW;AAAA,QAAgB,EAAC,OAAO,KAAI;AAAA,QAAG;AAAA,MAAO;AAGnD,YAAM,oBACJ,iBAAiB,WAAW,gBAAgB,UAAU;AAMxD,0BAAoB,sBACjB,UAAU,kBAAkB,YAAY;AAC3C,UAAI,OAAO,OAAO,KAAK,OAAO,EAAE,KAAK;AACrC,UAAI,aAAa,CAAC;AAClB,UAAG,cAAc,qBAAqB,KAAK,UAAU,KACnD,CAAC,KAAK,SAAS,UAAU,GAAG;AAC5B,mBAAU,OAAO,MAAM;AACrB,gBAAM,mBAAmB;AAAA,YACvB;AAAA,YAAmB;AAAA,YAAK,EAAC,OAAO,KAAI;AAAA,YAAG;AAAA,UAAO;AAChD,cAAG,qBAAqB,UAAU;AAEhC,yBAAa;AACb,wBAAY;AACZ;AAAA,UACF;AACA,cAAG,qBAAqB,SAAS,KAAK,WAAW,GAAG;AAElD,yBAAa;AACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,UAAG,YAAY;AAEb,oBAAY,UAAU,wBAAwB;AAAA,MAChD;AAGA,UAAG,CAAC,aAAa,iBAAiB,GAAG;AACnC,oBAAY,MAAM,gBAAgB;AAAA,UAChC;AAAA,UACA,UAAU;AAAA,UACV,WAAW;AAAA,UACX,mBAAmB;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,MACH;AAGA,UAAG,cAAc,SAAS;AACxB,oBAAY,MAAM;AAAA,UAChB,EAAC,WAAW,UAAU,QAAQ,UAAU,GAAG,QAAO;AAAA,QAAC;AAAA,MACvD;AAGA,0BAAoB;AAGpB,UAAI,UAAU;AAGd,iBAAU,OAAO,MAAM;AACrB,cAAM,mBAAmB,WAAW,WAAW,KAAK,EAAC,OAAO,KAAI,GAAG,OAAO;AAC1E,YAAG,qBAAqB,SAAS;AAG/B,oBAAU,WAAW;AACrB,gBAAM,QAAQ,QAAQ,GAAG;AACzB,gBAAM,QACJ,MAAM,QAAQ,KAAK,IAChB,MAAM,SAAS,IAAI,MAAM,MAAM,EAAE,KAAK,IAAI,QAAS,CAAC,KAAK;AAC9D,qBAAU,QAAQ,OAAO;AACvB,kBAAM,MAAM,iBAAiB,mBAAmB,MAAM,UAAU;AAChE,gBAAG,CAAC,aAAa,GAAG,GAAG;AACrB,0BAAY,MAAM,gBAAgB;AAAA,gBAChC;AAAA,gBACA,UAAU;AAAA,gBACV;AAAA,gBACA,WAAW;AAAA,cACb,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGA,UAAI,OAAO,CAAC;AACZ,YAAM,cAAc;AAAA,QAClB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA,gBAAgB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAGD,aAAO,OAAO,KAAK,IAAI;AACvB,UAAI,QAAQ,KAAK;AAEjB,UAAG,YAAY,MAAM;AAEnB,YAAG,WAAW,SAAS,eAAe,QAAQ,gBAAgB,OAAO;AACnE,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAsB,EAAC,MAAM,wBAAwB,SAAS,KAAI;AAAA,UAAC;AAAA,QACvE;AACA,YAAI,aAAa,QAAQ;AACzB,YAAG,WAAW,MAAM;AAClB,wBAAc;AAAA,QAChB;AACA,YAAG,YAAY,MAAM;AACnB,wBAAc;AAAA,QAChB;AACA,YAAG,eAAe,MAAM;AACtB,wBAAc;AAAA,QAChB;AACA,YAAG,gBAAgB,MAAM;AACvB,wBAAc;AAAA,QAChB;AACA,YAAG,eAAe,GAAG;AACnB,gBAAM,IAAI;AAAA,YACR;AAAA,YAGA;AAAA,YAAsB,EAAC,MAAM,wBAAwB,SAAS,KAAI;AAAA,UAAC;AAAA,QACvE;AACA,cAAM,SAAS,KAAK,QAAQ,MAAM,OAAO,CAAC,IAAI,SAAS,KAAK,QAAQ,CAAC;AACrE,cAAM,QAAQ,WAAW,MAAM,OAAO;AAGtC,YAAG,gBAAgB,WAAW,GAAG,KAAK,MAAM,SAAS,OAAO,KAC1D,MAAM,WAAW,GAAG;AAAA,QAEtB,WAAU,OAAO,WAAW,GAAG;AAE7B,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBACT,SAAS;AAAA,kBACP,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA,iBAAO;AAAA,QACT,WAAU,CAAC,OAAO,MAAM,OAAM,UAAU,CAAC,KAAK,eAAe,CAAC,CAAE,KAC9D,eAAe,MAAM;AAErB,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,MAAM,iCAAiC,SAAS,KAAI;AAAA,UAAC;AAAA,QAC1D,WAAU,CAAC,MAAM,MAAM,OACpB,eAAe,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,IAAI,MAAM,MAC5D,eAAe,CAAC,CAAE,GAAG;AACrB,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAsB,EAAC,MAAM,uBAAuB,SAAS,KAAI;AAAA,UAAC;AAAA,QACtE;AAAA,MACF,WAAU,WAAW,QAAQ,CAAC,SAAS,KAAK,OAAO,CAAC,GAAG;AAErD,aAAK,OAAO,IAAI,CAAC,KAAK,OAAO,CAAC;AAAA,MAChC,WAAU,UAAU,QAAQ,WAAW,MAAM;AAE3C,YAAG,QAAQ,KAAK,EAAE,UAAU,KAAK,YAAY,OAAO;AAClD,gBAAM,IAAI;AAAA,YACR;AAAA,YAEa;AAAA,YACb,EAAC,MAAM,8BAA8B,SAAS,KAAI;AAAA,UAAC;AAAA,QACvD;AAEA,YAAG,UAAU,MAAM;AACjB,iBAAO,KAAK,MAAM;AAClB,iBAAO,OAAO,KAAK,IAAI;AACvB,kBAAQ,KAAK;AAAA,QACf;AAAA,MACF,WAAU,UAAU,KAAK,eAAe,MAAM;AAG5C,YAAG,QAAQ,cAAc;AACvB,uBAAa;AAAA,YACX,OAAO;AAAA,cACL,MAAM,CAAC,aAAa;AAAA,cACpB,MAAM;AAAA,cACN,OAAO;AAAA,cACP,SAAS;AAAA,cACT,SAAS;AAAA,gBACP,OAAO;AAAA,cACT;AAAA,YACF;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAGA,UAAG,UAAU,IAAI,KACf,CAAC,QAAQ,yBAAyB,CAAC,eAClC,mBAAmB,QAClB,2BAA2B,aAC1B,iBAAiB,WAAW,gBAAgB,YAAY,KAAK,CAAC,GAC5D,SAAS,QAAQ,IACnB;AAEH,eAAO,kBAAkB,EAAC,OAAO,MAAM,OAAO,QAAO,CAAC;AAAA,MACxD;AAEA,aAAO;AAAA,IACT;AAWA,aAAS,kBAAkB;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AACD,UAAG,UAAU,KAAK,YAAY,SAAS,WAAW,SAC/C,UAAU,KAAK,SAAS,OAAQ;AAEjC,YAAG,QAAQ,cAAc;AAEvB,cAAI;AACJ,cAAI;AACJ,cAAG,UAAU,GAAG;AACd,mBAAO;AACP,sBAAU;AAAA,UACZ,WAAU,YAAY,OAAO;AAC3B,mBAAO;AACP,sBAAU;AAAA,UACZ,WAAU,WAAW,OAAO;AAC1B,mBAAO;AACP,sBAAU;AAAA,UACZ,WAAU,UAAU,KAAK,SAAS,OAAO;AACvC,mBAAO;AACP,sBAAU;AAAA,UACZ;AACA,uBAAa;AAAA,YACX,OAAO;AAAA,cACL,MAAM,CAAC,aAAa;AAAA,cACpB;AAAA,cACA,OAAO;AAAA,cACP;AAAA,cACA,SAAS;AAAA,gBACP;AAAA,cACF;AAAA,YACF;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAeA,mBAAe,cAAc;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU,CAAC;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF,GAAG;AACD,YAAM,OAAO,OAAO,KAAK,OAAO,EAAE,KAAK;AACvC,YAAM,QAAQ,CAAC;AACf,UAAI;AAGJ,YAAM,aAAa,QAAQ,OAAO,KAChC;AAAA,QAAW;AAAA,QACR,SAAS,QAAQ,OAAO,CAAC,IAAI,QAAQ,OAAO,EAAE,CAAC,IAAI,QAAQ,OAAO;AAAA,QACnE,EAAC,OAAO,KAAI;AAAA,QAAG;AAAA,UACb,GAAG;AAAA,UACH,eAAe;AAAA,QACjB;AAAA,MAAC,MAAM;AAEX,iBAAU,OAAO,MAAM;AACrB,YAAI,QAAQ,QAAQ,GAAG;AACvB,YAAI;AAGJ,YAAG,QAAQ,YAAY;AACrB;AAAA,QACF;AAGA,cAAM,mBAAmB,WAAW,WAAW,KAAK,EAAC,OAAO,KAAI,GAAG,OAAO;AAG1E,YAAG,qBAAqB,QACtB,EAAE,eAAe,gBAAgB,KAAK,WAAW,gBAAgB,IAAI;AACrE,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBAET,SAAS;AAAA,kBACP,UAAU;AAAA,kBACV;AAAA,gBACF;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA;AAAA,QACF;AAEA,YAAG,WAAW,gBAAgB,GAAG;AAC/B,cAAG,2BAA2B,YAAY;AACxC,kBAAM,IAAI;AAAA,cACR;AAAA,cACa;AAAA,cACb,EAAC,MAAM,gCAAgC,MAAK;AAAA,YAAC;AAAA,UACjD;AACA,cAAG,oBAAoB,kBACpB,qBAAqB,eACrB,qBAAqB,SAAS;AAC/B,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,sBAAsB,SAAS,iBAAgB;AAAA,YAAC;AAAA,UAC3D;AAAA,QACF;AAGA,YAAG,qBAAqB,OAAO;AAC7B,cAAG,CAAC,UAAU,KAAK,GAAG;AACpB,gBAAG,CAAC,QAAQ,SAAS;AACnB,oBAAM,IAAI;AAAA,gBACR;AAAA,gBACA;AAAA,gBAAsB,EAAC,MAAM,qBAAqB,MAAK;AAAA,cAAC;AAAA,YAC5D;AACA,gBAAG,UAAU,KAAK,GAAG;AAEnB,kBAAG,CAAC,eAAe,KAAK,GAAG;AACzB,sBAAM,IAAI;AAAA,kBACR;AAAA,kBAEA;AAAA,kBAAsB,EAAC,MAAM,qBAAqB,MAAK;AAAA,gBAAC;AAAA,cAC5D;AAAA,YACF,WAAU,SAAS,KAAK,GAAG;AACzB,kBAAG,CAAC,MAAM,MAAM,OAAK,UAAU,CAAC,CAAC,GAAG;AAClC,sBAAM,IAAI;AAAA,kBACR;AAAA,kBAEA;AAAA,kBAAsB,EAAC,MAAM,qBAAqB,MAAK;AAAA,gBAAC;AAAA,cAC5D;AAAA,YACF,OAAO;AACL,oBAAM,IAAI;AAAA,gBACR;AAAA,gBAEA;AAAA,gBAAsB,EAAC,MAAM,qBAAqB,MAAK;AAAA,cAAC;AAAA,YAC5D;AAAA,UACF;AAEA;AAAA,YACE;AAAA,YAAgB;AAAA,YAChB,SAAS,KAAK,EAAE,IAAI,OAAK;AACvB,kBAAG,UAAU,CAAC,GAAG;AACf,sBAAM,KAAK,WAAW,WAAW,GAAG,EAAC,MAAM,KAAI,GAAG,OAAO;AACzD,oBAAG,QAAQ,cAAc;AACvB,sBAAG,OAAO,MAAM;AAGd,wBAAG,MAAM,MAAM;AACb,mCAAa;AAAA,wBACX,OAAO;AAAA,0BACL,MAAM,CAAC,aAAa;AAAA,0BACpB,MAAM;AAAA,0BACN,OAAO;AAAA,0BACP,SAAS;AAAA,0BACT,SAAS;AAAA,4BACP,IAAI;AAAA,0BACN;AAAA,wBACF;AAAA,wBACA;AAAA,sBACF,CAAC;AAAA,oBACH,OAAO;AAEL,mCAAa;AAAA,wBACX,OAAO;AAAA,0BACL,MAAM,CAAC,aAAa;AAAA,0BACpB,MAAM;AAAA,0BACN,OAAO;AAAA,0BACP,SAAS;AAAA,0BACT,SAAS;AAAA,4BACP,IAAI;AAAA,0BACN;AAAA,wBACF;AAAA,wBACA;AAAA,sBACF,CAAC;AAAA,oBACH;AAAA,kBACF,WAAU,CAAC,eAAe,EAAE,GAAG;AAC7B,iCAAa;AAAA,sBACX,OAAO;AAAA,wBACL,MAAM,CAAC,aAAa;AAAA,wBACpB,MAAM;AAAA,wBACN,OAAO;AAAA,wBACP,SAAS;AAAA,wBACT,SAAS;AAAA,0BACP,IAAI;AAAA,0BACJ,YAAY;AAAA,wBACd;AAAA,sBACF;AAAA,sBACA;AAAA,oBACF,CAAC;AAAA,kBACH;AAAA,gBACF;AACA,uBAAO;AAAA,cACT;AACA,qBAAO;AAAA,YACT,CAAC;AAAA,YACD,EAAC,iBAAiB,QAAQ,QAAO;AAAA,UAAC;AACpC;AAAA,QACF;AAEA,YAAG,qBAAqB,SAAS;AAG/B,cAAG,UAAU,KAAK,GAAG;AACnB,oBAAQ,OAAO,YAAY,OAAO,QAAQ,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM;AAAA,cAC/D,WAAW,mBAAmB,GAAG,EAAC,OAAO,KAAI,CAAC;AAAA,cAC9C,SAAS,CAAC,EAAE;AAAA,gBAAI,QACd;AAAA,kBAAW;AAAA,kBAAmB;AAAA,kBAAI,EAAC,MAAM,MAAM,OAAO,KAAI;AAAA,kBACxD,EAAC,GAAG,SAAS,eAAe,KAAI;AAAA,gBAAC;AAAA,cACrC;AAAA,YACF,CAAC,CAAC;AAAA,UACJ;AACA,6BAAmB,OAAO,QAAQ,OAAO;AACzC;AAAA,YACE;AAAA,YAAgB;AAAA,YAChB,SAAS,KAAK,EAAE,IAAI,OAAK;AACvB,kBAAG,UAAU,CAAC,GAAG;AACf,sBAAM,KAAK;AAAA,kBAAW;AAAA,kBAAmB;AAAA,kBACvC,EAAC,MAAM,MAAM,OAAO,KAAI;AAAA,kBACxB,EAAC,GAAG,SAAS,eAAe,KAAI;AAAA,gBAAC;AACnC,oBAAG,OAAO,WAAW,CAAC,eAAe,EAAE,GAAG;AACxC,sBAAG,QAAQ,cAAc;AACvB,iCAAa;AAAA,sBACX,OAAO;AAAA,wBACL,MAAM,CAAC,aAAa;AAAA,wBACpB,MAAM;AAAA,wBACN,OAAO;AAAA,wBACP,SAAS;AAAA,wBACT,SAAS;AAAA,0BACP,MAAM;AAAA,wBACR;AAAA,sBACF;AAAA,sBACA;AAAA,oBACF,CAAC;AAAA,kBACH;AAAA,gBACF;AACA,uBAAO;AAAA,cACT;AACA,qBAAO;AAAA,YACT,CAAC;AAAA,YACD,EAAC,iBAAiB,CAAC,CAAC,QAAQ,QAAO;AAAA,UAAC;AACtC;AAAA,QACF;AAKA,YAAG,qBAAqB,eAAe,gBAAgB,WAAW,GAAG,GAAG;AACtE,gBAAM,iBAAiB,SAAS,MAAM,IAAI,OAAO;AAAA,YAC/C;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT;AAAA,UACF,CAAC,CAAC;AAGF,cAAG,CAAC,eAAe,MAAM,OAAK,WAAW,CAAC,CAAC,GAAG;AAC5C,kBAAM,IAAI;AAAA,cACR;AAAA,cAEA;AAAA,cAAsB,EAAC,MAAM,2BAA2B,MAAK;AAAA,YAAC;AAAA,UAClE;AAEA;AAAA,YACE;AAAA,YAAgB;AAAA,YAAa;AAAA,YAAgB,EAAC,iBAAiB,KAAI;AAAA,UAAC;AACtE;AAAA,QACF;AAGA,YAAG,qBAAqB,YACtB,EAAE,UAAU,KAAK,KAAK,SAAS,KAAK,IAAI;AACxC,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YAAsB,EAAC,MAAM,wBAAwB,MAAK;AAAA,UAAC;AAAA,QAC/D;AAEA,YAAG,qBAAqB,UAAU;AAGhC,4BAAkB;AAClB,cAAG,cAAc,gBAAgB,WAAW,GAAG,GAAG;AAEhD,2BAAe,QAAQ,IAAI;AAAA,UAC7B,OAAO;AACL;AAAA,cACE;AAAA,cAAgB;AAAA,cAAU;AAAA,cAAO,EAAC,iBAAiB,QAAQ,QAAO;AAAA,YAAC;AAAA,UACvE;AACA;AAAA,QACF;AAIA,YAAG,qBAAqB,aAAa;AACnC,cAAG,UAAU,MAAM;AAEjB;AAAA,UACF;AACA,cAAG,CAAC,UAAU,KAAK,KAAK,CAAC,QAAQ,SAAS;AACxC,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,kCAAkC,MAAK;AAAA,YAAC;AAAA,UACnD;AAEA,kBAAQ,SAAS,KAAK,EAAE,IAAI,OAAK,UAAU,CAAC,IAAI,EAAE,YAAY,IAAI,CAAC;AAGnE,qBAAU,YAAY,OAAO;AAC3B,gBAAG,UAAU,QAAQ,KAAK,CAAC,SAAS,MAAM,WAAW,GAAG;AACtD,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP;AAAA,oBACF;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAAA,UACF;AAEA;AAAA,YACE;AAAA,YAAgB;AAAA,YAAa;AAAA,YAAO,EAAC,iBAAiB,QAAQ,QAAO;AAAA,UAAC;AACxE;AAAA,QACF;AAGA,YAAG,qBAAqB,cAAc;AACpC,cAAG,CAAC,UAAU,KAAK,KAAK,CAAC,QAAQ,SAAS;AACxC,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,0BAA0B,MAAK;AAAA,YAAC;AAAA,UAC3C;AAEA,kBAAQ,SAAS,KAAK;AAGtB,qBAAU,OAAO,OAAO;AACtB,gBAAG,UAAU,GAAG,KAAK,QAAQ,SAAS,QAAQ,OAAO;AACnD,oBAAM,IAAI;AAAA,gBACR;AAAA,gBACA;AAAA,gBACA,EAAC,MAAM,0BAA0B,MAAK;AAAA,cAAC;AAAA,YAC3C;AAAA,UACF;AAEA;AAAA,YACE;AAAA,YAAgB;AAAA,YAAc;AAAA,YAC9B,EAAC,iBAAiB,QAAQ,QAAO;AAAA,UAAC;AACpC;AAAA,QACF;AAGA,YAAG,qBAAqB,UAAU;AAChC,cAAG,CAAC,UAAU,KAAK,GAAG;AACpB,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,wBAAwB,MAAK;AAAA,YAAC;AAAA,UACzC;AACA,oBAAU,gBAAgB,UAAU,KAAK;AACzC;AAAA,QACF;AAGA,YAAG,qBAAqB,YAAY;AAClC,cAAG,CAAC,UAAU,KAAK,GAAG;AACpB,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cAAsB,EAAC,MAAM,0BAA0B,MAAK;AAAA,YAAC;AAAA,UACjE;AAEA,0BAAgB,MAAM,IAAI,OAAO;AAAA,YAC/B;AAAA,YACA,gBAAgB;AAAA,YAChB,SAAS;AAAA,YACT;AAAA,UACF,CAAC;AAED,cAAG,cAAc,eAAe;AAC9B,uBAAU,YAAY,cAAc,UAAU,GAAG;AAC/C;AAAA,gBACE;AAAA,gBAAgB;AAAA,gBAAU,cAAc,UAAU,EAAE,QAAQ;AAAA,gBAC5D,EAAC,iBAAiB,KAAI;AAAA,cAAC;AAAA,YAC3B;AAAA,UACF;AAIA,cAAI,aAAa,eAAe,UAAU,KAAK;AAC/C,qBAAU,YAAY,eAAe;AACnC,gBAAG,aAAa,YAAY;AAC1B;AAAA,YACF;AACA,gBAAG,eAAe,MAAM;AACtB,2BAAa,eAAe,UAAU,IAAI,CAAC;AAAA,YAC7C;AACA,sBAAU,YAAY,UAAU,CAAC,GAAG,EAAC,iBAAiB,KAAI,CAAC;AAC3D,kBAAM,QAAQ,cAAc,QAAQ;AACpC,qBAAQ,KAAK,GAAG,KAAK,MAAM,QAAQ,EAAE,IAAI;AACvC,oBAAM,OAAO,MAAM,EAAE;AACrB,kBAAG,SAAS,IAAI,KAAK,QAAQ,IAAI,GAAG;AAClC,sBAAM,IAAI;AAAA,kBACR;AAAA,kBACuB;AAAA,kBACvB,EAAC,MAAM,kCAAkC,OAAO,cAAa;AAAA,gBAAC;AAAA,cAClE;AACA,wBAAU,YAAY,UAAU,MAAM,EAAC,iBAAiB,KAAI,CAAC;AAAA,YAC/D;AAAA,UACF;AAEA;AAAA,QACF;AAGA,YAAG,qBAAqB,SAAS;AAC/B,gBAAM,KAAK,GAAG;AACd;AAAA,QACF;AAGA,YAAI,UAAU;AACd,cAAM,MAAM,iBAAiB,WAAW,KAAK,UAAU;AACvD,YAAG,CAAC,aAAa,GAAG,GAAG;AACrB,oBAAU,MAAM,gBAAgB;AAAA,YAC9B;AAAA,YACA,UAAU;AAAA,YACV,WAAW;AAAA,YACX,mBAAmB;AAAA,YACnB;AAAA,UACF,CAAC;AAAA,QACH;AAEA,cAAM,YAAY,iBAAiB,WAAW,KAAK,YAAY,KAAK,CAAC;AAErE,YAAG,UAAU,SAAS,WAAW,KAAK,UAAU,KAAK,GAAG;AACtD,gBAAM,YAAY,iBAAiB,SAAS,KAAK,YAAY;AAE7D,0BAAgB,mBAAmB,SAAS,OAAO,WAAW,OAAO;AAAA,QACvE,WAAU,UAAU,SAAS,QAAQ,KAAK,UAAU,KAAK,GAAG;AAE1D,gBAAM,UAAU,UAAU,SAAS,QAAQ;AAC3C,gBAAM,WAAW,iBAAiB,SAAS,KAAK,QAAQ,KAAK;AAC7D,gBAAM,gBAAgB,aAAa,YACjC,WAAW,WAAW,UAAU,EAAC,OAAO,KAAI,GAAG,OAAO;AAExD,0BAAgB,MAAM,gBAAgB;AAAA,YACpC,WAAW;AAAA,YACX;AAAA,YACA,gBAAgB;AAAA,YAChB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH,WAAU,UAAU,SAAS,KAAK,KAAK,UAAU,KAAK,GAAG;AAEvD,gBAAM,UAAU,UAAU,SAAS,QAAQ;AAC3C,0BAAgB,MAAM,gBAAgB;AAAA,YACpC,WAAW;AAAA,YACX;AAAA,YACA,gBAAgB;AAAA,YAChB;AAAA,YACA;AAAA,YACA,UAAU;AAAA,UACZ,CAAC;AAAA,QACH,WAAU,UAAU,SAAS,OAAO,KAAK,UAAU,KAAK,GAAG;AAEzD,0BAAgB,MAAM,gBAAgB;AAAA;AAAA,YAEpC,WAAW,QAAQ,wBAAwB;AAAA,YAC3C;AAAA,YACA,gBAAgB;AAAA,YAChB;AAAA,YACA,SAAS;AAAA,YACT,UAAU;AAAA,UACZ,CAAC;AAAA,QACH,OAAO;AAEL,gBAAM,SAAS,qBAAqB;AACpC,cAAG,UAAU,qBAAqB,QAAQ;AACxC,gBAAI,qBAAqB;AACzB,gBAAG,UAAU,2BAA2B,UAAU;AAChD,mCAAqB;AAAA,YACvB;AACA,4BAAgB,MAAM,IAAI,OAAO;AAAA,cAC/B,WAAW;AAAA,cACX,gBAAgB;AAAA,cAChB,SAAS;AAAA,cACT;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,UACH,WACE,iBAAiB,WAAW,KAAK,OAAO,MAAM,SAAS;AACvD,4BAAgB;AAAA,cACd,SAAS;AAAA,cACT,UAAU;AAAA,YACZ;AAAA,UACF,OAAO;AAEL,4BAAgB,MAAM,IAAI,OAAO;AAAA,cAC/B,WAAW;AAAA,cACX,gBAAgB;AAAA,cAChB,SAAS;AAAA,cACT;AAAA,cACA,YAAY;AAAA,YACd,CAAC;AAAA,UACH;AAAA,QACF;AAGA,YAAG,kBAAkB,QAAQ,qBAAqB,UAAU;AAK1D;AAAA,QACF;AAGA,YAAG,qBAAqB,WAAW,CAAC,QAAQ,aAAa,KACvD,UAAU,SAAS,OAAO,GAAG;AAE7B,0BAAgB,EAAC,SAAS,SAAS,aAAa,EAAC;AAAA,QACnD;AAKA,YAAG,UAAU,SAAS,QAAQ,KAC5B,CAAC,UAAU,KAAK,CAAAC,SAAOA,SAAQ,SAASA,SAAQ,QAAQ,GAAG;AAE3D,0BAAgB,SAAS,aAAa;AACtC,cAAG,CAAC,QAAQ,SAAS;AAEnB,4BAAgB,cAAc,OAAO,OAAK;AACxC,oBAAM,QAAQ,OAAO,KAAK,CAAC,EAAE;AAC7B,qBAAO,kBAAkB,EAAC,OAAO,GAAG,OAAO,QAAO,CAAC,MAAM;AAAA,YAC3D,CAAC;AAAA,UACH;AACA,cAAG,cAAc,WAAW,GAAG;AAE7B;AAAA,UACF;AAEA,0BAAgB,cAAc,IAAI,QAAM,EAAC,UAAU,SAAS,CAAC,EAAC,EAAE;AAAA,QAClE;AAIA,YAAG,QAAQ,SAAS,IAAI,GAAG,KAAK,QAAQ,SAAS,IAAI,GAAG,EAAE,SAAS;AACjE,gBAAM,aACJ,eAAe,UAAU,IAAI,eAAe,UAAU,KAAK,CAAC;AAC9D,0BAAgB,SAAS,aAAa;AACtC,mBAAQ,KAAK,GAAG,KAAK,cAAc,QAAQ,EAAE,IAAI;AAC/C,kBAAM,OAAO,cAAc,EAAE;AAC7B,gBAAG,SAAS,IAAI,KAAK,QAAQ,IAAI,GAAG;AAClC,oBAAM,IAAI;AAAA,gBACR;AAAA,gBACuB;AAAA,gBACvB,EAAC,MAAM,kCAAkC,OAAO,cAAa;AAAA,cAAC;AAAA,YAClE;AACA,sBAAU,YAAY,kBAAkB,MAAM,EAAC,iBAAiB,KAAI,CAAC;AAAA,UACvE;AACA;AAAA,QACF;AAIA,kBAAU,gBAAgB,kBAAkB,eAAe;AAAA,UACzD,iBAAiB;AAAA,QACnB,CAAC;AAAA,MACH;AAIA,UAAG,YAAY,gBAAgB;AAC7B,YAAG,eAAe,OAAO,MAAM,WAAW,gBAAgB,WAAW,GAAG,GAAG;AAAA,QAG3E,YAAW,UAAU,eAAe,KAAK,SAAS,eAAe,MAC/D,CAAC,QAAQ,SAAS;AAClB,gBAAM,IAAI;AAAA,YACR;AAAA,YAEA;AAAA,YACA,EAAC,MAAM,8BAA8B,OAAO,gBAAe;AAAA,UAAC;AAAA,QAChE;AAAA,MACF;AAGA,iBAAU,OAAO,OAAO;AACtB,cAAM,eAAe,SAAS,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC;AAC1E,mBAAU,MAAM,cAAc;AAC5B,cAAG,CAAC,UAAU,EAAE,KAAK,OAAO,KAAK,EAAE,EAAE,KAAK,OACxC,WAAW,WAAW,GAAG,EAAC,OAAO,KAAI,GAAG,OAAO,MAAM,QAAQ,GAAG;AAChE,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,uBAAuB,OAAO,GAAE;AAAA,YAAC;AAAA,UAC5C;AACA,gBAAM,cAAc;AAAA,YAClB;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS;AAAA,YACT;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AAAA,MACF;AAAA,IACF;AAaA,aAAS,aAAa,EAAC,WAAW,gBAAgB,OAAO,QAAO,GAAG;AAEjE,UAAG,UAAU,QAAQ,UAAU,QAAW;AACxC,eAAO;AAAA,MACT;AAGA,YAAM,mBAAmB;AAAA,QACvB;AAAA,QAAW;AAAA,QAAgB,EAAC,OAAO,KAAI;AAAA,QAAG;AAAA,MAAO;AACnD,UAAG,qBAAqB,OAAO;AAC7B,eAAO,WAAW,WAAW,OAAO,EAAC,MAAM,KAAI,GAAG,OAAO;AAAA,MAC3D,WAAU,qBAAqB,SAAS;AACtC,eAAO;AAAA,UAAW;AAAA,UAAW;AAAA,UAAO,EAAC,OAAO,MAAM,MAAM,KAAI;AAAA,UAC1D,EAAC,GAAG,SAAS,eAAe,KAAI;AAAA,QAAC;AAAA,MACrC;AAGA,YAAM,OAAO,iBAAiB,WAAW,gBAAgB,OAAO;AAGhE,WAAI,SAAS,SAAS,qBAAqB,aAAa,UAAU,KAAK,GAAG;AACxE,cAAM,gBAAgB,WAAW,WAAW,OAAO,EAAC,MAAM,KAAI,GAAG,OAAO;AAExE,YAAG,kBAAkB,QAAQ,MAAM,MAAM,aAAa,GAAG;AACvD,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBACT,SAAS;AAAA,kBACP,IAAI;AAAA,gBACN;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AACA,eAAO,EAAC,OAAO,cAAa;AAAA,MAC9B;AAEA,UAAG,SAAS,YAAY,UAAU,KAAK,GAAG;AACxC,eAAO;AAAA,UACL,OAAO,WAAW,WAAW,OAAO,EAAC,OAAO,MAAM,MAAM,KAAI,GAAG,OAAO;AAAA,QACxE;AAAA,MACF;AAGA,UAAG,WAAW,gBAAgB,GAAG;AAC/B,eAAO;AAAA,MACT;AAEA,YAAM,OAAO,CAAC;AAEd,UAAG,QAAQ,CAAC,CAAC,OAAO,UAAU,OAAO,EAAE,SAAS,IAAI,GAAG;AAErD,aAAK,OAAO,IAAI;AAAA,MAClB,WAAU,UAAU,KAAK,GAAG;AAE1B,cAAM,WAAW,iBAAiB,WAAW,gBAAgB,WAAW;AACxE,YAAG,aAAa,MAAM;AACpB,eAAK,WAAW,IAAI;AAAA,QACtB;AACA,cAAM,YAAY,iBAAiB,WAAW,gBAAgB,YAAY;AAC1E,YAAG,cAAc,MAAM;AACrB,eAAK,YAAY,IAAI;AAAA,QACvB;AAAA,MACF;AAEA,UAAG,CAAC,CAAC,WAAW,UAAU,QAAQ,EAAE,SAAS,OAAO,KAAK,GAAG;AAC1D,gBAAQ,MAAM,SAAS;AAAA,MACzB;AACA,WAAK,QAAQ,IAAI;AAEjB,aAAO;AAAA,IACT;AAYA,aAAS,mBAAmB,WAAW,aAAa,WAAW,SAAS;AACtE,YAAM,OAAO,CAAC;AACd,YAAM,OAAO,OAAO,KAAK,WAAW,EAAE,KAAK;AAC3C,iBAAU,OAAO,MAAM;AACrB,cAAM,cAAc,WAAW,WAAW,KAAK,EAAC,OAAO,KAAI,GAAG,OAAO;AACrE,YAAI,MAAM,YAAY,GAAG;AACzB,YAAG,CAAC,SAAS,GAAG,GAAG;AACjB,gBAAM,CAAC,GAAG;AAAA,QACZ;AACA,mBAAU,QAAQ,KAAK;AACrB,cAAG,SAAS,MAAM;AAEhB;AAAA,UACF;AACA,cAAG,CAAC,UAAU,IAAI,GAAG;AACnB,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,8BAA8B,YAAW;AAAA,YAAC;AAAA,UACrD;AACA,gBAAMC,OAAM,EAAC,UAAU,KAAI;AAC3B,cAAG,gBAAgB,SAAS;AAC1B,gBAAG,CAAC,IAAI,MAAM,WAAW,GAAG;AAC1B,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP,UAAU;AAAA,oBACZ;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AACA,YAAAA,KAAI,WAAW,IAAI,IAAI,YAAY;AAAA,UACrC;AACA,cAAG,WAAW;AACZ,YAAAA,KAAI,YAAY,IAAI;AAAA,UACtB;AACA,eAAK,KAAKA,IAAG;AAAA,QACf;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,mBAAe,gBAAgB;AAAA,MAC7B;AAAA,MAAW;AAAA,MAAS;AAAA,MAAgB;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,IAChE,GAAG;AACD,YAAM,OAAO,CAAC;AACd,YAAM,OAAO,OAAO,KAAK,KAAK,EAAE,KAAK;AACrC,YAAM,cAAc,aAAa;AACjC,eAAQ,OAAO,MAAM;AAEnB,YAAG,aAAa;AACd,gBAAM,MAAM,iBAAiB,WAAW,KAAK,UAAU;AACvD,cAAG,CAAC,aAAa,GAAG,GAAG;AACrB,wBAAY,MAAM,gBAAgB;AAAA,cAChC;AAAA,cACA,UAAU;AAAA,cACV,WAAW;AAAA,cACX;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAEA,YAAI,MAAM,MAAM,GAAG;AACnB,YAAG,CAAC,SAAS,GAAG,GAAG;AACjB,gBAAM,CAAC,GAAG;AAAA,QACZ;AAEA,cAAM,MAAM,IAAI,OAAO;AAAA,UACrB;AAAA,UACA;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA,YAAY;AAAA,UACZ,aAAa;AAAA,QACf,CAAC;AAGD,YAAI;AACJ,YAAG,eAAe;AAChB,cAAG,QAAQ,SAAS;AAClB,0BAAc;AAAA,UAChB,OAAO;AACL,0BAAc;AAAA,cACZ,EAAC,WAAW,gBAAgB,UAAU,OAAO,KAAK,QAAO;AAAA,YAAC;AAAA,UAC9D;AAAA,QACF,OAAO;AACL,wBAAc,WAAW,WAAW,KAAK,EAAC,OAAO,KAAI,GAAG,OAAO;AAAA,QACjE;AAEA,YAAG,aAAa,OAAO;AAErB,gBAAM,WAAW,WAAW,KAAK,EAAC,MAAM,KAAI,GAAG,OAAO;AAAA,QACxD,WAAU,aAAa;AACrB,gBAAM;AAAA,QACR;AAEA,iBAAQ,QAAQ,KAAK;AAEnB,cAAG,WAAW,CAAC,SAAS,IAAI,GAAG;AAC7B,mBAAO,EAAC,UAAU,CAAC,IAAI,EAAC;AAAA,UAC1B;AACA,cAAG,aAAa,SAAS;AACvB,gBAAG,gBAAgB,SAAS;AAAA,YAE5B,WAAU,KAAK,OAAO,GAAG;AACvB,mBAAK,OAAO,IAAI,CAAC,GAAG,EAAE,OAAO,KAAK,OAAO,CAAC;AAAA,YAC5C,OAAO;AACL,mBAAK,OAAO,IAAI,CAAC,GAAG;AAAA,YACtB;AAAA,UACF,WAAU,SAAS,IAAI,KACrB,CAAC,CAAC,aAAa,SAAS,QAAQ,EAAE,SAAS,QAAQ,GAAG;AACtD,kBAAM,IAAI;AAAA,cACR,wEACY,QAAQ;AAAA,cACpB;AAAA,cACA,EAAC,MAAM,wBAAwB,OAAO,KAAI;AAAA,YAAC;AAAA,UAC/C,WAAU,eAAe;AAGvB,gBAAG,gBAAgB,SAAS;AAE1B,wBAAU,MAAM,eAAe,aAAa;AAAA,gBAC1C,iBAAiB;AAAA,gBACjB,cAAc;AAAA,cAChB,CAAC;AAAA,YACH;AAAA,UACF,WAAU,gBAAgB,WAAW,EAAE,YAAY,OAAO;AACxD,iBAAK,QAAQ,IAAI;AAAA,UACnB;AACA,eAAK,KAAK,IAAI;AAAA,QAChB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;AChwCA;AAAA;AAAA;AAKA,QAAM,EAAC,UAAS,IAAI;AACpB,QAAM,aAAa;AACnB,QAAM,QAAQ;AACd,QAAM,OAAO;AACb,QAAM,cAAc;AAEpB,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAWjB,QAAI,sBAAsB,CAAC,OAAO,YAAY;AAC5C,gBAAU,WAAW,CAAC;AAGtB,YAAM,SAAS,QAAQ,UAAU,IAAI,KAAK,iBAAiB,KAAK;AAChE,YAAM,SAAS,EAAC,YAAY,CAAC,EAAC;AAC9B,UAAI,cAAc,OAAO,QAAQ,YAAY,MAAM;AAGnD,aAAO,IAAI,cAAc,MAAM;AAAA,IACjC;AAaA,QAAI,gBAAgB,CAAC,OAAO,QAAQ,OAAO,QAAQ,MAAM,SAAS;AAEhE,UAAG,MAAM,QAAQ,KAAK,GAAG;AACvB,mBAAU,QAAQ,OAAO;AACvB,cAAI,cAAc,MAAM,QAAQ,OAAO,QAAQ,QAAW,IAAI;AAAA,QAChE;AACA;AAAA,MACF;AAGA,UAAG,CAAC,MAAM,SAAS,KAAK,GAAG;AACzB,YAAG,MAAM;AACP,eAAK,KAAK,KAAK;AAAA,QACjB;AACA;AAAA,MACF;AAGA,UAAG,WAAW,QAAQ,KAAK,GAAG;AAC5B,YAAG,WAAW,OAAO;AACnB,cAAI,OAAO,MAAM,OAAO;AAExB,cAAG,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC3B,kBAAM,OAAO,IAAI,OAAO,OAAO,MAAM,IAAI;AAAA,UAC3C;AAAA,QACF;AACA,YAAG,MAAM;AACP,eAAK,KAAK,KAAK;AAAA,QACjB;AACA;AAAA,MACF,WAAU,QAAQ,WAAW,OAAO,KAAK,GAAG;AAC1C,cAAM,QAAQ,CAAC;AACf,YAAI,cAAc,MAAM,OAAO,GAAG,QAAQ,OAAO,QAAQ,MAAM,KAAK;AACpE,aAAK,KAAK,EAAC,SAAS,MAAK,CAAC;AAC1B;AAAA,MACF;AAKA,UAAG,WAAW,OAAO;AACnB,cAAMC,SAAQ,MAAM,OAAO;AAC3B,mBAAU,QAAQA,QAAO;AACvB,cAAG,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC3B,mBAAO,MAAM,IAAI;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAGA,UAAG,MAAM,YAAY,IAAI,GAAG;AAC1B,eAAO,WAAW,YAAY,KAAK,IACjC,OAAO,MAAM,MAAM,KAAK,CAAC,IAAI,MAAM,KAAK;AAAA,MAC5C;AAGA,UAAG,MAAM;AACP,aAAK,KAAK,EAAC,OAAO,KAAI,CAAC;AAAA,MACzB;AAGA,YAAM,WAAW,OAAO,KAAK;AAC7B,YAAM,UAAU,SAAS,IAAI,IAAI,SAAS,IAAI,KAAK,CAAC;AACpD,cAAQ,KAAK,IAAI;AACjB,YAAM,aAAa,OAAO,KAAK,KAAK,EAAE,KAAK;AAC3C,eAAQ,YAAY,YAAY;AAE9B,YAAG,aAAa,OAAO;AACrB;AAAA,QACF;AAGA,YAAG,aAAa,YAAY;AAC1B,gBAAM,iBAAiB,EAAC,OAAO,KAAI;AACnC,gBAAM,aAAa,MAAM,UAAU;AACnC,qBAAU,mBAAmB,YAAY;AACvC,kBAAM,QAAQ,WAAW,eAAe;AACxC,uBAAU,QAAQ,OAAO;AACvB,kBAAI,WAAW,KAAK,KAAK;AACzB,kBAAG,WAAW,YAAY,IAAI,GAAG;AAC/B,2BAAW,OAAO,MAAM,QAAQ;AAAA,cAClC;AACA,kBAAI,cAAc,MAAM,QAAQ,OAAO,QAAQ,QAAQ;AACvD,mBAAK;AAAA,gBACH,SAAS,QAAQ;AAAA,gBAAG;AAAA,gBAAiB;AAAA,gBACrC,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,cAAC;AAAA,YAClD;AAAA,UACF;AACA;AAAA,QACF;AAGA,YAAG,aAAa,UAAU;AAExB,cAAG,EAAE,QAAQ,SAAS;AACpB,mBAAO,IAAI,IAAI,CAAC;AAAA,UAClB;AACA,cAAI,cAAc,MAAM,QAAQ,GAAG,QAAQ,MAAM,MAAM;AACvD;AAAA,QACF;AAGA,YAAG,aAAa,aAAa;AAC3B,cAAI,cAAc,MAAM,QAAQ,GAAG,QAAQ,OAAO,MAAM;AACxD;AAAA,QACF;AAGA,YAAG,aAAa,WAAW,UAAU,QAAQ,GAAG;AAC9C,cAAG,aAAa,YAAY,YAAY,YACrC,MAAM,QAAQ,MAAM,QAAQ,QAAQ,KACrC,MAAM,QAAQ,EAAE,KAAK,MAAM,QAAQ,QAAQ,EAAE,KAAK,IAAI;AACtD,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,uBAAuB,QAAO;AAAA,YAAC;AAAA,UAC1C;AACA,kBAAQ,QAAQ,IAAI,MAAM,QAAQ;AAClC;AAAA,QACF;AAGA,cAAM,UAAU,MAAM,QAAQ;AAG9B,YAAG,SAAS,QAAQ,IAAI,MAAM,GAAG;AAC/B,qBAAW,OAAO,MAAM,QAAQ;AAAA,QAClC;AAGA,YAAG,QAAQ,WAAW,GAAG;AACvB,eAAK,SAAS,SAAS,UAAU,CAAC,GAAG,EAAC,iBAAiB,KAAI,CAAC;AAC5D;AAAA,QACF;AACA,iBAAQ,KAAK,SAAS;AACpB,cAAG,aAAa,SAAS;AAEvB,gBAAK,EAAE,QAAQ,IAAI,MAAM,IAAK,OAAO,MAAM,CAAC,IAAI;AAAA,UAClD;AAGA,cAAG,WAAW,UAAU,CAAC,KAAK,WAAW,mBAAmB,CAAC,GAAG;AAE9D,gBAAG,SAAS,KAAK,CAAC,EAAE,KAAK,GAAG;AAC1B;AAAA,YACF;AAGA,kBAAM,KAAK,WAAW,YAAY,CAAC,IACjC,OAAO,MAAM,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK;AAGlC,iBAAK;AAAA,cACH;AAAA,cAAS;AAAA,cAAU,EAAC,OAAO,GAAE;AAAA,cAC7B,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,YAAC;AAChD,gBAAI,cAAc,GAAG,QAAQ,OAAO,QAAQ,EAAE;AAAA,UAChD,WAAU,WAAW,QAAQ,CAAC,GAAG;AAC/B,iBAAK;AAAA,cACH;AAAA,cAAS;AAAA,cAAU;AAAA,cACnB,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,YAAC;AAAA,UAClD,WAAU,WAAW,OAAO,CAAC,GAAG;AAE9B,kBAAM,QAAQ,CAAC;AACf,gBAAI,cAAc,EAAE,OAAO,GAAG,QAAQ,OAAO,QAAQ,MAAM,KAAK;AAChE,gBAAI,EAAC,SAAS,MAAK;AACnB,iBAAK;AAAA,cACH;AAAA,cAAS;AAAA,cAAU;AAAA,cACnB,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,YAAC;AAAA,UAClD,OAAO;AAEL,gBAAI,cAAc,GAAG,QAAQ,OAAO,QAAQ,IAAI;AAChD,iBAAK;AAAA,cACH;AAAA,cAAS;AAAA,cAAU;AAAA,cAAG,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,YAAC;AAAA,UACxE;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAUA,QAAI,qBAAqB,YAAU;AACjC,YAAM,SAAS,CAAC;AAChB,iBAAU,QAAQ,OAAO,KAAK,MAAM,EAAE,KAAK,GAAG;AAC5C,mBAAU,MAAM,OAAO,KAAK,OAAO,IAAI,CAAC,EAAE,KAAK,GAAG;AAChD,gBAAM,OAAO,OAAO,IAAI,EAAE,EAAE;AAC5B,cAAG,EAAE,MAAM,SAAS;AAClB,mBAAO,EAAE,IAAI,EAAC,OAAO,GAAE;AAAA,UACzB;AACA,gBAAM,aAAa,OAAO,EAAE;AAE5B,qBAAU,YAAY,OAAO,KAAK,IAAI,EAAE,KAAK,GAAG;AAC9C,gBAAG,UAAU,QAAQ,KAAK,aAAa,SAAS;AAE9C,yBAAW,QAAQ,IAAI,KAAK,MAAM,KAAK,QAAQ,CAAC;AAAA,YAClD,OAAO;AAEL,yBAAU,SAAS,KAAK,QAAQ,GAAG;AACjC,qBAAK;AAAA,kBACH;AAAA,kBAAY;AAAA,kBAAU,KAAK,MAAM,KAAK;AAAA,kBACtC,EAAC,iBAAiB,MAAM,gBAAgB,MAAK;AAAA,gBAAC;AAAA,cAClD;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,QAAI,gBAAgB,YAAU;AAE5B,YAAM,eAAe,OAAO,UAAU;AACtC,YAAM,aAAa,OAAO,KAAK,MAAM,EAAE,KAAK;AAC5C,iBAAU,aAAa,YAAY;AACjC,YAAG,cAAc,YAAY;AAC3B;AAAA,QACF;AACA,cAAM,UAAU,OAAO,SAAS;AAChC,YAAI,UAAU,aAAa,SAAS;AACpC,YAAG,CAAC,SAAS;AACX,uBAAa,SAAS,IAAI,UAAU;AAAA,YAClC,OAAO;AAAA,YACP,UAAU,CAAC;AAAA,UACb;AAAA,QACF,WAAU,EAAE,YAAY,UAAU;AAChC,kBAAQ,QAAQ,IAAI,CAAC;AAAA,QACvB;AACA,cAAM,QAAQ,QAAQ,QAAQ;AAC9B,mBAAU,MAAM,OAAO,KAAK,OAAO,EAAE,KAAK,GAAG;AAC3C,gBAAM,OAAO,QAAQ,EAAE;AAEvB,cAAG,CAAC,WAAW,mBAAmB,IAAI,GAAG;AACvC,kBAAM,KAAK,IAAI;AAAA,UACjB;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACjSA;AAAA;AAAA;AAKA,QAAM;AAAA,MACJ,oBAAoB;AAAA,IACtB,IAAI;AAEJ,QAAM;AAAA,MACJ,qBAAqB;AAAA,IACvB,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AASjB,QAAI,UAAU,WAAS;AACrB,YAAM,eAAe,qBAAqB,KAAK;AAG/C,YAAM,YAAY,CAAC;AACnB,YAAM,OAAO,OAAO,KAAK,YAAY,EAAE,KAAK;AAC5C,eAAQ,KAAK,GAAG,KAAK,KAAK,QAAQ,EAAE,IAAI;AACtC,cAAM,OAAO,aAAa,KAAK,EAAE,CAAC;AAElC,YAAG,CAAC,oBAAoB,IAAI,GAAG;AAC7B,oBAAU,KAAK,IAAI;AAAA,QACrB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACrCA;AAAA;AAAA;AAKA,QAAM,cAAc;AACpB,QAAM,aAAa;AACnB,QAAM,QAAQ;AAEd,QAAM;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,IACZ,IAAI;AAEJ,QAAM;AAAA,MACJ,aAAa;AAAA,IACf,IAAI;AAGJ,QAAM;AAAA;AAAA,MAEJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,MAGA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAUjB,QAAI,UAAU,OACZ,SACA,YACG;AACH,YAAM;AAAA,QACJ,aAAa;AAAA,QACb,iBAAiB;AAAA,QACjB,eAAe;AAAA,MACjB,IAAI;AAEJ,YAAM,eAAe,CAAC;AACtB,YAAM,WAAW,EAAC,YAAY,aAAY;AAC1C,YAAM,iBAAiB,CAAC;AACxB,UAAG,cAAc;AACf,YAAG,iBAAiB,oBAAoB;AACtC,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,OAAO,aAAY;AAAA,UAAC;AAAA,QACzB,WAAU,iBAAiB,iBAAiB;AAC1C,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,OAAO,aAAY;AAAA,UAAC;AAAA,QACzB;AAAA,MACF;AAEA,iBAAU,QAAQ,SAAS;AAEzB,cAAM,OAAQ,KAAK,MAAM,aAAa,iBACpC,aAAa,KAAK,MAAM;AAC1B,YAAG,EAAE,QAAQ,WAAW;AACtB,mBAAS,IAAI,IAAI,CAAC;AAAA,QACpB;AACA,YAAG,SAAS,cAAc,EAAE,QAAQ,eAAe;AACjD,uBAAa,IAAI,IAAI,EAAC,OAAO,KAAI;AAAA,QACnC;AAEA,cAAM,UAAU,SAAS,IAAI;AAG7B,cAAM,IAAI,KAAK,QAAQ;AACvB,cAAM,IAAI,KAAK,UAAU;AACzB,cAAM,IAAI,KAAK;AAEf,YAAG,EAAE,KAAK,UAAU;AAClB,kBAAQ,CAAC,IAAI,EAAC,OAAO,EAAC;AAAA,QACxB;AACA,cAAM,OAAO,QAAQ,CAAC;AAEtB,cAAM,eAAe,EAAE,SAAS,SAAS,MAAM;AAC/C,YAAG,gBAAgB,EAAE,EAAE,SAAS,UAAU;AACxC,kBAAQ,EAAE,KAAK,IAAI,EAAC,OAAO,EAAE,MAAK;AAAA,QACpC;AAEA,YAAG,MAAM,YAAY,CAAC,cAAc,cAAc;AAChD,oBAAU,MAAM,SAAS,EAAE,OAAO,EAAC,iBAAiB,KAAI,CAAC;AACzD;AAAA,QACF;AAEA,cAAM,QAAQ,aAAa,GAAG,gBAAgB,cAAc,OAAO;AACnE,kBAAU,MAAM,GAAG,OAAO,EAAC,iBAAiB,KAAI,CAAC;AAIjD,YAAG,cAAc;AACf,cAAG,EAAE,UAAU,SAAS;AAEtB,kBAAM,SAAS,QAAQ,EAAE,KAAK;AAC9B,gBAAG,EAAE,YAAY,SAAS;AACxB,qBAAO,SAAS,CAAC;AAAA,YACnB;AACA,mBAAO,OAAO,KAAK;AAAA,cACjB;AAAA,cACA,UAAU;AAAA,cACV;AAAA,YACF,CAAC;AAAA,UACH,WAAU,EAAE,SAAS,gBAAgB;AAEnC,2BAAe,EAAE,KAAK,IAAI;AAAA,UAC5B,OAAO;AAEL,2BAAe,EAAE,KAAK,IAAI;AAAA,cACxB;AAAA,cACA,UAAU;AAAA,cACV;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAoEA,iBAAU,QAAQ,UAAU;AAC1B,cAAM,cAAc,SAAS,IAAI;AAGjC,YAAG,EAAE,WAAW,cAAc;AAC5B;AAAA,QACF;AAGA,cAAM,MAAM,YAAY,OAAO;AAC/B,YAAG,CAAC,IAAI,QAAQ;AACd;AAAA,QACF;AACA,iBAAQ,SAAS,IAAI,QAAQ;AAC3B,cAAI,OAAO,MAAM;AACjB,cAAI,WAAW,MAAM;AACrB,cAAI,OAAO,MAAM;AACjB,gBAAM,OAAO,CAAC;AACd,gBAAM,YAAY,CAAC;AAQnB,cAAI,eAAe,OAAO,KAAK,IAAI,EAAE;AACrC,iBAAM,aAAa,YACjB,MAAM,SAAS,eAAe,KAAK,KAAK,CAAC,CAAC,KAC1C,MAAM,QAAQ,KAAK,SAAS,CAAC,KAAK,KAAK,SAAS,EAAE,WAAW,KAC7D,MAAM,QAAQ,KAAK,QAAQ,CAAC,KAAK,KAAK,QAAQ,EAAE,WAAW,MAC1D,iBAAiB,KACf,iBAAiB,KAAK,MAAM,QAAQ,KAAK,OAAO,CAAC,KAClD,KAAK,OAAO,EAAE,WAAW,KAAK,KAAK,OAAO,EAAE,CAAC,MAAM,WAAY;AACjE,iBAAK,KAAK,KAAK,SAAS,EAAE,CAAC,CAAC;AAC5B,sBAAU,KAAK,KAAK,KAAK,CAAC;AAG1B,oBAAQ,eAAe,KAAK,KAAK,CAAC;AAClC,mBAAO,MAAM;AACb,uBAAW,MAAM;AACjB,mBAAO,MAAM;AACb,2BAAe,OAAO,KAAK,IAAI,EAAE;AAGjC,gBAAG,CAAC,WAAW,YAAY,IAAI,GAAG;AAChC;AAAA,YACF;AAAA,UACF;AAGA,iBAAO,KAAK,KAAK;AACjB,eAAK,OAAO,IAAI,KAAK,QAAQ;AAC7B,qBAAU,YAAY,WAAW;AAC/B,mBAAO,YAAY,QAAQ;AAAA,UAC7B;AAAA,QACF;AAEA,eAAO,IAAI;AAAA,MACb;AAEA,YAAM,SAAS,CAAC;AAChB,YAAM,WAAW,OAAO,KAAK,YAAY,EAAE,KAAK;AAChD,iBAAU,WAAW,UAAU;AAC7B,cAAM,OAAO,aAAa,OAAO;AACjC,YAAG,WAAW,UAAU;AACtB,gBAAM,QAAQ,KAAK,QAAQ,IAAI,CAAC;AAChC,gBAAM,cAAc,SAAS,OAAO;AACpC,gBAAM,gBAAgB,OAAO,KAAK,WAAW,EAAE,KAAK;AACpD,qBAAU,gBAAgB,eAAe;AACvC,kBAAMC,QAAO,YAAY,YAAY;AAErC,gBAAG,CAAC,WAAW,mBAAmBA,KAAI,GAAG;AACvC,oBAAM,KAAKA,KAAI;AAAA,YACjB;AAAA,UACF;AAAA,QACF;AAEA,YAAG,CAAC,WAAW,mBAAmB,IAAI,GAAG;AACvC,iBAAO,KAAK,IAAI;AAAA,QAClB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAYA,aAAS,aAAa,GAAG,gBAAgB,cAAc,SAAS;AAE9D,UAAG,EAAE,SAAS,SAAS,MAAM,GAAG;AAC9B,eAAO,EAAC,OAAO,EAAE,MAAK;AAAA,MACxB;AAGA,YAAM,OAAO,EAAC,UAAU,EAAE,MAAK;AAG/B,UAAG,EAAE,UAAU;AACb,YAAG,CAAC,EAAE,SAAS,MAAM,WAAW,GAAG;AACjC,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBACT,SAAS;AAAA,kBACP,UAAU,EAAE;AAAA,gBACd;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AACA,aAAK,WAAW,IAAI,EAAE;AAAA,MACxB,OAAO;AACL,YAAI,OAAO,EAAE,SAAS;AACtB,YAAG,CAAC,MAAM;AACR,iBAAO;AAAA,QACT;AACA,YAAG,SAAS,kBAAkB;AAC5B,iBAAO;AACP,cAAI;AACF,iBAAK,QAAQ,IAAI,KAAK,MAAM,KAAK,QAAQ,CAAC;AAAA,UAC5C,SAAQ,GAAG;AACT,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cACA,EAAC,MAAM,wBAAwB,OAAO,KAAK,QAAQ,GAAG,OAAO,EAAC;AAAA,YAAC;AAAA,UACnE;AAAA,QACF;AAEA,YAAG,gBAAgB;AACjB,cAAG,SAAS,aAAa;AACvB,gBAAG,KAAK,QAAQ,MAAM,QAAQ;AAC5B,mBAAK,QAAQ,IAAI;AAAA,YACnB,WAAU,KAAK,QAAQ,MAAM,SAAS;AACpC,mBAAK,QAAQ,IAAI;AAAA,YACnB;AAAA,UACF,WAAU,MAAM,UAAU,KAAK,QAAQ,CAAC,GAAG;AACzC,gBAAG,SAAS,aAAa;AACvB,oBAAM,IAAI,SAAS,KAAK,QAAQ,GAAG,EAAE;AACrC,kBAAG,EAAE,QAAQ,CAAC,MAAM,KAAK,QAAQ,GAAG;AAClC,qBAAK,QAAQ,IAAI;AAAA,cACnB;AAAA,YACF,WAAU,SAAS,YAAY;AAC7B,mBAAK,QAAQ,IAAI,WAAW,KAAK,QAAQ,CAAC;AAAA,YAC5C;AAAA,UACF;AAEA,cAAG,CAAC,CAAC,aAAa,aAAa,YAAY,UAAU,EAAE,SAAS,IAAI,GAAG;AACrE,iBAAK,OAAO,IAAI;AAAA,UAClB;AAAA,QACF,WAAU,iBAAiB,mBACzB,KAAK,WAAW,6BAA6B,GAAG;AAChD,gBAAM,CAAC,EAAE,UAAU,SAAS,IAAI,KAAK,MAAM,MAAM;AACjD,cAAG,SAAS,SAAS,GAAG;AACtB,iBAAK,WAAW,IAAI;AACpB,gBAAG,CAAC,SAAS,MAAM,WAAW,GAAG;AAC/B,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP;AAAA,oBACF;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AAAA,YACF;AAAA,UACF;AACA,eAAK,YAAY,IAAI;AAAA,QACvB,WAAU,SAAS,YAAY;AAC7B,eAAK,OAAO,IAAI;AAAA,QAClB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;AC9YA;AAAA;AAAA;AAIA,WAAO,UAAU,SAAS,UAAW,QAAQ;AAC3C,UAAI,WAAW,QAAQ,OAAO,WAAW,YAAY,OAAO,UAAU,MAAM;AAC1E,eAAO,KAAK,UAAU,MAAM;AAAA,MAC9B;AAEA,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,eAAO,MAAM,OAAO,OAAO,CAAC,GAAG,IAAI,OAAO;AACxC,gBAAM,QAAQ,OAAO,IAAI,KAAK;AAC9B,gBAAM,QAAQ,OAAO,UAAa,OAAO,OAAO,WAAW,OAAO;AAClE,iBAAO,IAAI,QAAQ,UAAU,KAAK;AAAA,QACpC,GAAG,EAAE,IAAI;AAAA,MACX;AAEA,aAAO,MAAM,OAAO,KAAK,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,GAAG,IAAI,OAAO;AAC5D,YAAI,OAAO,EAAE,MAAM,UACf,OAAO,OAAO,EAAE,MAAM,UAAU;AAClC,iBAAO;AAAA,QACT;AACA,cAAM,QAAQ,EAAE,WAAW,IAAI,KAAK;AACpC,eAAO,IAAI,QAAQ,UAAU,EAAE,IAAI,MAAM,UAAU,OAAO,EAAE,CAAC;AAAA,MAC/D,GAAG,EAAE,IAAI;AAAA,IACX;AAAA;AAAA;;;ACzBA;AAAA;AAAA;AAKA,QAAM,EAAC,cAAa,IAAI;AACxB,QAAM,EAAC,UAAS,IAAI;AACpB,QAAM,aAAa;AACnB,QAAM,mBAAmB;AACzB,QAAM,cAAc;AACpB,QAAM,QAAQ;AACd,QAAM,OAAO;AAEb,QAAM;AAAA,MACJ,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA;AAAA;AAAA,MAGJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,MAGA;AAAA;AAAA,MAEA;AAAA;AAAA,MAGA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI;AAEJ,QAAM;AAAA,MACJ,YAAY;AAAA,IACd,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAUjB,QAAI,QAAQ,CAAC,OAAO,YAAY;AAE9B,YAAM,SAAS,IAAI,KAAK,iBAAiB,KAAK;AAC9C,YAAM,UAAU,EAAC,YAAY,CAAC,EAAC;AAC/B,oBAAc,OAAO,SAAS,YAAY,MAAM;AAEhD,YAAM,UAAU,CAAC;AACjB,YAAM,aAAa,OAAO,KAAK,OAAO,EAAE,KAAK;AAC7C,iBAAU,aAAa,YAAY;AACjC,YAAI;AACJ,YAAG,cAAc,YAAY;AAC3B,sBAAY,EAAC,UAAU,gBAAgB,OAAO,GAAE;AAAA,QAClD,WAAU,eAAe,SAAS,GAAG;AACnC,cAAG,UAAU,WAAW,IAAI,GAAG;AAC7B,wBAAY,EAAC,UAAU,YAAW;AAAA,UACpC,OAAO;AACL,wBAAY,EAAC,UAAU,YAAW;AAAA,UACpC;AACA,oBAAU,QAAQ;AAAA,QACpB,OAAO;AAEL,cAAG,QAAQ,cAAc;AACvB,yBAAa;AAAA,cACX,OAAO;AAAA,gBACL,MAAM,CAAC,aAAa;AAAA,gBACpB,MAAM;AAAA,gBACN,OAAO;AAAA,gBACP,SAAS;AAAA,gBACT,SAAS;AAAA,kBACP,OAAO;AAAA,gBACT;AAAA,cACF;AAAA,cACA;AAAA,YACF,CAAC;AAAA,UACH;AACA;AAAA,QACF;AACA,oBAAY,SAAS,QAAQ,SAAS,GAAG,WAAW,QAAQ,OAAO;AAAA,MACrE;AAEA,aAAO;AAAA,IACT;AAaA,aAAS,YAAY,SAAS,OAAO,WAAW,QAAQ,SAAS;AAC/D,YAAM,MAAM,OAAO,KAAK,KAAK,EAAE,KAAK;AACpC,iBAAU,MAAM,KAAK;AACnB,cAAM,OAAO,MAAM,EAAE;AACrB,cAAM,aAAa,OAAO,KAAK,IAAI,EAAE,KAAK;AAC1C,iBAAQ,YAAY,YAAY;AAC9B,gBAAM,QAAQ,KAAK,QAAQ;AAC3B,cAAG,aAAa,SAAS;AACvB,uBAAW;AAAA,UACb,WAAU,UAAU,QAAQ,GAAG;AAC7B;AAAA,UACF;AAEA,qBAAU,QAAQ,OAAO;AAEvB,kBAAM,UAAU;AAAA,cACd,UAAU,GAAG,WAAW,IAAI,IAAI,cAAc;AAAA,cAC9C,OAAO;AAAA,YACT;AAGA,gBAAG,CAAC,eAAe,EAAE,GAAG;AACtB,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP,SAAS;AAAA,oBACX;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AACA;AAAA,YACF;AAGA,kBAAM,YAAY;AAAA,cAChB,UAAU,SAAS,WAAW,IAAI,IAAI,cAAc;AAAA,cACpD,OAAO;AAAA,YACT;AAGA,gBAAG,CAAC,eAAe,QAAQ,GAAG;AAC5B,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA,sBACP,WAAW;AAAA,oBACb;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AACA;AAAA,YACF;AAGA,gBAAG,UAAU,aAAa,eACxB,CAAC,QAAQ,uBAAuB;AAChC,kBAAG,QAAQ,cAAc;AACvB,6BAAa;AAAA,kBACX,OAAO;AAAA,oBACL,MAAM,CAAC,aAAa;AAAA,oBACpB,MAAM;AAAA,oBACN,OAAO;AAAA,oBACP,SAAS;AAAA,oBACT,SAAS;AAAA;AAAA,sBAEP,UAAU,OAAO,UAAU,EACxB,KAAK,SAAO,OAAO,MAAM,GAAG,MAAM,QAAQ;AAAA,oBAC/C;AAAA,kBACF;AAAA,kBACA;AAAA,gBACF,CAAC;AAAA,cACH;AACA;AAAA,YACF;AAGA,kBAAM,SAAS;AAAA,cACb;AAAA,cAAM;AAAA,cAAQ;AAAA,cAAS;AAAA,cAAW,QAAQ;AAAA,cAAc;AAAA,YAAO;AAEjE,gBAAG,QAAQ;AACT,sBAAQ,KAAK;AAAA,gBACX;AAAA,gBACA;AAAA,gBACA;AAAA,gBACA,OAAO;AAAA,cACT,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAcA,aAAS,WAAW,MAAM,QAAQ,SAAS,WAAW,cAAc,SAAS;AAC3E,YAAM,QAAQ,EAAC,UAAU,aAAa,OAAO,UAAS;AACtD,YAAM,OAAO,EAAC,UAAU,aAAa,OAAO,SAAQ;AACpD,YAAM,MAAM,EAAC,UAAU,aAAa,OAAO,QAAO;AAElD,YAAM,OAAO,KAAK,IAAI;AAEtB,YAAM,SAAS,OAAO,EAAC,UAAU,aAAa,OAAO,OAAO,MAAM,EAAC,IAAI;AACvE,UAAI,UAAU;AAEd,iBAAU,QAAQ,MAAM;AACtB,cAAM,SAAS;AAAA,UACb;AAAA,UAAM;AAAA,UAAQ;AAAA,UAAS;AAAA,UAAW;AAAA,UAAc;AAAA,QAAO;AACzD,cAAM,OAAO,EAAC,UAAU,aAAa,OAAO,OAAO,MAAM,EAAC;AAC1D,gBAAQ,KAAK;AAAA,UACX;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA,OAAO;AAAA,QACT,CAAC;AACD,gBAAQ,KAAK;AAAA,UACX;AAAA,UACA,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,OAAO;AAAA,QACT,CAAC;AACD,kBAAU;AAAA,MACZ;AAGA,UAAG,MAAM;AACP,cAAM,SAAS;AAAA,UACb;AAAA,UAAM;AAAA,UAAQ;AAAA,UAAS;AAAA,UAAW;AAAA,UAAc;AAAA,QAAO;AACzD,gBAAQ,KAAK;AAAA,UACX;AAAA,UACA,WAAW;AAAA,UACX;AAAA,UACA,OAAO;AAAA,QACT,CAAC;AACD,gBAAQ,KAAK;AAAA,UACX;AAAA,UACA,WAAW;AAAA,UACX,QAAQ;AAAA,UACR,OAAO;AAAA,QACT,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IACT;AAcA,aAAS,aACP,MAAM,QAAQ,SAAS,WAAW,cAAc,SAChD;AACA,YAAM,SAAS,CAAC;AAGhB,UAAG,WAAW,QAAQ,IAAI,GAAG;AAC3B,eAAO,WAAW;AAClB,eAAO,QAAQ;AACf,eAAO,WAAW;AAAA,UAChB,UAAU;AAAA,QACZ;AACA,YAAI,QAAQ,KAAK,QAAQ;AACzB,cAAM,WAAW,KAAK,OAAO,KAAK;AAGlC,YAAG,aAAa,SAAS;AACvB,iBAAO,QAAQ,iBAAiB,KAAK;AACrC,iBAAO,SAAS,QAAQ;AAAA,QAC1B,WAAU,MAAM,UAAU,KAAK,GAAG;AAChC,iBAAO,QAAQ,MAAM,SAAS;AAC9B,iBAAO,SAAS,QAAQ,YAAY;AAAA,QACtC,WAAU,MAAM,SAAS,KAAK,KAAK,aAAa,YAAY;AAC1D,cAAG,CAAC,MAAM,SAAS,KAAK,GAAG;AACzB,oBAAQ,WAAW,KAAK;AAAA,UAC1B;AAEA,iBAAO,QAAQ,MAAM,cAAc,EAAE,EAAE,QAAQ,cAAc,KAAK;AAClE,iBAAO,SAAS,QAAQ,YAAY;AAAA,QACtC,WAAU,MAAM,SAAS,KAAK,GAAG;AAC/B,iBAAO,QAAQ,MAAM,QAAQ,CAAC;AAC9B,iBAAO,SAAS,QAAQ,YAAY;AAAA,QACtC,WAAU,gBAAgB,QAAQ,iBAAiB,iBAAiB;AAClE,gBAAM,YAAY,KAAK,WAAW,KAAK,IAAI,YAAY;AACvD,gBAAM,YAAY,KAAK,YAAY;AACnC,gBAAMC,YAAW,8BAA8B,QAAQ,IAAI,SAAS;AACpE,iBAAO,SAAS,QAAQA;AACxB,iBAAO,QAAQ;AAAA,QACjB,WAAU,gBAAgB,QAAQ,iBAAiB,oBAAoB;AACrE,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,OAAO,aAAY;AAAA,UAAC;AAAA,QACzB,WAAU,gBAAgB,QAAQ,cAAc;AAC9C,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YACA,EAAC,OAAO,aAAY;AAAA,UAAC;AAAA,QACzB,WAAU,eAAe,MAAM;AAC7B,cAAG,gBAAgB,QAAQ,CAAC,cAAc;AACxC,gBAAG,QAAQ,cAAc;AAEvB,2BAAa;AAAA,gBACX,OAAO;AAAA,kBACL,MAAM,CAAC,aAAa;AAAA,kBACpB,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,SAAS;AAAA,kBACT,SAAS;AAAA,oBACP,QAAQ,OAAO;AAAA,kBACjB;AAAA,gBACF;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF;AACA,iBAAO,QAAQ;AACf,iBAAO,SAAS,QAAQ,YAAY;AACpC,iBAAO,WAAW,KAAK,WAAW;AAAA,QACpC,OAAO;AACL,cAAG,gBAAgB,QAAQ,CAAC,cAAc;AACxC,gBAAG,QAAQ,cAAc;AAEvB,2BAAa;AAAA,gBACX,OAAO;AAAA,kBACL,MAAM,CAAC,aAAa;AAAA,kBACpB,MAAM;AAAA,kBACN,OAAO;AAAA,kBACP,SAAS;AAAA,kBACT,SAAS;AAAA,oBACP,QAAQ,OAAO;AAAA,kBACjB;AAAA,gBACF;AAAA,gBACA;AAAA,cACF,CAAC;AAAA,YACH;AAAA,UACF;AACA,iBAAO,QAAQ;AACf,iBAAO,SAAS,QAAQ,YAAY;AAAA,QACtC;AAAA,MACF,WAAU,WAAW,OAAO,IAAI,GAAG;AACjC,cAAM,QAAQ;AAAA,UACZ,KAAK,OAAO;AAAA,UAAG;AAAA,UAAQ;AAAA,UAAS;AAAA,UAAW;AAAA,UAAc;AAAA,QAAO;AAClE,eAAO,WAAW,MAAM;AACxB,eAAO,QAAQ,MAAM;AAAA,MACvB,OAAO;AAEL,cAAM,KAAK,MAAM,SAAS,IAAI,IAAI,KAAK,KAAK,IAAI;AAChD,eAAO,WAAW,GAAG,WAAW,IAAI,IAAI,cAAc;AACtD,eAAO,QAAQ;AAAA,MACjB;AAGA,UAAG,OAAO,aAAa,eAAe,CAAC,eAAe,OAAO,KAAK,GAAG;AACnE,YAAG,QAAQ,cAAc;AACvB,uBAAa;AAAA,YACX,OAAO;AAAA,cACL,MAAM,CAAC,aAAa;AAAA,cACpB,MAAM;AAAA,cACN,OAAO;AAAA,cACP,SAAS;AAAA,cACT,SAAS;AAAA,gBACP,QAAQ,OAAO;AAAA,cACjB;AAAA,YACF;AAAA,YACA;AAAA,UACF,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACrZA;AAAA;AAAA;AAKA,QAAM,EAAC,UAAS,IAAI;AACpB,QAAM,aAAa;AACnB,QAAM,QAAQ;AACd,QAAM,OAAO;AACb,QAAM,MAAM;AACZ,QAAM,cAAc;AACpB,QAAM;AAAA,MACJ,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAWjB,QAAI,uBAAuB,CAAC,OAAO,OAAO,YAAY;AAEpD,YAAM,QAAQ;AAAA,QACZ;AAAA,QACA,UAAU;AAAA,QACV,OAAO;AAAA,QACP,UAAU,EAAC,YAAY,CAAC,EAAC;AAAA,QACzB,cAAc,CAAC;AAAA,QACf,MAAM,CAAC;AAAA,QACP,UAAU,CAAC;AAAA,MACb;AAIA,YAAM,SAAS,IAAI,KAAK,iBAAiB,KAAK;AAC9C,qBAAe,OAAO,MAAM,UAAU,YAAY,MAAM;AACxD,UAAG,QAAQ,QAAQ;AACjB,cAAM,SAAS,SAAS,IAAI,oBAAoB,MAAM,QAAQ;AAC9D,cAAM,QAAQ;AAAA,MAChB;AACA,YAAM,WAAW,MAAM,SAAS,MAAM,KAAK;AAG3C,YAAM,SAAS,CAAC;AAChB,UAAI,MAAM,OAAO,OAAO,KAAK,MAAM,QAAQ,EAAE,KAAK,GAAG,OAAO,MAAM;AAGlE,UAAG,QAAQ,2BAA2B;AAEpC,gBAAQ,gBACN,OAAO,KAAK,MAAM,QAAQ,EAAE,OAAO,QAAM,MAAM,SAAS,EAAE,EAAE,WAAW,CAAC;AAAA,MAC5E;AAGA,cAAQ,OAAO,CAAC;AAChB,aAAO,iBAAiB,QAAQ,OAAO;AAAA,IACzC;AAWA,QAAI,QAAQ,CAAC,OAAO,UAAU,OAAO,QAAQ,WAAW,SAAS;AAE/D,qBAAe,KAAK;AACpB,cAAQ,MAAM,CAAC;AAGf,YAAM,UAAU,MAAM;AACtB,YAAM,QAAQ;AAAA,QACZ,OAAO,cAAc,OAAO,SAAS,OAAO;AAAA,QAC5C,UAAU,cAAc,OAAO,SAAS,UAAU;AAAA,QAClD,YAAY,cAAc,OAAO,SAAS,YAAY;AAAA,MACxD;AAGA,UAAG,CAAC,MAAM,KAAK,eAAe,MAAM,KAAK,GAAG;AAC1C,cAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AAAA,MAC7B;AACA,YAAM,OAAO,MAAM,KAAK,MAAM,KAAK;AAGnC,YAAM,UAAU,gBAAgB,OAAO,UAAU,OAAO,KAAK;AAG7D,YAAM,MAAM,OAAO,KAAK,OAAO,EAAE,KAAK;AACtC,iBAAU,MAAM,KAAK;AACnB,cAAM,UAAU,QAAQ,EAAE;AAK1B,YAAG,aAAa,MAAM;AACpB,gBAAM,eAAe,EAAC,CAAC,MAAM,KAAK,GAAG,CAAC,EAAC;AAAA,QACzC,OAAO;AACL,gBAAM,aAAa,MAAM,KAAK,IAAI,MAAM,aAAa,MAAM,KAAK,KAAK,CAAC;AAAA,QACxE;AAEA,YAAG,MAAM,UAAU,WAAW,MAAM,MAAM;AAMxC,0BAAgB,QAAQ,UAAU,KAAK,EAAE,CAAC;AAC1C;AAAA,QACF;AAGA,cAAM,SAAS,EAAC,OAAO,GAAE;AACzB,YAAG,GAAG,QAAQ,IAAI,MAAM,GAAG;AACzB,eAAK,SAAS,MAAM,UAAU,IAAI,QAAQ,EAAC,iBAAiB,KAAI,CAAC;AAAA,QACnE;AACA,aAAK,EAAE,IAAI;AAGX,aAAI,MAAM,UAAU,YAAY,MAAM,UAAU,YAAY,MAAM,MAAM;AACtE,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAsB,EAAC,MAAM,wBAAwB,MAAK;AAAA,UAAC;AAAA,QAC/D;AAEA,YAAG,CAAC,MAAM,YAAY,MAAM,aAAa,MAAM,KAAK,EAAE,eAAe,EAAE,GAAG;AAGxE;AAAA,QACF;AAMA,YAAG,MAAM,aACN,MAAM,UAAU,YACjB,0BAA0B,SAAS,MAAM,OAAO,MAAM,YAAY,IAAI;AACtE,0BAAgB,QAAQ,UAAU,MAAM;AACxC;AAAA,QACF;AAGA,YAAG,MAAM,aACL,MAAM,SAAS,YAAY,MAAM,SAAS,YAC3C,MAAM,aAAa,MAAM,KAAK,EAAE,eAAe,EAAE,GAAG;AACrD,0BAAgB,QAAQ,UAAU,MAAM;AACxC;AAAA,QACF;AAGA,YAAG,MAAM,UAAU,SAAS;AAE1B,cAAG,MAAM,MAAM,aAAa,MAAM,KAAK,GAAG;AACxC,yBAAa,OAAO,EAAE;AAAA,UACxB;AAAA,QACF;AAEA,cAAM,aAAa,MAAM,KAAK,EAAE,EAAE,IAAI,EAAC,QAAQ,SAAQ;AAGvD,cAAM,aAAa,KAAK,EAAC,SAAS,OAAO,MAAM,MAAK,CAAC;AAGrD,YAAG,MAAM,MAAM,UAAU;AACvB,cAAI,UAAU;AACd,cAAI,WAAW;AACf,cAAG,EAAE,YAAY,QAAQ;AACvB,sBAAU,MAAM,UAAU;AAC1B,uBAAW,CAAC;AAAA,UACd,OAAO;AACL,uBAAW,MAAM,QAAQ,EAAE,CAAC;AAC5B,sBAAU,EAAE,OAAO,aAAa,OAAO;AACvC,gBAAG,CAAC,MAAM,SAAS,QAAQ,GAAG;AAC5B,yBAAW,CAAC;AAAA,YACd;AAAA,UACF;AAEA,cAAG,SAAS;AAEV,gBAAI;AAAA,cACF,EAAC,GAAG,OAAO,OAAO,IAAI,UAAU,MAAK;AAAA,cACrC,OAAO,KAAK,MAAM,SAAS,EAAE,CAAC,EAAE,KAAK;AAAA,cAAG,CAAC,QAAQ;AAAA,cAAG;AAAA,cAAQ;AAAA,YAAQ;AAAA,UACxE;AAAA,QACF;AAGA,YAAG,eAAe,OAAO;AACvB,cAAI;AAAA,YACF,EAAC,GAAG,OAAO,UAAU,MAAK;AAAA,YAC1B;AAAA,YAAU,MAAM,WAAW;AAAA,YAAG;AAAA,YAAQ;AAAA,UAAW;AAAA,QACrD;AAGA,mBAAU,QAAQ,OAAO,KAAK,OAAO,EAAE,KAAK,GAAG;AAE7C,cAAG,UAAU,IAAI,GAAG;AAClB,mBAAO,IAAI,IAAI,KAAK,MAAM,QAAQ,IAAI,CAAC;AAEvC,gBAAG,SAAS,SAAS;AAEnB,yBAAU,QAAQ,QAAQ,OAAO,GAAG;AAClC,oBAAG,KAAK,QAAQ,IAAI,MAAM,GAAG;AAC3B,uBAAK;AAAA,oBACH,MAAM;AAAA,oBAAU;AAAA,oBAAM;AAAA,oBAAQ,EAAC,iBAAiB,KAAI;AAAA,kBAAC;AAAA,gBACzD;AAAA,cACF;AAAA,YACF;AACA;AAAA,UACF;AAGA,cAAG,MAAM,YAAY,EAAE,QAAQ,QAAQ;AACrC;AAAA,UACF;AAGA,qBAAU,KAAK,QAAQ,IAAI,GAAG;AAC5B,kBAAM,WAAY,QAAQ,QACxB,MAAM,IAAI,IAAI,qBAAqB,KAAK;AAG1C,gBAAG,WAAW,OAAO,CAAC,GAAG;AACvB,oBAAMC,YACH,MAAM,IAAI,KAAK,MAAM,IAAI,EAAE,CAAC,KAAK,MAAM,IAAI,EAAE,CAAC,EAAE,OAAO,IACtD,MAAM,IAAI,EAAE,CAAC,EAAE,OAAO,IACtB,qBAAqB,KAAK;AAG9B,oBAAM,OAAO,EAAC,SAAS,CAAC,EAAC;AACzB,8BAAgB,QAAQ,MAAM,IAAI;AAGlC,oBAAM,MAAM,EAAE,OAAO;AACrB,yBAAU,MAAM,KAAK;AACnB,oBAAG,WAAW,mBAAmB,EAAE,GAAG;AAEpC,sBAAI;AAAA,oBACF,EAAC,GAAG,OAAO,UAAU,KAAI;AAAA,oBACzB,CAAC,GAAG,KAAK,CAAC;AAAA,oBAAGA;AAAA,oBAAU;AAAA,oBAAM;AAAA,kBAAO;AAAA,gBACxC,OAAO;AAEL,kCAAgB,MAAM,SAAS,KAAK,MAAM,EAAE,CAAC;AAAA,gBAC/C;AAAA,cACF;AAAA,YACF,WAAU,WAAW,mBAAmB,CAAC,GAAG;AAE1C,kBAAI;AAAA,gBACF,EAAC,GAAG,OAAO,UAAU,KAAI;AAAA,gBACzB,CAAC,EAAE,KAAK,CAAC;AAAA,gBAAG;AAAA,gBAAU;AAAA,gBAAQ;AAAA,cAAI;AAAA,YACtC,WAAU,YAAY,SAAS,CAAC,GAAG,CAAC,GAAG;AAErC,8BAAgB,QAAQ,MAAM,KAAK,MAAM,CAAC,CAAC;AAAA,YAC7C;AAAA,UACF;AAAA,QACF;AAGA,mBAAU,QAAQ,OAAO,KAAK,KAAK,EAAE,KAAK,GAAG;AAE3C,cAAG,SAAS,SAAS;AACnB,gBAAG,CAAC,MAAM,SAAS,MAAM,IAAI,EAAE,CAAC,CAAC,KAC9B,EAAE,cAAc,MAAM,IAAI,EAAE,CAAC,IAAI;AAClC;AAAA,YACF;AAAA,UAEF,WAAU,UAAU,IAAI,GAAG;AACzB;AAAA,UACF;AAIA,gBAAM,OAAO,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC;AAChC,gBAAM,gBAAgB,cAAc,MAAM,SAAS,aAAa;AAChE,cAAG,CAAC,iBAAiB,EAAE,QAAQ,SAAS;AACtC,gBAAI,WAAW;AACf,gBAAG,cAAc,MAAM;AACrB,yBAAW,KAAK,MAAM,KAAK,UAAU,CAAC;AAAA,YACxC;AACA,gBAAG,CAAC,MAAM,QAAQ,QAAQ,GAAG;AAC3B,yBAAW,CAAC,QAAQ;AAAA,YACtB;AACA,mBAAO,IAAI,IAAI,CAAC,EAAC,aAAa,SAAQ,CAAC;AAAA,UACzC;AAAA,QACF;AAIA,mBAAU,eAAe,OAAO,KAAK,MAAM,UAAU,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG;AACpE,gBAAM,WAAW,MAAM,UAAU,EAAE,WAAW;AAC9C,qBAAUC,YAAW,OAAO,KAAK,MAAM,QAAQ,GAAG;AAChD,kBAAM,aACJ,KAAK,UAAU,MAAM,SAASA,QAAO,GAAG,WAAW;AACrD,gBAAG,WAAW,KAAK,OAAK,EAAE,KAAK,MAAM,EAAE,GAAG;AAExC,qBAAO,UAAU,IAAI,OAAO,UAAU,KAAK,CAAC;AAC5C,mBAAK;AAAA,gBACH,OAAO,UAAU;AAAA,gBAAG;AAAA,gBAAa,CAAC;AAAA,gBAAG,EAAC,iBAAiB,KAAI;AAAA,cAAC;AAC9D,kBAAI;AAAA,gBACF,EAAC,GAAG,OAAO,UAAU,KAAI;AAAA,gBACzB,CAACA,QAAO;AAAA,gBAAG;AAAA,gBAAU,OAAO,UAAU,EAAE,WAAW;AAAA,gBACnD;AAAA,cAAQ;AAAA,YACZ;AAAA,UACF;AAAA,QACF;AAGA,wBAAgB,QAAQ,UAAU,MAAM;AAGxC,cAAM,aAAa,IAAI;AAAA,MACzB;AAAA,IACF;AAUA,QAAI,cAAc,CAAC,OAAO,YAAY;AAEpC,UAAG,MAAM,QAAQ,KAAK,GAAG;AACvB,cAAM,UAAU,MAAM,IAAI,OAAK,IAAI,YAAY,GAAG,OAAO,CAAC;AAC1D,eAAO,QAAQ,OAAO,OAAK,CAAC;AAAA,MAC9B;AAEA,UAAG,UAAU,SAAS;AACpB,eAAO;AAAA,MACT;AAEA,UAAG,MAAM,SAAS,KAAK,GAAG;AAExB,YAAG,SAAS,OAAO;AACjB,gBAAM,KAAK,MAAM,KAAK;AACtB,cAAG,QAAQ,KAAK,eAAe,EAAE,GAAG;AAClC,kBAAM,MAAM,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK;AAC1C,gBAAG,QAAQ,IAAI;AAEb,qBAAO,QAAQ,KAAK,EAAE,EAAE,GAAG;AAAA,YAC7B;AAEA,oBAAQ,KAAK,EAAE,EAAE,KAAK,KAAK;AAAA,UAC7B,OAAO;AAEL,oBAAQ,KAAK,EAAE,IAAI,CAAC,KAAK;AAAA,UAC3B;AAAA,QACF;AAEA,mBAAU,OAAO,OAAO;AACtB,gBAAM,GAAG,IAAI,IAAI,YAAY,MAAM,GAAG,GAAG,OAAO;AAAA,QAClD;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAYA,aAAS,qBAAqB,OAAO;AACnC,YAAM,QAAQ,CAAC;AACf,iBAAU,OAAO,OAAO;AACtB,YAAG,MAAM,GAAG,MAAM,QAAW;AAC3B,gBAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC;AAAA,QAChC;AAAA,MACF;AACA,aAAO,CAAC,KAAK;AAAA,IACf;AAYA,aAAS,0BAA0B,gBAAgB,OAAO,cAAc;AACtE,eAAQ,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAChD,cAAM,UAAU,aAAa,CAAC;AAC9B,YAAG,QAAQ,UAAU,SACnB,QAAQ,QAAQ,KAAK,MAAM,eAAe,KAAK,GAAG;AAClD,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAWA,aAAS,cAAc,OAAO,SAAS,MAAM;AAC3C,YAAM,OAAO,MAAM;AACnB,UAAI,OAAQ,QAAQ,QAAQ,MAAM,IAAI,EAAE,CAAC,IAAI,QAAQ,IAAI;AACzD,UAAG,SAAS,SAAS;AAKnB,YAAG,SAAS,MAAM;AAChB,iBAAO;AAAA,QACT,WAAU,SAAS,OAAO;AACxB,iBAAO;AAAA,QACT,WAAU,SAAS,aAAa,SAAS,YAAY,SAAS,WAC5D,SAAS,YAAY,SAAS,WAAW,SAAS,SAAS;AAC3D,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAsB,EAAC,MAAM,wBAAwB,MAAK;AAAA,UAAC;AAAA,QAC/D;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAOA,aAAS,eAAe,OAAO;AAC7B,UAAG,CAAC,MAAM,QAAQ,KAAK,KAAK,MAAM,WAAW,KAAK,CAAC,MAAM,SAAS,MAAM,CAAC,CAAC,GAAG;AAC3E,cAAM,IAAI;AAAA,UACR;AAAA,UACA;AAAA,UAAsB,EAAC,MAAK;AAAA,QAAC;AAAA,MACjC;AAEA,UAAG,SAAS,MAAM,CAAC,GAAG;AACpB,mBAAU,MAAM,KAAK,QAAQ,MAAM,CAAC,EAAE,KAAK,CAAC,GAAG;AAE7C,cAAG,EAAE,MAAM,SAAS,EAAE,KAAK,IAAI,WAAW,EAAE,MACzC,MAAM,SAAS,EAAE,KAAK,GAAG,QAAQ,IAAI,MAAM,GAAI;AAChD,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cAAsB,EAAC,MAAM,iBAAiB,MAAK;AAAA,YAAC;AAAA,UACxD;AAAA,QACF;AAAA,MACF;AAEA,UAAG,WAAW,MAAM,CAAC,GAAG;AACtB,mBAAU,QAAQ,KAAK,QAAQ,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG;AAEjD,cAAG,EAAE,MAAM,SAAS,IAAI,KAAK,IAAI,WAAW,IAAI,KAC3C,SAAS,YACX,MAAM,SAAS,IAAI,KAAK,KAAK,QAAQ,IAAI,MAAM,GAAI;AACpD,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cAAsB,EAAC,MAAM,iBAAiB,MAAK;AAAA,YAAC;AAAA,UACxD;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAYA,aAAS,gBAAgB,OAAO,UAAU,OAAO,OAAO;AAEtD,YAAM,OAAO,CAAC;AACd,iBAAU,MAAM,UAAU;AACxB,cAAM,UAAU,MAAM,SAAS,MAAM,KAAK,EAAE,EAAE;AAC9C,YAAG,eAAe,OAAO,SAAS,OAAO,KAAK,GAAG;AAC/C,eAAK,EAAE,IAAI;AAAA,QACb;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAoBA,aAAS,eAAe,OAAO,SAAS,OAAO,OAAO;AAEpD,UAAI,WAAW;AACf,UAAI,cAAc;AAElB,iBAAU,OAAO,OAAO;AACtB,YAAI,YAAY;AAChB,cAAM,aAAa,KAAK,UAAU,SAAS,GAAG;AAC9C,cAAM,UAAU,KAAK,UAAU,OAAO,GAAG,EAAE,WAAW;AAEtD,YAAG,QAAQ,OAAO;AAEhB,cAAG,MAAM,cAAc,MAAM,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG;AAC7C,wBAAY;AAAA,UACd,WAAU,MAAM,KAAK,EAAE,UAAU,GAAG;AAClC,wBAAY,MAAM,KAAK,EAAE,SAAS,WAAW,CAAC,CAAC;AAAA,UACjD;AACA,cAAG,CAAC,MAAM,YAAY;AACpB,mBAAO;AAAA,UACT;AAAA,QACF,WAAU,QAAQ,SAAS;AAGzB,qBAAW;AACX,cAAG,SAAS;AACV,gBAAG,WAAW,SAAS,GAAG;AAExB,qBAAO;AAAA,YACT;AACA,wBAAY;AAAA,UACd,WAAU,MAAM,OAAO,EAAE,WAAW,KAClC,MAAM,cAAc,MAAM,OAAO,EAAE,CAAC,CAAC,GAAG;AAExC,wBAAY,WAAW,SAAS;AAAA,UAClC,OAAO;AAEL,uBAAU,QAAQ,MAAM,OAAO,GAAG;AAChC,kBAAG,MAAM,SAAS,IAAI,KAAK,cAAc,MAAM;AAE7C,4BAAY;AAAA,cACd,OAAO;AACL,4BAAY,aAAa,WAAW,KAAK,QAAM,OAAO,IAAI;AAAA,cAC5D;AAAA,YACF;AAAA,UACF;AACA,cAAG,CAAC,MAAM,YAAY;AACpB,mBAAO;AAAA,UACT;AAAA,QACF,WAAU,UAAU,GAAG,GAAG;AACxB;AAAA,QACF,OAAO;AAEL,gBAAM,YAAY,KAAK,UAAU,OAAO,GAAG,EAAE,CAAC;AAC9C,cAAI,aAAa;AACjB,cAAG,WAAW;AACZ,2BAAe,CAAC,SAAS,CAAC;AAC1B,yBAAa,cAAc;AAAA,UAC7B;AAGA,qBAAW;AAIX,cAAG,WAAW,WAAW,KAAK,YAAY;AACxC;AAAA,UACF;AAGA,cAAG,WAAW,SAAS,KAAK,SAAS;AACnC,mBAAO;AAAA,UACT;AAEA,cAAG,cAAc,QAAW;AAG1B,gBAAG,WAAW,SAAS,GAAG;AACxB,qBAAO;AAAA,YACT;AACA,wBAAY;AAAA,UACd,OAAO;AACL,gBAAG,WAAW,OAAO,SAAS,GAAG;AAC/B,oBAAM,YAAY,UAAU,OAAO,EAAE,CAAC;AACtC,kBAAG,WAAW,OAAO,WAAW,CAAC,CAAC,GAAG;AACnC,sBAAM,iBAAiB,WAAW,CAAC,EAAE,OAAO;AAE5C,oBAAG,WAAW,QAAQ,SAAS,GAAG;AAEhC,8BAAY,eAAe,KAAK,QAAM,YAAY,WAAW,EAAE,CAAC;AAAA,gBAClE,WAAU,WAAW,UAAU,SAAS,KACtC,WAAW,mBAAmB,SAAS,GAAG;AAC1C,8BAAY,eAAe,KAAK,QAAM;AAAA,oBACpC;AAAA,oBAAO;AAAA,oBAAW;AAAA,oBAAI;AAAA,kBAAK,CAAC;AAAA,gBAChC;AAAA,cACF;AAAA,YACF,WAAU,WAAW,QAAQ,SAAS,GAAG;AACvC,0BAAY,WAAW,KAAK,QAAM,YAAY,WAAW,EAAE,CAAC;AAAA,YAC9D,WAAU,WAAW,mBAAmB,SAAS,GAAG;AAClD,0BACE,WAAW,KAAK,QAAM,WAAW,OAAO,WAAW,IAAI,KAAK,CAAC;AAAA,YACjE,WAAU,MAAM,SAAS,SAAS,GAAG;AACnC,0BAAY,WAAW,SAAS;AAAA,YAClC,OAAO;AACL,0BAAY;AAAA,YACd;AAAA,UACF;AAAA,QACF;AAGA,YAAG,CAAC,aAAa,MAAM,YAAY;AACjC,iBAAO;AAAA,QACT;AAEA,sBAAc,eAAe;AAAA,MAC/B;AAGA,aAAO,YAAY;AAAA,IACrB;AAQA,aAAS,aAAa,OAAO,IAAI;AAE/B,YAAM,SAAS,MAAM,aAAa,MAAM,KAAK;AAC7C,YAAM,QAAQ,OAAO,EAAE;AACvB,YAAM,SAAS,MAAM;AACrB,YAAM,WAAW,MAAM;AAGvB,YAAM,UAAU,EAAC,OAAO,GAAE;AAG1B,UAAG,MAAM,QAAQ,MAAM,GAAG;AAExB,iBAAQ,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACrC,cAAG,KAAK,cAAc,OAAO,CAAC,GAAG,OAAO,GAAG;AACzC,mBAAO,CAAC,IAAI;AACZ;AAAA,UACF;AAAA,QACF;AAAA,MACF,OAAO;AAEL,cAAM,WAAW,MAAM,QAAQ,OAAO,QAAQ,CAAC;AAC/C,aAAK,YAAY,QAAQ,UAAU,SAAS,EAAC,iBAAiB,SAAQ,CAAC;AACvE,aAAK,SAAS,QAAQ,UAAU,SAAS,EAAC,iBAAiB,SAAQ,CAAC;AAAA,MACtE;AAGA,YAAM,mBAAmB,CAAAC,QAAM;AAE7B,cAAM,MAAM,OAAO,KAAK,MAAM;AAC9B,mBAAU,QAAQ,KAAK;AACrB,cAAG,QAAQ,UAAU,MAAM,SAAS,OAAO,IAAI,EAAE,MAAM,KACrD,OAAO,IAAI,EAAE,OAAO,KAAK,MAAMA,KAAI;AACnC,mBAAO,OAAO,IAAI;AAClB,6BAAiB,IAAI;AAAA,UACvB;AAAA,QACF;AAAA,MACF;AACA,uBAAiB,EAAE;AAAA,IACrB;AAUA,aAAS,iBAAiB,OAAO,SAAS;AAExC,UAAG,MAAM,QAAQ,KAAK,GAAG;AACvB,eAAO,MAAM,IAAI,WAAS,iBAAiB,OAAO,OAAO,CAAC;AAAA,MAC5D;AAEA,UAAG,MAAM,SAAS,KAAK,GAAG;AAExB,YAAG,eAAe,OAAO;AACvB,iBAAO,MAAM,WAAW,EAAE,CAAC;AAAA,QAC7B;AAGA,YAAG,WAAW,QAAQ,KAAK,GAAG;AAC5B,iBAAO;AAAA,QACT;AAGA,YAAG,WAAW,OAAO,KAAK,GAAG;AAC3B,gBAAM,OAAO,IAAI,iBAAiB,MAAM,OAAO,GAAG,OAAO;AACzD,iBAAO;AAAA,QACT;AAGA,YAAG,SAAS,OAAO;AACjB,gBAAM,KAAK,MAAM,KAAK;AACtB,cAAG,QAAQ,KAAK,eAAe,EAAE,GAAG;AAClC,kBAAM,MAAM,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK;AAC1C,gBAAG,QAAQ,IAAI;AAEb,qBAAO,QAAQ,KAAK,EAAE,EAAE,GAAG;AAAA,YAC7B;AAEA,oBAAQ,KAAK,EAAE,EAAE,KAAK,KAAK;AAAA,UAC7B,OAAO;AAEL,oBAAQ,KAAK,EAAE,IAAI,CAAC,KAAK;AAAA,UAC3B;AAAA,QACF;AAGA,mBAAU,QAAQ,OAAO;AAEvB,cAAG,SAAS,SAAS,QAAQ,cAAc,SAAS,MAAM,IAAI,CAAC,GAAG;AAChE,mBAAO,MAAM,KAAK;AAClB;AAAA,UACF;AAEA,gBAAM,IAAI,IAAI,iBAAiB,MAAM,IAAI,GAAG,OAAO;AAAA,QACrD;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,aAAS,gBAAgB,QAAQ,UAAU,QAAQ;AACjD,UAAG,MAAM,SAAS,MAAM,GAAG;AACzB,aAAK,SAAS,QAAQ,UAAU,QAAQ,EAAC,iBAAiB,KAAI,CAAC;AAAA,MACjE,OAAO;AACL,eAAO,KAAK,MAAM;AAAA,MACpB;AAAA,IACF;AAUA,aAAS,WAAW,OAAO,SAAS,OAAO,OAAO;AAChD,UAAG,EAAE,SAAS,QAAQ;AACpB,eAAO;AAAA,MACT;AACA,YAAM,aAAa,MAAM,SAAS,MAAM,KAAK,CAAC;AAC9C,aAAO,cAAc,eAAe,OAAO,YAAY,SAAS,KAAK;AAAA,IACvE;AAiBA,aAAS,YAAY,SAAS,OAAO;AACnC,YAAM,KAAK,MAAM,QAAQ;AACzB,YAAM,KAAK,MAAM,OAAO;AACxB,YAAM,KAAK,MAAM,WAAW;AAC5B,YAAM,KAAK,QAAQ,QAAQ,IACxB,MAAM,QAAQ,QAAQ,QAAQ,CAAC,IAC9B,QAAQ,QAAQ,IAAI,CAAC,QAAQ,QAAQ,CAAC,IACxC,CAAC;AACH,YAAM,KAAK,QAAQ,OAAO,IACvB,MAAM,QAAQ,QAAQ,OAAO,CAAC,IAC7B,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,IACtC,CAAC;AACH,YAAM,KAAK,QAAQ,WAAW,IAC3B,MAAM,QAAQ,QAAQ,WAAW,CAAC,IACjC,QAAQ,WAAW,IAAI,CAAC,QAAQ,WAAW,CAAC,IAC9C,CAAC;AAEH,UAAG,GAAG,WAAW,KAAK,GAAG,WAAW,KAAK,GAAG,WAAW,GAAG;AACxD,eAAO;AAAA,MACT;AACA,UAAG,EAAE,GAAG,SAAS,EAAE,KAAK,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI;AACnD,eAAO;AAAA,MACT;AACA,UAAG,EAAE,CAAC,MAAM,GAAG,WAAW,KAAK,GAAG,SAAS,EAAE,KAAK,MAChD,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI;AAC7B,eAAO;AAAA,MACT;AACA,UAAG,EAAE,CAAC,MAAM,GAAG,WAAW,KAAK,GAAG,SAAS,EAAE,KAAK,MAChD,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI;AAC7B,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACzzBA;AAAA;AAAA;AAKA,QAAM,cAAc;AAEpB,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,MACV,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB,IAAI;AAEJ,QAAM;AAAA,MACJ,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,SAAS;AAAA,MACT,gBAAgB;AAAA,IAClB,IAAI;AAEJ,QAAM;AAAA,MACJ,YAAY;AAAA,MACZ,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,MACV,SAAS;AAAA,MACT,sBAAsB;AAAA,IACxB,IAAI;AAEJ,QAAM,MAAM,CAAC;AACb,WAAO,UAAU;AAcjB,QAAI,UAAU,OAAO;AAAA,MACnB;AAAA,MACA,iBAAiB;AAAA,MACjB;AAAA,MACA,UAAU,CAAC;AAAA,IACb,MAAM;AAEJ,UAAG,SAAS,OAAO,GAAG;AACpB,YAAI,OAAO,CAAC;AACZ,iBAAQ,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAE,GAAG;AACtC,gBAAM,YAAY,MAAM,IAAI,QAAQ;AAAA,YAClC;AAAA,YACA;AAAA,YACA,SAAS,QAAQ,CAAC;AAAA,YAClB;AAAA,UACF,CAAC;AACD,cAAG,cAAc,MAAM;AAErB;AAAA,UACF;AACA,eAAK,KAAK,SAAS;AAAA,QACrB;AACA,YAAG,QAAQ,iBAAiB,KAAK,WAAW,GAAG;AAE7C,gBAAM,YAAY;AAAA,YAChB;AAAA,YAAW;AAAA,YAAgB;AAAA,UAAY,KAAK,CAAC;AAC/C,cAAG,UAAU,WAAW,GAAG;AACzB,mBAAO,KAAK,CAAC;AAAA,UACf;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAGA,YAAM,MAAM,iBAAiB,WAAW,gBAAgB,UAAU;AAClE,UAAG,CAAC,aAAa,GAAG,GAAG;AACrB,oBAAY,MAAM,gBAAgB;AAAA,UAChC;AAAA,UACA,UAAU;AAAA,UACV,WAAW;AAAA,UACX,mBAAmB;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,MACH;AAGA,UAAG,UAAU,OAAO,GAAG;AACrB,YAAG,QAAQ,QAAQ,SAAS,WAC1B,QAAQ,KAAK,eAAe,QAAQ,KAAK,CAAC,GAAG;AAE7C,gBAAM,SAAS,QAAQ,KAAK,QAAQ,KAAK,CAAC;AAC1C,mBAAQ,IAAI,GAAG,IAAI,OAAO,QAAQ,EAAE,GAAG;AACrC,gBAAG,OAAO,CAAC,EAAE,aAAa,SAAS;AACjC,qBAAO,OAAO,CAAC,EAAE;AAAA,YACnB;AAAA,UACF;AAAA,QACF;AAGA,YAAG,SAAS,OAAO,KAAK,oBAAoB,OAAO,GAAG;AACpD,gBAAMC,QACJ,IAAI,aAAa,EAAC,WAAW,gBAAgB,OAAO,SAAS,QAAO,CAAC;AACvE,cAAG,QAAQ,QAAQ,oBAAoB,OAAO,GAAG;AAE/C,gBAAG,CAAE,QAAQ,KAAK,eAAe,QAAQ,KAAK,CAAC,GAAI;AACjD,sBAAQ,KAAK,QAAQ,KAAK,CAAC,IAAI,CAAC;AAAA,YAClC;AACA,oBAAQ,KAAK,QAAQ,KAAK,CAAC,EAAE,KAAK,EAAC,UAAU,SAAS,WAAWA,MAAI,CAAC;AAAA,UACxE;AACA,iBAAOA;AAAA,QACT;AAIA,YAAG,QAAQ,OAAO,GAAG;AACnB,gBAAM,YAAY;AAAA,YAChB;AAAA,YAAW;AAAA,YAAgB;AAAA,UAAY,KAAK,CAAC;AAC/C,cAAG,UAAU,SAAS,OAAO,GAAG;AAC9B,mBAAO,IAAI,QAAQ;AAAA,cACjB;AAAA,cACA;AAAA,cACA,SAAS,QAAQ,OAAO;AAAA,cACxB;AAAA,YACF,CAAC;AAAA,UACH;AAAA,QACF;AAGA,cAAM,gBAAiB,mBAAmB;AAE1C,cAAM,OAAO,CAAC;AAGd,cAAM,WAAW;AAIjB,YAAG,CAAC,SAAS,OAAO,KAAK,CAAC,oBAAoB,OAAO,GAAG;AACtD,sBAAY,UAAU,wBAAwB;AAAA,QAChD;AAGA,cAAM,oBACJ,iBAAiB,UAAU,gBAAgB,UAAU;AACvD,YAAG,CAAC,aAAa,iBAAiB,GAAG;AACnC,sBAAY,MAAM,gBAAgB;AAAA,YAChC;AAAA,YACA,UAAU;AAAA,YACV,WAAW;AAAA,YACX,mBAAmB;AAAA,YACnB;AAAA,UACF,CAAC;AAAA,QACH;AAEA,YAAG,QAAQ,QAAQ,SAAS,SAAS;AAEnC,cAAG,CAAC,QAAQ,KAAK,eAAe,QAAQ,KAAK,CAAC,GAAG;AAC/C,oBAAQ,KAAK,QAAQ,KAAK,CAAC,IAAI,CAAC;AAAA,UAClC;AACA,kBAAQ,KAAK,QAAQ,KAAK,CAAC,EAAE,KAAK,EAAC,UAAU,SAAS,WAAW,KAAI,CAAC;AAAA,QACxE;AAKA,YAAI,QAAQ,QAAQ,OAAO,KAAK,CAAC;AACjC,YAAG,MAAM,SAAS,GAAG;AACnB,kBAAQ,MAAM,KAAK,KAAK,EAAE,KAAK;AAAA,QACjC;AAGA,cAAM,cAAc;AACpB,mBAAU,QAAQ,OAAO;AACvB,gBAAM,gBAAgB,IAAI;AAAA,YACxB,EAAC,WAAW,aAAa,KAAK,MAAM,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,UAAC;AAGhE,gBAAMC,OAAM,iBAAiB,UAAU,eAAe,UAAU;AAChE,cAAG,CAAC,aAAaA,IAAG,GAAG;AACrB,wBAAY,MAAM,gBAAgB;AAAA,cAChC;AAAA,cACA,UAAUA;AAAA,cACV;AAAA,cACA,WAAW;AAAA,YACb,CAAC;AAAA,UACH;AAAA,QACF;AAGA,cAAM,OAAO,OAAO,KAAK,OAAO,EAAE,KAAK;AACvC,mBAAU,oBAAoB,MAAM;AAClC,gBAAM,gBAAgB,QAAQ,gBAAgB;AAG9C,cAAG,qBAAqB,OAAO;AAC7B,gBAAI,iBAAiB,SAAS,aAAa,EAAE;AAAA,cAC3C,iBAAe,IAAI,WAAW;AAAA,gBAC5B;AAAA,gBACA,KAAK;AAAA,gBACL,YAAY,EAAC,OAAO,MAAK;AAAA,gBACzB,MAAM,QAAQ;AAAA,cAChB,CAAC;AAAA,YAAC;AACJ,gBAAG,eAAe,WAAW,GAAG;AAC9B,+BAAiB,eAAe,CAAC;AAAA,YACnC;AAGA,kBAAM,QAAQ,IAAI;AAAA,cAChB,EAAC,WAAW,KAAK,OAAO,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,YAAC;AAEpD,iBAAK,KAAK,IAAI;AACd;AAAA,UACF;AAGA,cAAG,qBAAqB,SAAS;AAE/B,gBAAI,iBAAiB,SAAS,aAAa,EAAE;AAAA,cAC3C,iBAAe,IAAI,WAAW;AAAA,gBAC5B,WAAW;AAAA,gBACX,KAAK;AAAA,gBACL,YAAY,EAAC,OAAO,KAAI;AAAA,cAC1B,CAAC;AAAA,YAAC;AACJ,gBAAG,eAAe,WAAW,GAAG;AAC9B,+BAAiB,eAAe,CAAC;AAAA,YACnC;AAGA,kBAAM,QAAQ,IAAI;AAAA,cAChB,EAAC,WAAW,KAAK,SAAS,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,YAAC;AACtD,kBAAM,YAAY;AAAA,cAChB;AAAA,cAAW;AAAA,cAAO;AAAA,YAAY,KAAK,CAAC;AAGtC,kBAAM,YACJ,UAAU,SAAS,MAAM,KACzB,gBAAgB,WAAW,GAAG;AAChC,kBAAM,UACJ,aAAc,SAAS,cAAc,KAAK,cAAc,WAAW;AACrE,sBAAU,MAAM,OAAO,gBAAgB,EAAC,iBAAiB,QAAO,CAAC;AACjE;AAAA,UACF;AAGA,cAAG,qBAAqB,YAAY;AAElC,kBAAM,iBAAiB,MAAM,IAAI,QAAQ;AAAA,cACvC;AAAA,cACA,gBAAgB;AAAA,cAChB,SAAS;AAAA,cACT;AAAA,YACF,CAAC;AAGD,uBAAU,qBAAqB,gBAAgB;AAC7C,kBAAG,UAAU,SAAS,IAAI,iBAAiB,KACzC,UAAU,SAAS,IAAI,iBAAiB,EAAE,SAAS;AACnD,sBAAM,QAAQ,eAAe,iBAAiB;AAC9C,sBAAM,YAAY;AAAA,kBAChB;AAAA,kBAAW;AAAA,kBAAmB;AAAA,gBAAY,KAAK,CAAC;AAClD,sBAAM,WACJ,UAAU,SAAS,MAAM,KAAK,CAAC,QAAQ;AACzC;AAAA,kBACE;AAAA,kBAAM;AAAA,kBAAmB;AAAA,kBAAO,EAAC,iBAAiB,SAAQ;AAAA,gBAAC;AAC7D,uBAAO,eAAe,iBAAiB;AAAA,cACzC;AAAA,YACF;AAEA,gBAAG,OAAO,KAAK,cAAc,EAAE,SAAS,GAAG;AAEzC,oBAAM,QAAQ,IAAI,WAAW;AAAA,gBAC3B;AAAA,gBACA,KAAK;AAAA,gBACL,YAAY,EAAC,OAAO,KAAI;AAAA,cAC1B,CAAC;AACD,wBAAU,MAAM,OAAO,cAAc;AAAA,YACvC;AAEA;AAAA,UACF;AAEA,cAAG,qBAAqB,aAAa;AAEnC,kBAAM,iBAAiB,MAAM,IAAI,QAAQ;AAAA,cACvC;AAAA,cACA;AAAA,cACA,SAAS;AAAA,cACT;AAAA,YACF,CAAC;AAED,gBAAG,EAAE,SAAS,cAAc,KAAK,eAAe,WAAW,IAAI;AAC7D,wBAAU,MAAM,kBAAkB,cAAc;AAAA,YAClD;AACA;AAAA,UACF;AAGA,cAAG,qBAAqB,UAAU;AAEhC,kBAAM,YAAY;AAAA,cAChB;AAAA,cAAW;AAAA,cAAgB;AAAA,YAAY,KAAK,CAAC;AAC/C,gBAAG,UAAU,SAAS,QAAQ,GAAG;AAC/B;AAAA,YACF;AAGA,kBAAM,QAAQ,IAAI,WAAW;AAAA,cAC3B;AAAA,cACA,KAAK;AAAA,cACL,YAAY,EAAC,OAAO,KAAI;AAAA,YAC1B,CAAC;AACD,sBAAU,MAAM,OAAO,aAAa;AACpC;AAAA,UACF;AAIA,cAAG,qBAAqB,YAAY,qBAAqB,WACvD,qBAAqB,eACrB,WAAW,gBAAgB,GAAG;AAE9B,kBAAM,QAAQ,IAAI,WAAW;AAAA,cAC3B;AAAA,cACA,KAAK;AAAA,cACL,YAAY,EAAC,OAAO,KAAI;AAAA,YAC1B,CAAC;AACD,sBAAU,MAAM,OAAO,aAAa;AACpC;AAAA,UACF;AAGA,cAAG,CAAC,SAAS,aAAa,GAAG;AAC3B,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,YAAoB;AAAA,UACxB;AAGA,cAAG,cAAc,WAAW,GAAG;AAC7B,kBAAM,qBAAqB,IAAI,WAAW;AAAA,cACxC;AAAA,cACA,KAAK;AAAA,cACL,OAAO;AAAA,cACP,YAAY,EAAC,OAAO,KAAI;AAAA,cACxB,SAAS;AAAA,YACX,CAAC;AACD,kBAAM,eAAe,UAAU,SAAS,IAAI,kBAAkB,IAC5D,UAAU,SAAS,IAAI,kBAAkB,EAAE,OAAO,IAAI;AACxD,gBAAI,aAAa;AACjB,gBAAG,cAAc;AACf,iCAAmB,WAAW,cAAc,OAAO;AACnD,kBAAG,CAAC,UAAU,KAAK,YAAY,CAAC,GAAG;AACjC,qBAAK,YAAY,IAAI,CAAC;AAAA,cACxB;AACA,2BAAa,KAAK,YAAY;AAAA,YAChC;AACA;AAAA,cACE;AAAA,cAAY;AAAA,cAAoB;AAAA,cAAe;AAAA,gBAC7C,iBAAiB;AAAA,cACnB;AAAA,YAAC;AAAA,UACL;AAGA,qBAAU,gBAAgB,eAAe;AAEvC,kBAAM,qBAAqB,IAAI,WAAW;AAAA,cACxC;AAAA,cACA,KAAK;AAAA,cACL,OAAO;AAAA,cACP,YAAY,EAAC,OAAO,KAAI;AAAA,cACxB,SAAS;AAAA,YACX,CAAC;AAID,kBAAM,eAAe,UAAU,SAAS,IAAI,kBAAkB,IAC5D,UAAU,SAAS,IAAI,kBAAkB,EAAE,OAAO,IAAI;AACxD,gBAAI,aAAa;AACjB,gBAAG,cAAc;AACf,iCAAmB,WAAW,cAAc,OAAO;AACnD,kBAAG,CAAC,UAAU,KAAK,YAAY,CAAC,GAAG;AACjC,qBAAK,YAAY,IAAI,CAAC;AAAA,cACxB;AACA,2BAAa,KAAK,YAAY;AAAA,YAChC;AAEA,kBAAM,YAAY;AAAA,cAChB;AAAA,cAAW;AAAA,cAAoB;AAAA,YAAY,KAAK,CAAC;AAGnD,kBAAM,UAAU,SAAS,YAAY;AACrC,kBAAM,SAAS,QAAQ,YAAY;AACnC,gBAAI;AACJ,gBAAG,QAAQ;AACT,sBAAQ,aAAa,OAAO;AAAA,YAC9B,WAAU,SAAS;AACjB,sBAAQ,aAAa,QAAQ;AAAA,YAC/B;AAGA,gBAAI,gBAAgB,MAAM,IAAI,QAAQ;AAAA,cACpC;AAAA,cACA,gBAAgB;AAAA,cAChB,SAAU,UAAU,UAAW,QAAQ;AAAA,cACvC;AAAA,YACF,CAAC;AAGD,gBAAG,QAAQ;AAET,kBAAG,CAAC,SAAS,aAAa,GAAG;AAC3B,gCAAgB,CAAC,aAAa;AAAA,cAChC;AAEA,kBAAG,CAAC,UAAU,SAAS,OAAO,GAAG;AAE/B,gCAAgB;AAAA,kBACd,CAAC,IAAI,WAAW;AAAA,oBACd;AAAA,oBACA,KAAK;AAAA,oBACL,YAAY,EAAC,OAAO,KAAI;AAAA,kBAC1B,CAAC,CAAC,GAAG;AAAA,gBACP;AAGA,oBAAG,YAAY,cAAc;AAC3B,gCAAc,IAAI,WAAW;AAAA,oBAC3B;AAAA,oBACA,KAAK;AAAA,oBACL,YAAY,EAAC,OAAO,KAAI;AAAA,kBAC1B,CAAC,CAAC,IAAI,aAAa,QAAQ;AAAA,gBAC7B;AAAA,cACF,OAAO;AACL,0BAAU,YAAY,oBAAoB,eAAe;AAAA,kBACvD,cAAc;AAAA,kBACd,gBAAgB;AAAA,gBAClB,CAAC;AACD;AAAA,cACF;AAAA,YACF;AAGA,gBAAG,SAAS;AACV,kBAAG,UAAU,SAAS,QAAQ,MAAM,UAAU,SAAS,KAAK,KAC1D,UAAU,SAAS,QAAQ,KAAK,eAAe,YAAY,IAAI;AAE/D,oBAAI;AACJ,oBAAG,WAAW,eAAe,kBAAkB,GAAG;AAChD,8BAAY,WAAW,kBAAkB;AAAA,gBAC3C,OAAO;AACL,6BAAW,kBAAkB,IAAI,YAAY,CAAC;AAAA,gBAChD;AAGA,sBAAM,OAAO,UAAU,SAAS,KAAK,IACnC,aAAa,KAAK,IAAI,aAAa,QAAQ,MAC3C,IAAI,WAAW;AAAA,kBAAC;AAAA,kBAAW,KAAK;AAAA,kBAC9B,YAAY,EAAC,OAAO,KAAI;AAAA,gBAAC,CAAC;AAI9B;AAAA,kBACE;AAAA,kBAAW;AAAA,kBAAK;AAAA,kBAAe;AAAA,oBAC7B,iBACG,CAAC,QAAQ,iBAAiB,UAAU,SAAS,MAAM;AAAA,kBACxD;AAAA,gBAAC;AAAA,cACL,WAAU,UAAU,SAAS,QAAQ,KACnC,eAAe,YAAY,GAAG;AAK9B,oBAAG,SAAS,aAAa,KAAK,cAAc,SAAS,GAAG;AACtD,kCAAgB,EAAC,aAAa,cAAa;AAAA,gBAC7C;AACA;AAAA,kBACE;AAAA,kBAAY;AAAA,kBAAoB;AAAA,kBAAe;AAAA,oBAC7C,iBACG,CAAC,QAAQ,iBAAiB,UAAU,SAAS,MAAM;AAAA,kBACxD;AAAA,gBAAC;AAAA,cACL,OAAO;AAGL,oBAAG,SAAS,aAAa,KAAK,cAAc,WAAW,KACrD,QAAQ,eAAe;AACvB,kCAAgB,cAAc,CAAC;AAAA,gBACjC;AACA,gCAAgB;AAAA,kBACd,CAAC,IAAI,WAAW;AAAA,oBACd;AAAA,oBACA,KAAK;AAAA,oBACL,YAAY,EAAC,OAAO,KAAI;AAAA,kBAC1B,CAAC,CAAC,GAAG;AAAA,gBACP;AAGA,oBAAG,SAAS,cAAc;AACxB,gCAAc,IAAI,WAAW;AAAA,oBAC3B;AAAA,oBACA,KAAK;AAAA,oBACL,YAAY,EAAC,OAAO,KAAI;AAAA,kBAC1B,CAAC,CAAC,IAAI,aAAa,KAAK;AAAA,gBAC1B;AAGA,oBAAG,YAAY,cAAc;AAC3B,gCAAc,IAAI,WAAW;AAAA,oBAC3B;AAAA,oBACA,KAAK;AAAA,oBACL,YAAY,EAAC,OAAO,KAAI;AAAA,kBAC1B,CAAC,CAAC,IAAI,aAAa,QAAQ;AAAA,gBAC7B;AACA;AAAA,kBACE;AAAA,kBAAY;AAAA,kBAAoB;AAAA,kBAAe;AAAA,oBAC7C,iBACG,CAAC,QAAQ,iBAAiB,UAAU,SAAS,MAAM;AAAA,kBACxD;AAAA,gBAAC;AAAA,cACL;AAAA,YACF,WAAU,UAAU,SAAS,WAAW,KACtC,UAAU,SAAS,QAAQ,KAAK,UAAU,SAAS,KAAK,KACxD,UAAU,SAAS,OAAO,GAAG;AAG7B,kBAAI;AACJ,kBAAG,WAAW,eAAe,kBAAkB,GAAG;AAChD,4BAAY,WAAW,kBAAkB;AAAA,cAC3C,OAAO;AACL,2BAAW,kBAAkB,IAAI,YAAY,CAAC;AAAA,cAChD;AAEA,kBAAI;AACJ,kBAAG,UAAU,SAAS,WAAW,GAAG;AAGlC,oBAAG,SAAS,aAAa,GAAG;AAC1B,kCAAgB,cAAc,QAAQ;AAAA,gBACxC;AACA,sBAAM,aAAa,WAAW;AAAA,cAChC,WAAU,UAAU,SAAS,QAAQ,GAAG;AACtC,sBAAM,WAAW;AAAA,kBACf;AAAA,kBAAW;AAAA,kBAAoB;AAAA,gBAAQ,KAAK;AAC9C,sBAAM,eAAe,IAAI;AAAA,kBACvB,EAAC,WAAW,KAAK,UAAU,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,gBAAC;AACvD,oBAAG,aAAa,UAAU;AACxB,wBAAM,aAAa,QAAQ;AAC3B,yBAAO,cAAc,YAAY;AAAA,gBACnC,OAAO;AACL,sBAAI;AACJ,mBAAC,KAAK,GAAG,MAAM,IAAI,SAAS,cAAc,QAAQ,KAAK,CAAC,CAAC;AACzD,sBAAG,CAAC,UAAU,GAAG,GAAG;AAElB,0BAAM;AAAA,kBACR,OAAO;AACL,4BAAO,OAAO,QAAQ;AAAA,sBACpB,KAAK;AACH,+BAAO,cAAc,QAAQ;AAC7B;AAAA,sBACF,KAAK;AACH,sCAAc,QAAQ,IAAI,OAAO,CAAC;AAClC;AAAA,sBACF;AACE,sCAAc,QAAQ,IAAI;AAC1B;AAAA,oBACJ;AAAA,kBACF;AAAA,gBACF;AAAA,cACF,WAAU,UAAU,SAAS,KAAK,GAAG;AACnC,sBAAM,QAAQ,IAAI,WAAW;AAAA,kBAAC;AAAA,kBAAW,KAAK;AAAA,kBAC5C,YAAY,EAAC,OAAO,KAAI;AAAA,gBAAC,CAAC;AAC5B,sBAAM,cAAc,KAAK;AACzB,uBAAO,cAAc,KAAK;AAAA,cAC5B,WAAU,UAAU,SAAS,OAAO,GAAG;AACrC,sBAAM,UAAU,IAAI,WAAW;AAAA,kBAC7B;AAAA,kBACA,KAAK;AAAA,kBACL,YAAY,EAAC,OAAO,KAAI;AAAA,gBAC1B,CAAC;AACD,oBAAIC;AACJ,iBAAC,KAAK,GAAGA,MAAK,IAAI,SAAS,cAAc,OAAO,KAAK,CAAC,CAAC;AACvD,wBAAOA,OAAM,QAAQ;AAAA,kBACnB,KAAK;AACH,2BAAO,cAAc,OAAO;AAC5B;AAAA,kBACF,KAAK;AACH,kCAAc,OAAO,IAAIA,OAAM,CAAC;AAChC;AAAA,kBACF;AACE,kCAAc,OAAO,IAAIA;AACzB;AAAA,gBACJ;AAIA,oBAAG,OAAO,KAAK,aAAa,EAAE,WAAW,KACvC,SAAS,cAAc;AACvB,kCAAgB,MAAM,IAAI,QAAQ;AAAA,oBAChC;AAAA,oBACA,gBAAgB;AAAA,oBAChB,SAAS,EAAC,OAAO,aAAa,KAAK,EAAC;AAAA,oBACpC;AAAA,kBACF,CAAC;AAAA,gBACH;AAAA,cACF;AAGA,kBAAG,CAAC,KAAK;AACP,sBAAM,IAAI,WAAW;AAAA,kBAAC;AAAA,kBAAW,KAAK;AAAA,kBACpC,YAAY,EAAC,OAAO,KAAI;AAAA,gBAAC,CAAC;AAAA,cAC9B;AAGA;AAAA,gBACE;AAAA,gBAAW;AAAA,gBAAK;AAAA,gBAAe;AAAA,kBAC7B,iBAAiB,UAAU,SAAS,MAAM;AAAA,gBAC5C;AAAA,cAAC;AAAA,YACL,OAAO;AAIL,oBAAM,UAAW,CAAC,QAAQ,iBACxB,UAAU,SAAS,MAAM,KAAK,UAAU,SAAS,OAAO,KACvD,SAAS,aAAa,KAAK,cAAc,WAAW,KACrD,qBAAqB,WAAW,qBAAqB;AAGvD;AAAA,gBACE;AAAA,gBAAY;AAAA,gBAAoB;AAAA,gBAChC,EAAC,iBAAiB,QAAO;AAAA,cAAC;AAAA,YAC9B;AAAA,UACF;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAGA,aAAO;AAAA,IACT;AAgBA,QAAI,aAAa,CAAC;AAAA,MAChB;AAAA,MACA;AAAA,MACA,QAAQ;AAAA,MACR,aAAa,EAAC,OAAO,MAAK;AAAA,MAC1B,UAAU;AAAA,MACV,OAAO;AAAA,IACT,MAAM;AAEJ,UAAG,QAAQ,MAAM;AACf,eAAO;AAAA,MACT;AAIA,UAAG,UAAU,wBAAwB,UAAU,iBAAiB;AAC9D,oBAAY,UAAU;AAAA,MACxB;AAEA,YAAM,aAAa,UAAU,WAAW;AAGxC,UAAG,WAAW,GAAG,KACf,OAAO,cACP,WAAW,WAAW,GAAG,KACzB,WAAW,WAAW,GAAG,EAAE,OAAO,KAClC,WAAW,WAAW,GAAG,EAAE,OAAO,EAAE,OAAO,GAAG;AAC9C,eAAO,WAAW,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;AAAA,MAClD;AAGA,UAAG,WAAW,SAAS,OAAO,YAAY;AACxC,cAAM,kBAAkB,UAAU,WAAW,KAAK;AAGlD,cAAM,aAAa,CAAC;AACpB,YAAG,UAAU,KAAK,KAAK,YAAY,SAAS,EAAE,YAAY,QAAQ;AAChE,qBAAW,KAAK,UAAU,YAAY;AAAA,QACxC;AAGA,YAAG,UAAU,KAAK,KAAK,eAAe,OAAO;AAC3C,kBAAQ,MAAM,WAAW,EAAE,CAAC;AAAA,QAC9B;AAIA,YAAG,SAAS,KAAK,GAAG;AAElB,cAAG,YAAY,OAAO;AACpB,uBAAW;AAAA,cACT;AAAA,cAAgB;AAAA,cAAoB;AAAA,cAAU;AAAA,YAAY;AAAA,UAC9D;AAEA,cAAG,SAAS,OAAO;AACjB,uBAAW;AAAA,cACT;AAAA,cAAa;AAAA,YAAe;AAAA,UAChC;AACA,qBAAW,KAAK,UAAU,cAAc,MAAM;AAE9C,cAAG,EAAE,YAAY,QAAQ;AACvB,uBAAW;AAAA,cACT;AAAA,cAAgB;AAAA,cAAoB;AAAA,cAAU;AAAA,YAAY;AAAA,UAC9D;AAEA,cAAG,EAAE,SAAS,QAAQ;AACpB,uBAAW,KAAK,aAAa,eAAe;AAAA,UAC9C;AAAA,QACF,WAAU,UAAU,KAAK,KAAK,CAAC,SAAS,KAAK,GAAG;AAC9C,qBAAW,KAAK,OAAO,WAAW,SAAS,WAAW;AAAA,QACxD;AAGA,YAAI,iBAAiB;AACrB,YAAI,sBAAsB;AAE1B,YAAG,SAAS;AACV,2BAAiB;AACjB,gCAAsB;AACtB,qBAAW,KAAK,MAAM;AAAA,QACxB,WAAU,QAAQ,KAAK,GAAG;AAGxB,cAAG,EAAE,YAAY,QAAQ;AACvB,uBAAW,KAAK,OAAO;AAAA,UACzB;AACA,gBAAM,OAAO,MAAM,OAAO;AAC1B,cAAG,KAAK,WAAW,GAAG;AAGpB,6BAAiB;AACjB,kCAAsB;AAAA,UACxB,OAAO;AACL,gBAAI,iBAAkB,KAAK,WAAW,IAAK,kBAAkB;AAC7D,gBAAI,aAAa;AACjB,qBAAQ,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AACnC,oBAAM,OAAO,KAAK,CAAC;AACnB,kBAAI,eAAe;AACnB,kBAAI,WAAW;AACf,kBAAG,SAAS,IAAI,GAAG;AACjB,oBAAG,gBAAgB,MAAM;AACvB,wBAAM,QAAQ,KAAK,WAAW,KAAK,IAAI,YAAY;AACnD,wBAAM,MAAM,KAAK,YAAY;AAC7B,iCAAe,GAAG,IAAI,IAAI,GAAG;AAAA,gBAC/B,WAAU,eAAe,MAAM;AAC7B,iCAAe,KAAK,WAAW,EAAE,YAAY;AAAA,gBAC/C,WAAU,WAAW,MAAM;AACzB,6BAAW,KAAK,OAAO;AAAA,gBACzB,OAAO;AAEL,iCAAe;AAAA,gBACjB;AAAA,cACF,OAAO;AACL,2BAAW;AAAA,cACb;AACA,kBAAG,mBAAmB,MAAM;AAC1B,iCAAiB;AAAA,cACnB,WAAU,iBAAiB,kBAAkB,SAAS,IAAI,GAAG;AAC3D,iCAAiB;AAAA,cACnB;AACA,kBAAG,eAAe,MAAM;AACtB,6BAAa;AAAA,cACf,WAAU,aAAa,YAAY;AACjC,6BAAa;AAAA,cACf;AAGA,kBAAG,mBAAmB,WAAW,eAAe,SAAS;AACvD;AAAA,cACF;AAAA,YACF;AACA,6BAAiB,kBAAkB;AACnC,yBAAa,cAAc;AAC3B,gBAAG,eAAe,SAAS;AACzB,+BAAiB;AACjB,oCAAsB;AAAA,YACxB,OAAO;AACL,oCAAsB;AAAA,YACxB;AAAA,UACF;AAAA,QACF,OAAO;AACL,cAAG,SAAS,KAAK,GAAG;AAClB,gBAAG,eAAe,SAAS,EAAE,YAAY,QAAQ;AAC/C,yBAAW,KAAK,aAAa,eAAe;AAC5C,oCAAsB,MAAM,WAAW;AACvC,oBAAM,MAAM,MAAM,YAAY;AAC9B,kBAAG,KAAK;AACN,sCAAsB,GAAG,mBAAmB,IAAI,GAAG;AAAA,cACrD;AAAA,YACF,WAAU,gBAAgB,SAAS,EAAE,YAAY,QAAQ;AACvD,oCAAsB,IAAI,MAAM,YAAY,CAAC;AAAA,YAC/C,WAAU,WAAW,OAAO;AAC1B,+BAAiB;AACjB,oCAAsB,MAAM,OAAO;AAAA,YACrC;AAAA,UACF,OAAO;AACL,6BAAiB;AACjB,kCAAsB;AAAA,UACxB;AACA,qBAAW,KAAK,MAAM;AAAA,QACxB;AAGA,mBAAW,KAAK,OAAO;AAIvB,YAAG,UAAU,KAAK,KAAK,EAAE,YAAY,QAAQ;AAE3C,qBAAW,KAAK,UAAU,YAAY;AAAA,QACxC;AAGA,YAAG,SAAS,KAAK,KAAK,OAAO,KAAK,KAAK,EAAE,WAAW,GAAG;AAErD,qBAAW,KAAK,aAAa,eAAe;AAAA,QAC9C;AAEA,cAAM,OAAO;AAAA,UACX;AAAA,UAAW;AAAA,UAAK;AAAA,UAAO;AAAA,UAAY;AAAA,UAAgB;AAAA,QAAmB;AACxE,YAAG,SAAS,MAAM;AAChB,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAG,WAAW,OAAO;AACnB,YAAG,YAAY,WAAW;AAExB,gBAAM,QAAQ,UAAU,QAAQ;AAChC,cAAG,IAAI,QAAQ,KAAK,MAAM,KAAK,QAAQ,OAAO;AAE5C,kBAAM,SAAS,IAAI,OAAO,MAAM,MAAM;AACtC,gBAAG,CAAC,UAAU,SAAS,IAAI,MAAM,GAAG;AAClC,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAGA,UAAI,SAAS;AAEb,YAAM,iBAAiB,CAAC;AACxB,UAAI,SAAS,UAAU;AAGvB,YAAM,mBAAmB,IAAI,SAAS;AACtC,eAAQ,IAAI,GAAG,IAAI,oBAAoB,IAAI,CAAC,KAAK,QAAQ,EAAE,GAAG;AAC5D,iBAAS,OAAO,IAAI,CAAC,CAAC;AACtB,YAAG,MAAM,QAAQ;AACf,yBAAe,KAAK,OAAO,EAAE,EAAE,CAAC,CAAC;AAAA,QACnC;AAAA,MACF;AAEA,eAAQ,IAAI,eAAe,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AAClD,cAAM,QAAQ,eAAe,CAAC;AAC9B,cAAM,QAAQ,MAAM;AACpB,mBAAU,QAAQ,OAAO;AAKvB,gBAAM,QAAQ,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI,MAAM;AACtD,gBAAM,gBAAiB,UAAU,SAAS,IAAI,IAAI,EAAE,YACjD,CAAC,UAAU,SAAS,IAAI,KAAK,KAC7B,UAAU,QAAQ,UAAU,SAAS,IAAI,KAAK,EAAE,KAAK,MAAM;AAI9D,cAAG,kBAAkB,WAAW,QAC9B,sBAAsB,OAAO,MAAM,IAAI,IAAI;AAC3C,qBAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAGA,UAAG,WAAW,MAAM;AAClB,eAAO;AAAA,MACT;AAIA,iBAAU,CAAC,MAAM,EAAE,KAAK,UAAU,UAAU;AAC1C,YAAG,MAAM,GAAG,WAAW,IAAI,WAAW,OAAO,GAAG,GAAG;AACjD,gBAAM,IAAI;AAAA,YACR,iBAAiB,GAAG,2BAA2B,IAAI;AAAA,YACnD;AAAA,YACA,EAAC,MAAM,4BAA4B,SAAS,UAAS;AAAA,UAAC;AAAA,QAC1D;AAAA,MACF;AAGA,UAAG,CAAC,WAAW,OAAO;AACpB,YAAG,WAAW,WAAW;AACvB,cAAG,CAAC,UAAU,OAAO,GAAG;AAEtB,mBAAO;AAAA,UACT,OAAO;AACL,kBAAM,OAAO,YAAY,aAAa,MAAM,UAAU,OAAO,CAAC,GAAG,GAAG;AACpE,mBAAO,cAAc,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK;AAAA,UAClD;AAAA,QACF,OAAO;AACL,iBAAO,YAAY,MAAM,GAAG;AAAA,QAC9B;AAAA,MACF;AAGA,aAAO;AAAA,IACT;AAaA,QAAI,eAAe,CAAC,EAAC,WAAW,gBAAgB,OAAO,QAAO,MAAM;AAElE,UAAG,SAAS,KAAK,GAAG;AAElB,cAAMC,QAAO,iBAAiB,WAAW,gBAAgB,OAAO;AAChE,cAAM,WAAW,iBAAiB,WAAW,gBAAgB,WAAW;AACxE,cAAM,YAAY,iBAAiB,WAAW,gBAAgB,YAAY;AAC1E,cAAM,YACJ,iBAAiB,WAAW,gBAAgB,YAAY,KAAK,CAAC;AAGhE,cAAM,gBAAgB,YAAY,SAAS,CAAC,UAAU,SAAS,QAAQ;AAGvE,YAAG,CAAC,iBAAiBA,UAAS,SAAS;AAErC,cAAG,MAAM,OAAO,MAAMA,OAAM;AAC1B,mBAAO,MAAM,QAAQ;AAAA,UACvB;AACA,cAAG,eAAe,SAAS,MAAM,WAAW,MAAM,YAC/C,gBAAgB,SAAS,MAAM,YAAY,MAAM,WAAW;AAC7D,mBAAO,MAAM,QAAQ;AAAA,UACvB;AACA,cAAG,eAAe,SAAS,MAAM,WAAW,MAAM,UAAU;AAC1D,mBAAO,MAAM,QAAQ;AAAA,UACvB;AACA,cAAG,gBAAgB,SAAS,MAAM,YAAY,MAAM,WAAW;AAC7D,mBAAO,MAAM,QAAQ;AAAA,UACvB;AAAA,QACF;AAMA,cAAM,WAAW,OAAO,KAAK,KAAK,EAAE;AACpC,cAAM,iBAAkB,aAAa,KAClC,aAAa,KAAK,YAAY,SAAS,CAAC;AAC3C,cAAM,qBAAsB,eAAe;AAC3C,cAAM,gBAAgB,UAAU,MAAM,QAAQ,CAAC;AAC/C,cAAM,iBAAkB,UAAU,SAAS,IAAI,cAAc,KAC3D,UAAU,SAAS,IAAI,cAAc,EAAE,WAAW,MAAM;AAC1D,YAAG,kBACDA,UAAS,YACR,CAAC,sBAAsB,CAAC,iBAAiB,iBAAiB;AAC3D,iBAAO,MAAM,QAAQ;AAAA,QACvB;AAEA,cAAM,OAAO,CAAC;AAGd,YAAG,eAAe;AAChB,eAAK,IAAI,WAAW;AAAA,YAClB;AAAA,YACA,KAAK;AAAA,YACL,YAAY,EAAC,OAAO,KAAI;AAAA,UAC1B,CAAC,CAAC,IAAI,MAAM,QAAQ;AAAA,QACtB;AAEA,YAAG,WAAW,OAAO;AAEnB,eAAK,IAAI,WAAW;AAAA,YAClB;AAAA,YACA,KAAK;AAAA,YACL,YAAY,EAAC,OAAO,KAAI;AAAA,UAC1B,CAAC,CAAC,IAAI,IAAI;AAAA,YACR,EAAC,WAAW,KAAK,MAAM,OAAO,GAAG,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,UAAC;AAAA,QAC/D,WAAU,eAAe,OAAO;AAE9B,eAAK,IAAI,WAAW;AAAA,YAClB;AAAA,YACA,KAAK;AAAA,YACL,YAAY,EAAC,OAAO,KAAI;AAAA,UAC1B,CAAC,CAAC,IAAI,MAAM,WAAW;AAAA,QACzB;AAEA,YAAG,gBAAgB,OAAO;AAExB,eAAK,IAAI,WAAW;AAAA,YAClB;AAAA,YACA,KAAK;AAAA,YACL,YAAY,EAAC,OAAO,KAAI;AAAA,UAC1B,CAAC,CAAC,IAAI,MAAM,YAAY;AAAA,QAC1B;AAGA,aAAK,IAAI,WAAW;AAAA,UAClB;AAAA,UACA,KAAK;AAAA,UACL,YAAY,EAAC,OAAO,KAAI;AAAA,QAC1B,CAAC,CAAC,IAAI,MAAM,QAAQ;AAEpB,eAAO;AAAA,MACT;AAGA,YAAM,mBAAmB;AAAA,QAAW;AAAA,QAAW;AAAA,QAAgB,EAAC,OAAO,KAAI;AAAA,QACzE;AAAA,MAAO;AACT,YAAM,OAAO,iBAAiB,WAAW,gBAAgB,OAAO;AAChE,YAAM,YAAY,IAAI,WAAW;AAAA,QAC/B;AAAA,QACA,KAAK,MAAM,KAAK;AAAA,QAChB,YAAY,EAAC,OAAO,SAAS,SAAQ;AAAA,QACrC,MAAM,QAAQ;AAAA,MAAI,CAAC;AAGrB,UAAG,SAAS,SAAS,SAAS,YAAY,qBAAqB,UAAU;AACvE,eAAO;AAAA,MACT;AAEA,aAAO;AAAA,QACL,CAAC,IAAI,WAAW;AAAA,UACd;AAAA,UACA,KAAK;AAAA,UACL,YAAY,EAAC,OAAO,KAAI;AAAA,QAC1B,CAAC,CAAC,GAAG;AAAA,MACP;AAAA,IACF;AAcA,aAAS,YACP,WAAW,KAAK,OAAO,YAAY,gBAAgB,qBAAqB;AACxE,UAAG,wBAAwB,MAAM;AAC/B,8BAAsB;AAAA,MACxB;AAGA,YAAM,QAAQ,CAAC;AAGf,WAAI,wBAAwB,SAAS,wBAAwB,eAC3D,UAAU,KAAK,KAAK,SAAS,OAAO;AAEpC,YAAG,wBAAwB,YAAY;AACrC,gBAAM,KAAK,UAAU;AAAA,QACvB;AAEA,cAAM,OAAO,IAAI;AAAA,UACf,EAAC,WAAW,KAAK,MAAM,KAAK,GAAG,YAAY,EAAC,OAAO,KAAI,EAAC;AAAA,QAAC;AAC3D,YAAG,UAAU,SAAS,IAAI,IAAI,KAC5B,UAAU,SAAS,IAAI,IAAI,KAC3B,UAAU,SAAS,IAAI,IAAI,EAAE,KAAK,MAAM,MAAM,KAAK,GAAG;AAEtD,gBAAM,KAAK,MAAM,OAAO,CAAC,UAAU,KAAK,CAAC;AAAA,QAC3C,OAAO;AAEL,gBAAM,KAAK,MAAM,OAAO,CAAC,OAAO,QAAQ,CAAC;AAAA,QAC3C;AAAA,MACF,OAAO;AACL,cAAM,KAAK,mBAAmB;AAG9B,cAAM,UAAU,MAAM,KAAK,QAAM,GAAG,SAAS,GAAG,CAAC;AACjD,YAAG,SAAS;AAEV,gBAAM,KAAK,QAAQ,QAAQ,WAAW,GAAG,CAAC;AAAA,QAC5C;AAAA,MACF;AACA,YAAM,KAAK,OAAO;AAElB,YAAM,eAAe,UAAU,QAAQ,GAAG;AAC1C,iBAAU,aAAa,YAAY;AAEjC,YAAG,EAAE,aAAa,eAAe;AAC/B;AAAA,QACF;AAEA,cAAM,yBAAyB,aAAa,SAAS,EAAE,cAAc;AACrE,mBAAU,QAAQ,OAAO;AAEvB,cAAG,EAAE,QAAQ,yBAAyB;AACpC;AAAA,UACF;AAGA,iBAAO,uBAAuB,IAAI;AAAA,QACpC;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAUA,aAAS,mBAAmB,WAAW,cAAc,SAAS;AAC5D,UAAG,WAAW,WAAW,cAAc,EAAC,OAAO,KAAI,GAAG,OAAO,MAAM,SAAS;AAC1E,cAAM,IAAI;AAAA,UACR;AAAA,UAEA;AAAA,UAAsB,EAAC,MAAM,sBAAqB;AAAA,QAAC;AAAA,MACvD;AAAA,IACF;AAAA;AAAA;;;ACzoCA;AAAA;AAAA;AAKA,WAAO,UAAU,CAAAC,YAAU;AAAA,MACzB,MAAM,gBAAgB;AAAA,QACpB,WAAW;AACT,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO,eAAe,iBAAiB,aAAa;AAAA,QAClD,UAAU;AAAA,QACV,YAAY;AAAA,MACd,CAAC;AACD,aAAO,eAAe,gBAAgB,WAAW,eAAe;AAAA,QAC9D,UAAU;AAAA,QACV,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,OAAO;AAAA,MACT,CAAC;AAQD,sBAAgB,UAAU,SAAS,OAAO,KAAK;AAC7C,YAAG,UAAU,SAAS,GAAG;AACvB,iBAAO,QAAQ;AAAA,YACb,IAAI,UAAU,uCAAuC;AAAA,UAAC;AAAA,QAC1D;AACA,eAAOA,QAAO,QAAQ,OAAO,GAAG;AAAA,MAClC;AACA,sBAAgB,SAAS,SAAS,OAAO;AACvC,YAAG,UAAU,SAAS,GAAG;AACvB,iBAAO,QAAQ;AAAA,YACb,IAAI,UAAU,sCAAsC;AAAA,UAAC;AAAA,QACzD;AACA,eAAOA,QAAO,OAAO,KAAK;AAAA,MAC5B;AACA,sBAAgB,UAAU,SAAS,OAAO;AACxC,YAAG,UAAU,SAAS,GAAG;AACvB,iBAAO,QAAQ;AAAA,YACb,IAAI,UAAU,uCAAuC;AAAA,UAAC;AAAA,QAC1D;AACA,eAAOA,QAAO,QAAQ,KAAK;AAAA,MAC7B;AAEA,aAAO;AAAA,IACT;AAAA;AAAA;;;ACnDA;AAAA;AAmCA,QAAM,WAAW;AACjB,QAAM,WAAW;AACjB,QAAM,OAAO;AACb,QAAM,kBAAkB;AACxB,QAAM,mBAAmB,KAAK;AAC9B,QAAM,cAAc;AACpB,QAAM,MAAM;AACZ,QAAM,SAAS;AAEf,QAAM,EAAC,QAAQ,QAAO,IAAI;AAC1B,QAAM,EAAC,SAAS,SAAQ,IAAI;AAC5B,QAAM,EAAC,SAAS,SAAQ,IAAI;AAC5B,QAAM,EAAC,OAAO,OAAM,IAAI;AAExB,QAAM;AAAA,MACJ,sBAAsB;AAAA,MACtB,aAAa;AAAA,IACf,IAAI;AAEJ,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,UAAU;AAAA,MACV,UAAU;AAAA,IACZ,IAAI;AAEJ,QAAM;AAAA,MACJ,oBAAoB;AAAA,IACtB,IAAI;AAEJ,QAAM;AAAA,MACJ,WAAW;AAAA,MACX,mBAAmB;AAAA,MACnB,SAAS;AAAA,MACT,gBAAgB;AAAA,IAClB,IAAI;AAEJ,QAAM;AAAA,MACJ,SAAS;AAAA,MACT,YAAY;AAAA,IACd,IAAI;AAEJ,QAAM;AAAA,MACJ,eAAe;AAAA,MACf,qBAAqB;AAAA,MACrB,eAAe;AAAA,IACjB,IAAI;AAEJ,QAAM;AAAA,MACJ,iBAAiB;AAAA,MACjB,wBAAwB;AAAA,MACxB,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,mBAAmB;AAAA,MACnB,oBAAoB;AAAA,MACpB,uBAAuB;AAAA,IACzB,IAAI;AAIJ,QAAM,UAAU,SAASC,SAAQ;AAGjC,YAAM,cAAc,CAAC;AAIrB,YAAM,kCAAkC;AACxC,YAAM,wBAAwB,IAAI,IAAI,EAAC,KAAK,gCAA+B,CAAC;AA2B5E,MAAAA,QAAO,UAAU,eAAe,OAAO,KAAK,SAAS;AACnD,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,uCAAuC;AAAA,QAC7D;AAEA,YAAG,QAAQ,MAAM;AACf,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAuB,EAAC,MAAM,wBAAuB;AAAA,UAAC;AAAA,QAC1D;AAGA,YAAG,UAAU,MAAM;AACjB,iBAAO;AAAA,QACT;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,eAAe;AAAA,UACf,mBAAmB;AAAA,UACnB,OAAO;AAAA,UACP,eAAe;AAAA,UACf,MAAM;AAAA,UACN,QAAQ,IAAI,iBAAiB,KAAK;AAAA,UAClC,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AACD,YAAG,QAAQ,MAAM;AAGf,kBAAQ,gBAAgB;AAAA,QAC1B;AACA,YAAG,CAAC,QAAQ,mBAAmB;AAC7B,iBAAO,QAAQ;AAAA,QACjB;AAGA,YAAI;AACJ,YAAG,QAAQ,eAAe;AACxB,qBAAW;AAAA,QACb,OAAO;AACL,qBAAW,MAAMA,QAAO,OAAO,OAAO,OAAO;AAAA,QAC/C;AAGA,cAAM,YAAY,MAAMA,QAAO;AAAA,UAC7B,mBAAmB,OAAO;AAAA,UAAG;AAAA,UAAK;AAAA,QAAO;AAG3C,YAAI,YAAY,MAAM,SAAS;AAAA,UAC7B;AAAA,UACA,SAAS;AAAA,UACT;AAAA,QACF,CAAC;AAGD,YAAG,QAAQ,iBAAiB,CAAC,QAAQ,SAAS,SAAS,SAAS,GAAG;AACjE,cAAG,UAAU,WAAW,GAAG;AAEzB,wBAAY,UAAU,CAAC;AAAA,UACzB,WAAU,UAAU,WAAW,GAAG;AAEhC,wBAAY,CAAC;AAAA,UACf;AAAA,QACF,WAAU,QAAQ,SAAS,UAAU,SAAS,GAAG;AAE/C,sBAAY,CAAC,SAAS;AAAA,QACxB;AAGA,YAAG,UAAU,GAAG,KAAK,cAAc,KAAK;AACtC,gBAAM,IAAI,UAAU;AAAA,QACtB;AAGA,cAAM,KAAK,MAAM,GAAG;AACpB,YAAG,CAAC,SAAS,GAAG,GAAG;AACjB,gBAAM,CAAC,GAAG;AAAA,QACZ;AAEA,cAAM,MAAM;AACZ,cAAM,CAAC;AACP,iBAAQ,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG;AAClC,cAAG,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,OAAO,KAAK,IAAI,CAAC,CAAC,EAAE,SAAS,GAAG;AACvD,gBAAI,KAAK,IAAI,CAAC,CAAC;AAAA,UACjB;AAAA,QACF;AAGA,cAAM,aAAc,IAAI,SAAS;AACjC,YAAG,IAAI,WAAW,GAAG;AACnB,gBAAM,IAAI,CAAC;AAAA,QACb;AAGA,YAAG,SAAS,SAAS,GAAG;AAEtB,gBAAM,aAAa,YAAY;AAAA,YAC7B;AAAA,YAAW,KAAK;AAAA,YAAU,YAAY,EAAC,OAAO,KAAI;AAAA,UACpD,CAAC;AACD,gBAAM,QAAQ;AACd,sBAAY,CAAC;AACb,cAAG,YAAY;AACb,sBAAU,UAAU,IAAI;AAAA,UAC1B;AACA,oBAAU,UAAU,IAAI;AAAA,QAC1B,WAAU,UAAU,SAAS,KAAK,YAAY;AAE5C,gBAAM,QAAQ;AACd,sBAAY,EAAC,YAAY,IAAG;AAC5B,qBAAU,OAAO,OAAO;AACtB,sBAAU,GAAG,IAAI,MAAM,GAAG;AAAA,UAC5B;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAiBA,MAAAA,QAAO,SAAS,eAAe,OAAO,SAAS;AAC7C,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,sCAAsC;AAAA,QAC5D;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,uBAAuB;AAAA,UACvB,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,cAAM,YAAY,CAAC;AAGnB,cAAM,oBAAoB,CAAC;AAG3B,YAAG,mBAAmB,SAAS;AAC7B,gBAAM,gBAAgB,KAAK,MAAM,QAAQ,aAAa;AACtD,cAAG,UAAU,aAAa,KAAK,cAAc,eAAe;AAC1D,sBAAU,gBAAgB;AAAA,UAC5B,OAAO;AACL,sBAAU,gBAAgB,EAAC,YAAY,cAAa;AAAA,UACtD;AACA,4BAAkB,KAAK,UAAU,aAAa;AAAA,QAChD;AAGA,YAAI;AACJ,YAAG,CAAC,UAAU,KAAK,GAAG;AAEpB,oBAAU,QAAQ,KAAK,MAAM,KAAK;AAAA,QACpC,OAAO;AAEL,gBAAM,YAAY,MAAMA,QAAO,IAAI,OAAO,OAAO;AACjD,wBAAc,UAAU;AACxB,oBAAU,QAAQ,UAAU;AAC5B,cAAG,UAAU,YAAY;AAEvB,sBAAU,gBAAgB,EAAC,YAAY,UAAU,WAAU;AAC3D,8BAAkB,KAAK,UAAU,aAAa;AAAA,UAChD;AAAA,QACF;AAGA,YAAG,EAAE,UAAU,UAAU;AACvB,kBAAQ,OAAO,eAAe;AAAA,QAChC;AAGA,YAAI,YAAY,mBAAmB,OAAO;AAC1C,mBAAU,YAAY,mBAAmB;AACvC,sBAAY,MAAM,gBAAgB,EAAC,WAAW,UAAU,QAAO,CAAC;AAAA,QAClE;AAGA,YAAI,WAAW,MAAM,QAAQ;AAAA,UAC3B;AAAA,UACA,SAAS,UAAU;AAAA,UACnB;AAAA,QACF,CAAC;AAGD,YAAG,UAAU,QAAQ,KAAM,YAAY,YACrC,OAAO,KAAK,QAAQ,EAAE,WAAW,GAAG;AACpC,qBAAW,SAAS,QAAQ;AAAA,QAC9B,WAAU,aAAa,MAAM;AAC3B,qBAAW,CAAC;AAAA,QACd;AAGA,YAAG,CAAC,SAAS,QAAQ,GAAG;AACtB,qBAAW,CAAC,QAAQ;AAAA,QACtB;AAEA,eAAO;AAAA,MACT;AAeA,MAAAA,QAAO,UAAU,eAAe,OAAO,KAAK,SAAS;AACnD,YAAG,UAAU,SAAS,GAAG;AACvB,iBAAO,IAAI,UAAU,uCAAuC;AAAA,QAC9D;AAEA,YAAG,OAAO,QAAQ,YAAY;AAC5B,gBAAM;AAAA,QACR,OAAO;AACL,gBAAM,OAAO;AAAA,QACf;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,cAAM,WAAW,MAAMA,QAAO,OAAO,OAAO,OAAO;AAGnD,cAAM,YAAY,SAAS,QAAQ;AAEnC,YAAG,QAAQ,MAAM;AAEf,iBAAO;AAAA,QACT;AAGA,gBAAQ,QAAQ;AAChB,gBAAQ,gBAAgB;AACxB,cAAM,YAAY,MAAMA,QAAO,QAAQ,WAAW,KAAK,OAAO;AAE9D,eAAO;AAAA,MACT;AAqBA,MAAAA,QAAO,QAAQ,eAAe,OAAO,OAAO,SAAS;AACnD,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,qCAAqC;AAAA,QAC3D;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,OAAO;AAAA,UACP,UAAU;AAAA,UACV,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,eAAe,CAAC;AAAA,UAChB,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,YAAG,UAAU,KAAK,GAAG;AAEnB,gBAAM,YAAY,MAAMA,QAAO,IAAI,OAAO,OAAO;AACjD,kBAAQ,UAAU;AAElB,cAAG,UAAU,YAAY;AAEvB,gBAAI,MAAM,MAAM,UAAU;AAC1B,gBAAG,CAAC,KAAK;AACP,oBAAM,UAAU;AAAA,YAClB,WAAU,SAAS,GAAG,GAAG;AACvB,kBAAI,KAAK,UAAU,UAAU;AAAA,YAC/B,OAAO;AACL,oBAAM,CAAC,KAAK,UAAU,UAAU;AAAA,YAClC;AACA,kBAAM,UAAU,IAAI;AAAA,UACtB;AAAA,QACF;AAEA,cAAM,eAAe,QAAQ,MAAM,UAAU,KAAK,CAAC,IAAI,CAAC;AAGxD,cAAM,YAAY,MAAMA,QAAO;AAAA,UAC7B,mBAAmB,OAAO;AAAA,UAAG;AAAA,UAAc;AAAA,QAAO;AAGpD,YAAG,CAAC,QAAQ,eAAe,WAAW,GAAG;AACvC,kBAAQ,YAAY,gBAAgB,WAAW,GAAG;AAAA,QACpD;AACA,YAAG,CAAC,QAAQ,eAAe,2BAA2B,GAAG;AACvD,kBAAQ,4BAA4B,gBAAgB,WAAW,GAAG;AAAA,QACpE;AAGA,cAAM,WAAW,MAAMA,QAAO,OAAO,OAAO,OAAO;AAGnD,cAAM,OAAO,EAAC,GAAG,QAAO;AACxB,aAAK,UAAU;AACf,aAAK,wBAAwB;AAC7B,cAAM,gBAAgB,MAAMA,QAAO,OAAO,OAAO,IAAI;AAIrD,cAAM,YAAY,OAAO,KAAK,KAAK,EAChC,IAAI,SAAO,WAAW,WAAW,KAAK,EAAC,OAAO,KAAI,CAAC,CAAC;AACvD,aAAK,SAAS,CAAC,UAAU,SAAS,QAAQ;AAC1C,aAAK,OAAO,gBAAgB,WAAW,GAAG;AAG1C,cAAM,SAAS,sBAAsB,UAAU,eAAe,IAAI;AAElE,aAAK,QAAQ,CAAC,QAAQ;AACtB,aAAK,gBAAgB;AACrB,aAAK,OAAO,CAAC;AACb,aAAK,UAAU;AACf,YAAI,YAAY,MAAMA,QAAO,QAAQ,QAAQ,cAAc,IAAI;AAG/D,aAAK,OAAO,CAAC;AACb,oBAAY,aAAa,WAAW,IAAI;AAExC,eAAO;AAAA,MACT;AAkBA,MAAAA,QAAO,OAAO,eAAe,OAAO,KAAK,SAAS;AAGhD,cAAM,QAAQ,CAAC;AACf,YAAG,KAAK;AACN,gBAAM,UAAU,IAAI;AAAA,QACtB;AACA,cAAM,QAAQ,IAAI;AAClB,eAAOA,QAAO,MAAM,OAAO,OAAO,OAAO;AAAA,MAC3C;AAoCA,MAAAA,QAAO,YAAYA,QAAO,WAAW,eAAe,OAAO,SAAS;AAClE,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,wCAAwC;AAAA,QAC9D;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,WAAW;AAAA,UACX,eAAe;AAAA,UACf,MAAM;AAAA,UACN,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AACD,YAAG,iBAAiB,SAAS;AAC3B,cAAG,QAAQ,gBAAgB,yBACzB,QAAQ,gBAAgB,sBAAsB;AAC9C,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,YAAsB;AAAA,UAC1B;AAEA,gBAAM,cAAc,OAAO,MAAM,KAAK;AAGtC,iBAAO,SAAS,SAAS,aAAa,OAAO;AAAA,QAC/C;AAGA,cAAM,OAAO,EAAC,GAAG,QAAO;AACxB,eAAO,KAAK;AACZ,aAAK,wBAAwB;AAC7B,cAAM,UAAU,MAAMA,QAAO,MAAM,OAAO,IAAI;AAG9C,eAAO,SAAS,SAAS,SAAS,OAAO;AAAA,MAC3C;AAqBA,MAAAA,QAAO,UAAU,eAAe,SAAS,SAAS;AAChD,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,gDAAgD;AAAA,QACtE;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,QAAQ,UAAU,OAAO,IAAI,wBAAwB;AAAA,QACvD,CAAC;AAED,cAAM,EAAC,OAAM,IAAI;AACjB,YAAI,EAAC,UAAS,IAAI;AAGlB,YAAG,QAAQ;AAET,sBAAY,aAAa,YAAY,MAAM;AAC3C,cAAG,CAAC,WAAW;AACb,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,cAAwB,EAAC,OAAM;AAAA,YAAC;AAAA,UACpC;AAAA,QACF,OAAO;AAEL,sBAAY,MAAM;AAAA,QACpB;AAGA,cAAM,gBAAgB,MAAM,UAAU,OAAO;AAC7C,eAAO,SAAS,eAAe,OAAO;AAAA,MACxC;AAwBA,MAAAA,QAAO,QAAQ,eAAe,OAAO,SAAS;AAC5C,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,8CAA8C;AAAA,QACpE;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,eAAe;AAAA,UACf,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,YAAI;AACJ,YAAG,QAAQ,eAAe;AACxB,qBAAW;AAAA,QACb,OAAO;AAEL,qBAAW,MAAMA,QAAO,OAAO,OAAO,OAAO;AAAA,QAC/C;AAGA,cAAM,UAAU,OAAO,UAAU,OAAO;AACxC,YAAG,QAAQ,QAAQ;AACjB,cAAG,QAAQ,WAAW,yBACpB,QAAQ,WAAW,sBAAsB;AACzC,mBAAO,OAAO,UAAU,OAAO;AAAA,UACjC;AACA,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAAwB,EAAC,QAAQ,QAAQ,OAAM;AAAA,UAAC;AAAA,QACpD;AAEA,eAAO;AAAA,MACT;AAkBA,MAAAA,QAAO,gBAAgB,eAAe,OAAO,SAAS;AACpD,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,+CAA+C;AAAA,QACrE;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM,UAAU,KAAK,IAAI,QAAQ;AAAA,UACjC,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,cAAM,WAAW,MAAMA,QAAO,OAAO,OAAO,OAAO;AAEnD,eAAO,qBAAqB,UAAU,OAAO;AAAA,MAC/C;AAwBA,MAAAA,QAAO,QAAQ,eAAe,MAAM,KAAK,SAAS;AAChD,YAAG,UAAU,SAAS,GAAG;AACvB,gBAAM,IAAI,UAAU,qCAAqC;AAAA,QAC3D;AACA,YAAG,CAAC,SAAS,IAAI,GAAG;AAClB,gBAAM,IAAI,UAAU,2CAA2C;AAAA,QACjE;AAEA,YAAG,OAAO,QAAQ,YAAY;AAC5B,gBAAM;AAAA,QACR,OAAO;AACL,gBAAM,OAAO;AAAA,QACf;AAGA,kBAAU,aAAa,SAAS;AAAA,UAC9B,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,cAAM,WAAW,MAAM,QAAQ,IAAI,KAAK,IAAI,SAAO;AACjD,gBAAM,OAAO,EAAC,GAAG,QAAO;AACxB,iBAAOA,QAAO,OAAO,KAAK,IAAI;AAAA,QAChC,CAAC,CAAC;AAEF,YAAI,aAAa;AACjB,YAAG,gBAAgB,SAAS;AAC1B,uBAAa,QAAQ;AAAA,QACvB;AAEA,cAAM,SAAS,QAAQ,UAAU,IAAI,iBAAiB,KAAK;AAC3D,cAAM,SAAS,EAAC,YAAY,CAAC,EAAC;AAE9B,iBAAQ,IAAI,GAAG,IAAI,SAAS,QAAQ,EAAE,GAAG;AAEvC,gBAAM,MAAM,KAAK,kBAAkB,SAAS,CAAC,GAAG;AAAA,YAC9C,QAAQ,IAAI,iBAAiB,QAAQ,IAAI,GAAG;AAAA,UAC9C,CAAC;AAID,gBAAM,UAAW,cAAc,MAAM,IAAK,SAAS,EAAC,YAAY,CAAC,EAAC;AAClE,yBAAe,KAAK,SAAS,YAAY,MAAM;AAE/C,cAAG,YAAY,QAAQ;AAErB,uBAAU,aAAa,SAAS;AAC9B,oBAAM,WAAW,QAAQ,SAAS;AAClC,kBAAG,EAAE,aAAa,SAAS;AACzB,uBAAO,SAAS,IAAI;AACpB;AAAA,cACF;AACA,oBAAM,UAAU,OAAO,SAAS;AAChC,yBAAU,OAAO,UAAU;AACzB,oBAAG,EAAE,OAAO,UAAU;AACpB,0BAAQ,GAAG,IAAI,SAAS,GAAG;AAAA,gBAC7B;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAGA,cAAM,eAAe,eAAe,MAAM;AAG1C,cAAM,YAAY,CAAC;AACnB,cAAM,OAAO,OAAO,KAAK,YAAY,EAAE,KAAK;AAC5C,iBAAQ,KAAK,GAAG,KAAK,KAAK,QAAQ,EAAE,IAAI;AACtC,gBAAM,OAAO,aAAa,KAAK,EAAE,CAAC;AAElC,cAAG,CAAC,oBAAoB,IAAI,GAAG;AAC7B,sBAAU,KAAK,IAAI;AAAA,UACrB;AAAA,QACF;AAEA,YAAG,QAAQ,MAAM;AACf,iBAAO;AAAA,QACT;AAGA,gBAAQ,QAAQ;AAChB,gBAAQ,gBAAgB;AACxB,cAAM,YAAY,MAAMA,QAAO,QAAQ,WAAW,KAAK,OAAO;AAE9D,eAAO;AAAA,MACT;AASA,aAAO,eAAeA,SAAQ,kBAAkB;AAAA,QAC9C,KAAK,MAAMA,QAAO;AAAA,QAClB,KAAK,OAAKA,QAAO,kBAAkB;AAAA,MACrC,CAAC;AAED,MAAAA,QAAO,iBAAiB,OAAM,QAAO;AACnC,cAAM,IAAI;AAAA,UACR;AAAA,UACkC;AAAA,UAClC,EAAC,MAAM,2BAA2B,IAAG;AAAA,QAAC;AAAA,MAC1C;AAYA,MAAAA,QAAO,MAAM,eAAe,KAAK,SAAS;AACxC,YAAI;AACJ,YAAG,OAAO,QAAQ,mBAAmB,YAAY;AAC/C,iBAAO,QAAQ;AAAA,QACjB,OAAO;AACL,iBAAOA,QAAO;AAAA,QAChB;AAEA,cAAM,YAAY,MAAM,KAAK,GAAG;AAEhC,YAAI;AACF,cAAG,CAAC,UAAU,UAAU;AACtB,kBAAM,IAAI;AAAA,cACR;AAAA,cACA;AAAA,YAA2B;AAAA,UAC/B;AACA,cAAG,UAAU,UAAU,QAAQ,GAAG;AAChC,sBAAU,WAAW,KAAK,MAAM,UAAU,QAAQ;AAAA,UACpD;AAAA,QACF,SAAQ,GAAG;AACT,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,YAA4B;AAAA,cAC1B,MAAM;AAAA,cACN,OAAO;AAAA,cACP;AAAA,YACF;AAAA,UAAC;AAAA,QACL;AAEA,eAAO;AAAA,MACT;AAeA,MAAAA,QAAO,iBAAiB,eACtB,WAAW,UAAU,SAAS;AAE9B,kBAAU,aAAa,SAAS;AAAA,UAC9B,MAAM;AAAA,UACN,iBAAiB,IAAI;AAAA,YACnB,EAAC,aAAa,sBAAqB;AAAA,UAAC;AAAA,QACxC,CAAC;AAGD,YAAG,aAAa,MAAM;AACpB,iBAAO,mBAAmB,OAAO;AAAA,QACnC;AAGA,mBAAW,KAAK,MAAM,QAAQ;AAC9B,YAAG,EAAE,UAAU,QAAQ,KAAK,cAAc,WAAW;AACnD,qBAAW,EAAC,YAAY,SAAQ;AAAA,QAClC;AAEA,eAAO,gBAAgB,EAAC,WAAW,UAAU,QAAO,CAAC;AAAA,MACvD;AAGA,MAAAA,QAAO,kBAAkB,kBAAqB;AAK9C,MAAAA,QAAO,kBAAkB,CAAC;AAS1B,MAAAA,QAAO,oBAAoB,SAAS,MAAM;AACxC,YAAG,EAAE,QAAQA,QAAO,kBAAkB;AACpC,gBAAM,IAAI;AAAA,YACR,oCAAoC,OAAO;AAAA,YAC3C;AAAA,YACA,EAAC,KAAI;AAAA,UAAC;AAAA,QACV;AAGA,QAAAA,QAAO,iBAAiBA,QAAO,gBAAgB,IAAI,EAAE;AAAA,UACnDA;AAAA,UAAQ,MAAM,UAAU,MAAM,KAAK,WAAW,CAAC;AAAA,QAAC;AAAA,MACpD;AAYA,MAAAA,QAAO,oBAAoB,SAAS,aAAa,QAAQ;AACvD,oBAAY,WAAW,IAAI;AAAA,MAC7B;AAOA,MAAAA,QAAO,sBAAsB,SAAS,aAAa;AACjD,eAAO,YAAY,WAAW;AAAA,MAChC;AAGA,MAAAA,QAAO,kBAAkB,uBAAuB,OAAO,KAAK;AAC5D,MAAAA,QAAO,kBAAkB,sBAAsB,OAAO,KAAK;AAG3D,MAAAA,QAAO,MAAM;AAGb,MAAAA,QAAO,kBAAkB;AACzB,MAAAA,QAAO,yBAAyB;AAChC,MAAAA,QAAO,mBAAmB;AAC1B,MAAAA,QAAO,yBAAyB;AAChC,MAAAA,QAAO,qBAAqB;AAC5B,MAAAA,QAAO,wBAAwB;AAG/B,MAAAA,QAAO,OAAO;AAEd,aAAO,OAAOA,SAAQ,IAAI;AAG1B,MAAAA,QAAO,WAAWA;AAGlB,MAAAA,QAAO,eAAe;AAGtB,MAAAA,QAAO,kBAAkB,0BAA6BA,OAAM;AAE5D,eAAS,aAAaA,OAAM;AAC5B,eAAS,qBAAqBA,OAAM;AAEpC,eAAS,aAAa,SAAS;AAAA,QAC7B,iBAAiBA,QAAO;AAAA,QACxB,GAAG;AAAA,MACL,GAAG;AAED,YAAG,WAAW,mBAAmB,SAAS;AACxC,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,UAAqB;AAAA,QACzB;AACA,YAAG,WAAW,kBAAkB,SAAS;AACvC,gBAAM,IAAI;AAAA,YACR;AAAA,YACA;AAAA,UAAqB;AAAA,QACzB;AACA,eAAO,OAAO;AAAA,UACZ,CAAC;AAAA,UACD,EAAC,eAAc;AAAA,UACf;AAAA,UACA;AAAA,UACA,EAAC,cAAc,mBAAmB,EAAC,QAAO,CAAC,EAAC;AAAA,QAC9C;AAAA,MACF;AAGA,aAAOA;AAAA,IACP;AAKA,QAAM,UAAU,WAAW;AACzB,aAAO,QAAQ,WAAW;AACxB,eAAO,QAAQ;AAAA,MACjB,CAAC;AAAA,IACH;AAGA,YAAQ,OAAO;AAEf,WAAO,UAAU;AAAA;AAAA;;;AC7iCjB,IAAAC,kBAAA;AAAA;AAUA,QAAI,kBAAkB;AAGtB,QAAI,iBAAiB;AAGrB,QAAI,WAAW,IAAI;AAGnB,QAAI,UAAU;AAAd,QACI,SAAS;AADb,QAEI,YAAY;AAGhB,QAAI,eAAe;AAAnB,QACI,gBAAgB;AADpB,QAEI,eAAe;AAFnB,QAGI,aAAa;AAMjB,QAAI,eAAe;AAGnB,QAAI,eAAe;AAGnB,QAAI,eAAe;AAGnB,QAAI,aAAa,OAAO,UAAU,YAAY,UAAU,OAAO,WAAW,UAAU;AAGpF,QAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,QAAI,OAAO,cAAc,YAAY,SAAS,aAAa,EAAE;AAU7D,aAAS,SAAS,QAAQ,KAAK;AAC7B,aAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,IAChD;AASA,aAAS,aAAa,OAAO;AAG3B,UAAI,SAAS;AACb,UAAI,SAAS,QAAQ,OAAO,MAAM,YAAY,YAAY;AACxD,YAAI;AACF,mBAAS,CAAC,EAAE,QAAQ;AAAA,QACtB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AAGA,QAAI,aAAa,MAAM;AAAvB,QACI,YAAY,SAAS;AADzB,QAEI,cAAc,OAAO;AAGzB,QAAI,aAAa,KAAK,oBAAoB;AAG1C,QAAI,aAAc,WAAW;AAC3B,UAAI,MAAM,SAAS,KAAK,cAAc,WAAW,QAAQ,WAAW,KAAK,YAAY,EAAE;AACvF,aAAO,MAAO,mBAAmB,MAAO;AAAA,IAC1C,EAAE;AAGF,QAAI,eAAe,UAAU;AAG7B,QAAI,iBAAiB,YAAY;AAOjC,QAAI,iBAAiB,YAAY;AAGjC,QAAI,aAAa;AAAA,MAAO,MACtB,aAAa,KAAK,cAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAAA,IAChF;AAGA,QAAIC,UAAS,KAAK;AAAlB,QACI,SAAS,WAAW;AAGxB,QAAIC,OAAM,UAAU,MAAM,KAAK;AAA/B,QACI,eAAe,UAAU,QAAQ,QAAQ;AAG7C,QAAI,cAAcD,UAASA,QAAO,YAAY;AAA9C,QACI,iBAAiB,cAAc,YAAY,WAAW;AAS1D,aAAS,KAAK,SAAS;AACrB,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,YAAY;AACnB,WAAK,WAAW,eAAe,aAAa,IAAI,IAAI,CAAC;AAAA,IACvD;AAYA,aAAS,WAAW,KAAK;AACvB,aAAO,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AAAA,IAClD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc;AAChB,YAAI,SAAS,KAAK,GAAG;AACrB,eAAO,WAAW,iBAAiB,SAAY;AAAA,MACjD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AAAA,IACtD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,aAAO,eAAe,KAAK,GAAG,MAAM,SAAY,eAAe,KAAK,MAAM,GAAG;AAAA,IAC/E;AAYA,aAAS,QAAQ,KAAK,OAAO;AAC3B,UAAI,OAAO,KAAK;AAChB,WAAK,GAAG,IAAK,gBAAgB,UAAU,SAAa,iBAAiB;AACrE,aAAO;AAAA,IACT;AAGA,SAAK,UAAU,QAAQ;AACvB,SAAK,UAAU,QAAQ,IAAI;AAC3B,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AASrB,aAAS,UAAU,SAAS;AAC1B,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,iBAAiB;AACxB,WAAK,WAAW,CAAC;AAAA,IACnB;AAWA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AACA,UAAI,YAAY,KAAK,SAAS;AAC9B,UAAI,SAAS,WAAW;AACtB,aAAK,IAAI;AAAA,MACX,OAAO;AACL,eAAO,KAAK,MAAM,OAAO,CAAC;AAAA,MAC5B;AACA,aAAO;AAAA,IACT;AAWA,aAAS,aAAa,KAAK;AACzB,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,aAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAAA,IAC9C;AAWA,aAAS,aAAa,KAAK;AACzB,aAAO,aAAa,KAAK,UAAU,GAAG,IAAI;AAAA,IAC5C;AAYA,aAAS,aAAa,KAAK,OAAO;AAChC,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,aAAK,KAAK,CAAC,KAAK,KAAK,CAAC;AAAA,MACxB,OAAO;AACL,aAAK,KAAK,EAAE,CAAC,IAAI;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAGA,cAAU,UAAU,QAAQ;AAC5B,cAAU,UAAU,QAAQ,IAAI;AAChC,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAS1B,aAAS,SAAS,SAAS;AACzB,UAAI,QAAQ,IACR,SAAS,UAAU,QAAQ,SAAS;AAExC,WAAK,MAAM;AACX,aAAO,EAAE,QAAQ,QAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,gBAAgB;AACvB,WAAK,WAAW;AAAA,QACd,QAAQ,IAAI;AAAA,QACZ,OAAO,KAAKC,QAAO;AAAA,QACnB,UAAU,IAAI;AAAA,MAChB;AAAA,IACF;AAWA,aAAS,eAAe,KAAK;AAC3B,aAAO,WAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAAA,IAC5C;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAYA,aAAS,YAAY,KAAK,OAAO;AAC/B,iBAAW,MAAM,GAAG,EAAE,IAAI,KAAK,KAAK;AACpC,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,QAAQ;AAC3B,aAAS,UAAU,QAAQ,IAAI;AAC/B,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AAUzB,aAAS,aAAa,OAAO,KAAK;AAChC,UAAI,SAAS,MAAM;AACnB,aAAO,UAAU;AACf,YAAI,GAAG,MAAM,MAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,iBAAO;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAUA,aAAS,QAAQ,QAAQ,MAAM;AAC7B,aAAO,MAAM,MAAM,MAAM,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI;AAEnD,UAAI,QAAQ,GACR,SAAS,KAAK;AAElB,aAAO,UAAU,QAAQ,QAAQ,QAAQ;AACvC,iBAAS,OAAO,MAAM,KAAK,OAAO,CAAC,CAAC;AAAA,MACtC;AACA,aAAQ,SAAS,SAAS,SAAU,SAAS;AAAA,IAC/C;AAUA,aAAS,aAAa,OAAO;AAC3B,UAAI,CAAC,SAAS,KAAK,KAAK,SAAS,KAAK,GAAG;AACvC,eAAO;AAAA,MACT;AACA,UAAI,UAAW,WAAW,KAAK,KAAK,aAAa,KAAK,IAAK,aAAa;AACxE,aAAO,QAAQ,KAAK,SAAS,KAAK,CAAC;AAAA,IACrC;AAUA,aAAS,aAAa,OAAO;AAE3B,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO;AAAA,MACT;AACA,UAAI,SAAS,KAAK,GAAG;AACnB,eAAO,iBAAiB,eAAe,KAAK,KAAK,IAAI;AAAA,MACvD;AACA,UAAI,SAAU,QAAQ;AACtB,aAAQ,UAAU,OAAQ,IAAI,SAAU,CAAC,WAAY,OAAO;AAAA,IAC9D;AASA,aAAS,SAAS,OAAO;AACvB,aAAO,QAAQ,KAAK,IAAI,QAAQ,aAAa,KAAK;AAAA,IACpD;AAUA,aAAS,WAAW,KAAK,KAAK;AAC5B,UAAI,OAAO,IAAI;AACf,aAAO,UAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AAAA,IACX;AAUA,aAAS,UAAU,QAAQ,KAAK;AAC9B,UAAI,QAAQ,SAAS,QAAQ,GAAG;AAChC,aAAO,aAAa,KAAK,IAAI,QAAQ;AAAA,IACvC;AAUA,aAAS,MAAM,OAAO,QAAQ;AAC5B,UAAI,QAAQ,KAAK,GAAG;AAClB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,OAAO;AAClB,UAAI,QAAQ,YAAY,QAAQ,YAAY,QAAQ,aAChD,SAAS,QAAQ,SAAS,KAAK,GAAG;AACpC,eAAO;AAAA,MACT;AACA,aAAO,cAAc,KAAK,KAAK,KAAK,CAAC,aAAa,KAAK,KAAK,KACzD,UAAU,QAAQ,SAAS,OAAO,MAAM;AAAA,IAC7C;AASA,aAAS,UAAU,OAAO;AACxB,UAAI,OAAO,OAAO;AAClB,aAAQ,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YACvE,UAAU,cACV,UAAU;AAAA,IACjB;AASA,aAAS,SAAS,MAAM;AACtB,aAAO,CAAC,CAAC,cAAe,cAAc;AAAA,IACxC;AASA,QAAI,eAAe,QAAQ,SAAS,QAAQ;AAC1C,eAAS,SAAS,MAAM;AAExB,UAAI,SAAS,CAAC;AACd,UAAI,aAAa,KAAK,MAAM,GAAG;AAC7B,eAAO,KAAK,EAAE;AAAA,MAChB;AACA,aAAO,QAAQ,YAAY,SAAS,OAAO,QAAQ,OAAOC,SAAQ;AAChE,eAAO,KAAK,QAAQA,QAAO,QAAQ,cAAc,IAAI,IAAK,UAAU,KAAM;AAAA,MAC5E,CAAC;AACD,aAAO;AAAA,IACT,CAAC;AASD,aAAS,MAAM,OAAO;AACpB,UAAI,OAAO,SAAS,YAAY,SAAS,KAAK,GAAG;AAC/C,eAAO;AAAA,MACT;AACA,UAAI,SAAU,QAAQ;AACtB,aAAQ,UAAU,OAAQ,IAAI,SAAU,CAAC,WAAY,OAAO;AAAA,IAC9D;AASA,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,MAAM;AAChB,YAAI;AACF,iBAAO,aAAa,KAAK,IAAI;AAAA,QAC/B,SAAS,GAAG;AAAA,QAAC;AACb,YAAI;AACF,iBAAQ,OAAO;AAAA,QACjB,SAAS,GAAG;AAAA,QAAC;AAAA,MACf;AACA,aAAO;AAAA,IACT;AA8CA,aAAS,QAAQ,MAAM,UAAU;AAC/B,UAAI,OAAO,QAAQ,cAAe,YAAY,OAAO,YAAY,YAAa;AAC5E,cAAM,IAAI,UAAU,eAAe;AAAA,MACrC;AACA,UAAI,WAAW,WAAW;AACxB,YAAI,OAAO,WACP,MAAM,WAAW,SAAS,MAAM,MAAM,IAAI,IAAI,KAAK,CAAC,GACpD,QAAQ,SAAS;AAErB,YAAI,MAAM,IAAI,GAAG,GAAG;AAClB,iBAAO,MAAM,IAAI,GAAG;AAAA,QACtB;AACA,YAAI,SAAS,KAAK,MAAM,MAAM,IAAI;AAClC,iBAAS,QAAQ,MAAM,IAAI,KAAK,MAAM;AACtC,eAAO;AAAA,MACT;AACA,eAAS,QAAQ,KAAK,QAAQ,SAAS;AACvC,aAAO;AAAA,IACT;AAGA,YAAQ,QAAQ;AAkChB,aAAS,GAAG,OAAO,OAAO;AACxB,aAAO,UAAU,SAAU,UAAU,SAAS,UAAU;AAAA,IAC1D;AAyBA,QAAI,UAAU,MAAM;AAmBpB,aAAS,WAAW,OAAO;AAGzB,UAAI,MAAM,SAAS,KAAK,IAAI,eAAe,KAAK,KAAK,IAAI;AACzD,aAAO,OAAO,WAAW,OAAO;AAAA,IAClC;AA2BA,aAAS,SAAS,OAAO;AACvB,UAAI,OAAO,OAAO;AAClB,aAAO,CAAC,CAAC,UAAU,QAAQ,YAAY,QAAQ;AAAA,IACjD;AA0BA,aAAS,aAAa,OAAO;AAC3B,aAAO,CAAC,CAAC,SAAS,OAAO,SAAS;AAAA,IACpC;AAmBA,aAAS,SAAS,OAAO;AACvB,aAAO,OAAO,SAAS,YACpB,aAAa,KAAK,KAAK,eAAe,KAAK,KAAK,KAAK;AAAA,IAC1D;AAuBA,aAAS,SAAS,OAAO;AACvB,aAAO,SAAS,OAAO,KAAK,aAAa,KAAK;AAAA,IAChD;AA2BA,aAASC,KAAI,QAAQ,MAAM,cAAc;AACvC,UAAI,SAAS,UAAU,OAAO,SAAY,QAAQ,QAAQ,IAAI;AAC9D,aAAO,WAAW,SAAY,eAAe;AAAA,IAC/C;AAEA,WAAO,UAAUA;AAAA;AAAA;;;ACl6BjB;AAAA;AASA,KAAE,SAAW,MAAM,SAAS;AAC1B,UAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC9C,eAAO,CAAC,GAAG,OAAQ;AAAA,MACrB,WAAU,OAAO,YAAY,UAAU;AACrC,eAAO,UAAU,QAAQ;AAAA,MAC3B,OAAK;AACH,aAAK,aAAa,QAAQ;AAAA,MAC5B;AAAA,IACF,GAAG,SAAM,WAAW;AAOlB,UAAI,oBAAoB;AAAA;AAAA,QAEteAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,UAAY,IAAI,OAAQ,eAAmC,IAAK;AAAA,UAChE,KAAY,IAAI,OAAQ,YAAmC,IAAK;AAAA,UAChE,UAAY,IAAI,OAAQ,iEAAgE,IAAK;AAAA,UAC7F,WAAY,IAAI,OAAQ,gBAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,eAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,cAAmC,IAAK;AAAA,UAChE,MAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,eAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,WAAY,IAAI,OAAQ,sBAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,aAAmC,IAAK;AAAA,UAChE,KAAY,IAAI,OAAQ,mBAAmC,IAAK;AAAA,UAChE,MAAY,IAAI,OAAQ,eAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,YAAmC,IAAK;AAAA,UAChE,KAAY,IAAI,OAAQ,UAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,YAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,qBAAmC,IAAK;AAAA,UAChE,WAAY,IAAI,OAAQ,oBAAmC,IAAK;AAAA,UAChE,SAAY,IAAI,OAAQ,mCAAmC,IAAK;AAAA,UAChE,WAAY,IAAI,OAAQ,uBAAmC,IAAK;AAAA,UAChE,MAAY,IAAI,OAAQ,WAAmC,IAAK;AAAA,UAChE,UAAY,IAAI,OAAQ,eAAmC,IAAK;AAAA,UAChE,UAAY,IAAI,OAAQ,mBAAmC,IAAK;AAAA,UAChE,MAAY,IAAI,OAAQ,UAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,WAAmC,IAAK;AAAA,UAChE,OAAY,IAAI,OAAQ,WAAmC,IAAK;AAAA,UAChE,SAAY,IAAI,OAAQ,cAAmC,IAAK;AAAA,UAChE,WAAY,IAAI,OAAQ,iBAAmC,IAAK;AAAA,UAChE,UAAY,IAAI,OAAQ,gBAAmC,IAAK;AAAA,UAChE,QAAY,IAAI,OAAQ,YAAmC,IAAK;AAAA,UAChE,IAAY,IAAI,OAAQ,OAAmC,IAAK;AAAA,UAChE,GAAY,IAAI,OAAQ,MAAmC,IAAK;AAAA,QAClE;AAAA,QAEA,UAAW;AAAA,UACT,KAAY,IAAI,OAAQ,eAAiC,IAAK;AAAA,UAC9D,QAAY,IAAI,OAAQ,aAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,YAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,YAAiC,IAAK;AAAA,UAC9D,IAAY,IAAI,OAAQ,UAAiC,IAAK;AAAA,UAC9D,MAAY,IAAI,OAAQ,gBAAiC,IAAK;AAAA,UAC9D,SAAY,IAAI,OAAQ,kBAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,iCAAiC,IAAK;AAAA,UAC9D,SAAY,IAAI,OAAQ,qBAAiC,IAAK;AAAA,UAC9D,KAAY,IAAI,OAAQ,UAAiC,IAAK;AAAA,UAC9D,SAAY,IAAI,OAAQ,0BAAiC,IAAK;AAAA,UAC9D,MAAY,IAAI,OAAQ,aAAiC,IAAK;AAAA,UAC9D,KAAY,IAAI,OAAQ,QAAiC,IAAK;AAAA,UAC9D,KAAY,IAAI,OAAQ,yBAAiC,IAAK;AAAA,UAC9D,MAAY,IAAI,OAAQ,cAAiC,IAAK;AAAA,UAC9D,SAAY,IAAI,OAAQ,oBAAiC,IAAK;AAAA,UAC9D,GAAY,IAAI,OAAQ,iBAAiC,IAAK;AAAA,UAC9D,QAAY,IAAI,OAAQ,aAAiC,IAAK;AAAA,UAC9D,QAAY,IAAI,OAAQ,iBAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,gBAAiC,IAAK;AAAA,UAC9D,MAAY,IAAI,OAAQ,UAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,WAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,WAAiC,IAAK;AAAA,UAC9D,MAAY,IAAI,OAAQ,WAAiC,IAAK;AAAA,UAC9D,SAAY,IAAI,OAAQ,eAAiC,IAAK;AAAA,UAC9D,WAAY,IAAI,OAAQ,iBAAiC,IAAK;AAAA,UAC9D,OAAY,IAAI,OAAQ,WAAiC,IAAK;AAAA,UAC9D,GAAY,IAAI,OAAQ,MAAiC,IAAK;AAAA,UAC9D,QAAY,IAAI,OAAQ,KAAiC,IAAK;AAAA,QAChE;AAAA,MACF;AAEA,UAAI,eAAe;AAAA;AAAA,QAGjB,CAAE,MAAM,OAAO,GAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,QAAU;AAAA,QACzB,CAAE,MAAM,OAAO,GAAU;AAAA,QACzB,CAAE,MAAM,OAAO,QAAU;AAAA,QACzB,CAAE,MAAM,OAAO,SAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,SAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,GAAU;AAAA,QACzB,CAAE,MAAM,OAAO,IAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,GAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA,QACzB,CAAE,MAAM,OAAO,SAAU;AAAA,QACzB,CAAE,MAAM,OAAO,OAAU;AAAA,QACzB,CAAE,MAAM,OAAO,SAAU;AAAA,QACzB,CAAE,MAAM,OAAO,IAAU;AAAA,QACzB,CAAE,MAAM,OAAO,QAAU;AAAA,QACzB,CAAE,MAAM,OAAO,IAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,KAAU;AAAA,QACzB,CAAE,MAAM,OAAO,OAAU;AAAA,QACzB,CAAE,MAAM,OAAO,SAAU;AAAA,QACzB,CAAE,MAAM,OAAO,QAAU;AAAA,QACzB,CAAE,MAAM,OAAO,MAAU;AAAA;AAAA,QAGzB,CAAE,MAAM,SAAS,KAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,QAAW,QAAS;AAAA,QACrC,CAAE,MAAM,SAAS,OAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,OAAW,KAAM;AAAA,QAClC,CAAE,MAAM,SAAS,IAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,MAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,SAAW,QAAS;AAAA,QACrC,CAAE,MAAM,SAAS,OAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,SAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,KAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,SAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,MAAW,KAAM;AAAA,QAClC,CAAE,MAAM,SAAS,KAAW,KAAM;AAAA,QAClC,CAAE,MAAM,SAAS,KAAW,SAAU;AAAA,QACtC,CAAE,MAAM,SAAS,MAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,SAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,QAAW,QAAS;AAAA,QACrC,CAAE,MAAM,SAAS,QAAW,QAAS;AAAA,QACrC,CAAE,MAAM,SAAS,GAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,OAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,MAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,OAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,OAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,MAAW,OAAQ;AAAA,QACpC,CAAE,MAAM,SAAS,SAAW,MAAO;AAAA,QACnC,CAAE,MAAM,SAAS,WAAW,KAAM;AAAA,QAClC,CAAE,MAAM,SAAS,OAAW,QAAS;AAAA,QAErC,CAAE,MAAM,SAAS,GAAQ,GAAI;AAAA,QAC7B,CAAE,MAAM,SAAS,QAAQ,GAAI;AAAA,MAC/B;AAMA,UAAI,iBAAiB;AAAA;AAAA,QAGnB,CAAE,MAAM,SAAS,GAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,MAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,EAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,IAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,OAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,OAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,GAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,OAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,IAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,GAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,GAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,IAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,OAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,CAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,MAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,IAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,KAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,IAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,OAAQ;AAAA,QACzB,CAAE,MAAM,SAAS,SAAU;AAAA,QAC3B,CAAE,MAAM,SAAS,KAAM;AAAA;AAAA,QAGvB,CAAE,MAAM,OAAO,KAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,QAAW,QAAS;AAAA,QACnC,CAAE,MAAM,OAAO,UAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,WAAW,IAAI;AAAA,QAC9B,CAAE,MAAM,OAAO,QAAW,IAAI;AAAA,QAC9B,CAAE,MAAM,OAAO,QAAW,OAAO;AAAA,QACjC,CAAE,MAAM,OAAO,UAAW,MAAM;AAAA,QAChC,CAAE,MAAM,OAAO,KAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,UAAW,SAAU;AAAA,QACpC,CAAE,MAAM,OAAO,OAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,QAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,OAAW,KAAM;AAAA,QAChC,CAAE,MAAM,OAAO,MAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,OAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,QAAW,QAAS;AAAA,QACnC,CAAE,MAAM,OAAO,WAAW,KAAM;AAAA,QAChC,CAAE,MAAM,OAAO,QAAW,SAAU;AAAA,QACpC,CAAE,MAAM,OAAO,KAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,MAAW,QAAS;AAAA,QACnC,CAAE,MAAM,OAAO,OAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,KAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,OAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,QAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,WAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,SAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,WAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,MAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,UAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,UAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,MAAW,MAAO;AAAA,QACjC,CAAE,MAAM,OAAO,OAAW,OAAQ;AAAA,QAClC,CAAE,MAAM,OAAO,OAAW,OAAQ;AAAA,QAClC,CAAE,MAAM,OAAO,SAAW,IAAK;AAAA,QAC/B,CAAE,MAAM,OAAO,WAAW,IAAK;AAAA,QAE/B,CAAE,MAAM,OAAO,IAAI,IAAK;AAAA,QACxB,CAAE,MAAM,OAAO,GAAI,EAAG;AAAA,MACxB;AAMA,UAAI,uBAAuB;AAAA,QACzB;AAAA,QAAO;AAAA,QAAM;AAAA,QAAO;AAAA,QAAK;AAAA,QAAM;AAAA,QAAO;AAAA,QAAM;AAAA,QAAO;AAAA,QAAM;AAAA,QAAM;AAAA,QAAK;AAAA,QACpE;AAAA,QAAQ;AAAA,QAAQ;AAAA,QAAM;AAAA,QAAQ;AAAA,QAAO;AAAA,QAAO;AAAA,QAAM;AAAA,QAAQ;AAAA,QAAQ;AAAA,MACpE;AAMA,UAAI,YAAoB,IAAI,OAAQ,eAAe,GAAI;AACvD,UAAI,WAAoB,IAAI,OAAQ,KAAK,GAAI;AAC7C,UAAI,oBAAoB,IAAI,OAAQ,QAAS,GAAI;AACjD,UAAI,YAAoB,IAAI,OAAQ,WAAW,GAAI;AACnD,UAAI,kBAAoB,IAAI,OAAQ,IAAK;AAEzC,UAAI,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAed,cAAe,SAAW,KAAK,OAAO,MAAM,UAAU;AACpD,cAAI,UAAU;AACZ,kBAAM;AAAA,UACR,OAAK;AACH,gBAAI,SAAW,UAAU,QAAS,MAAM,IAAI,YAAY,CAAC,IAAI;AAE7D,gBAAI,CAAC,QAAQ;AACX,kBAAI,IAAI;AACR,kBAAI,IAAI,MAAM;AAEd,qBAAO,IAAI,GAAG,KAAK;AACjB,oBAAI,IAAI,MAAO,MAAO,CAAE,EAAG,CAAE,CAAC,GAAE;AAC9B,sBAAI,MAAO,CAAE,EAAG,CAAE,MAAM,QAAW;AACjC,0BAAM,IAAI,QAAS,MAAO,CAAE,EAAG,CAAE,GAAG,MAAO,CAAE,EAAG,CAAE,CAAC;AAAA,kBACrD;AACA;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA,SAAU,SAAW,KAAK,MAAM,YAAY,cAAc;AACxD,cAAI,CAAC,YAAY;AACf,yBAAa;AAAA,UACf;AAEA,cAAI,QAAQ;AACZ,cAAI,IAAQ;AACZ,cAAI,IAAQ,IAAI;AAEhB,iBAAO,IAAI,GAAG,KAAK;AACjB,gBAAI,IAAK,CAAE,MAAO,QAAQ,gBAAgB,aAAc,IAAK,CAAE,GAAG,IAAK,GAAE;AACvE,sBAAQ;AACR;AAAA,YACF;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA,WAAY,SAAW,KAAK,QAAQ;AAClC,iBAAO,UAAU,aAAc,KAAK,cAAc,mBAAmB,MAAO;AAAA,QAC9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA,aAAc,SAAW,KAAK,UAAU;AACtC,iBAAO,UAAU,aAAc,KAAK,gBAAgB,mBAAmB,QAAS;AAAA,QAClF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA0BA,SAAU,SAAW,KAAK,OAAO,UAAU,QAAQ;AACjD,kBAAQ,WAAY,OAAO,EAAG;AAE9B,cAAI,MAAO,KAAM,EAAG,QAAO;AAE3B,cAAI,UAAU,GAAG;AACf,mBAAO,UAAU,aAAc,KAAK,gBAAgB,mBAAmB,QAAS;AAAA,UAClF,OAAK;AACH,mBAAO,UAAU,aAAc,KAAK,cAAc,mBAAmB,MAAO;AAAA,UAC9E;AAAA,QACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA,UAAW,SAAW,KAAK,kBAAkB;AAC3C,cAAI,WAAW,IAAI,MAAO,GAAI;AAC9B,cAAI,IAAW;AACf,cAAI,IAAW,SAAS;AACxB,cAAI,SAAS,QAAQ,GAAG,GAAG;AAE3B,iBAAO,IAAI,GAAG,KAAK;AACjB,sBAAU,SAAU,CAAE,EAAE,MAAO,GAAI;AACnC,gBAAU;AACV,gBAAU,QAAQ;AAElB,mBAAO,IAAI,GAAG,KAAK;AACjB,kBAAI,MAAM,GAAG;AACX,wBAAS,CAAE,IAAI,QAAS,CAAE,EAAE,YAAY;AAAA,cAC1C;AAEA,sBAAQ,QAAS,CAAE,EAAE,OAAQ,CAAE;AAC/B,sBAAQ,oBAAoB,MAAM,KAAK,MAAM,IACzC,MAAM,YAAY,IAAI,MAAM,YAAY;AAC5C,sBAAS,CAAE,IAAI,QAAQ,QAAS,CAAE,EAAE,UAAW,CAAE;AAAA,YACnD;AAEA,qBAAU,CAAE,IAAI,QAAQ,KAAM,EAAG;AAAA,UACnC;AAEA,iBAAO,SAAS,KAAM,IAAK;AAAA,QAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAqBA,YAAa,SAAW,KAAK,gBAAgB;AAC3C,cAAI,kBAAkB,QAAQ,IAAI,YAAY,EAAG,QAAO;AAExD,cAAI,WAAW,IAAI,MAAO,IAAK;AAC/B,cAAI,IAAW;AACf,cAAI,IAAW,SAAS;AAExB,iBAAO,IAAI,GAAG,KAAK;AACjB,qBAAU,CAAE,IAAI,SAAU,CAAE,EAAE,QAAS,WAAW,KAAM;AACxD,qBAAU,CAAE,IAAI,SAAU,CAAE,EAAE,QAAS,iBAAiB,EAAG;AAAA,UAC7D;AAEA,iBAAO,SAAS,KAAM,GAAI,EAAE,YAAY;AAAA,QAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmBA,UAAW,SAAW,KAAK,kBAAkB;AAC3C,gBAAM,IAAI,YAAY;AACtB,gBAAM,IAAI,QAAS,WAAW,EAAG;AACjC,gBAAM,IAAI,QAAS,UAAU,GAAI;AAEjC,cAAI,CAAC,kBAAkB;AACrB,kBAAM,UAAU,WAAY,GAAI;AAAA,UAClC;AAEA,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBA,YAAa,SAAW,KAAK;AAC3B,gBAAM,IAAI,YAAY;AAEtB,iBAAO,IAAI,UAAW,GAAG,CAAE,EAAE,YAAY,IAAI,IAAI,UAAW,CAAE;AAAA,QAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBA,WAAY,SAAW,KAAK;AAC1B,iBAAO,IAAI,QAAS,mBAAmB,GAAI;AAAA,QAC7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAiBA,UAAW,SAAW,KAAK;AACzB,gBAAc,IAAI,YAAY,EAAE,QAAS,UAAU,GAAI;AACvD,cAAI,UAAU,IAAI,MAAO,GAAI;AAC7B,cAAI,IAAU;AACd,cAAI,IAAU,QAAQ;AACtB,cAAI,GAAG,GAAG;AAEV,iBAAO,IAAI,GAAG,KAAK;AACjB,gBAAI,QAAS,CAAE,EAAE,MAAO,GAAI;AAC5B,gBAAI;AACJ,gBAAI,EAAE;AAEN,mBAAO,IAAI,GAAG,KAAI;AAChB,kBAAI,UAAU,QAAS,sBAAsB,EAAG,CAAE,EAAE,YAAY,CAAC,IAAI,GAAG;AACtE,kBAAG,CAAE,IAAI,UAAU,WAAY,EAAG,CAAE,CAAC;AAAA,cACvC;AAAA,YACF;AAEA,oBAAS,CAAE,IAAI,EAAE,KAAM,GAAI;AAAA,UAC7B;AAEA,gBAAM,QAAQ,KAAM,GAAI;AACxB,gBAAM,IAAI,UAAW,GAAG,CAAE,EAAE,YAAY,IAAI,IAAI,UAAW,CAAE;AAE7D,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBA,YAAa,SAAW,KAAK;AAC3B,cAAI,UAAU,IAAI,MAAO,IAAK;AAE9B,iBAAO,QAAS,QAAQ,SAAS,CAAE;AAAA,QACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBA,UAAW,SAAW,KAAK;AACzB,gBAAM,UAAU,WAAY,GAAI;AAChC,gBAAM,UAAU,UAAW,GAAI;AAE/B,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBA,UAAW,SAAW,KAAK;AACzB,gBAAM,UAAU,SAAU,GAAI;AAC9B,gBAAM,UAAU,YAAa,GAAI;AAEjC,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAmBA,aAAc,SAAW,KAAK,cAAc;AAC1C,gBAAM,UAAU,WAAY,GAAI;AAChC,gBAAM,UAAU,WAAY,GAAI,KAAO,eAAmB,KAAS,OAAS;AAE5E,iBAAO;AAAA,QACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAgBA,YAAa,SAAW,KAAK;AAC3B,cAAI,UAAU,IAAI,MAAO,GAAI;AAC7B,cAAI,IAAU;AACd,cAAI,IAAU,QAAQ;AAEtB,iBAAO,IAAI,GAAG,KAAK;AACjB,gBAAI,IAAI,SAAU,QAAS,CAAE,GAAG,EAAG;AAEnC,gBAAI,CAAC,MAAO,CAAE,GAAE;AACd,kBAAI,MAAM,QAAS,CAAE,EAAE,UAAW,QAAS,CAAE,EAAE,SAAS,CAAE;AAC1D,kBAAI,KAAM,QAAS,CAAE,EAAE,UAAW,QAAS,CAAE,EAAE,SAAS,CAAE;AAC1D,kBAAI,MAAM;AAEV,kBAAI,OAAO,QAAQ,OAAO,QAAQ,OAAO,MAAM;AAC7C,oBAAI,OAAO,KAAK;AACd,wBAAM;AAAA,gBACR,WAAU,OAAO,KAAK;AACpB,wBAAM;AAAA,gBACR,WAAU,OAAO,KAAK;AACpB,wBAAM;AAAA,gBACR;AAAA,cACF;AAEA,sBAAS,CAAE,KAAK;AAAA,YAClB;AAAA,UACF;AAEA,iBAAO,QAAQ,KAAM,GAAI;AAAA,QAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAeA,WAAY,SAAW,KAAK,KAAK;AAC/B,cAAI,IAAI;AACR,cAAI,IAAI,IAAI;AAEZ,iBAAM,IAAI,GAAG,KAAK;AAChB,gBAAI,SAAS,IAAK,CAAE;AAEpB,gBAAI,UAAU,eAAgB,MAAO,GAAE;AACrC,oBAAM,UAAW,MAAO,EAAG,GAAI;AAAA,YACjC;AAAA,UACF;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAKA,gBAAU,UAAU;AAEpB,aAAO;AAAA,IACT,CAAC;AAAA;AAAA;;;ACtkCD,IAAAC,iBAAoD;;;ACApD,IAAAC,iBAAkB;;;ACAlB,IAAAC,iBAAiC;;;ACAjC,IAAAC,iBAA2C;;;ACA3C,IAAAC,gBAAkB;;;ACAlB,IAAAC,gBAAsD;;;ACAtD,mBAEO;AAGP,IAAM,4BAAwB,4BAAqC,IAAI;AAEvE,IAAA,gCAAe;;;ACCf,IAAM,gBAAgB,CAAC,YAAuD;AAC5E,QAAMC,gBAAe,gBAAe;AAEpC,SAAO,SAAQ,OAAA,OAAA,EACb,UAAU,CAAC,YAAY,GACvB,SAAS,MAAMA,cAAa,WAAU,GACtC,SAAS,MAAK,GACX,OAAO,CAAA;AAEd;AAEA,IAAA,wBAAe;;;ACnBf,IAAAC,gBAAkB;;;;;;;;;;;;AAGlB,IAAM,wBAAwB,CAACC,QASE;MATF,EAC7B,WAAW,WACX,gBAAAC,iBACA,mBACA,UACA,WACA,SACA,MAAK,IAAAD,KACF,OAAI,OAAAA,KARsB,CAAA,aAAA,kBAAA,qBAAA,YAAA,aAAA,WAAA,OAAA,CAS9B;AACC,MAAI,SAAS;AACX,WAAO;EACT;AAEA,MAAI,OAAO;AACT,QAAI,OAAuC;AAEzC,cAAQ,MAAM,KAAK;IACrB;AAEA,UAAM,IAAI,MAAM,4BAA4B;EAC9C;AAEA,QAAM,SAAS,UAAU,KAAK,CAAC,MAAM,EAAE,SAAS,QAAQ;AAExD,MAAI,EAAC,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,WAAU,EAAC,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,mBAAkB,EAAC,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,iBAAgB;AACzE,QAAI,OAAuC;AAEzC,cAAQ,MAAM,YAAY,QAAQ,qCAAqC;IACzE;AAEA,UAAM,IAAI,MAAM,YAAY,QAAQ,qCAAqC;EAC3E;AAEA,QAAM,SAAS,oBACX,OAAO,SACP,OAAO,OAAO,OAAO,CAAC,EAAE,WAAU,MAAO,CAAC,UAAU;AACxD,QAAM,iBAAiB,oBACnB,OAAO,iBACP,OAAO,eAAe,OAAO,CAAC,EAAE,WAAU,MAAO,CAAC,UAAU;AAChE,QAAM,iBAAiB,oBACnB,OAAO,iBACP,OAAO,eAAe,OAAO,CAAC,EAAE,WAAU,MAAO,CAAC,UAAU;AAEhE,SACE,cAAAE,QAAA,cAAC,WAAS,OAAA,OAAA,EACR,gBAAgBD,iBAChB,UACA,QACA,QACA,gBACA,eAA8B,GAC1B,IAAI,CAAA;AAGd;AAEA,IAAA,gCAAe;;;;;;;;;;;;;;AHpDf,IAAM,eAAe,CAACE,QAKE;MALF,EACpB,WACA,oBAAoB,OACpB,SAAQ,IAAAA,KACL,OAAIC,QAAAD,KAJa,CAAA,aAAA,qBAAA,UAAA,CAKrB;AACC,QAAM,uBAAuB,gCAAuB;AACpD,QAAME,sBAAiB,0BACrB,6BAAqB;AAEvB,QAAM,0BAAsB,uBAAQ,MAAK;AACvC,QAAI,CAACA,iBAAgB;AACnB,aAAO;IACT;AACA,WAAO,IAAI,MAAMA,iBAAgB;MAC/B,KAAK,CAAC,QAAQ,QAA6B;AACzC,YAAI,OAAO,OAAO,GAAG,MAAM,YAAY;AACrC,iBAAO,OAAO,GAAG;QACnB;AAEA,eAAO,IAAI,SAAiB;AAE1B,gBAAM,SAAU,OAAO,GAAG,EAAe,MAAM,QAAQ,IAAI;AAE3D,cAAI,UAAU,OAAO,OAAO,SAAS,YAAY;AAC/C,mBAAO,OAAO,MAAM,CAAC,MAAY;AAC/B,mCAAqB,CAAC,EAAE,KAAK,CAAC,cAAa;AACzC,oBAAI,WAAW;AACb;gBACF;AAEA,sBAAM;cACR,CAAC;YACH,CAAC;UACH;AAEA,iBAAO;QACT;MACF;KACD;EACH,GAAG,CAACA,iBAAgB,oBAAoB,CAAC;AAEzC,QAAM,EAAE,SAAS,MAAM,WAAW,MAAK,IAAK,sBAAa;AACzD,QAAM,YAAY,OAAO,KAAK,KAAK,YAAY;AAE/C,+BAAU,MAAK;AACb,QAAI,CAAC,SAAS,CAAC,WAAW;AACxB,cAAO;IACT;EACF,GAAG,CAAC,SAAS,OAAO,SAAS,CAAC;AAE9B,MAAI,CAAC,qBAAqB;AACxB,WAAO;EACT;AAEA,SACE,cAAAC,QAAA,cAAC,+BAAqB,OAAA,OAAA,CAAA,GAChB,MAAI,EACR,WACA,gBAAgB,qBAChB,mBACA,UACA,WAAW,cAAS,QAAT,cAAS,SAAT,YAAa,CAAA,GACxB,SAAS,WACT,MAAY,CAAA,CAAA;AAGlB;AAEA,IAAA,uBAAe;;;AI7Ef,IAAAC,gBAAkB;;;;;;;;;;;;AAUlB,IAAM,YAAY,CAACC,QAAuD;MAAvD,EAAE,eAAe,OAAM,IAAAA,KAAK,QAAKC,QAAAD,KAAjC,CAAA,iBAAA,QAAA,CAAmC;AACpD,QAAM,SAAS,iBAAgB;AAE/B,MAAI,CAAC,UAAU,OAAO,WAAW,aAAa;AAC5C,WAAO;EACT;AAEA,QAAM,QAAQ,OAAO,MAAM;AAC3B,QAAM,aAAa;IACjB,CAAC,MAAM,IAAI,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO;MAC7D,OAAO,gBAAgB,cAAc,CAAC,IAAI;MAC1C;;AAGJ,SACE,cAAAE,QAAA;IAAC;IAAU,EAAC,QAAgB,QAAQ,WAAU;IAC5C,cAAAA,QAAA;MAAC;MAAe,EAAC,UAAU,MAAK;MAC9B,cAAAA,QAAA,cAAC,WAAS,OAAA,OAAA,CAAA,GAAM,OAAwB,EAAE,QAAO,QAAO,CAAA,CAAA;IAAG;EAC3C;AAGxB;AAEA,UAAU,cAAc;AAExB,IAAA,oBAAe;;;;;;;;;;;;;;ALKf,IAAM,kBAAkB,CAAC,OAAc,WACrC,CAAC,CAAC,OAAO,cACT,OAAO,WAAW,OAAO,CAAC,cAAc,UAAU,aAAa,MAAM,IAAI,EACtE,SAAS,KACZ,OAAO,WAAW,OAChB,CAAC,cAAc,UAAU,aAAa,SAAS,MAAM,IAAI,GAAG,EAC5D,SAAS;AAEb,IAAM,cAAc,CAClB,OACAC,iBACA,UACE;AACF,MAAI,MAAM,cAAc,QAAQ,OAAO,MAAM,cAAc,UAAU;AACnE,QAAI,MAAM,mBAAmB,GAAG;AAC9B,aACE,cAAAC,QAAA;QAAC;QAAc,OAAA,OAAA,CAAA,GACR,OAA6B,EAClC,WAAW,MAAM,UAAU,KAAI,CAAA;QAC/B,cAAAA,QAAA,cAAC,WAAS,EACR,QAAQD,gBAAe,uBAAuB,MAAM,SAAS,EAAC,CAAA;MAC9D;IAGR;AAEA,UAAM,YAAYA,gBAAe,uBAAuB,MAAM,SAAS;AACvE,UAAME,MAAwB,OAAxB,EAAE,SAAQ,IAAAA,KAAK,OAAIC,QAAAD,KAAnB,CAAA,UAAA,CAAqB;AAE3B,WACE,cAAAD,QAAA;MAAC;MAAmB,OAAA,OAAA,CAAA,GACb,MAAiC,EACtC,WAAW,MAAM,UAAU,KAAI,CAAA;MAC/B,cAAAA,QAAA;QAAC;QAAe,EAAC,SAAkB;QACjC,cAAAA,QAAA,cAAC,WAAS,EAAC,QAAQ,WAAW,KAAK,UAAS,CAAA;MAAI;IAChC;EAGxB;AAEA,MAAI,MAAM,aAAa,QAAQ,MAAM,mBAAmB,GAAG;AACzD,WACE,cAAAA,QAAA;MAAC;MAAU,OAAA,OAAA,CAAA,GAAM,KAAyB;MACxC,cAAAA,QAAA,cAAC,YAAU;QACT,aAAa,CAAC,WAAW,KAAK,UAAU,MAAM;QAC9C,UAAU;;QAEV,OAAO;MAAC,CAAA;IACR;EAGR;AAEA,MAAI,MAAM,MAAM;AACd,WACE,cAAAA,QAAA,cAAC,mBAAS,OAAA,OAAA,EACR,eAAe,CAAC,UAAS;;AACvB,cAAA,MAAAG,MAAA,OAAO,SAAQF,MAAA,MAAM,UAAI,QAAAA,QAAA,SAAAA,MAAI,CAAA,CAAE,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,MAAM,MAAM,KAAK,OAAC,QAAAE,QAAA,SAAA,SAAAA,IAAG,CAAC,OAAC,QAAA,OAAA,SAAA,KAClE;MAAK,GAEF,KAAwB,CAAA;EAGnC;AAEA,QAAM,YAAYJ,gBAAe,aAAa,KAAK;AAEnD,UAAQ,WAAW;IACjB,KAAK;AACH,aAAO,cAAAC,QAAA,cAAC,YAAU,OAAA,OAAA,CAAA,GAAM,KAAyB,CAAA;IAEnD,KAAK;AACH,aAAO,cAAAA,QAAA,cAAC,UAAQ,OAAA,OAAA,CAAA,GAAM,KAAuB,CAAA;IAE/C,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO,cAAAA,QAAA,cAAC,aAAW,OAAA,OAAA,CAAA,GAAM,KAA0B,CAAA;IAErD,KAAK;AACH,aAAO,cAAAA,QAAA,cAAC,cAAY,OAAA,OAAA,CAAA,GAAM,KAA2B,CAAA;IAEvD,KAAK;IACL,KAAK;AACH,aAAO,cAAAA,QAAA,cAAC,WAAS,OAAA,OAAA,CAAA,GAAM,KAAwB,CAAA;IAEjD;AACE,aAAO,cAAAA,QAAA,cAAC,WAAS,OAAA,OAAA,CAAA,GAAM,KAAwB,CAAA;EACnD;AACF;AAEO,IAAM,2BAA2B,CAACC,QAOL;MAPK,EACvC,QACA,gBACA,gBACA,QACA,gBAAAF,gBAAc,IAAAE,KACX,QAAKC,QAAAD,KAN+B,CAAA,UAAA,kBAAA,kBAAA,UAAA,gBAAA,CAOxC;AACC,MAAI,CAAC,MAAM,QAAQ;AAEjB,YAAQ,MAAM,wCAAwC;AACtD,WAAO;EACT;AACA,QAAM,QAAQ,OAAO,KAAK,CAAC,MAAM,EAAE,SAAS,MAAM,MAAM;AAExD,MAAI,CAAC,OAAO;AAEV,YAAQ,MACN,UAAU,MAAM,MAAM,0DAA0D,MAAM,QAAQ,GAAG;AAGnG,WAAO;EACT;AAEA,SAAO,YAAY,OAAOF,iBAAc,OAAA,OAAA,OAAA,OAAA,EACtC,UAAU,gBAAgB,OAAO,MAAM,EAAC,GACrC,KAAK,GAAA,EACR,QAAQ,MAAM,OAAM,CAAA,CAAA;AAExB;AAEA,IAAM,eAAe,CAAC,UAA4B;AAChD,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,2CAA2C;EAC7D;AAEA,SACE,cAAAC,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,0BACX,UACA,mBAAiB,KAAA,GACb,KAAK,CAAA;AAGf;AAEA,IAAA,uBAAe;;;AMlLf,IAAAI,gBAA2C;;;ACA3C,IAAAC,gBAAkB;AA4BlB,oBAA0B;;;ACzBnB,IAAM,eAAe,CAAC,OAAc,cACzC,CAAC,cAAc,IAAI,EAAE,SAAS,SAAS,KAAK,MAAM,SAAS;AAE7D,IAAM,qBAAqB,CACzBC,iBACA,UACA,QACA,WAEA,UACE;AACF,QAAM,SAAS,IAAI,QAAQ;AAE3B,MAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,MAAM,MAAM,GAAG;AAC5D,UAAM,QAAQ,OAAO,KAAK,CAAC,aAAa,SAAS,SAAS,SAAS;AACnE,QAAI,CAAC,OAAO;AACV,aAAO;IACT;AACA,UAAM,YAAYA,gBAAe,aAAa,KAAK;AACnD,QAAI,aAAa,OAAO,SAAS,GAAG;AAClC,YAAM,KAAK,MAAM,UAAU,OAAO,MAAM;AACxC,UAAI,CAAC,cAAc,SAAS,EAAE,SAAS,SAAS,GAAG;AACjD,eAAO,SAAS,IAAI,EAAE;MACxB;AACA,aAAO;IACT;EACF;AAEA,SAAO;AACT;AAEA,IAAA,6BAAe;;;;;;;;;;;;;;ADER,IAAM,2BAA2B,CAACC,QASL;MATK,EACvC,QACA,gBACA,gBACA,QACA,gBAAAC,iBACA,UACA,cAAa,IAAAD,KACV,QAAKE,QAAAF,KAR+B,CAAA,UAAA,kBAAA,kBAAA,UAAA,kBAAA,YAAA,eAAA,CASxC;AACC,QAAM,QAAQ,OAAO,KAAK,CAAC,EAAE,KAAI,MAAO,SAAS,MAAM,MAAM;AAC7D,MAAI,CAAC,OAAO;AAEV,YAAQ,MACN,SAAS,MAAM,MAAM,wDAAwD,MAAM,QAAQ,EAAE;AAG/F,WAAO;EACT;AAEA,QAAM,kBAAkB,CAAC,YAAY,MAAM,WAAW,CAAC,SAAQ,CAAE,IAAI;AAErE,MAAI,MAAM,cAAc,QAAQ,OAAO,MAAM,cAAc,UAAU;AACnE,QAAI,MAAM,mBAAmB,GAAG;AAC9B,YAAMG,MACJ,OADI,EAAE,QAAAC,SAAQ,MAAAC,OAAM,SAAAC,UAAS,MAAAC,OAAM,kBAAAC,kBAAgB,IAAAL,KAAKM,QAAIP,QAAAC,KAAxD,CAAA,UAAA,QAAA,WAAA,QAAA,kBAAA,CAA0D;AAGhE,aACE,cAAAO,QAAA;QAAC;QAAc,EACb,KAAK,MAAM,MACX,WAAW,MAAM,UAAU,MAC3B,QAAQ,MAAM,MACd,QAAQN,SACR,MAAMC,OACN,SAASC,UACT,MAAMC,OACN,kBAAkBC,kBAAgB;QAClC,cAAAE,QAAA,cAAC,aAAW,OAAA,OAAA,EACV,YAAYT,gBAAe,uBAAuB,MAAM,SAAS,GACjE,UAAU,gBAAe,GACpBQ,KAAyB,CAAA;MAC9B;IAGR;AAEA,UAAM,KACJ,OADI,EAAE,QAAQ,MAAM,SAAS,MAAM,iBAAgB,IAAA,IAAK,OAAIP,QAAA,IAAxD,CAAA,UAAA,QAAA,WAAA,QAAA,kBAAA,CAA0D;AAGhE,WACE,cAAAQ,QAAA;MAAC;MAAmB,EAClB,KAAK,MAAM,MACX,WAAW,MAAM,UAAU,MAC3B,QAAQ,MAAM,MACd,QACA,MACA,SACA,MACA,iBAAkC;MAClC,cAAAA,QAAA,cAAC,kBAAgB,OAAA,OAAA,EACf,YAAYT,gBAAe,uBAAuB,MAAM,SAAS,GACjE,UAAU,gBAAe,GACpB,IAA8B,CAAA;IACnC;EAGR;AAEA,MAAI;AACJ,MAAIU;AACJ,QAAM,YAAYV,gBAAe,aAAa,KAAK;AAEnD,MAAI,MAAM,MAAM;AACd,UAAM,UAAU,OAAO,QAAQ,MAAM,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO;MAC1D,IAAI;MACJ,MAAM,gBAAgB,cAAc,CAAC,IAAI;MACzC;AACF,WAAO,cAAc,UACnB,cAAAS,QAAA,cAAC,kBAAgB,OAAA,OAAA,EACf,UAAU,iBACV,QAAgB,GACX,KAA+B,CAAA,IAGtC,cAAAA,QAAA,cAAC,aAAW,OAAA,OAAA,EACV,UAAU,iBACV,QAAgB,GACX,KAA0B,CAAA;EAGrC;AAEA,MAAI,aAAa,OAAO,SAAS,GAAG;AAClC,aAAS,CAAC,UACR,2BACET,iBACA,MAAM,UACN,QACA,MAAM,MACN,KAAK;EAEX;AAEA,QAAM,iBAAiB,CAAC,UAAiC;AACvD,QAAI,UAAU,MAAM;AAClB,aAAO;IACT;AACA,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO;IACT;AAEA,WAAO,KAAK,UAAU,KAAK;EAC7B;AACA,QAAM,gBAAgB,CAAC,UAAiB;AACtC,QAAI;AACF,YAAM,SAAS,KAAK,MAAM,KAAK;AAC/B,UAAI,KAAC,cAAAW,SAAc,MAAM,GAAG;AAC1B,eAAO;MACT;AACA,aAAO;IACT,SAAS,GAAG;AACV,aAAO;IACT;EACF;AAEA,MAAI,MAAM,aAAa,MAAM;AAC3B,aAAS;AACT,IAAAD,SAAQ;EACV;AAEA,QAAM,EAAE,QAAQ,YAAY,OAAO,UAAS,IAAK;AAEjD,UAAQ,WAAW;IACjB,KAAK;AACH,aACE,cAAAD,QAAA;QAAC;QAAU,OAAA,OAAA,EACT,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAAyB,EAC9B,QAAQ,MAAM,KAAI,CAAA;QAClB,cAAAA,QAAA;UAAC;UAAkB;UACjB,cAAAA,QAAA,cAAC,WAAS,EACR,QAAO,IACP,OAAO,aAAa,MAAM,QAAQ,WAAW,MAAM,IAAI,IACvD,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,OAAK,CAAA;QACzB;MACiB;IAI3B,KAAK;IACL,KAAK;AACH,aACE,cAAAD,QAAA,cAAC,aAAW,OAAA,OAAA,EACV,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAA0B,EAC/B,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;IAIxB,KAAK;AACH,aACE,cAAAD,QAAA,cAAC,aAAW,OAAA,OAAA,EACV,KAAK,MAAM,MACX,MAAK,OACL,UAAU,gBAAe,GACpB,OAA0B,EAC/B,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;IAIxB,KAAK;AACH,aACE,cAAAD,QAAA,cAAC,cAAY,OAAA,OAAA,EACX,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAA2B,EAChC,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;IAIxB,KAAK;AACH,aACE,cAAAD,QAAA,cAAC,WAAS,OAAA,OAAA,EACR,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAAwB,EAC7B,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;IAIxB,KAAK;AACH,aACE,cAAAD,QAAA,cAAC,eAAa,OAAA,OAAA,EACZ,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAA4B,EACjC,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;IAIxB;AACE,aACE,cAAAD,QAAA,cAAC,WAAS,OAAA,OAAA,EACR,KAAK,MAAM,MACX,UAAU,gBAAe,GACpB,OAAwB,EAC7B,QAAQ,eAAU,QAAV,eAAU,SAAV,aAAc,QACtB,OAAO,cAAS,QAAT,cAAS,SAAT,YAAaC,QACpB,QAAQ,MAAM,KAAI,CAAA,CAAA;EAG1B;AACF;AAEA,IAAM,eAAe,CAAC,UAA4B;AAChD,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,sCAAsC;EACxD;AAEA,SACE,cAAAD,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,0BACX,UACA,mBAAiB,KAAA,GACb,KAAK,CAAA;AAGf;AAEA,IAAA,uBAAe;;;;;;;;;;;;;;ADxQR,IAAM,4BAA4B,CAACG,QAON;MAPM,EACxC,QACA,gBACA,gBACA,QACA,gBAAAC,gBAAc,IAAAD,KACX,OAAIE,QAAAF,KANiC,CAAA,UAAA,kBAAA,kBAAA,UAAA,gBAAA,CAOzC;AACC,QAAM,CAAC,mBAAmB,oBAAoB,QAAI,wBAChD,CAAA,CAAE;AAGJ,+BAAU,MAAK;AACb,QAAI,QAAQ;AACV,MAAAC,gBACG,+BAA+B,MAAM,EACrC,KAAK,CAAC,eAAc;AACnB,6BAAqB,UAAU;MACjC,CAAC;IACL;EACF,GAAG,CAAC,QAAQA,eAAc,CAAC;AAE3B,MAAI,CAAC,kBAAkB,QAAQ;AAC7B,WAAO;EACT;AAEA,SACE,cAAAE,QAAA,cAAC,QAAM,OAAA,OAAA,CAAA,GAAK,IAAI,GACb,kBAAkB,IAAI,CAAC,WACtB,cAAAA,QAAA,cAAC,sBAAY,EACX,KAAK,OAAO,MACZ,QAAQ,OAAO,MACf,UAAU,OAAO,WAAU,CAAA,CAE9B,CAAC;AAGR;AAEA,IAAM,gBAAgB,CAAC,UAA6B;AAClD,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,4CAA4C;EAC9D;AAEA,SACE,cAAAA,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,2BACX,SAAkB,GACd,KAAK,CAAA;AAGf;AAEA,IAAA,wBAAe;;;AGrEf,IAAAC,gBAAkC;;;ACOlC,IAAM,qBAAqB,CACzBC,UACA,OACA,UACA,gBAAiC,CAAC,eAChC,eACqB;AACvB,MAAIA,SAAQ,QAAQ,MAAM;AACxB,WAAO;MACL,YAAY;MACZ;MACA;MACA,OAAO;;EAEX;AAEA,QAAM,MAAM,IAAI,IAAIA,SAAQ,KAAK,OAAO,MAAM;AAC9C,MAAI,aAAa,OAAO,SAAS,IAAI,IAAI,OAAOA,SAAQ,QAAQ,EAAE,SAAQ,CAAE;AAE5E,MAAIA,SAAQ,QAAQ,MAAM;AACxB,aAAS,SAAS,wBAAwBA,SAAQ,GAAG,UAAUA,SAAQ,GAAG;EAC5E;AAEA,QAAM,cAAc,IAAI,YAAY,IAAI,SAAQ,GAAI;IAClD,iBAAiBA,SAAQ,QAAQ;GAClC;AACD,QAAM,gBAAgB,CAAC,UAAuB;AAC5C,UAAMC,YAAW,cAAc,KAAK,MAAM,MAAM,IAAI,CAAC;AAErD,aAASA,SAAQ;EACnB;AACA,cAAY,iBAAiB,WAAW,aAAa;AAErD,SAAO;IACL,YAAY;IACZ;IACA;IACA;IACA;IACA,OAAO;;AAEX;AAEA,IAAA,6BAAe;;;ACzCf,IAAM,gBAAqD,CAAA;AAC3D,IAAI,UAAiC;AACrC,IAAI,gBAAiC,CAAC,eACpC;AAEF,IAAM,mBAAmB,CAAC,QAA4B;AACpD,MAAI,IAAI,cAAc,IAAI,eAAe,IAAI,eAAe;AAC1D,QAAI,YAAY,oBAAoB,WAAW,IAAI,aAAa;AAChE,QAAI,YAAY,MAAK;EACvB;AACF;AAEA,IAAA,kBAAe;EACb,WAAW,CACT,YACA,OACA,aACE;AACF,QAAI,YAAY,MAAM;AACpB;IACF;AAEA,UAAM,MAAM,cAAc,UAAU;AACpC,QAAI,QAAQ,QAAW;AACrB,UAAI,SAAS;AACb;IACF;AAEA,kBAAc,UAAU,IAAI,2BAC1B,SACA,OACA,UACA,aAAa;EAEjB;EACA,aAAa,CAAC,eAAsB;AAClC,UAAM,MAAM,cAAc,UAAU;AACpC,QAAI,QAAQ,QAAW;AACrB;IACF;AAEA,QAAI,SAAS;AAEb,QAAI,IAAI,SAAS,GAAG;AAClB,uBAAiB,GAAG;AACpB,aAAO,cAAc,UAAU;IACjC;EACF;EACA,mBAAmB,MAAK;AACtB,UAAM,iBAAiB;AACvB,QAAI,mBAAmB,MAAM;AAC3B;IACF;AAEA,UAAM,UAAU,OAAO,KAAK,aAAa;AACzC,YAAQ,QAAQ,CAAC,WAAU;AACzB,YAAM,MAAM,cAAc,MAAM;AAChC,UAAI,OAAO,CAAC,IAAI,YAAY;AAC1B,sBAAc,MAAM,IAAI,2BACtB,gBACA,IAAI,OACJ,IAAI,UACJ,aAAa;MAEjB;IACF,CAAC;EACH;EACA,mBAAmB,CAAC,mBAAyC;AAC3D,cAAU;EACZ;EACA,oBAAoB,CAAC,oBAAoC;AACvD,oBAAgB;EAClB;;;;ACxEF,IAAA,4BAAe,CACb,kBACE;AACF,QAAM,EAAE,YAAY,eAAe,uBAAsB,IAAK;AAC9D,QAAM,gBAAgB,IAAI,IAAI,YAAY,OAAO,SAAS,IAAI;AAC9D,QAAM,mBAAmB,IAAI,IAAI,eAAe,OAAO,SAAS,IAAI;AACpE,QAAMC,WAAiC,cAAc,UAClD,OAAA,OAAA,EACG,KAAK,MACL,KAAK,MACL,UAAU,cAAa,GACnB,cAAc,YAAY,OAAO,CAAA,IAAK,cAAc,OAAQ,IAElE;AACJ,kBAAe,kBAAkBA,QAAO;AAExC,MAAIC;AAEJ,SAAO;IACL,YAAY,CAAC,YAAY,IAAI,UAAU,CAAA,MACrCA,aACI,QAAQ,QAAQ,EAAE,MAAMA,WAAS,CAAE,IACnC,uBAAuB,iBAAiB,SAAQ,CAAE,EAC/C,KAAK,CAAC,EAAE,IAAG,MAAsC;AAChD,UAAI,IAAI,aAAa,IAAI,UAAU,SAAS,GAAG;AAC7C,QAAAA,aAAS,OAAA,OAAA,OAAA,OAAA,CAAA,GAAQ,GAAG,GAAA,EAAE,WAAW,IAAI,UAAS,CAAA;MAChD;AACA,aAAO,EAAE,MAAM,IAAG;IACpB,CAAC,EACA,MAAM,CAAC,QAAO;AACb,YAAM,EAAE,QAAQ,MAAK,IAAK;AAC1B,UAAI,EAAE,QAAO,IAAK;AAElB,UAAI,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,SAAS;AAClB,kBAAU,MAAM;MAClB;AAEA,YAAM,IAAI,MACR;EACE,UACI,GAAG,OAAO;;IACV,EACN,GAAG,SAAS,WAAW,MAAM,KAAK,EAAE,EAAE;IAE1C,CAAC;IACT,WAAW,CACT,aACA,aACE;AACF,kBAAY,QAAQ,CAAC,eAAc;AACjC,wBAAe,UAAU,YAAY,YAAY,QAAQ;MAC3D,CAAC;AAED,aAAO,QAAQ,QAAQ,EAAE,MAAM,KAAI,CAAE;IACvC;IACA,aAAa,CAAC,WAAmB,gBAAyB;AACxD,kBAAY,QAAQ,CAAC,eAAc;AACjC,wBAAe,YAAY,UAAU;MACvC,CAAC;AAED,aAAO,QAAQ,QAAQ,EAAE,MAAM,KAAI,CAAE;IACvC;;AAEJ;;;ACxEA,0BAA0B;;;ACAnB,IAAM,sBAAsB,CAAC,QAAuB;AACzD,MAAI,IAAI,SAAS,GAAG,GAAG;AACrB,WAAO,IAAI,MAAM,GAAG,EAAE;EACxB;AAEA,SAAO;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ADCA,IAAA,2BAAe,CACb,YACA,aAAa,cAAW,cACR;AAChB,QAAM,SAAS,IAAI,IAAI,YAAY,OAAO,SAAS,IAAI;AAEvD,SAAO;IACL,SAAS,CAAO,UAAU,WAAUC,WAAA,QAAA,QAAA,QAAA,aAAA;;AAClC,YAAM,EAAE,MAAM,QAAO,KAAKC,MAAA,OAAO,gBAAU,QAAAA,QAAA,SAAAA,MAAI,EAAE,MAAM,GAAG,SAAS,GAAE;AACrE,YAAM,EAAE,OAAO,MAAK,KAAKC,MAAA,OAAO,UAAI,QAAAA,QAAA,SAAAA,MAAI,EAAE,OAAO,MAAM,OAAO,OAAM;AAEpE,YAAM,cAAc,OAAO,KAAK;AAChC,YAAM,WAAW,OAAO,UAAU;AAElC,YAAM,QAAQ;QACZ,MAAM,KAAK,UAAU,CAAC,OAAO,KAAK,CAAC;QACnC,OAAO,KAAK,UAAU,CAAC,YAAY,QAAQ,CAAC;QAC5C,QAAQ,KAAK,UAAU,OAAO,MAAM;;AAEtC,YAAM,MAAM,GAAG,oBACb,OAAO,SAAQ,CAAE,CAClB,IAAI,QAAQ,QAAI,+BAAU,KAAK,CAAC;AACjC,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,GAAG;AAErC,aAAO;QACL,MAAM;QACN,UAAU;UACR,aAAa;UACb,iBAAiB,OAAO;;;IAG9B,CAAC;IAED,QAAQ,CAAO,UAAU,WAAUF,WAAA,QAAA,QAAA,QAAA,aAAA;AACjC,YAAM,MAAM,GAAG,oBAAoB,OAAO,SAAQ,CAAE,CAAC,IAAI,QAAQ,IAC/D,OAAO,EACT;AACA,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,GAAG;AAErC,aAAO;QACL,MAAM;;IAEV,CAAC;IAED,SAAS,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AAClC,YAAM,QAAQ;QACZ,QAAQ,KAAK,UAAU,EAAE,IAAI,OAAO,IAAG,CAAE;;AAE3C,YAAM,MAAM,GAAG,oBACb,OAAO,SAAQ,CAAE,CAClB,IAAI,QAAQ,QAAI,+BAAU,KAAK,CAAC;AACjC,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,GAAG;AAErC,aAAO;QACL,MAAM;;IAEV,CAAC;IAED,kBAAkB,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AAC3C,YAAM,EAAE,MAAM,QAAO,IAAK,OAAO;AACjC,YAAM,EAAE,OAAO,MAAK,IAAK,OAAO;AAEhC,YAAM,cAAc,OAAO,KAAK;AAChC,YAAM,WAAW,OAAO,UAAU;AAElC,YAAM,QAAQ;QACZ,MAAM,KAAK,UAAU,CAAC,OAAO,KAAK,CAAC;QACnC,OAAO,KAAK,UAAU,CAAC,YAAY,QAAQ,CAAC;QAC5C,QAAQ,KAAK,UAAS,OAAA,OAAA,OAAA,OAAA,CAAA,GACjB,OAAO,MAAM,GAAA,EAChB,CAAC,OAAO,MAAM,GAAG,OAAO,GAAE,CAAA,CAAA;;AAG9B,YAAM,MAAM,GAAG,oBACb,OAAO,SAAQ,CAAE,CAClB,IAAI,QAAQ,QAAI,+BAAU,KAAK,CAAC;AACjC,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,GAAG;AAErC,aAAO;QACL,MAAM;QACN,UAAU;UACR,aAAa;UACb,iBAAiB,OAAO;;;IAG9B,CAAC;IAED,QAAQ,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AACjC,YAAM,MAAM,GAAG,oBAAoB,OAAO,SAAQ,CAAE,CAAC,IAAI,QAAQ,IAC/D,OAAO,EACT;AACA,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,KAAK;QACrC,QAAQ;QACR,MAAM,KAAK,UAAU,OAAO,IAAI;OACjC;AAED,aAAO;QACL,MAAM;;IAEV,CAAC;IAED,YAAY,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AACrC,YAAM,YAAY,MAAM,QAAQ,IAC9B,OAAO,IAAI,IAAI,CAAC,OAAM;AACpB,cAAM,MAAM,GAAG,oBACb,OAAO,SAAQ,CAAE,CAClB,IAAI,QAAQ,IAAI,EAAE;AAEnB,eAAO,WAAW,KAAK;UACrB,QAAQ;UACR,MAAM,KAAK,UAAU,OAAO,IAAI;SACjC;MACH,CAAC,CAAC;AAGJ,aAAO,EAAE,MAAM,UAAU,IAAI,CAAC,EAAE,KAAI,MAAO,KAAK,EAAE,EAAC;IACrD,CAAC;IAED,QAAQ,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AACjC,YAAM,MAAM,GAAG,oBAAoB,OAAO,SAAQ,CAAE,CAAC,IAAI,QAAQ;AACjE,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,KAAK;QACrC,QAAQ;QACR,MAAM,KAAK,UAAU,OAAO,IAAI;OACjC;AAED,aAAO;QACL,MAAM;;IAEV,CAAC;IAED,QAAQ,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AACjC,YAAM,MAAM,GAAG,oBAAoB,OAAO,SAAQ,CAAE,CAAC,IAAI,QAAQ,IAC/D,OAAO,EACT;AACA,YAAM,EAAE,KAAI,IAAK,MAAM,WAAW,KAAK;QACrC,QAAQ;OACT;AAED,aAAO;QACL,MAAM;;IAEV,CAAC;IAED,YAAY,CAAO,UAAU,WAAUA,WAAA,QAAA,QAAA,QAAA,aAAA;AACrC,YAAM,YAAY,MAAM,QAAQ,IAC9B,OAAO,IAAI,IAAI,CAAC,OAAM;AACpB,cAAM,MAAM,GAAG,oBACb,OAAO,SAAQ,CAAE,CAClB,IAAI,QAAQ,IAAI,EAAE;AAEnB,eAAO,WAAW,KAAK;UACrB,QAAQ;SACT;MACH,CAAC,CAAC;AAGJ,aAAO;QACL,MAAM,UAAU,IAAI,CAAC,EAAE,KAAI,MAAO,KAAK,EAAE;;IAE7C,CAAC;;AAEL;;;AExKA,IAAAG,gBAA4B;AAK5B,IAAM,iBAAiB,MAAK;AAC1B,QAAM,cAAc,eAAc;AAGlC,aAAO,2BACL,CAAC,EACC,UACA,IACA,KAAI,MAKD;AACH,UAAM,aAAa,CAAC,QAAiC;AACnD,YAAM,QAAQ,IAAI;;QAEhB,CAAC,WAAW,OAAO,MAAM;MAAE;AAE7B,UAAI,UAAU,IAAI;AAChB,eAAO;MACT;AACA,aAAO;QACL,GAAG,IAAI,MAAM,GAAG,KAAK;wCAChB,IAAI,KAAK,CAAC,GAAK,IAAI;QACxB,GAAG,IAAI,MAAM,QAAQ,CAAC;;IAE1B;AAEA,gBAAY,aACV,CAAC,UAAU,UAAU,EAAE,IAAI,OAAO,EAAE,EAAC,CAAE,GACvC,CAAC,WAA+C,OAAA,OAAA,OAAA,OAAA,CAAA,GAC3C,MAAM,GACN,IAAI,CACP;AAEJ,gBAAY,eACV,EAAE,UAAU,CAAC,UAAU,SAAS,EAAC,GACjC,CAAC,SACC,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,QACD,EAAE,MAAM,WAAW,IAAI,IAAI,GAAG,OAAO,IAAI,MAAK,IAC9C,EAAE,MAAM,CAAC,IAAI,EAAC,CAAE;AAExB,gBAAY,eACV,EAAE,UAAU,CAAC,UAAU,SAAS,EAAC,GACjC,CAAC,SACC,QAAQ,KAAK,SAAS,IAAI,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC;AAEvD,gBAAY,eACV,EAAE,UAAU,CAAC,UAAU,kBAAkB,EAAC,GAC1C,CAAC,SACC,QAAG,QAAH,QAAG,SAAA,SAAH,IAAK,QACD,EAAE,MAAM,WAAW,IAAI,IAAI,GAAG,OAAO,IAAI,MAAK,IAC9C,EAAE,MAAM,CAAC,IAAI,EAAC,CAAE;EAE1B,GACA,CAAC,WAAW,CAAC;AAEjB;AAEA,IAAA,yBAAe;;;AN3DD,SAAP,uBACL,UACA,SAA8C;AAE9C,QAAMC,gBAA6C,gBAAe;AAClE,QAAM,cAAc,uBAAc;AAElC,QAAM,iCAA6B,sBAAO,KAAK;AAE/C,+BAAU,MAAK;AACb,QAAI,CAAC,WAAW,CAAC,UAAU;AACzB,aAAO;IACT;AACA,UAAM,MAAM,MAAM,QAAQ,OAAO,IAC7B,QAAQ,IAAI,CAAC,OAAO,GAAG,SAAQ,CAAE,IACjC,CAAC,QAAQ,SAAQ,CAAE;AAEvB,QACE,CAAC,2BAA2B,YAC3BA,cAAa,cAAc,UAC1BA,cAAa,gBAAgB,SAC/B;AAEA,cAAQ,KACN,uKAAuK;AAEzK,iCAA2B,UAAU;AACrC,aAAO;IACT;AAEA,IAAAA,cAAa,UAAU,KAAK,CAACC,cAAY;AACvC,kBAAY,EAAE,UAAU,IAAIA,UAAS,IAAI,MAAMA,UAAQ,CAAE;IAC3D,CAAC;AAED,WAAO,MAAK;AACV,UAAI,UAAU;AACZ,QAAAD,cAAa,YAAY,UAAU,GAAG;MACxC;IACF;EACF,GAAG,CAAC,SAAS,UAAUA,eAAc,WAAW,CAAC;AACnD;;;AO9CA,IAAAE,iBAAyB;AAEzB,IAAM,yBAAyB,MAAK;AAClC,QAAM,CAAC,WAAW,YAAY,QAAI,yBAAS,KAAK;AAEhD,SAAO,CAAC,SAAgB;AACtB,QAAI;AAAuC;AAE3C,QAAI,CAAC,WAAW;AAEd,cAAQ,KAAK,IAAI;AACjB,mBAAa,IAAI;IACnB;EACF;AACF;AAEA,IAAA,iCAAe;;;;;;;;;;;;;;AjBQf,IAAM,kBAAkB,CAAC,QAAkB,WAAmB;AAC5D,MAAI,OAAO,wDAAwD,OAAO,KAAK;;AAC/E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,gBAAgB,OAAO,KAAK;;AACpC,UAAQ;;AACR,SAAO,QAAQ,CAAC,UAAS;AACvB,YAAQ,iCAAiC,MAAM,IAAI;;EACrD,CAAC;AACD,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,YAAY,OAAO,KAAK,kBAAkB,OAAO,KAAK;;AAC9D,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,kCAAkC,OAAO,IAAI,WAAW,OAAO,KAAK;;AAC5E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AAER,SAAO;AACT;AAEO,IAAM,0BAA0B,CAAC,UAA4B;AAClE,QAAM,EAAE,KAAI,IAAK;AACjB,QAAM,WAAW,mBAAmB,KAAK;AACzC,yBACE,UACA,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,IAAI,CAAC,WAAmC,OAAO,EAAE,CAAC;AAG1D,SAAO,eAAAC,QAAA,cAAC,sBAAY,OAAA,OAAA,CAAA,GAAK,KAAK,CAAA;AAChC;AAEO,IAAM,0BAA0B,CAACC,QAsBL;MAtBK,EACtC,QACA,gBACA,gBACA,QACA,gBAAAC,iBACA,YACA,mBACA,UACA,UACA,iBACA,iBACA,OAAO,yBACP,QACA,OACA,OACA,QACA,cACA,WACA,MACA,SAAQ,IAAAD,KACL,QAAKE,QAAAF,KArB8B,CAAA,UAAA,kBAAA,kBAAA,UAAA,kBAAA,cAAA,qBAAA,YAAA,YAAA,mBAAA,mBAAA,QAAA,UAAA,SAAA,SAAA,UAAA,gBAAA,aAAA,QAAA,UAAA,CAsBvC;AACC,QAAM,EAAE,SAAS,QAAO,IAAK,sBAAsB,KAAK;AACxD,QAAM,CAAC,iBAAiB,kBAAkB,QAAI,yBAAmB,CAAA,CAAE;AAEnE,gCAAU,MAAK;AACb,QAAI,QAAQ;AACV,MAAAC,gBAAe,6BAA6B,MAAM,EAAE,KAAK,CAAC,eAAc;AACtE,2BAAmB,UAAU;MAC/B,CAAC;IACH;EACF,GAAG,CAAC,QAAQA,eAAc,CAAC;AAE3B,QAAM,sBAAsB,+BAAsB;AAElD,MAAI,gBAAgB;AACpB,MAAI,CAAC,eAAe;AAClB,oBAAgB,eAAe,IAAI,CAAC,UAAS;AAC3C,YAAM,aAAa,gBAAgB,KACjC,CAAC,mBAAmB,eAAe,MAAM,GAAG,EAAE,CAAC,MAAM,MAAM,IAAI;AAGjE,aACE,eAAAF,QAAA,cAAC,sBAAY,EACX,KAAK,MAAM,QAAQ,aAAa,IAAI,UAAU,KAAK,KACnD,QAAQ,MAAM,MACd,UAAU,CAAC,CAAC,YACZ,QAAQ,YACR,UAAU,MAAM,SAAQ,CAAA;IAG9B,CAAC;AAED,wBAAoB,gBAAgB,QAAQ,cAAc,CAAC;EAC7D;AAEA,SACE,eAAAA,QAAA;IAAC;IAAI,OAAA,OAAA,CAAA,GAAK,KAAK;IACb,eAAAA,QAAA;MAAC;MAAQ,EACP,mBACA,UACA,UACA,iBACA,iBACA,MACA,QACA,OACA,OACA,QACA,cACA,WACA,MACA,IAAI,WAAU;MACb;MACA,WAAW,eAAAA,QAAA,cAAC,oBAAU,IAAA;MACtB,WAAW,eAAAA,QAAA,cAAC,YAAU,IAAA;IAAG;EACjB;AAGjB;AAEA,IAAM,cAAc,CAACC,QAGE;MAHF,EACnB,UAAU,eAAAD,QAAA,cAAC,uBAAa,IAAA,EAAG,IAAAC,KACxB,QAAKE,QAAAF,KAFW,CAAA,SAAA,CAGpB;AACC,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,0CAA0C;EAC5D;AAEA,SACE,eAAAD,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,yBACX,UACA,QAAgB,GACZ,KAAK,CAAA;AAGf;AAEA,IAAA,sBAAe;;;AkBpKf,IAAAI,iBAAkB;;;ACAlB,IAAAC,iBAA4B;AAI5B,IAAAC,iBAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMhC,IAAM,WAAW,CAAC,WAChB,OAAO,KAAK,CAAC,UACX,MAAM,QAAQ,KAAK,IACf,SAAS,KAAK,QACd,eAAAC,SAAoB,KAAK,KACzB,OAAO,OAAO,KAAK,EAAE,KAAK,CAAC,QAAQ,eAAe,IAAI,CAAC;AAG/D,IAAM,cAAc,CAAC,EACnB,UACA,gBAAAC,iBACA,QACA,iBACA,WACA,aAAa,OAAM,MAGyB;AAC5C,QAAM,EAAE,IAAI,QAAO,IAAK,UAAS;AACjC,QAAM,KAAK,mBAAmB,YAAO,QAAP,YAAO,SAAP,UAAW,EAAE;AAC3C,QAAM,CAAC,MAAM,IAAI,UAAS;AAC1B,QAAM,CAAC,MAAM,IAAI,UAAS;AAC1B,QAAM,SAAS,UAAS;AACxB,QAAM,WAAW,YAAW;AAE5B,aAAO,4BACL,CAAO,WAA6BC,WAAA,QAAA,QAAA,QAAA,aAAA;;AAClC,UAAM,WAAW,OAAO;AACxB,UAAM,OAAO,YAAY,UAAU,MAAM,IAAI;AAG7C,QAAI,CAAC,UAAU;AACb,aAAO,QAAQ,MAAM,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAC9C,cAAM,kBAAkB,2BACtBD,iBACA,UACA,QACA,KACA,KAAK;AAEP,YAAI,oBAAoB,OAAO;AAC7B,eAAK,GAAG,IAAI;QACd;MACF,CAAC;IACH;AACA,QAAI;AACF,YAAM,WAAW,OAAO,WAAW,SAAS,QAC1C,UAAQ,OAAA,OAAA,OAAA,OAAA,CAAA,GAEF,WAAW,CAAA,IAAK,EAAE,GAAE,CAAG,GAAA,EAC3B,MACA,MAAM,EAAE,cAAc,CAAC,CAAC,SAAS,OAAO,OAAO,MAAM,CAAC,EAAC,EAAE,CAAA,GAE3D,EAAE,eAAe,KAAI,CAAE;AAEzB,YAAM,WACJE,MAAA,oBAAe,QAAf,oBAAe,SAAA,SAAf,gBAAiB,eAAS,QAAAA,QAAA,SAAAA,MACzB,CAAC,WAAoB;AACpB,eACE,WAAW,4BAA4B,2BACvC;UACE,MAAM;UACN,aAAa,EAAE,aAAa,EAAC;SAC9B;AAEH,iBAAS,YAAY,UAAU,OAAO,IAAI,MAAM;MAClD;AACF,cACE,UAAQ,OAAA,OAAA,EAEN,MAAM,SAAQ,GACV,WAAW,CAAA,IAAK,EAAE,IAAI,cAAc,OAAM,CAAG,GAEnD,CAAA,CAAE;AAGJ,aAAO;IACT,SAAS,aAAa;AACpB,YAAM,mBAAmBF,gBAAe,oBACtC,WAAwB;AAE1B,YAAM,WACJG,MAAA,oBAAe,QAAf,oBAAe,SAAA,SAAf,gBAAiB,aAAO,QAAAA,QAAA,SAAAA,MACvB,CAAC,UAAyB;AACzB,YAAI,UAAU;AACd,YAAI,CAAC,kBAAkB;AACrB,oBACE,OAAO,UAAU,WAAW,QAAQ,MAAM,WAAW;QACzD;AACA,YAAI;AACJ,YAAI,OAAO,UAAU,UAAU;AAC7B,yBAAe;QACjB,WAAW,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,SAAS;AACzB,yBAAe,MAAM;QACvB;AACA,eAAO,SAAS;UACd,MAAM;UACN,aAAa,EAAE,GAAG,aAAY;SAC/B;MACH;AACF,cACE,aAAoB,OAAA,OAAA,EAElB,MAAM,OAAM,GACR,WAAW,CAAA,IAAK,EAAE,IAAI,cAAc,OAAM,CAAG,GAEnD,CAAA,CAAE;AAEJ,UAAI,kBAAkB;AACpB,eAAO;MACT;AACA,aAAO,CAAA;IACT;EACF,CAAC,GACD;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACAH;IACA;IACA;IACA;GACD;AAEL;AAEA,IAAA,sBAAe;;;;;;;;;;;;;;ADzHf,IAAMI,mBAAkB,CAAC,QAAkB,WAAmB;AAC5D,MAAI,OAAO,wDAAwD,OAAO,KAAK;;AAC/E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,gBAAgB,OAAO,KAAK;;AACpC,UAAQ;;AACR,SAAO,QAAQ,CAAC,UAAS;AACvB,YAAQ,iCAAiC,MAAM,IAAI;;EACrD,CAAC;AACD,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,YAAY,OAAO,KAAK,oBAAoB,OAAO,KAAK;;AAChE,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,kCAAkC,OAAO,IAAI,aAAa,OAAO,KAAK;;AAC9E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AAER,SAAO;AACT;AAEO,IAAM,4BAA4B,CAACC,QAoBL;MApBK,EACxC,QACA,gBACA,gBACA,QACA,gBAAAC,iBACA,UACA,iBACA,UAAU,aAAa,QACvB,MACA,eACA,WACA,UACA,SACA,wBACA,sBAAsB,MACtB,eACA,eACA,SAAQ,IAAAD,KACL,QAAKE,QAAAF,KAnBgC,CAAA,UAAA,kBAAA,kBAAA,UAAA,kBAAA,YAAA,mBAAA,YAAA,QAAA,iBAAA,aAAA,YAAA,WAAA,0BAAA,uBAAA,iBAAA,iBAAA,UAAA,CAoBzC;AACC,QAAM,OAAO,oBAAY;IACvB;IACA,gBAAAC;IACA;IACA;IACA;IACA;IACA,UAAU,CAAA;GACX;AAED,QAAM,sBAAsB,+BAAsB;AAElD,MAAI,gBAAgB,eAAAE,QAAM,SAAS,QAAQ,QAAQ;AACnD,MAAI,cAAc,WAAW,GAAG;AAC9B,oBAAgB,eAAe,IAAI,CAAC,UAClC,eAAAA,QAAA,cAAC,sBAAY,EAAC,KAAK,MAAM,MAAM,QAAQ,MAAM,KAAI,CAAA,CAClD;AACD,wBAAoBJ,iBAAgB,QAAQ,cAAc,CAAC;EAC7D;AAEA,QAAM,aAAa,cAAc,KAC/B,CAAC,UACC,OAAO,UAAU,YAAY,UAAU,SAAS,MAAM,SAAS,OAAO;AAE1E,QAAM,WAAW,aAAa,aAAa;AAE3C,SACE,eAAAI,QAAA;IAAC;IAAM,OAAA,OAAA,EAAC,UAAoB,WAAW,cAAa,GAAM,KAAK;IAC7D,eAAAA,QAAA,cAAC,UAAQ,EACP,UAAU,MACV,MACA,eACA,UACA,SACA,wBACA,qBACA,WAAW,cAAa,GACvB,aAAa;EACL;AAGjB;AAEA,IAAM,gBAAgB,CAAC,UAA6B;AAClD,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,4CAA4C;EAC9D;AAEA,SACE,eAAAA,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,2BACX,SAAkB,GACd,KAAK,CAAA;AAGf;AAEA,IAAA,wBAAe;;;AE9Hf,IAAAC,iBAAkB;;;;;;;;;;;;AAqBlB,IAAMC,mBAAkB,CAAC,QAAkB,WAAmB;AAC5D,MAAI,OAAO,wDAAwD,OAAO,KAAK;;AAC/E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,gBAAgB,OAAO,KAAK;;AACpC,UAAQ;;AACR,SAAO,QAAQ,CAAC,UAAS;AACvB,YAAQ,iCAAiC,MAAM,IAAI;;EACrD,CAAC;AACD,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,YAAY,OAAO,KAAK,kBAAkB,OAAO,KAAK;;AAC9D,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,kCAAkC,OAAO,IAAI,WAAW,OAAO,KAAK;;AAC5E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AAER,SAAO;AACT;AAEO,IAAM,0BAA0B,CAACC,QAqBL;MArBK,EACtC,QACA,gBACA,gBACA,QACA,gBAAAC,iBACA,UACA,eAAe,eACf,iBACA,UAAU,aAAa,QACvB,MACA,eACA,UACA,WACA,SACA,wBACA,eACA,eACA,sBAAsB,MACtB,SAAQ,IAAAD,KACL,QAAKE,QAAAF,KApB8B,CAAA,UAAA,kBAAA,kBAAA,UAAA,kBAAA,YAAA,gBAAA,mBAAA,YAAA,QAAA,iBAAA,YAAA,aAAA,WAAA,0BAAA,iBAAA,iBAAA,uBAAA,UAAA,CAqBvC;AACC,QAAM,EAAE,IAAI,QAAO,IAAK,UAAS;AACjC,QAAM,KAAK,mBAAmB,YAAO,QAAP,YAAO,SAAP,UAAW,EAAE;AAC3C,QAAM,OAAO,oBAAY;IACvB;IACA,gBAAAC;IACA;IACA;IACA;IACA;IACA,UAAU,CAAA;GACX;AACD,yBAAuB,UAAU,EAAE;AAEnC,QAAM,sBAAsB,+BAAsB;AAElD,MAAI,gBAAgB,eAAAE,QAAM,SAAS,QAAQ,QAAQ;AACnD,MAAI,cAAc,WAAW,GAAG;AAC9B,oBAAgB,eAAe,IAAI,CAAC,UAClC,eAAAA,QAAA,cAAC,sBAAY,EAAC,KAAK,MAAM,MAAM,QAAQ,MAAM,KAAI,CAAA,CAClD;AACD,wBAAoBJ,iBAAgB,QAAQ,cAAc,CAAC;EAC7D;AAEA,QAAM,aAAa,cAAc,KAC/B,CAAC,UACC,OAAO,UAAU,YAAY,UAAU,SAAS,MAAM,SAAS,OAAO;AAE1E,QAAM,WAAW,aAAa,aAAa;AAE3C,SACE,eAAAI,QAAA;IAAC;IAAI,OAAA,OAAA,EACH,UACA,IACA,cACA,UAAU,YACV,WAAW,cAAa,GACpB,KAAK;IACT,eAAAA,QAAA,cAAC,UAAQ,EACP,UAAU,iBAAiB,gBAAgB,SAAY,MACvD,MACA,eACA,UACA,SACA,wBACA,qBACA,WAAW,cAAa,GACvB,aAAa;EACL;AAGjB;AAEA,IAAM,cAAc,CAAC,UAA2B;AAC9C,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,0CAA0C;EAC5D;AAEA,SACE,eAAAA,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,yBACX,SAAkB,GACd,KAAK,CAAA;AAGf;AAEA,IAAA,sBAAe;;;AC1If,IAAAC,iBAAkB;;;;;;;;;;;;AAoBlB,IAAMC,mBAAkB,CAAC,QAAkB,WAAmB;AAC5D,MAAI,OAAO,wDAAwD,OAAO,KAAK;;AAC/E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,gBAAgB,OAAO,KAAK;;AACpC,UAAQ;;AACR,SAAO,QAAQ,CAAC,UAAS;AACvB,YAAQ,iCAAiC,MAAM,IAAI;;EACrD,CAAC;AACD,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,YAAY,OAAO,KAAK,kBAAkB,OAAO,KAAK;;AAC9D,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AACR,UAAQ,kCAAkC,OAAO,IAAI,WAAW,OAAO,KAAK;;AAC5E,UAAQ;;AACR,UAAQ;;AACR,UAAQ;;AAER,SAAO;AACT;AAEO,IAAM,0BAA0B,CAACC,QASL;MATK,EACtC,QACA,gBACA,gBACA,QACA,gBAAAC,iBACA,eACA,SAAQ,IAAAD,KACL,QAAKE,SAAAF,KAR8B,CAAA,UAAA,kBAAA,kBAAA,UAAA,kBAAA,iBAAA,UAAA,CASvC;AACC,QAAM,EAAE,IAAI,QAAO,IAAK,UAAS;AACjC,QAAM,KAAK,mBAAmB,YAAO,QAAP,YAAO,SAAP,UAAW,EAAE;AAC3C,yBAAuB,MAAM,UAAU,EAAE;AAEzC,QAAM,sBAAsB,+BAAsB;AAElD,MAAI,gBAAgB;AACpB,MAAI,CAAC,eAAe;AAClB,oBAAgB,eAAe,IAAI,CAAC,UAClC,eAAAG,QAAA,cAAC,sBAAY,EAAC,KAAK,MAAM,MAAM,QAAQ,MAAM,KAAI,CAAA,CAClD;AACD,wBAAoBJ,iBAAgB,QAAQ,cAAc,CAAC;EAC7D;AAEA,QAAM,SACJ,MAAM,QAAQ,aAAa,KAC3B,cAAc,KACZ,CAAC,UACC,OAAO,UAAU,YAAY,UAAU,SAAS,MAAM,SAAS,GAAG;AAExE,QAAM,aAAa,SAAS,mBAAmB;AAE/C,SACE,eAAAI,QAAA;IAAC;IAAI,OAAA,OAAA,EAAC,WAAW,cAAa,GAAM,KAAK;IACvC,eAAAA,QAAA,cAAC,YAAU,MAAE,aAAa;EAAc;AAG9C;AAEA,IAAM,cAAc,CAAC,UAA2B;AAC9C,QAAM,WAAW,mBAAmB,KAAK;AACzC,MAAI,CAAC,UAAU;AACb,UAAM,IAAI,MAAM,0CAA0C;EAC5D;AAEA,SACE,eAAAA,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,yBACX,SAAkB,GACd,KAAK,CAAA;AAGf;AAEA,IAAA,sBAAe;;;;;;;;;;;;;;AtBrFR,IAAM,8BAA8B,CAACC,QASL;;MATK,EAC1C,UACA,QACA,gBAAAC,iBACA,OAAO,qBACP,OAAO,qBACP,SAAS,uBACT,OAAO,oBAAW,IAAAD,KACf,QAAKE,SAAAF,KARkC,CAAA,YAAA,UAAA,kBAAA,QAAA,QAAA,UAAA,MAAA,CAS3C;AACC,QAAM,EAAE,SAAQ,IAAK,6BAA4B;AACjD,QAAM,uBAAuB,sBAAsB,EAAE,SAAQ,CAAE;AAE/D,MAAI,UAAU;AACd,MAAI,UAAU;AACd,MAAI,YAAY;AAChB,MAAI,UAAU;AACd,GAAAG,MAAA,OAAO,gBAAU,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAAC,cAAa;AACvC,QAAI,UAAU,SAAS,QAAQ;AAC7B,gBAAU;IACZ;AACA,QAAI,UAAU,SAAS,QAAQ;AAC7B,gBAAU;IACZ;AACA,QAAI,UAAU,SAAS,UAAU;AAC/B,kBAAY;IACd;AACA,QAAI,UAAU,SAAS,QAAQ;AAC7B,gBAAU;IACZ;EACF,CAAC;AAED,gCAAU,MAAK;AACb,QACE,qBAAqB,YAAY,WACjC,qBAAqB,YAAY,WACjC,qBAAqB,cAAc,aACnC,qBAAqB,YAAY,SACjC;AACA,eAAS;QACP,MAAM;QACN,MAAM,MAAM;QACZ,SAAS,MAAM;QACf;QACA;QACA;QACA;OACD;IACH;EACF,GAAG;IACD;IACA;IACA,MAAM;IACN,MAAM;IACN;IACA;IACA;IACA;IACA;GACD;AAED,SACE,eAAAC,QAAA,cAAC,UAAQ,OAAA,OAAA,CAAA,GACH,OAAK,EACT,MAAM,UACN,QACA,MACA,MACA,KAAU,CAAA,CAAA;AAGhB;AAEA,IAAM,kBAAkB,CAACJ,QAA4C;MAA5C,EAAE,KAAI,IAAAA,KAAK,QAAKE,SAAAF,KAAhB,CAAA,MAAA,CAAkB;AAA2B,SACpE,eAAAI,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,WAAW,6BACX,UAAU,KAAI,GACV,KAAK,CAAA;;AAIb,gBAAgB,SAAS;AAEzB,gBAAgB,mBAAmB,CACjC,WACwB;EACxB,MAAM,MAAM;EACZ,MAAM,MAAM;EACZ,SAAS,MAAM;EACf,SAAS;EACT,SAAS;EACT,WAAW;EACX,SAAS;;AAGX,IAAA,0BAAe;;;AuBhHf,IAAAC,iBAA0C;AAenC,IAAM,yBAAyB,CACpC,aACkC;AAClC,QAAM,gBAAgB,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AAEpE,QAAM,mBAAmB,cAAc,OACrC,CAAC,UAAU,OAAO,UAAU,UAAU;AAGxC,MAAI,iBAAiB,SAAS,GAAG;AAC/B,UAAM,IAAI,MAAM,wDAAwD;EAC1E;AAEA,MAAI,iBAAiB,WAAW,GAAG;AACjC,WAAO;EACT;AAEA,SAAO,iBAAiB,CAAC;AAC3B;AAEO,IAAM,wBAAwB,CACnC,aACwC,CAAC,CAAC,uBAAuB,QAAQ;AAO3E,IAAM,iCAAiC,CAAC,aAA2B;AACjE,QAAM,eAAkD,CAAA;AACxD,QAAM,YAA2C,CAAA;AAEjD,MAAI,sBAAsB,QAAQ,GAAG;AACnC,WAAO;MACL;MACA;;EAEJ;AAGA,0BAAS,QAAQ,UAAU,CAAC,YAAW;AACrC,QAAI,CAAC,eAAAC,QAAM,eAAe,OAAO,GAAG;AAGlC;IACF;AACA,QAAI,QAAQ,SAAS,yBAAU;AAC7B,YAAM,2BAA2B,+BAC/B,QAAQ,MAAM,QAAQ;AAExB,mBAAa,KAAK,GAAG,yBAAyB,YAAY;AAC1D,gBAAU,KAAK,GAAG,yBAAyB,SAAS;IACtD;AAEA,QAAK,QAAQ,KAAqB,WAAW,gBAAgB;AAC3D,YAAM,sBAAsB;AAE5B,mBAAa,KAAK,mBAAmB;IACvC,WAAY,QAAQ,KAAqB,WAAW,YAAY;AAC9D,gBAAU,KAAK,OAAsC;IACvD;EACF,CAAC;AAED,SAAO;IACL;IACA;;AAEJ;AAEA,IAAA,yCAAe;;;;;;;;;;;;;;AxBxDf,IAAMC,mBAAkB,CAAC,cAAyB;AAChD,MAAI,OACF;AAEF,YAAU,QAAQ,CAAC,MAAK;AACtB,YAAQ,0BAA0B,EAAE,IAAI;;EAC1C,CAAC;AAED,SAAO;AACT;AAcO,IAAM,wBAAwB,CAACC,QAUL;MAVK;;IAEpC,aAAa,cAAc;IAC3B,OAAO,UAAU;;IAEjB;IACA;IACA;IACA;EAAO,IAAAA,KACJ,OAAIC,SAAAD,KAT6B,CAAA,eAAA,SAAA,YAAA,qBAAA,aAAA,SAAA,CAUrC;AACC,QAAM,sBAAsB,+BAAsB;AAElD,MAAI,SAAS;AACX,WAAO,eAAAE,QAAA,cAAC,aAAW,IAAA;EACrB;AAEA,MAAI,gBAAgB;AACpB,QAAM,EAAE,WAAW,kBAAkB,aAAY,IAC/C,uCAA+B,QAAQ;AACzC,MACE,CAAC,sBAAsB,aAAa,KACpC,iBAAiB,WAAW,KAC5B,WACA;AACA,UAAM,mBAAmB,oBACrB,YACA,UAAU,OAAO,CAAC,MAAM,CAAC,EAAE,UAAU;AACzC,oBAAgB;MACd,GAAG;MACH,GAAG,iBAAiB,IAAI,CAAC,MACvB,eAAAA,QAAA,cAAC,yBAAe,EAAC,MAAM,EAAE,MAAM,KAAK,EAAE,KAAI,CAAA,CAC3C;;AAEH,wBAAoBH,iBAAgB,gBAAgB,CAAC;EACvD;AAEA,SACE,eAAAG,QAAA,cAAC,SAAO,OAAA,OAAA,EAAC,SAAS,YAAW,GAAM,IAAI,GACpC,aAAa;AAGpB;;;AyB9FA,IAAAC,iBAEO;AAGP,IAAM,2BAAuB,8BAAc,EAAE,YAAY,MAAK;AAAE,EAAC,CAAE;AAEnE,IAAA,+BAAe;;;ACPf,IAAAC,iBAAkB;AAkBlB,wBAA2B;AAC3B,qBAAwB;AACxB,qBAAwB;;;ACpBxB,IAAAC,iBAAkB;AAElB,IAAM,YAAY,MAChB,eAAAC,QAAA;EAAA;EAAA,EAAK,OAAM,aAAY,QAAO,aAAY,SAAQ,0BAAyB;EACzE,eAAAA,QAAA,cAAA,SAAA,MACG,mJAOoB;EAEvB,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,sIACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EAAM,GAAE,mYAAkY,CAAA;EAC1Y,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,+HACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,yHACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,8HACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EAAM,GAAE,8ZAA6Z,CAAA;EACra,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,+HACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,uHACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,YACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,oEACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,sEACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,uEACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,YAAA,EACE,QAAO,kDACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,uIACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,6IACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,sKACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,gJACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,0EACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,4EACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,WAAA,EACE,QAAO,4EACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,YAAA,EACE,QAAO,kDACP,WAAU,KACV,WAAU,0BAAyB,CAAA;EAErC,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,yIACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,+KACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,8KACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,4IACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,mIACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,oTACF,WAAU,IAAG,CAAA;EAEf,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,YACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,YACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,sBACV,IAAG,aACH,IAAG,aACH,IAAG,aACH,IAAG,aACH,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,aACF,GAAE,aACF,WAAU,qBACV,OAAM,cACN,QAAO,aACP,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,aACF,GAAE,cACF,WAAU,qBACV,OAAM,cACN,QAAO,aACP,WAAU,KACV,OAAO,EAAE,aAAa,SAAQ,EAAE,CAAA;EAElC,eAAAA,QAAA,cAAA,QAAA,EAAM,GAAE,sdAAqd,CAAA;EAC7d,eAAAA,QAAA,cAAA,QAAA,EAAM,GAAE,seAAqe,CAAA;EAC7e,eAAAA,QAAA,cAAA,QAAA,EAAM,GAAE,ueAAse,CAAA;AAAG;AAIrf,IAAA,oBAAe;;;;;;;;;;;;;;ADhMf,IAAM,SAAS;AAER,IAAM,eAAe;EAC1B,WAAW,GAAG,MAAM;EACpB,OAAO,GAAG,MAAM;EAChB,MAAM,GAAG,MAAM;EACf,OAAO,GAAG,MAAM;EAChB,cAAc,GAAG,MAAM;EACvB,cAAc,GAAG,MAAM;EACvB,SAAS,GAAG,MAAM;EAClB,QAAQ,GAAG,MAAM;;AAInB,IAAM,OAAO,eAAO,OAAO;EACzB,MAAM;EACN,mBAAmB,CAAC,GAAG,WAAW,OAAO;CAC1C,EAAE,CAAC,EAAE,MAAK,OAAQ;EACjB,SAAS;EACT,eAAe;EACf,YAAY;EACZ,gBAAgB;EAChB,CAAC,MAAM,YAAY,KAAK,IAAI,CAAC,GAAG;IAC9B,SAAS;;EAEX,YAAY;EACZ,SAAS;EAET,CAAC,MAAM,aAAa,KAAK,EAAE,GAAG;IAC5B,SAAS;IACT,YAAY;;EAGd,CAAC,MAAM,aAAa,IAAI,EAAE,GAAG;IAC3B,QAAQ;;EAGV,CAAC,MAAM,aAAa,KAAK,EAAE,GAAG;IAC5B,WAAW;IACX,UAAU;;EAGZ,CAAC,MAAM,aAAa,YAAY,EAAE,GAAG;IACnC,YAAY;;EAGd,CAAC,MAAM,aAAa,YAAY,EAAE,GAAG;IACnC,YAAY;;EAGd,CAAC,MAAM,aAAa,OAAO,EAAE,GAAG;IAC9B,WAAW;;EAGb,CAAC,MAAM,aAAa,MAAM,EAAE,GAAG;IAC7B,WAAW;;EAEb;AAEF,IAAM,SAAS,MAAK;AAClB,SAAO,QAAQ,GAAG,EAAE;AACtB;AASA,IAAMC,SAAQ,CAACC,QASV;MATU,EACb,OACA,gBAAgB,gBAChB,WACA,oBACA,UAAS,IAAAA,KACN,OAAIC,SAAAD,KANM,CAAA,SAAA,kBAAA,aAAA,sBAAA,WAAA,CAOd;AAGC,QAAM,YAAY,aAAY;AAC9B,QAAM,QAAQ,gBAAe;AAC7B,wCAAsC,kBAAkB;AAExD,MAAI,gBAAgB;AAClB,WAAO,eAAAE,QAAA,cAAC,gBAAc,EAAC,OAAc,WAAsB,MAAY,CAAA;EACzE;AAEA,SACE,eAAAA,QAAA;IAAA,eAAAA,QAAA;IAAA;IACG,SAAS,eAAAA,QAAA,cAAC,OAAK,EAAC,MAAY,CAAA;IAC7B,eAAAA,QAAA;MAAC;MAAI,OAAA,OAAA,EAAC,UAAoB,GAAM,IAAI;MAClC,eAAAA,QAAA;QAAA;QAAA,EAAI,WAAW,aAAa,OAAO,MAAK,QAAO;QAC7C,eAAAA,QAAA;UAAC;UAAG,EAAC,WAAW,aAAa,KAAI;UAC/B,eAAAA,QAAA,cAAC,mBAAS,IAAA;QAAG;QAEd,UAAU,eAAe;MAAC;MAE7B,eAAAA,QAAA,cAAA,OAAA,MAAM,UAAU,kBAAkB,CAAC;MAEjC,eAAAA,QAAA;QAAA,eAAAA,QAAA;QAAA;QACE,eAAAA,QAAA;UAAC;UAAS,EAAC,WAAW,aAAa,MAAK;UACtC,eAAAA,QAAA,cAAC,0BAAgB,EACf,YAAY,eAAAA,QAAA,cAAC,kBAAAC,SAAc,IAAA,GAC3B,WAAW,aAAa,aAAY,GACnC,UAAU,MAAM,SAAS;YACxB,GAAG,MAAM;WACV,CAAC;UAEJ,eAAAD,QAAA;YAAC;YAAgB,EAAC,WAAW,aAAa,aAAY;YAIpD,eAAAA,QAAA,cAAA,KAAA,MACG,UAAU,MAAM,SAAS;cACxB,GAAG,MAAM;aACV,CAAC;YAEJ,eAAAA,QAAA,cAAA,KAAA,MAAI,cAAS,QAAT,cAAS,SAAA,SAAT,UAAW,cAAc;UAAK;QACjB;QAGrB,eAAAA,QAAA;UAAA;UAAA,EAAK,WAAW,aAAa,OAAM;UACjC,eAAAA,QAAA,cAAC,oBAAU,EAAC,OAAM,SAAQ,GAAA,+CAAA;UAG1B,eAAAA,QAAA;YAAC;YAAU,EAAC,WAAU,MAAK;YACzB,eAAAA,QAAA;cAAA;cAAA;cACE,eAAAA,QAAA;gBAAA;gBAAA;;gBACY;gBACV,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,uCAAsC,GAAA,oBAAA;gBAEzC;;gBACG;gBACR,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,+CAA8C,GAAA,2BAAA;cAElD;cAEN,eAAAA,QAAA;gBAAA;gBAAA;;gBAEE,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,yDAAwD,GAAA,aAAA;gBAE3D;;gBACH;gBACF,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,8DAA6D,GAAA,cAAA;;;cAKvE,eAAAA,QAAA;gBAAA;gBAAA;;gBACoD;gBAClD,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,6BAA4B,GAAA,mBAAA;gBAAuB;;gBACrB;gBACtC,eAAAA,QAAA,cAAA,KAAA,EAAG,MAAK,8CAA6C,GAAA,gCAAA;cAEjD;YACD;UACF;QACM;MACT;MAGV,eAAAA,QAAA,cAAA,OAAA,EAAK,WAAW,aAAa,QAAO,GACjC,qBACC,eAAAA,QAAA,cAAC,gBAAM,EACL,SAAQ,aACR,WAAW,eAAAA,QAAA,cAAC,eAAAE,SAAW,IAAA,GACvB,SAAS,MAAK;AACZ,2BAAkB;MACpB,EAAC,GACA,UAAU,mBAAmB,CAAC,IAGjC,eAAAF,QAAA,cAAC,gBAAM,EACL,SAAQ,aACR,WAAW,eAAAA,QAAA,cAAC,eAAAG,SAAW,IAAA,GACvB,SAAS,OAAM,GACd,UAAU,gBAAgB,CAAC,CAE/B;IACG;EACD;AAGb;AAEA,IAAA,gBAAeN;;;AEjNf,IAAAO,iBAAkB;;;ACDlB,IAAAC,iBAAkB;;;ACAlB,IAAAC,iBAAkB;AAElB,IAAM,OAAO,MACX,eAAAC,QAAA;EAAA;EAAA,EAAK,QAAQ,IAAI,SAAQ,kBAAiB,UAAS,WAAU;EAC3D,eAAAA,QAAA,cAAA,SAAA,MACG,4QAMyC;EAE5C,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,4sEAA2sE,CAAA;EAE/sE,eAAAA,QAAA;IAAA;IAAA;IACE,eAAAA,QAAA,cAAA,UAAA,EAAQ,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,GAAG,MAAK,CAAA;IACtD,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,KAAK,IAAI,MAAM,IAAI,IAAG,CAAA;IAC9D,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,KAAK,IAAI,OAAO,IAAI,MAAM,IAAI,IAAG,CAAA;IAC9D,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,IAAG,CAAA;IAChE,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,IAAG,CAAA;IAChE,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,2FAA0F,CAAA;IAE9F,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,6FACF,QAAO,QACP,aAAa,OACb,kBAAkB,GAAE,CAAA;IAEtB,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,yFAAwF,CAAA;IAE5F,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,2FAA0F,CAAA;IAE9F,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,KAAK,IAAI,MAAM,IAAI,IAAG,CAAA;IAC9D,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,4FAA2F,CAAA;IAE/F,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,uCAAsC,CAAA;IAC9D,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,+BAA8B,CAAA;IACtD,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,yCAAwC,CAAA;IAChE,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,uCAAsC,CAAA;IAC9D,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,IAAI,MAAM,IAAI,IAAG,CAAA;IAChE,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,IAAI,IAAG,CAAA;IAC/D,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,KAAK,IAAI,MAAM,IAAI,IAAG,CAAA;IAC9D,eAAAA,QAAA,cAAA,QAAA,EACE,WAAU,OACV,GAAE,sQAAqQ,CAAA;IAEzQ,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,wCAAuC,CAAA;IAC/D,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,gCAA+B,CAAA;IACvD,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,2CAA0C,CAAA;IAClE,eAAAA,QAAA,cAAA,QAAA,EAAM,WAAU,OAAM,GAAE,wCAAuC,CAAA;IAC/D,eAAAA,QAAA,cAAA,QAAA,EACE,GAAE,4GACF,MAAK,WACL,QAAO,QACP,aAAa,OACb,kBAAkB,GAAE,CAAA;IAEtB,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,KAAK,IAAI,MAAM,IAAI,KAAI,CAAA;IAC/D,eAAAA,QAAA,cAAA,UAAA,EAAQ,IAAI,OAAO,IAAI,OAAO,GAAG,IAAG,CAAA;IACpC,eAAAA,QAAA,cAAA,UAAA,EAAQ,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,GAAG,EAAC,CAAA;IAClD,eAAAA,QAAA,cAAA,WAAA,EAAS,WAAU,OAAM,IAAI,OAAO,IAAI,OAAO,IAAI,IAAI,IAAI,KAAI,CAAA;IAC/D,eAAAA,QAAA,cAAA,UAAA,EAAQ,IAAI,OAAO,IAAI,OAAO,GAAG,IAAG,CAAA;IACpC,eAAAA,QAAA,cAAA,WAAA,EACE,WAAU,kDACV,WAAU,OACV,IAAI,OACJ,IAAI,OACJ,IAAI,KACJ,IAAI,IAAG,CAAA;EACP;AACA;AAIR,IAAA,eAAe;;;;;;;;;;;;;;AD7Ef,IAAMC,UAAS,CAACC,QAAgD;MAAhD,EAAE,SAAS,SAAQ,IAAAA,KAAK,QAAKC,SAAAD,KAA7B,CAAA,WAAA,UAAA,CAA+B;AAC7C,QAAM,eAAe,wBAAe;AACpC,QAAM,gBAAgB,cAAqB,CAAC,UAC1C,MAAM,YAAY,GAAG,IAAI,CAAC;AAE5B,SACE,eAAAE,QAAA;IAAC;IAAQ,OAAA,OAAA,EAAC,UAAU,aAAQ,QAAR,aAAQ,SAAR,WAAY,CAAC,CAAC,aAAY,GAAM,KAAK;IACvD,eAAAA,QAAA,cAAC,aAAW,IAAA;IACX,iBAAiB,eAAAA,QAAA,cAAC,cAAI,IAAA;IACtB,iBAAiB,eAAAA,QAAA,cAAC,aAAG,EAAC,WAAU,QAAO,IAAI,EAAE,MAAM,EAAC,EAAE,CAAA;EAAI;AAGjE;AAEA,IAAA,iBAAeH;;;ADdf,IAAM,eAAe,CAAC,UACpB,eAAAI,QAAA,cAAC,QAAM,OAAA,OAAA,EAAC,QAAQ,gBAAQ,OAAO,cAA0B,GAAM,KAAK,CAAA;AAGtE,IAAA,iBAAe;;;AGZf,IAAAC,iBAAkB;AAIlB,IAAM,YAAY,CAAC,UACjB,eAAAC,QAAA,cAAC,OAAK,OAAA,OAAA,EACJ,IAAI;EACF,iBACE;EACF,CAAC,MAAM,aAAa,IAAI,EAAE,GAAG;IAC3B,iBAAiB;;EAEpB,GACG,KAAK,CAAA;AAIb,IAAA,oBAAe;;;;;ACdR,IAAM,YAAS,OAAA,OAAA,OAAA,OAAA,CAAA,GACjB,YAAY,GAAA,EACf,SAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GACF,aAAa,OAAO,GAAA,EACvB,YAAY;EACV,SAAS;GAEX,SAAS;EACP,cAAc;EACd,MAAM;EACN,OAAO;EACP,MAAM;GAER,WAAS,OAAA,OAAA,OAAA,OAAA,CAAA,IACJ,KAAA,aAAa,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,SAAS,GAAA,EAClC,MAAM,UAAS,CAAA,GAEjB,MAAM,OAAM,CAAA,GAEd,YAAU,OAAA,OAAA,OAAA,OAAA,CAAA,GACL,aAAa,UAAU,GAAA;;;EAG1B,gBAAgB;IACd,gBAAgB;MACd,MAAM;QACJ,YAAY;QACZ,2BAA2B;UACzB,YAAY;;;;;EAKpB,gBAAgB;IACd,gBAAgB;;AACjB,CAAA,EAAA,CAAA;AAIE,IAAM,aAAU,OAAA,OAAA,OAAA,OAAA,CAAA,GAClB,YAAY,GAAA,EACf,SAAO,OAAA,OAAA,OAAA,OAAA,CAAA,GACF,aAAa,OAAO,GAAA,EACvB,SAAS;EACP,cAAc;EACd,MAAM;EACN,OAAO;EACP,MAAM;GAER,WAAS,OAAA,OAAA,OAAA,OAAA,CAAA,IACJ,KAAA,aAAa,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,SAAS,GAAA,EAClC,MAAM,UAAS,CAAA,GAEjB,MAAM,QAAO,CAAA,GAEf,YAAU,OAAA,OAAA,OAAA,OAAA,CAAA,GACL,aAAa,UAAU,GAAA;;;EAG1B,gBAAgB;IACd,gBAAgB;MACd,MAAM;QACJ,YAAY;QACZ,2BAA2B;UACzB,YAAY;;;;;AAInB,CAAA,EAAA,CAAA;;;;;;;;;;;;;;AjCzCL,IAAM,eAAe,kBAAiB;AAEtC,IAAM,eAAe,CAACC,QAuBE;MAvBF;;IAEpB,gBAAAC;;IAEA,oBAAoB;;IAEpB;;IAEA,QAAQ;IACR,QAAQ;IACR,cAAAC;IACA,eAAe;IACf;IACA;IACA,cAAAC;IACA,SAAS;IACT,YAAY;IACZ,SAAS;IACT,QAAQ;IACR,WAAAC,aAAY;;IAEZ;EAAQ,IAAAJ,KACL,OAAIK,SAAAL,KAtBa,CAAA,kBAAA,qBAAA,YAAA,SAAA,SAAA,gBAAA,gBAAA,gBAAA,eAAA,gBAAA,UAAA,aAAA,WAAA,SAAA,aAAA,UAAA,CAuBrB;AACC,QAAM,CAAC,WAAW,YAAY,QAAI,yBAAqB,CAAA,CAAE;AACzD,QAAM,CAAC,SAAS,UAAU,QAAI,yBAAS,IAAI;AAC3C,QAAM,CAAC,EAAE,QAAQ,QAAI,yBAAQ;AAC7B,QAAM,CAAC,YAAY,aAAa,QAAI,yBAAS,IAAI;AAEjD,gCAAU,MAAK;AACb,QAAI,OAAOE,cAAa,eAAe,YAAY;AACjD,YAAM,IAAI,MACR,0HAA0H;IAE9H;AAEA,QAAI,CAAC,YAAY;AACf;IACF;AAEA,IAAAA,cACG,WAAU,EACV,KAAK,CAAC,EAAE,KAAI,MAAM;;AACjB,oBAAaF,MAAA,KAAK,eAAS,QAAAA,QAAA,SAAAA,MAAI,CAAA,CAAE;AACjC,oBAAc,KAAK;AACnB,iBAAW,KAAK;IAClB,CAAC,EACA,MAAM,CAAC,QAAO;AAEb,eAAS,MAAK;AACZ,cAAM;MACR,CAAC;IACH,CAAC;EACL,GAAG,CAAC,YAAYE,aAAY,CAAC;AAE7B,QAAM,2BAAuB,wBAC3B,OAAO;IACL,YAAY,MAAK;AACf,iBAAW,IAAI;AACf,oBAAc,IAAI;IACpB;MAEF,CAAC,YAAY,aAAa,CAAC;AAG7B,SACE,eAAAI,QAAA;IAAC;IAAY,EACX,cACA,cAAcJ,eACd,UACA,cACA,OACA,aACA,OACA,WAAWE,YACX,cAAcD,cAAY;IAC1B,eAAAG,QAAA;MAAC,6BAAqB;MAAQ,EAAC,OAAO,qBAAoB;MACxD,eAAAA,QAAA;QAAC,8BAAsB;QAAQ,EAAC,OAAOL,gBAAc;QACnD,eAAAK,QAAA,cAAC,uBAAqB,OAAA,OAAA,EACpB,mBACA,WACA,SACA,cAAcJ,eACd,QACA,WACA,aACA,OACA,MAAY,GACR,IAAI,GACP,QAAQ;MACa;IACO;EACH;AAGtC;AAEA,IAAA,uBAAe;;;AkCjIf,IAAAK,iBAA2B;AAG3B,IAAM,mBAAmB,UAAM,2BAAW,4BAAoB,EAAE;AAEhE,IAAA,2BAAe;;;ACGf,IAAAC,iBAAgC;;;ACR1B,SAAU,aAGd,QAAiB,KAAS;AAC1B,SAAO,KAAK,GAAG,EAAE,QAAQ,CAAC,QAAO;AAC/B,WAAO,eAAe,QAAQ,KAAK;MACjC,UAAU;MACV,YAAY;MACZ,cAAc;;MAEd,OAAO,IAAI,GAAG;KACf;EACH,CAAC;AACH;;;ACFM,IAAO,MAAP,MAAU;EACd,YAAmB,YAAoB,UAAsB,CAAA,GAAE;AAA5C,SAAA,aAAA;AACjB,iBAAa,MAAM,OAAO;EAC5B;;;;ACmCI,IAAO,QAAP,MAAY;EAChB,YAAmB,MAAc,UAAwB,CAAA,GAAE;AAAxC,SAAA,OAAA;AACjB,iBAAa,MAAM,OAAO;EAC5B;;;;ACrCI,IAAO,YAAP,MAAgB;EACpB,YACS,MACA,MACP,UAA4B,CAAA,GAAE;AAFvB,SAAA,OAAA;AACA,SAAA,OAAA;AAGP,iBAAa,MAAM,OAAO;EAC5B;;;;ACtBI,IAAO,YAAP,MAAgB;EACpB,YACS,UACA,OACAC,WACA,aACA,YAAoB;AAJpB,SAAA,WAAA;AACA,SAAA,QAAA;AACA,SAAA,WAAAA;AACA,SAAA,cAAA;AACA,SAAA,aAAA;EACN;;;;ACcC,IAAOC,YAAP,MAAe;EACnB,YACS,MACA,KACP,UAA2B,CAAA,GAAE;AAFtB,SAAA,OAAA;AACA,SAAA,MAAA;AAGP,iBAAa,MAAM,OAAO;EAC5B;;;;;;;;AC5BF,uBAAsC;;;;ACGtC,IAAM,iBAAiB;AACvB,IAAM,sBAAsB;AAkBd,SAAP,YACL,KACA,UAA+B,CAAA,GAAE;;AAEjC,UAAM,WAAW,MAAM,MAAM,KAAK,WAAW,OAAO,CAAC;AACrD,UAAM,EAAE,SAAS,OAAM,IAAK;AAC5B,UAAM,cAAc,QAAQ,IAAI,cAAc;AAE9C,QAAI,QAAQ,QAAQ;AAClB,aAAO,QAAQ,QAAQ,EAAE,SAAQ,CAAE;;AAGrC,QACE,OAAO,UACP,CAAC,eACA,CAAC,YAAY,SAAS,cAAc,KACnC,CAAC,YAAY,SAAS,mBAAmB,GAC3C;AACA,YAAM,SAAmC,EAAE,SAAQ;AACnD,aAAO,QAAQ,OAAO,MAAM;;AAG9B,WAAO,SAAS,KAAI,EAAG,KAAK,CAAC,UAAkB;MAC7C;MACA;MACA,UAAU;MACV,aAAa;MACb;EACJ,CAAC;;AAED,SAAS,WAAW,SAA4B;AAC9C,MAAI,CAAC,QAAQ,SAAS;AACpB,WAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAAY,OAAO,GAAA,EAAE,SAAS,CAAA,EAAE,CAAA;;AAGlC,MAAI,UACF,OAAO,QAAQ,YAAY,aAAa,QAAQ,QAAO,IAAK,QAAQ;AAEtE,YAAU,IAAI,QAAQ,OAAO;AAE7B,MAAI,SAAS,QAAQ,IAAI,QAAQ,GAAG;AAClC,YAAQ,IAAI,UAAU,cAAc;;AAGtC,QAAM,SAAM,OAAA,OAAA,OAAA,OAAA,CAAA,GAAQ,OAAO,GAAA,EAAE,QAAO,CAAA;AAEpC,MACE,gBAAgB,OAAO,QACvB,EAAE,OAAO,aAAa,eAAe,OAAO,gBAAgB,aAC5D,SAAS,OAAO,QAAQ,IAAI,cAAc,GAC1C;AACA,WAAO,QAAQ,IAAI,gBAAgB,cAAc;;AAGnD,SAAO;AACT;;;;AC7EA,oBAAmB;AACnB,IAAAC,iBAAgB;;;ACDhB,IAAAC,iBAAgB;AAKhB,IAAA,wBAAe,CACb,aACA,UAA+B,CAAA,MACkB;AACjD,SAAO,YACL,aACA,OAAO,OAAO,EAAE,cAAc,EAAC,GAAI,OAAO,CAAC,EAC3C,KAAK,CAAC,MAA+C;AACrD,QAAI,YAAY;AAChB,QAAK,EAAuB,MAAM;AAChC,kBAAY,kBAAmB,EAAuB;;AAExD,WAAO;MACL,gBAAY,eAAAC,SACV,GACA,YAAY,oCAAoC,qBAAqB;;EAG3E,CAAC;AACH;;;ACnBA,IAAA,wBAAe,CACb,UACA,UAA+B,CAAA,MAE/B,sBAAc,SAAS,KAAK,OAAO,EAAE,KAAK,CAAC,EAAE,aAAa,CAAA,EAAE,MAAM;AAChE,QAAM,qBAAkC,CAAA;AACxC,aAAW,QAAQ,CAAC,EAAE,WAAW,MAAM,UAAAC,WAAU,SAAQ,MAAM;AAC7D,QAAI,SAAS,UAAU;AACrB;;AAGF,UAAM,EAAE,QAAQ,KAAI,IAAK,SAAS,SAC9B,SAAS,OAAO,KAAK,CAAC,EAAE,KAAI,MAAO,aAAa,IAAI,KAAK,CAAA,IACzD,CAAA;AAEJ,uBAAmB,KAAK,IAAI,UAAU,UAAU,OAAOA,WAAU,EAAE,CAAC;EACtE,CAAC;AACD,WAAS,aAAa;AAEtB,SAAO;AACT,CAAC;;;ACvBH,IAAM,UAAU,CAAC,IAAY,UAA4B;AACvD,UAAQ,IAAI;IACV,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT;;AAGF,UAAQ,OAAO;IACb,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO;;AAEb;AAEA,IAAA,kBAAe;;;AHjDf,SAAS,iBAAiB,KAAa,eAAqB;AAC1D,SAAO,IAAI,OAAO,cAAc,SAAS,CAAC;AAC5C;AAKA,SAAS,mBACP,MACA,aAAmB;AAEnB,QAAM,uBAAmB,eAAAC,SACvB,MACA,uDAAuD;AAEzD,MAAI,CAAC,MAAM,QAAQ,gBAAgB,GAAG;AACpC,UAAM,IAAI,MACR,iHAAiH;;AAIrH,aAAW,kBAAkB,kBAAkB;AAC7C,QAAI,eAAe,KAAK,MAAM,aAAa;AACzC,aAAO;;;AAIX,QAAM,IAAI,MACR,cAAc,WAAW,4CAA4C;AAEzE;AAEM,SAAU,+BAA+B,SAAgB;AAC7D,QAAM,aAAa,QAAQ,IAAI,MAAM;AACrC,MAAI,CAAC,YAAY;AACf,UAAM,IAAI,MAAM,yCAAyC;;AAG3D,QAAM,UACJ,yEAAyE,KACvE,UAAU;AAEd,MAAI,YAAY,MAAM;AACpB,UAAM,IAAI,MACR,+FAA+F;;AAInG,SAAO,QAAQ,CAAC;AAClB;AAKA,SAAe,uBACb,eACA,UAA+B,CAAA,GAAE;;AAQjC,UAAM,IAAI,MAAM,YAAY,eAAe,OAAO;AAClD,QAAI,EAAE,UAAU,IAAI;AAClB,YAAM,IAAI,MAAM,wDAAwD;;AAE1E,UAAM,mBAAmB,EAAE;AAC3B,UAAM,UAAU,+BAA+B,EAAE,SAAS,OAAO;AAEjE,UAAM,iBAAiB,CAAC,UACtB,YAAY,OAAO,OAAO,EAAE,KAAK,CAAC,aAAY;AAC5C,UAAI,EAAE,UAAU,WAAW;AACzB,cAAM,IAAI,MACR,8FAA8F;;AAGlG,aAAO;IACT,CAAC;AAEH,UAAM,eAAe,MAAM,YAAY,SAAS,OAAO;AACvD,QAAI,EAAE,UAAU,eAAe;AAC7B,YAAM,IAAI,MACR,2DAA2D;;AAG/D,UAAM,aAAa,aAAa;AAEhC,UAAM,CAAC,MAAM,UAAU,IAAK,MAAM,QAAQ,IAAI;MAC5C,cAAAC,QAAO,OAAO,YAAY;QACxB,MAAM;QACN;OACD;MACD,cAAAA,QAAO,OAAO,kBAAkB;QAC9B,MAAM;QACN;OACD;KACF;AAED,WAAO;MACL;MACA;MACA;MACA,UAAU,EAAE;MACZ;;EAEJ,CAAC;;AAED,SAASC,qBAAoB,KAAW;AACtC,MAAI,IAAI,SAAS,GAAG,GAAG;AACrB,UAAM,IAAI,MAAM,GAAG,EAAE;;AAGvB,SAAO;AACT;AAEA,SAAS,iBACP,MACA,UAA6B;AAG7B,MAAI,MAAM,QAAQ,SAAS,4CAA4C,CAAC,GAAG;AACzE,eAAW,SAAS,SAClB,4CAA4C,GAC3C;AACD,YAAM,iBAAa,eAAAF,SACjB,OACA,4GAA4G;AAE9G,YAAM,oBAAgB,eAAAA,SACpB,OACA,+GAA+G;AAGjH,UACE,iBACA,6CAA6C,YAC7C;AACA,eAAO,mBAAmB,MAAM,aAAa;;;;AAMnD,aAAW,gCAAgC,SACzC,oDAAoD,KACjD,CAAA,GAAI;AACP,QACE,CAAC,6BAA6B,yCAAyC,GACvE;AACA;;AAGF,UAAM,cAAU,eAAAA,SACd,8BACA,uDAAuD;AAEzD,QACE,aAAa,OAAO,WACpB,MAAM,QAAQ,QAAQ,iCAAiC,GACvD;AACA,aAAO,mBAAmB,MAAM,OAAO;;;AAI3C,QAAM,IAAI,MAAM,oCAAoC,SAAS,KAAK,CAAC,GAAG;AACxE;AAKc,SAAP,wBACL,eACA,UAA+B,CAAA,GAAE;AAMjC,kBAAgBE,qBAAoB,aAAa;AAEjD,SAAO,uBAAuB,eAAe,OAAO,EAAE,KACpD,CAAC,EAAE,YAAY,MAAM,SAAQ,MAAM;AACjC,UAAM,YAAY,CAAA,GAChB,SAAS,CAAA,GACT,aAAa,CAAA;AACf,UAAM,YAAQ,eAAAF,SACZ,MACA,6DACA,cAAc;AAGhB,UAAM,qBAAiB,eAAAA,SAAI,YAAY,iBAAiB;AAGxD,QAAI,CAAC,gBAAgB;AACnB,YAAM,IAAI,MAAM,wCAAwC;;AAG1D,UAAM,kBAAkB,mBAAmB,MAAM,cAAc;AAC/D,QACE,CAAC,MAAM,QACL,gBAAgB,mDAAmD,CAAC,GAEtE;AACA,YAAM,IAAI,MACR,iHAAiH;;AAKrH,eAAW,cAAc,gBACvB,mDAAmD,GAClD;AACD,YAAM,iBAAiB,CAAA,GACrB,iBAAiB,CAAA,GACjB,iBAAiB,CAAA,GACjB,qBAAqB,CAAA;AAEvB,YAAM,eAAW,eAAAA,SACf,YACA,iDAAiD;AAGnD,UAAI,CAAC,UAAU;AACb;;AAGF,YAAM,UAAM,eAAAA,SAAI,YAAY,QAAQ,SAAS,KAAK,CAAC,cAAc;AAIjE,UAAI,CAAC,KAAK;AACR,gBAAQ,MACN,IAAI,MACF,+BAA+B,SAAS,KAAK,CAAC,sGAAsG,CACrJ;AAEH;;AAIF,YAAM,eAAe,iBAAiB,MAAM,QAAQ;AACpD,iBAAW,uBAAuB,aAChC,mDAAmD,GAClD;AACD,cAAM,wBAAoB,eAAAA,SACxB,qBACA,iDAAiD;AAEnD,cAAM,KAAK,kBAAkB,KAAK;AAClC,cAAM,YAAQ,eAAAA,SACZ,mBACA,4DACA,IAAI;AAGN,cAAM,QAAQ,IAAI,MAChB,kBAAkB,4CAA4C,EAAE,CAAC,EAC/D,QAAQ,GAEV;UACE;UACA;UACA,MAAM,gBAAQ,IAAI,KAAK;UACvB,WACE,+CACA,eAAAA,SAAI,mBAAmB,cAAc,IACjC,QACA;UACN,UACE,+CACA,eAAAA,SAAI,mBAAmB,cAAc,IAChC,QACD;UACN,cAAU,eAAAA,SACR,qBACA,6DACA,KAAK;UAEP,iBAAa,eAAAA,SACX,qBACA,gEACA,EAAE;UAEJ,oBAAgB,eAAAA,SACd,mBACA,iEACA,IAAI;UAEN,gBAAY,eAAAA,SACV,qBACA,6DACA,KAAK;SAER;AAGH,eAAO,KAAK,KAAK;AACjB,uBAAe,KAAK,KAAK;AAEzB,gBACE,eAAAA,SACE,qBACA,2DAA2D,GAE7D;AACA,yBAAe,KAAK,KAAK;;AAG3B,gBACE,eAAAA,SACE,qBACA,4DAA4D,SAE9D,eAAAA,SACE,qBACA,2DAA2D,GAE7D;AACA,yBAAe,KAAK,KAAK;;;AAK7B,UAAI,SAAS,oDAAoD,GAAG;AAClE,mBAAW,uBAAuB,SAChC,oDAAoD,GACnD;AACD,cACE,CAAC,oBAAoB,yCAAyC,GAC9D;AACA;;AAGF,gBAAM,QACJ,oBAAoB,yCAAyC,EAAE,CAAC,EAC9D,KAAK;AAET,gBAAM,SACJ,oBAAoB,wCAAwC,EAAE,CAAC,EAC7D,QAAQ;AAEZ,cAAI,OAAsB;AAC1B,cAAI,WAAW,QAAQ;AACrB,mBAAO;;AAET,gBAAM,YAAY,IAAI,UACpB,oBACE,4CAA4C,EAC5C,CAAC,EAAE,QAAQ,GACb,MACA;YACE;YACA,SACE,oBACE,yCAAyC,KAE3C,oBACE,yCAAyC,EACzC,CAAC,EAAE,KAAK;YACZ,SAAS;YACT,OAAO,oBAAoB,OAAO;YAClC,gBAAY,eAAAA,SACV,qBACA,6DACA,KAAK;WAER;AAGH,6BAAmB,KAAK,SAAS;AACjC,qBAAW,KAAK,SAAS;;;AAK7B,iBAAW,sBAAsB,aAC/B,oDAAoD,KACjD,CAAA,GAAI;AACP,YAAI,CAAC,mBAAmB,yCAAyC,GAAG;AAClE;;AAGF,cAAM,QACJ,mBAAmB,yCAAyC,EAAE,CAAC,EAC7D,KAAK;AAET,cAAM,SACJ,mBAAmB,wCAAwC,EAAE,CAAC,EAC5D,QAAQ;AAEZ,YAAI,OAAsB;AAC1B,YAAI,WAAW,QAAQ;AACrB,iBAAO;;AAET,YAAI,WAAW,SAAS,WAAW,SAAS;AAC1C,iBAAO;;AAET,YAAI,WAAW,UAAU;AACvB,iBAAO;;AAET,cAAM,YAAY,IAAI,UACpB,mBAAmB,4CAA4C,EAAE,CAAC,EAChE,QAAQ,GAEV,MACA;UACE;UACA,SACE,mBAAmB,yCAAyC,KAC5D,mBACE,yCAAyC,EACzC,CAAC,EAAE,KAAK;UACZ,SAAS;UACT,OAAO,mBAAmB,OAAO;UACjC,gBAAY,eAAAA,SACV,oBACA,6DACA,KAAK;SAER;AAGH,2BAAmB,KAAK,SAAS;AACjC,mBAAW,KAAK,SAAS;;AAG3B,YAAM,WAAW,IAAIG,UACnB,iBAAiB,KAAK,aAAa,GACnC,KACA;QACE,IAAI,aAAa,KAAK;QACtB,WAAO,eAAAH,SACL,cACA,0DACA,EAAE;QAEJ,QAAQ;QACR;QACA;QACA,YAAY;QACZ,gBAAY,eAAAA,SACV,cACA,6DACA,KAAK;OAER;AAGH,eAAS,aAAa,CAAA;AACtB,eAAS,gBAAgB,MACvB,sBAAc,UAAU,OAAO;AAEjC,gBAAU,KAAK,QAAQ;;AAIzB,eAAW,SAAS,QAAQ;AAC1B,UAAI,SAAS,MAAM,WAAW;AAC5B,cAAM,YACJ,UAAU,KAAK,CAAC,aAAa,SAAS,OAAO,MAAM,SAAS,KAC5D;;AAEJ,UAAI,SAAS,MAAM,UAAU;AAC3B,cAAM,WACJ,UAAU,KAAK,CAAC,aAAa,SAAS,OAAO,MAAM,QAAQ,KAC3D;;;AAIN,WAAO;MACL,KAAK,IAAI,IAAI,eAAe,EAAE,OAAO,UAAS,CAAE;MAChD;MACA,QAAQ,SAAS;;EAErB,GACA,CAAC,SACC,QAAQ,OAAO;IACb,KAAK,IAAI,IAAI,eAAe,EAAE,WAAW,CAAA,EAAE,CAAE;IAC7C,OAAO;IACP,UAAU,KAAK;IACf,YAAQ,eAAAA,SAAI,KAAK,UAAU,QAAQ;GACpC,CAAC;AAER;;;;;;AI5fO,IAAM,iBAAN,cAA6B,MAAM;AAAA,EACtC,YAAY,KAAK,eAAe;AAC5B,UAAM,GAAG;AACT,SAAK,MAAM;AACX,SAAK,gBAAgB;AACrB,SAAK,OAAO;AAAA,EAChB;AACJ;AACO,IAAM,cAAN,cAA0B,MAAM;AAAA,EACnC,YAAY,OAAO,MAAM,QAAQ;AAC7B,UAAM,IAAI;AACV,SAAK,QAAQ;AACb,SAAK,SAAS;AACd,SAAK,OAAO;AAAA,EAChB;AACJ;;;ACfA,IAAM,WAAW;AACjB,IAAM,WAAW;AACjB,IAAM,aAAa;AACnB,IAAM,aAAa;AACZ,SAAS,OAAO,MAAM;AACzB,SAAO,KAAK,QAAQ,UAAU,IAAI,EAAE,QAAQ,UAAU,IAAI;AAC9D;AACO,SAAS,SAAS,MAAM;AAC3B,SAAO,KAAK,QAAQ,YAAY,GAAG,EAAE,QAAQ,YAAY,GAAG;AAChE;;;ACRA,IAAM,SAAS,OAAO;AACf,IAAM,SAAS;AACf,SAAS,aAAa,OAAO,OAAO;AACvC,QAAM,MAAM,IAAI,IAAI,OAAO,KAAK;AAChC,QAAM,MAAM,IAAI,SAAS;AACzB,SAAO,OAAO,CAAC,IAAI,QAAQ,IAAI,IAAI,SAAS,CAAC,MAAM,MAAM,MAAM;AACnE;AACO,SAAS,MAAM,KAAK;AACvB,SAAO,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,IAAI,SAAS;AAC1E;AACO,SAAS,YAAY,KAAK;AAC7B,SAAO,QAAQ,QAAQ,OAAO,QAAQ,YAAY,OAAO,IAAI,MAAM,MAAM;AAC7E;AACO,SAAS,SAAS,KAAK;AAC1B,SAAO,YAAY,GAAG,KAAK,IAAI,MAAM,EAAE,WAAW;AACtD;AACO,SAAS,QAAQ,KAAK;AACzB,MAAI,CAAC,YAAY,GAAG,GAAG;AACnB,UAAM,IAAI,MAAM,eAAe;AAAA,EACnC;AACA,SAAO,IAAI,MAAM;AACrB;AACO,SAAS,OAAO,KAAK;AACxB,QAAM,SAAS,QAAQ,GAAG,EAAE;AAC5B,MAAI,OAAO,WAAW,aAAa;AAC/B,WAAO;AAAA,EACX,WACS,MAAM,QAAQ,MAAM,GAAG;AAC5B,aAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,UAAI,OAAO,CAAC,MAAM,KAAK;AACnB,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX,OACK;AACD,WAAO,OAAO,KAAK,MAAM,EAAE,KAAK,CAAC,MAAM,OAAO,CAAC,MAAM,GAAG;AAAA,EAC5D;AACJ;AACO,SAAS,QAAQ,KAAK,IAAI;AAC7B,MAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;AACzC,UAAM,IAAI,UAAU,gBAAgB;AAAA,EACxC;AACA,QAAM,OAAO,QAAQ,GAAG;AACxB,SAAO,KAAK,SAAS,aAAa,IAAI,KAAK,KAAK,CAAC;AACrD;AACO,SAAS,SAAS,KAAK,SAAS;AACnC,MAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;AACzC,UAAM,IAAI,UAAU,gBAAgB;AAAA,EACxC,WACS,YAAY,GAAG,GAAG;AACvB,UAAM,IAAI,MAAM,mBAAmB;AAAA,EACvC;AACA,MAAI,MAAM,IAAI;AAAA,IACV,UAAU,QAAQ,YAAY,CAAC;AAAA,IAC/B,MAAM,QAAQ,QAAQ,oBAAI,IAAI;AAAA,IAC9B,MAAM;AAAA,EACV;AACA,MAAI,MAAM,EAAE,SAAS,aAAa,QAAQ,KAAK,CAAC,IAAI;AACpD,SAAQ,SAAS,UAAUI,MAAK,OAAO;AACnC,QAAI,MAAMA,IAAG,GAAG;AACZ,YAAM,MAAM,IAAI,IAAIA,KAAI,MAAM,KAAK;AACnC,UAAI,OAAO;AACX,cAAQA,IAAG,EAAE,KAAK,IAAI,IAAI,SAAS,IAAI,GAAG;AAC1C,MAAAA,KAAI,MAAM,EAAE,QAAQ,aAAa,KAAK;AAAA,IAC1C,OACK;AACD,UAAI,OAAOA,KAAI,QAAQ,UAAU;AAC7B,YAAI,CAACA,KAAI,OAAOA,KAAI,QAAQ,KAAK;AAC7B,gBAAM,IAAI,YAAY,sBAAsBA,KAAI,GAAG,EAAE;AAAA,QACzD;AACA,cAAM,KAAK,IAAI,IAAIA,KAAI,KAAK,KAAK;AACjC,YAAI,GAAG,QAAQ,CAAC,GAAG,KAAK,OAAO,CAAC,EAAE,MAAM,MAAM,GAAG;AAC7C,gBAAM,IAAI,YAAY,sBAAsBA,KAAI,GAAG,EAAE;AAAA,QACzD;AACA,QAAAA,KAAI,MAAM,EAAE,QAAQ,aAAaA,KAAI,KAAK,KAAK;AAC/C,QAAAA,KAAI,MAAM,EAAE,SAASA,KAAI,MAAM,EAAE,KAAK,IAAIA;AAC1C,QAAAA,KAAI,MAAM,EAAE,OAAOA;AAAA,MACvB,OACK;AACD,QAAAA,KAAI,MAAM,EAAE,QAAQ,aAAa,KAAK;AAAA,MAC1C;AACA,YAAM,OAAO,OAAO,KAAKA,IAAG;AAC5B,eAAS,OAAO,MAAM;AAClB,cAAM,OAAOA,KAAI,GAAG;AACpB,YAAI,SAAS,QAAQ,OAAO,SAAS,YAAY,CAAC,YAAY,IAAI,GAAG;AACjE,gBAAM,OAAO,QAAQA,IAAG;AACxB,eAAK,MAAM,IAAI;AAAA,YACX,UAAU,KAAK;AAAA,YACf,MAAM,KAAK;AAAA,YACX,QAAQA;AAAA,YACR,MAAM,KAAK;AAAA,UACf;AACA,oBAAU,MAAM,GAAG,KAAK,KAAK,IAAI,OAAO,GAAG,CAAC,EAAE;AAAA,QAClD;AAAA,MACJ;AAAA,IACJ;AACA,WAAOA;AAAA,EACX,EAAG,KAAK,QAAQ,KAAK;AACzB;AACO,SAAS,YAAY,KAAK;AAC7B,QAAM,OAAO,QAAQ,GAAG;AACxB,QAAM,QAAQ,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC;AAChD,SAAO,CAAC,GAAG,KAAK,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;AACrD;;;ACvGA,IAAM,YAAY;AAClB,IAAM,WAAW;AAgBV,SAAS,QAAQ,KAAK,MAAM;AAC/B,MAAI,OAAO,QAAQ,aAAa;AAC5B,UAAM,IAAI,UAAU,YAAY;AAAA,EACpC,WACS,OAAO,SAAS,UAAU;AAC/B,UAAM,IAAI,UAAU,UAAU;AAAA,EAClC,WACS,CAAC,MAAM;AACZ,WAAO;AAAA,EACX;AACA,MAAI,UAAU;AACd,QAAM,QAAQ,KAAK,MAAM,GAAG;AAC5B,QAAM,SAAS,MAAM,MAAM;AAC3B,MAAI,QAAQ;AACR,QAAI,OAAO,MAAW,MAAM,GAAG;AAC3B,gBAAe,QAAQ,SAAS,IAAI,MAAM,EAAE;AAAA,IAChD,OACK;AACD,YAAM,QAAQ,OAAO,MAAM,SAAS;AACpC,UAAI,CAAC,OAAO;AACR,cAAM,IAAI,YAAY,cAAc,MAAM,EAAE;AAAA,MAChD,OACK;AACD,YAAI,SAAS,SAAS,MAAM,CAAC,CAAC;AAC9B,eAAO,UAAU;AACb,oBAAe,QAAQ,OAAO,EAAE;AAChC,cAAI,CAAC,SAAS;AACV,kBAAM,IAAI,WAAW,mBAAmB,MAAM,CAAC,CAAC,GAAG;AAAA,UACvD;AAAA,QACJ;AACA,YAAI,MAAM,CAAC,GAAG;AACV,iBAAY,OAAO,OAAO;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,MAAM,QAAQ;AACjB,QAAI,YAAY,QAAQ,OAAO,YAAY,UAAU;AACjD,YAAM,IAAI,UAAU,sBAAsB;AAAA,IAC9C;AACA,UAAM,OAAO,SAAS,MAAM,MAAM,CAAC;AACnC,QAAI,MAAM,QAAQ,OAAO,GAAG;AACxB,UAAI,CAAC,KAAK,MAAM,QAAQ,GAAG;AACvB,cAAM,IAAI,YAAY,wBAAwB,IAAI,GAAG;AAAA,MACzD,WACS,SAAS,KAAK;AACnB,cAAM,IAAI,WAAW,wBAAwB,IAAI,GAAG;AAAA,MACxD,OACK;AACD,cAAM,QAAQ,SAAS,IAAI;AAC3B,YAAI,QAAQ,QAAQ,QAAQ;AACxB,gBAAM,IAAI,WAAW,wBAAwB,IAAI,GAAG;AAAA,QACxD,OACK;AACD,oBAAU,QAAQ,KAAK;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ,OACK;AACD,gBAAU,QAAQ,IAAI;AACtB,UAAI,OAAO,YAAY,aAAa;AAChC,cAAM,IAAI,WAAW,yBAAyB,IAAI,GAAG;AAAA,MACzD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;;;ACnFA,IAAM,cAAc;AACpB,SAAS,MAAM,KAAK;AAChB,MAAI;AACJ,MAAI,IAAI,KAAK,MAAM,WAAW,GAAG;AAC7B,UAAc,QAAQ,KAAK,IAAI,KAAK,OAAO,CAAC,CAAC;AAAA,EACjD,OACK;AACD,UAAM,QAAa,QAAQ,GAAG,EAAE;AAChC,UAAM,MAAM,IAAI,IAAI,IAAI,MAAM,KAAK;AACnC,UAAM,OAAO,IAAI,OAAO,IAAI,KAAK,OAAO,CAAC,IAAI;AAC7C,QAAI,OAAO;AACX,UAAW,QAAQ,GAAG,EAAE,SAAS,IAAI,SAAS,IAAI,GAAG;AACrD,QAAI,CAAC,KAAK;AACN,YAAM,IAAI,MAAM,8BAA8B,IAAI,SAAS,CAAC,GAAG;AAAA,IACnE,WACS,MAAM;AACX,YAAc,QAAQ,KAAK,IAAI;AAAA,IACnC;AAAA,EACJ;AACA,SAAO;AACX;AACO,SAASC,SAAQ,KAAK,SAAS;AAClC,MAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU;AACzC,WAAO;AAAA,EACX;AACA,SAAQ,SAAS,OAAOC,MAAK;AACzB,QAAI,CAAM,YAAYA,IAAG,GAAG;AACxB,MAAAA,OAAW,SAASA,MAAK,OAAO;AAAA,IACpC;AACA,QAAS,SAASA,IAAG,GAAG;AACpB,aAAOA;AAAA,IACX,WACc,MAAMA,IAAG,GAAG;AACtB,aAAO,MAAMA,IAAG;AAAA,IACpB,OACK;AACD,YAAM,OAAO,OAAO,OAAO,CAAC,GAAGA,IAAG;AAClC,aAAO,eAAeA,MAAK,UAAU;AAAA,QACjC,KAAK,MAAM,MAAM;AAAA,QACjB,YAAY;AAAA,QACZ,cAAc;AAAA,MAClB,CAAC;AACD,YAAM,OAAO,OAAO,KAAKA,IAAG;AAC5B,eAAS,OAAO,MAAM;AAClB,cAAM,OAAOA,KAAI,GAAG;AACpB,YAAI,SAAS,QAAQ,OAAO,SAAS,UAAU;AAC3C,cAAS,MAAM,IAAI,GAAG;AAClB,mBAAO,eAAeA,MAAK,KAAK;AAAA,cAC5B,KAAK,MAAM;AACP,uBAAO,eAAeA,MAAK,KAAK;AAAA,kBAC5B,OAAO,MAAM,IAAI;AAAA,kBACjB,YAAY;AAAA,kBACZ,cAAc;AAAA,kBACd,UAAU;AAAA,gBACd,CAAC;AACD,uBAAOA,KAAI,GAAG;AAAA,cAClB;AAAA,cACA,YAAY;AAAA,cACZ,cAAc;AAAA,YAClB,CAAC;AAAA,UACL,OACK;AACD,YAAAA,KAAI,GAAG,IAAI,OAAO,IAAI;AAAA,UAC1B;AAAA,QACJ,OACK;AACD,UAAAA,KAAI,GAAG,IAAI;AAAA,QACf;AAAA,MACJ;AACA,MAAK,QAAQA,IAAG,EAAE,SAAS;AAC3B,aAAOA;AAAA,IACX;AAAA,EACJ,EAAG,GAAG;AACV;;;AC9DA,eAAsB,MAAM,WAAW,MAAM;AACzC,MAAI;AACJ,MAAI,CAAC,QAAQ,CAAC,KAAK,OAAO;AACtB,UAAM,IAAI,MAAM,UAAU;AAAA,EAC9B;AACA,MAAI,OAAO,cAAc,UAAU;AAC/B,QAAI,CAAC,KAAK,WAAW;AACjB,YAAM,IAAI,MAAM,cAAc;AAAA,IAClC;AACA,UAAM,MAAM,IAAI,IAAI,SAAS,EAAE,SAAS;AACxC,UAAM,MAAM,KAAK,UAAU,GAAG;AAC9B,QAAI,CAAC,KAAK,UAAU;AAChB,WAAK,WAAW,CAAC;AAAA,IACrB;AACA,QAAI,QAAQ,KAAK,OAAO;AACpB,WAAK,SAAc,aAAa,GAAG,CAAC,IAAI;AAAA,IAC5C;AAAA,EACJ,WACS,cAAc,QAAQ,OAAO,cAAc,UAAU;AAC1D,UAAM,IAAI,UAAU,UAAU;AAAA,EAClC,OACK;AACD,UAAM;AAAA,EACV;AACA,MAAS,YAAY,GAAG,GAAG;AACvB,WAAO;AAAA,EACX,OACK;AACD,IAAK,SAAS,KAAK,IAAI;AACvB,QAAS,QAAQ,GAAG,EAAE,KAAK,OAAO,GAAG;AACjC,YAAMC,eAAmB,YAAY,GAAG;AACxC,UAAIA,aAAY,QAAQ;AACpB,YAAI,CAAC,KAAK,WAAW;AACjB,gBAAM,IAAI,MAAM,cAAc;AAAA,QAClC;AACA,cAAM,WAAgB,QAAQ,GAAG,EAAE;AACnC,cAAM,SAAS,CAAC;AAChB,iBAAS,KAAKA,cAAa;AACvB,cAAI;AACA,qBAAS,CAAC,IAAI,MAAM,KAAK,UAAU,CAAC;AAAA,UACxC,SACO,GAAG;AACN,mBAAO,KAAK,IAAI,eAAe,GAAG,CAAC,CAAC;AAAA,UACxC;AAAA,QACJ;AACA,YAAI,OAAO,QAAQ;AACf,gBAAM,IAAI,YAAiB,QAAQ,GAAG,EAAE,OAAO,aAAa,MAAM;AAAA,QACtE;AAAA,MACJ;AACA,aAAOC,SAAY,KAAK,IAAI;AAAA,IAChC,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;;;ACnEA,IAAAC,iBAAgB;AAChB,IAAAC,qBAAuB;;;ACAvB,IAAM,eAAe,CACnB,UAEA,MAAM,KACJ,IAAI,IACF,OAAO,KAAK,KAAK,EAAE,OAAO,CAAC,SAAQ;AACjC,SAAO,IAAI,OAAO,qBAAqB,EAAE,KAAK,IAAI;AACpD,CAAC,CAAC,CACH;AAGL,IAAA,uBAAe;;;ACbf,wBAAuB;AAGvB,IAAMC,WAAU,CAAC,aAAqB,WAA8B;AAClE,MAAI,QAAQ;AACV,YAAQ,QAAQ;MACd,KAAK;MACL,KAAK;AACH,eAAO;MACT;AACE,eAAO,kBAAAC,QAAW,SAAS,OAAO,QAAQ,KAAK,GAAG,GAAG,IAAI;;;AAI/D,SAAO;AACT;AAEA,IAAAC,mBAAeF;;;AFLf,IAAMG,SAAQ,CACZ,aACkB,EAAE,UAAU;AAEzB,IAAMC,uBAAsB,CAAC,QAAuB;AACzD,MAAI,IAAI,SAAS,GAAG,GAAG;AACrB,UAAM,IAAI,MAAM,GAAG,EAAE;;AAEvB,SAAO;AACT;AAEA,IAAM,iBAAiB,CAAC,WAAqB,cAAuB;;AAClE,GAAAC,MAAA,UAAU,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAAC,WAAU;;AACnC,QAAI,GAACA,MAAA,UAAU,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,CAAC,WAAW,OAAO,SAAS,OAAO,IAAI,IAAG;AACpE,OAAAC,MAAA,UAAU,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,MAAM;;EAEjC,CAAC;AACD,GAAAA,MAAA,UAAU,oBAAc,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAAC,WAAU;;AAC3C,QACE,GAACD,MAAA,UAAU,oBAAc,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,CAAC,WAAW,OAAO,SAAS,OAAO,IAAI,IACvE;AACA,OAAAC,MAAA,UAAU,oBAAc,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,MAAM;;EAEzC,CAAC;AACD,GAAA,KAAA,UAAU,oBAAc,QAAA,OAAA,SAAA,SAAA,GAAE,QAAQ,CAAC,WAAU;;AAC3C,QACE,GAACD,MAAA,UAAU,oBAAc,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,CAAC,WAAW,OAAO,SAAS,OAAO,IAAI,IACvE;AACA,OAAAC,MAAA,UAAU,oBAAc,QAAAA,QAAA,SAAA,SAAAA,IAAE,KAAK,MAAM;;EAEzC,CAAC;AAED,SAAO;AACT;AAEA,IAAM,0BAA0B,CAC9B,QACA,MACA,OACA,QACE;AACF,QAAM,cAAc,OAAO;AAC3B,QAAM,aAAa,OAAO,cAAc,CAAA;AAExC,QAAM,aAAa,OAAO,KAAK,UAAU;AACzC,QAAM,iBAAiB,OAAO,YAAY,CAAA;AAE1C,QAAM,iBAA0B,CAAA;AAChC,QAAM,iBAA0B,CAAA;AAEhC,QAAM,SAAS,WAAW,IAAI,CAAC,cAAa;AAC1C,UAAM,WAAW,WAAW,SAAS;AAErC,UAAM,OAAOC,iBAAQ,SAAS,QAAQ,UAAU,SAAS,MAAM;AAC/D,UAAM,QAAQ,IAAI,MAAM,WAAW;MACjC,IAAI;MACJ,OAAO;MACP;MACA,WACE,SAAS,WAAW,WAAW,WAC3BA,iBACG,SAAS,MAAiC,QAAQ,UAClD,SAAS,MAAiC,MAAM,IAEnD;MACN,MAAM,SAAS,OACX,OAAO;;QAEL,OAAO,OAAwB,SAAS,IAAI,EAAE,IAAI,CAAC,cAAc;UAC/D,OAAO,cAAc,WACjB,mBAAAC,QAAW,SAAS,SAAS,IAC7B;UACJ;SACD;MAAC,IAEJ;MACJ,WAAW;MACX,UAAU;MACV,UAAU,SAAS,YAAY;MAC/B,UAAU,CAAC,CAAC,eAAe,KAAK,CAAC,UAAU,UAAU,SAAS;MAC9D,aAAa,SAAS,eAAe;KACtC;AAED,QAAI,CAAC,SAAS,WAAW;AACvB,qBAAe,KAAK,KAAK;;AAE3B,QAAI,CAAC,SAAS,UAAU;AACtB,qBAAe,KAAK,KAAK;;AAG3B,WAAO;EACT,CAAC;AAED,SAAO,IAAIC,UAAS,MAAM,KAAK;IAC7B,IAAI;IACJ;IACA;IACA;IACA;IACA;IACA,YAAY,CAAA;IACZ,eAAe,MAAM,QAAQ,QAAQ,CAAA,CAAE;GACxC;AACH;AAEA,IAAM,6BAA6B,CACjC,YACA,eACA,aACa;AACb,SAAO,IAAI,UAAU,SAAS,WAAW,eAAe,eAAe;IACrE,QAAQ,WAAW,YAAW;IAC9B,YAAY,CAAC,CAAC,SAAS;GACxB;AACH;AAYc,SAAP,mBACL,UACA,eAAqB;;AAErB,UAAMC,YAAY,MAAM,MAAY,UAAU;MAC5C,OAAO;KACR;AAED,UAAM,QAAQ,qBAAiBA,UAAS,KAAK;AAE7C,QAAI,sBAAsB;AAC1B,QAAIA,UAAS,SAAS;AACpB,4BAAsBA,UAAS,QAAQ,CAAC,EAAE;;AAG5C,UAAM,YAAY,IAAI,IAAI,qBAAqB,aAAa,EAAE;AAE9D,UAAM,YAAwB,CAAA;AAE9B,UAAM,QAAQ,CAAC,SAAQ;AACrB,YAAM,eAAeN,qBAAoB,IAAI,EAAE,MAAM,GAAG;AACxD,YAAM,OAAO,mBAAAI,QAAW,UAAU,aAAa,aAAa,SAAS,CAAC,CAAC;AACvE,YAAM,MAAM,GAAGJ,qBAAoB,SAAS,CAAC,IAAI,IAAI;AACrD,YAAM,WAAWM,UAAS,MAAM,IAAI;AACpC,UAAI,CAAC,UAAU;AACb,cAAM,IAAI,MAAK;;AAGjB,YAAM,QAAQ,mBAAAF,QAAW,SAAS,aAAa,aAAa,SAAS,CAAC,CAAC;AAEvE,YAAM,gBAAgB,SAAS;AAC/B,YAAM,gBAAgB,SAAS,OAAO,SAAS;AAC/C,UAAI,CAAC,iBAAiB,CAAC;AAAe;AAEtC,YAAM,aAAa,oBACd,eAAAG,SACC,eACA,qDACA,eAAAA,SAAID,WAAU,sBAAsB,KAAK,GAAG,CAAC,IAE/C;AACJ,YAAM,aAAa,oBACd,eAAAC,SACC,eACA,6CAA6C,IAE/C;AAEJ,UAAI,CAAC,cAAc,CAAC;AAAY;AAEhC,YAAM,eAAe,aACjB,wBAAwB,YAAY,MAAM,OAAO,GAAG,IACpD;AACJ,YAAM,eAAe,aACjB,wBAAwB,YAAY,MAAM,OAAO,GAAG,IACpD;AACJ,UAAI,WAAW,iBAAY,QAAZ,iBAAY,SAAZ,eAAgB;AAC/B,UAAI,CAAC;AAAU;AACf,UAAI,gBAAgB,cAAc;AAChC,mBAAW,eAAe,cAAc,YAAY;;AAGtD,YAAM,eAAe,SAAS;AAC9B,YAAM,iBAAiB,SAAS;AAChC,YAAM,kBAAkB,SAAS;AACjC,YAAM,iBAAiBD,UAAS,MAAM,IAAI,IAAI,EAAE;AAChD,YAAM,gBAAgB,kBAAkB,eAAe;AACvD,YAAM,kBAAkB,kBAAkB,eAAe;AACzD,eAAS,aAAa;QACpB,GAAI,gBACA,CAAC,2BAA2B,OAAO,QAAQ,aAAa,CAAC,IACzD,CAAA;QACJ,GAAI,eACA,CAAC,2BAA2B,OAAO,QAAQ,YAAY,CAAC,IACxD,CAAA;QACJ,GAAI,iBACA,CAAC,2BAA2B,SAAS,QAAQ,cAAc,CAAC,IAC5D,CAAA;QACJ,GAAI,kBACA,CAAC,2BAA2B,UAAU,UAAU,eAAe,CAAC,IAChE,CAAA;QACJ,GAAI,gBACA,CAAC,2BAA2B,OAAO,QAAQ,aAAa,CAAC,IACzD,CAAA;QACJ,GAAI,kBACA,CAAC,2BAA2B,QAAQ,UAAU,eAAe,CAAC,IAC9D,CAAA;;AAGN,UAAI,iBAAiB,cAAc,YAAY;AAC7C,iBAAS,aAAa,cAAc,WACjC,OAAOP,MAAK,EACZ,IACC,CAAC,cACC,IAAI,UACF,UAAU,MACV,UAAU,UAAUA,OAAM,UAAU,MAAM,IACtC,UAAU,OAAO,OACfI,iBAAQ,UAAU,OAAO,IAAI,IAC7B,OACF,MACJ,UAAU,YAAY,OACtB,UAAU,eAAe,IACzB,UAAU,UAAU,CACrB;;AAIT,gBAAU,KAAK,QAAQ;IACzB,CAAC;AAGD,cAAU,QAAQ,CAAC,aAAY;;AAC7B,OAAAF,MAAA,SAAS,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAAC,UAAS;AACjC,cAAM,OAAO,mBAAAG,QAAW,SAAS,MAAM,IAAI,EAAE,QAAQ,SAAS,EAAE;AAEhE,cAAM,kBAAkB,UAAU,KAChC,CAAC,QAAQ,IAAI,UAAU,mBAAAA,QAAW,SAAS,IAAI,CAAC;AAElD,YAAI,CAAC,iBAAiB;AACpB;;AAEF,cAAM,iBAAiB,MAAM,SAAS,UAAU,OAAO;AACvD,YAAI,MAAM,SAAS,YAAY,MAAM,cAAc,UAAU;AAC3D,gBAAM,WAAW;eACZ;AACL,gBAAM,YAAY;;MAEtB,CAAC;IACH,CAAC;AAED,WAAO;EACT,CAAC;;;;AGnQa,SAAP,2BACL,eACA,UAA+B,CAAA,GAAE;AAEjC,kBAAgBI,qBAAoB,aAAa;AACjD,MAAI,UACF,OAAO,QAAQ,YAAY,aAAa,QAAQ,QAAO,IAAK,QAAQ;AACtE,YAAU,IAAI,QAAQ,OAAO;AAC7B,UAAQ,OAAO,UAAU,8BAA8B;AAEvD,SAAO,MAAM,eAAa,OAAA,OAAA,OAAA,OAAA,CAAA,GAAO,OAAO,GAAA,EAAE,QAAgB,CAAA,CAAA,EACvD,KAAK,CAAC,QAAQ,QAAQ,IAAI,CAAC,KAAK,IAAI,KAAI,CAAE,CAAC,CAAC,EAC5C,KACC,CAAC,CAAC,KAAK,QAAQ,MAAoD;AACjE,UAAM,QAAQ,SAAS,KAAK;AAC5B,WAAO,mBAAW,UAAU,aAAa,EAAE,KAAK,CAAC,eAAe;MAC9D,KAAK,IAAI,IAAI,eAAe,EAAE,OAAO,UAAS,CAAE;MAChD;MACA,QAAQ,IAAI;MACZ;EACJ,GACA,CAAC,CAAC,KAAK,QAAQ,MACb,QAAQ,OAAO;IACb,KAAK,IAAI,IAAI,eAAe,EAAE,WAAW,CAAA,EAAE,CAAE;IAC7C;IACA,QAAQ,IAAI;GACb,CAAC;AAEV;;;ACvCA,IAAAC,iBAAgB;AAChB,IAAAC,qBAAuB;;;ACIvB,IAAAC,iBAAmB;AAQnB,SAAS,WACP,KACA,UAA6B,CAAA,GAAE;;AAE/B,MAAI,kBAAiBC,MAAA,QAAQ,aAAO,QAAAA,QAAA,SAAAA,MAAI,IAAI,QAAO;AAEnD,MACE,OAAO,mBAAmB,cAC1B,QAAQ,QACR,QAAQ,KAAK,iBACb,QAAQ,KAAK,OACb;AACA,qBAAiB,IAAI,QAAQ,cAAc;AAC3C,mBAAe,IAAI,iBAAiB,QAAQ,KAAK,KAAK;EACxD;AAEA,QAAM,cAAW,OAAA,OAAA,OAAA,OAAA,CAAA,GAAQ,OAAO,GAAA,EAAE,SAAS,eAAc,CAAA;AAEzD,SAAO,YAAY,IAAI,MAAM,WAAW,EAAE,KAAK,CAAC,SAAQ;AACtD,UAAM,EAAE,QAAQ,YAAY,QAAO,IAAK,KAAK;AAC7C,UAAM,OAAO,UAAU,OAAO,KAAK,OAAO;AAE1C,QAAI,SAAS,OAAO,UAAU,KAAK;AACjC,UAAI,CAAC,MAAM;AACT,eAAO,QAAQ,OAAO,IAAI,kBAAU,YAAY,MAAM,CAAC;MACzD;AAEA,aAAQ,KAAoB;AAE5B,YAAM,iBAAiB,CAAC,UAAiB;AACvC,cAAM,gBAAgB;AACtB,sBAAc,SAAS;AACvB,eAAO,cAAc;AAErB,eAAO,YAAY,OAAO,aAAa,EAAE,KAAK,CAAC,aAAY;AACzD,cAAI,EAAE,UAAU,WAAW;AACzB,kBAAM,IAAI,MACR,uEAAuE;UAE3E;AACA,iBAAO;QACT,CAAC;MACH;AACA,YAAM,OAAO,+BAA+B,OAAO;AAEnD,cACE,cAAc,OACV,eAAAC,QAAO,OAAO,MAAM;QAClB;QACA;OACD,IACD,eAAe,IAAI,EAAE,KAAK,CAAC,aACzB,eAAAA,QAAO,OAAO,MAAM;QAClB,eAAe,SAAS;OACzB,CAAC,GAGP,KAAK,CAAC,SAAQ;;AACb,eAAA,QAAQ,OACN,IAAI,mBACF,MAAAC,OACEF,MAAA,KAAK,CAAC,OAAC,QAAAA,QAAA,SAAA,SAAAA,IACL,6CAA6C,OAEhD,QAAAE,QAAA,SAAA,SAAAA,IAAG,CAAC,OAAC,QAAA,OAAA,SAAA,SAAA,GAAG,QAAQ,GACjB,QACA,IAAI,CACL;OACF,EAEF,MAAM,CAAC,MAAK;AACX,YAAI,UAAU,GAAG;AACf,iBAAO,QAAQ,OAAO,CAAC;QACzB;AAEA,eAAO,QAAQ,OAAO,IAAI,kBAAU,YAAY,MAAM,CAAC;MACzD,CAAC;IACL;AAEA,QAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,aAAO,QAAQ,OACb,IAAI,MAAM,wCAAwC,CAAC;IAEvD;AACA,QAAI,QAAQ,EAAE,SAAS,OAAO;AAC5B,aAAO,QAAQ,OACb,IAAI,MAAM,6CAA6C,CAAC;IAE5D;AAEA,WAAO;MACL;MACA;MACA,MAAM;;EAEV,CAAC;AACH;AAEA,IAAA,qBAAe;;;ACvGR,IAAM,0BAA0B,CAAC,WAAoB;AAC1D,MAAI,CAAC,OAAO,cAAc,CAAC,OAAO,eAAe;AAC/C,WAAO,QAAQ,QAAQ,CAAA,CAAE;EAC3B;AAEA,SAAO,CAAC,OAAO,WAAW,SACtB,OAAO,cAAa,IACpB,QAAQ,QAAQ,OAAO,UAAU;AACvC;AAEA,IAAM,eAAe;AAOd,IAAM,+BAA+B,CAC1C,WACqB;AACrB,MAAI,CAAC,OAAO,QAAQ;AAClB,WAAO,QAAQ,QAAQ,CAAA,CAAE;EAC3B;AAEA,QAAM,mBAAmB,OAAO,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI;AAChE,SAAO,wBAAwB,MAAM,EAAE,KAAK,CAAC,eAC3C,WACG,IAAI,CAAC,WAAW,OAAO,QAAQ,EAC/B,OAAO,CAAC,WAAW,OAAO,SAAS,YAAY,CAAC,EAChD,IAAI,CAAC,gBACJ,YAAY,QAAQ,cAAc,EAAE,EAAE,QAAQ,KAAK,EAAE,CAAC,EAEvD,OAAO,CAAC,WAAU;;AACjB,WAAA,iBAAiB,UACfC,MAAA,OAAO,MAAM,GAAG,EAAE,CAAC,OAAC,QAAAA,QAAA,SAAAA,MAAI,EAAE;GAC3B,CACF;AAEP;AAOO,IAAM,iCAAiC,CAC5C,WAC8B;AAC9B,MAAI,CAAC,OAAO,QAAQ;AAClB,WAAO,QAAQ,QAAQ,CAAA,CAAE;EAC3B;AAEA,QAAM,mBAAmB,OAAO,OAAO,IAAI,CAAC,UAAU,MAAM,IAAI;AAChE,SAAO,wBAAwB,MAAM,EAAE,KAAK,CAAC,eAC3C,WACG,IAAI,CAAC,YAAY;IAChB,MAAM,OAAO;IACb,YAAY,OAAO;IACnB,EACD,OAAO,CAAC,WAAW,CAAC,OAAO,KAAK,SAAS,YAAY,CAAC,EACtD,OAAO,CAAC,WAAW,iBAAiB,SAAS,OAAO,IAAI,CAAC,CAAC;AAEjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AzB1BA,IAAMC,iBAAgB,CAAC,cACrB,eAAAC,SAAoB,KAAK;AAE3B,IAAI;AAEJ,IAAM,qBAAN,MAAwB;EAKtB,YAAY,KAAc;AACxB,WAAO,OAAO,MAAM,GAAG;AACvB,QAAI,IAAI,IAAI;AACV,WAAK,WAAW,IAAI,GAAG,SAAQ;IACjC;AACA,QAAI,CAAC,IAAI,KAAK,GAAG;AACf,YAAM,IAAI,MAAM,uCAAuC;IACzD;AACA,QAAI,MAAM,QAAQ,IAAI,KAAK,CAAC,GAAG;AAC7B,YAAM,IAAI,MAAM,6CAA6C;IAC/D;AACA,SAAK,KAAK,IAAI,KAAK;EACrB;EAEA,WAAQ;AACN,WAAO,WAAW,KAAK,EAAE;EAC3B;;AAOF,IAAM,2BAA2B,oBAAI,IAAG;AAKjC,IAAM,8CAA8C,CACzD,gBACA,QAAQ,MACR,aAAa,MACb,cAAc,UACY;AAC1B,MAAI,iBAAiB;AACrB,MAAI,OAAO;AAET,qBAAiB,KAAK,MAAM,KAAK,UAAU,cAAc,CAAC;EAC5D;AAEA,QAAMC,YAAmC,IAAI,mBAC3C,cAAc;AAIhB,SAAO,KAAKA,SAAQ,EAAE,QAAQ,CAAC,QAAO;AAEpC,QAAIF,eAAcE,UAAS,GAAG,CAAC,KAAKA,UAAS,GAAG,EAAE,KAAK,GAAG;AACxD,UAAI,YAAY;AACd,iCAAyB,IACvBA,UAAS,GAAG,EAAE,KAAK,GACnB,4CACEA,UAAS,GAAG,GACZ,OACA,KAAK,CACN;MAEL;AACA,MAAAA,UAAS,GAAG,IAAI,cAAcA,UAAS,GAAG,IAAIA,UAAS,GAAG,EAAE,KAAK;AAEjE;IACF;AAGA,QACE,MAAM,QAAQA,UAAS,GAAG,CAAC,KAC3BA,UAAS,GAAG,EAAE,UACdF,eAAcE,UAAS,GAAG,EAAE,CAAC,CAAC,KAC9BA,UAAS,GAAG,EAAE,CAAC,EAAE,KAAK,GACtB;AACA,MAAAA,UAAS,GAAG,IAAIA,UAAS,GAAG,EAAE,IAAI,CAAC,QAAkB;AACnD,YAAI,cAAc,IAAI,KAAK,KAAK,CAAC,MAAM,QAAQ,IAAI,KAAK,CAAC,GAAG;AAC1D,mCAAyB,IACvB,IAAI,KAAK,GACT,4CAA4C,KAAK,OAAO,KAAK,CAAC;QAElE;AAEA,eAAO,cAAc,MAAM,IAAI,KAAK;MACtC,CAAC;IACH;EACF,CAAC;AAED,SAAOA;AACT;AAEA,IAAM,gBAAgB,CAAC,aAAqC;AAC1D,QAAM,aAAa,SAAS,QAAQ,IAAI,MAAM;AAC9C,MAAI,CAAC,YAAY;AACf,WAAO;EACT;AAEA,QAAM,UAAU,WAAW,MACzB,kDAAkD;AAGpD,UAAO,YAAO,QAAP,YAAO,SAAA,SAAP,QAAU,CAAC,KAAI,QAAQ,CAAC,IAAI;AACrC;AAEA,IAAM,gBAEF;EACF,YAAY;EACZ,wBAAwB;EACxB,SAAS;EACT,aAAa;EACb,cAAc;;AAGhB,SAAS,kBAAkB,MAAiB,KAAW;AACrD,MAAI,KAAK,SAAS,GAAG,EAAE,GAAG;AACxB,UAAM,OAAO,KAAK,MAAM,KAAK,UAAU,IAAI,CAAC;AAC5C,SAAK,GAAG,IAAI,KAAK,SAAS,GAAG,EAAE;AAC/B,WAAO,KAAK,SAAS,GAAG,EAAE;AAC1B,WAAO;EACT;AACA,SAAO;AACT;AAeA,SAAS,aACP,eAA6C;;AAE7C,QAAM,EACJ,YACA,YACA,wBACA,aACA,aAAY,IACb,OAAA,OAAA,OAAA,OAAA,CAAA,GACI,aAAa,GACb,aAAa;AAElB,QAAM,gBAAgB,IAAI,IAAI,YAAY,OAAO,SAAS,IAAI;AAC9D,QAAMC,WAAiC,cAAc,UAClD,OAAA,OAAA,EACG,KAAK,MACL,KAAK,MACL,UAAU,cAAa,GACnB,cAAc,YAAY,OAAO,CAAA,IAAK,cAAc,OAAQ,IAElE;AAEJ,QAAM,mCAAmC,CACvC,UACA,OAAgC,CAAA,MAC9B;AACF,UAAM,iBAAiB;AACvB,UAAM,YAAqC,CAAA;AAC3C,QAAI,SAAS,QAAQ;AAEjB,eAAS,OAGT,QAAQ,CAAC,EAAE,MAAM,WAAW,cAAa,MAAM;AAC/C,YAAI,EAAE,QAAQ,iBAAiB;AAC7B;QACF;AAEA,YAAI,aAAa,eAAe,IAAI,MAAM,IAAI;AAC5C,yBAAe,IAAI,IAAI;AACvB;QACF;AAEA,YAAI,WAAc,eAAe;AAC/B;QACF;AAEA,kBAAU,IAAI,IAAI,cAAc,eAAe,IAAI,CAAC;MACtD,CAAC;IACH;AAEA,UAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,UAAM,kBAAkB,OAAO,OAAO,SAAS;AAE/C,WAAO,QAAQ,IAAI,eAAe,EAAE,KAAK,CAAC,wBAAuB;AAC/D,YAAM,SAAkC,CAAA;AACxC,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK,GAAG;AAChD,cAAM,MAAM,cAAc,CAAC;AAC3B,YAAI,KAAK;AACP,iBAAO,GAAG,IAAI,oBAAoB,CAAC;QACrC;MACF;AAEA,aAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAAY,cAAc,GAAK,MAAM;IACvC,CAAC;EACH;AAEA,QAAM,uCAAuC,CAC3C,aACA,MACA,qBACmC;AACnC,QAAI,WAAc,aAAa;AAC7B,aAAO,QAAQ,QAAQ,IAA8B;IACvD;AAEA,WAAO,iCACL,aACA,IAA+B,EAC/B,KAAK,CAAC,cAAa;AACnB,YAAM,SAAS,OAAO,OAAO,SAAS;AACtC,YAAM,cAAc,CAAC,YACnB,MAAM,QAAQ,OAAO,IACjB,QAAQ,SAAS,KAAK,QAAQ,MAAM,CAAC,UAAU,YAAY,KAAK,CAAC,IACjEH,eAAc,OAAO,KACrB,OAAO,OAAO,OAAkC,EAAE,KAChD,CAAC,UAAU,iBAAiB,IAAI;AAIxC,YAAM,YAAY,CAChB,YAEA,CAAC,CAAC,WACF,OAAO,YAAY,YACnB,OAAO,QAAQ,WAAW;AAE5B,UACE,CAAC,iBAAiB,gBAClB,CAAC,OAAO,KAAK,CAAC,UAAU,YAAY,KAAK,CAAC,GAC1C;AACA,eAAO,KAAK,UAAU,SAAS;MACjC;AAEA,YAAM,OAAO,IAAI,SAAQ;AACzB,aAAO,QACL,SAAkD,EAClD,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAK;AAEzB,YAAI,YAAY,KAAK,GAAG;AACtB,gBAAMI,YAAW,CAAC,YAChB,OAAO,OAAO,OAAO,EAAE,KAAK,CAAC,QAAQ,eAAe,IAAI;AAC1D,cAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,kBACG,IAAI,CAAC,QAAQA,UAAS,GAAG,CAAC,EAC1B,QAAQ,CAAC,SAAQ;AAChB,mBAAK,OAAO,IAAI,SAAS,IAAI,IAAI,MAAM,GAAG,GAAG,MAAM,IAAK;YAC1D,CAAC;UACL,OAAO;AACL,iBAAK,OAAO,KAAKA,UAAS,KAAK,CAAE;UACnC;AAEA;QACF;AACA,YAAI,UAAU,KAAK,GAAG;AACpB,eAAK,OAAO,KAAK,MAAM,OAAM,CAAE;AAC/B;QACF;AACA,YAAIJ,eAAc,KAAK,KAAK,MAAM,QAAQ,KAAK,GAAG;AAChD,eAAK,OAAO,KAAK,KAAK,UAAU,KAAK,CAAC;AACtC;QACF;AACA,aAAK,OAAO,KAAK,KAAK;MACxB,CAAC;AAED,aAAO;IACT,CAAC;EACH;AAEA,QAAM,mBAAmB,CAAC,SAA0B;AAClD,YAAQ,MAAM;MACZ,KAAK;MACL,KAAK;MACL,KAAK;AACH,eAAO;MACT;AACE,eAAO;IACX;EACF;AAEA,QAAM,yCAAyC,CAC7C,MACA,UACA,uBACE;;AACF,UAAM,SAAS;AACf,QAAI;AACJ,QAAI,QAAQ,UAAU,iBAAiB,IAAI,GAAG;AAC5C,YAAM,IAAI,IAAI,OAAO,GAAG,SAAQ,GAAI,aAAa;IACnD,OAAO;AACL,YAAM,IAAI,IACR,GAAG,oBAAoB,cAAc,SAAQ,CAAE,CAAC,IAAI,QAAQ,IAC5D,aAAa;IAEjB;AAEA,UAAM,gBAA6BK,MAAA,OAAO,kBAAY,QAAAA,QAAA,SAAAA,MAAI,CAAA;AAC1D,UAAM,kBAAkB,OAAO,KAAK,YAAY;AAChD,oBAAgB,QAAQ,CAAC,mBAAkB;AACzC,YAAM,cAAc,aAAa,cAAc;AAC/C,UAAI,aAAa;AACf,YAAI,aAAa,IAAI,gBAAgB,WAAW;MAClD;IACF,CAAC;AACD,QAAI,mBAA+C,CAAA;AACnD,QAAI,OAAO,OAAO,SAAS,UAAU;AACnC,yBAAmB,OAAO;IAC5B;AAEA,UAAM,gBAAeC,MAAA,cAAS,QAAT,cAAS,SAAA,SAAT,UAAW,eAAS,QAAAA,QAAA,SAAAA,MAAI,CAAA,GAAI,KAC/C,CAAC,EAAE,KAAI,MAAO,aAAa,IAAI;AAGjC,QAAI,mBAAmB;AAEvB,QAAI,CAAC,iBAAiB,cAAc;AAClC,0BACE,MAAA,MAAA,KAAA,gBAAW,QAAX,gBAAW,SAAA,SAAX,YAAa,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAE,KAAK,CAAC,cAAc,UAAU,SAAS,MAAM,OAAC,QAAA,OAAA,SAAA,SAAA,GACnE,YAAM,QAAA,OAAA,SAAA,KAAI;IAClB;AAEA,YAAQ,MAAM;MACZ,KAAK;AACH,eAAO,qCACL,aACC,OAAwB,MACzB,gBAAgB,EAChB,KAAK,CAAC,UAAU;UAChB,SAAS;YACP;YACA,QAAQ;;UAEV;UACA;MAEJ,KAAK;AACH,eAAO,QAAQ,QAAQ;UACrB,SAAS;YACP,QAAQ;;UAEV;SACD;MAEH,KAAK;MACL,KAAK,oBAAoB;AACvB,cAAM,EAAE,YAAY,MAAM,OAAM,IAAK;AAGrC,cAAM,EAAE,MAAM,QAAO,IAAK,eAAU,QAAV,eAAU,SAAV,aAAc,EAAE,MAAM,GAAG,SAAS,GAAE;AAC9D,cAAM,EAAE,OAAO,MAAK,IAAK,SAAI,QAAJ,SAAI,SAAJ,OAAQ,EAAE,OAAO,MAAM,OAAO,OAAM;AAC7D,YAAI,SAAS,OAAO;AAClB,gBAAM,MAAM,GAAG,EAAE,QAAQ,CAAC,cAAa;AACrC,gBAAI,aAAa,IAAI,SAAS,UAAU,KAAI,CAAE,KAAK,KAAK;UAC1D,CAAC;QACH;AACA,YAAI;AAAM,cAAI,aAAa,IAAI,QAAQ,KAAK,SAAQ,CAAE;AACtD,YAAI;AAAS,cAAI,aAAa,IAAI,gBAAgB,QAAQ,SAAQ,CAAE;AACpE,YAAI,QAAQ;AACV,gBAAM,oBAAoB,CACxB,KACA,cAOA,YACE;AACF,kBAAM,cAAc,aAAa,GAAG;AACpC,gBAAI,gBAAgB,QAAW;AAC7B;YACF;AAEA,gBAAI,MAAM,QAAQ,WAAW,GAAG;AAC9B,0BAAY,QAAQ,CAAC,kBAAkB,UAAS;AAC9C,oBAAI,aAAa,IAAI,GAAG,OAAO,IAAI,KAAK,KAAK,gBAAgB;cAC/D,CAAC;AACD;YACF;AAEA,gBAAI,CAACN,eAAc,WAAW,GAAG;AAC/B,kBAAI,aAAa,IAAI,SAAS,YAAY,SAAQ,CAAE;AACpD;YACF;AAEA,mBAAO,KAAK,WAAW,EAAE,QAAQ,CAAC,WAAU;AAC1C,kBACE,YAAY,YACZ;gBACE;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,SAAS,MAAM,GACjB;AACA,kCAAkB,QAAQ,aAAa,GAAG,OAAO,IAAI,MAAM,GAAG;AAC9D;cACF;AACA,gCAAkB,QAAQ,aAAa,GAAG,OAAO,IAAI,MAAM,EAAE;YAC/D,CAAC;UACH;AAEA,iBAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAO;AAClC,8BAAkB,KAAK,QAAQ,GAAG;UACpC,CAAC;QACH;AAEA,YAAI,SAAS,oBAAoB;AAC/B,gBAAM,EAAE,QAAQ,GAAE,IAAK;AACvB,cAAI,QAAQ;AACV,gBAAI,aAAa,IAAI,QAAQ,GAAG,SAAQ,CAAE;UAC5C;QACF;AAEA,eAAO,QAAQ,QAAQ;UACrB,SAAS,CAAA;UACT;SACD;MACH;MAEA,KAAK;AACH,eAAO,QAAQ,QAAQ;UACrB,SAAS,CAAA;UACT;SACD;MAEH,KAAK;AACH,eAAO,qCACL,aACC,OAAwB,MACzB,gBAAgB,EAChB,KAAK,CAAC,UAAU;UAChB,SAAS;YACP;YACA,QAAQ;YACR,SACE,qBAAqB,UACjB,EAAE,gBAAgB,+BAA8B,IAChD,CAAA;;UAER;UACA;MAEJ;AACE,cAAM,IAAI,MAAM,iCAAiC,IAAI,EAAE;IAC3D;EACF;AAEA,QAAM,mCAAmC,CACvC,UACA,SACE;AACF,UAAM,cAAc,UAAU,UAAU,KACtC,CAAC,EAAE,KAAI,MAAO,aAAa,IAAI;AAEjC,QAAI,WAAc,aAAa;AAC7B,aAAO,QAAQ,QAAQ,IAAI;IAC7B;AAEA,UAAM,YAAqC,CAAA;AAC3C,QAAI,YAAY,QAAQ;AAEpB,kBAAY,OAGZ,QAAQ,CAAC,EAAE,MAAM,gBAAe,MAAM;AACtC,YAAI,EAAE,QAAQ,SAAS,WAAc,iBAAiB;AACpD;QACF;AAEA,kBAAU,IAAI,IAAI,gBAAgB,KAAK,IAAI,CAAC;MAC9C,CAAC;IACH;AAEA,UAAM,gBAAgB,OAAO,KAAK,SAAS;AAC3C,UAAM,kBAAkB,OAAO,OAAO,SAAS;AAE/C,WAAO,QAAQ,IAAI,eAAe,EAAE,KAAK,CAAC,wBAAuB;AAC/D,YAAM,SAAkC,CAAA;AACxC,eAAS,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK,GAAG;AAChD,cAAM,MAAM,cAAc,CAAC;AAC3B,YAAI,KAAK;AACP,iBAAO,GAAG,IAAI,oBAAoB,CAAC;QACrC;MACF;AAEA,aAAA,OAAA,OAAA,OAAA,OAAA,CAAA,GAAY,IAAI,GAAK,MAAM;IAC7B,CAAC;EACH;AAEA,QAAM,2CAA2C,CAC/C,MACA,UACA,QACA,aACuD;AACvD,QAAIG,aAAY,QAAQA,SAAQ,QAAQ,MAAM;AAC5C,YAAM,SAAS,cAAc,QAAQ;AACrC,UAAI,QAAQ;AACV,QAAAA,SAAQ,MAAM;AACd,wBAAe,kBAAkBA,QAAO;AACxC,wBAAe,kBAAiB;MAClC;IACF;AAEA,YAAQ,MAAM;MACZ,KAAK;MACL,KAAK,oBAAoB;AACvB,YAAI,CAAC,SAAS,MAAM;AAClB,iBAAO,QAAQ,OACb,IAAI,MAAM,uCAAuC,IAAI,IAAI,CAAC;QAE9D;AACA,cAAM,OAAO,kBAAkB,SAAS,MAAM,QAAQ;AACtD,YAAI,CAAC,KAAK,QAAQ;AAChB,iBAAO,QAAQ,OACb,IAAI,MAAM,uCAAuC,CAAC;QAEtD;AAEA,YAAI,kBAAkB;AACtB,eAAO,QAAQ,QACb,gBAAgB,OAAO,IAAI,CAACD,cAC1B,4CACEA,WACA,MACA,CAAC,cACD,WAAW,CACZ,CACF,EAEA,KAAK,CAAC,SACL,QAAQ,IACN,KAAK,IAAI,CAAC,cACR,iCAAiC,UAAU,SAAS,CAAC,CACtD,CACF,EAEF,KAAK,CAAC,SAAQ;AACb,4BAAkB,kBAChB,iBACA,YAAY;AAEd,cAAI,gBAAgB,eAAe,QAAW;AAC5C,mBAAO;cACL;cACA,OAAO,gBAAgB;;UAE3B;AACA,4BAAkB,kBAChB,iBACA,MAAM;AAER,cAAI,gBAAgB,MAAM;AACxB,gBAAI,YAAY,kBACd,gBAAgB,MAChB,MAAM;AAER,wBAAY,kBAAkB,WAAW,UAAU;AACnD,kBAAM,WAAW;cACf,aAAa,CAAC,CAAC,UAAU;cACzB,iBAAiB,CAAC,CAAC,UAAU;;AAE/B,mBAAO;cACL;cACA;;UAEJ;AAEA,iBAAO;YACL;;QAEJ,CAAC;MACL;MACA,KAAK;AACH,eAAO,QAAQ,QAAQ,EAAE,MAAM,EAAE,IAAK,OAAwB,GAAE,EAAE,CAAE;MAEtE;AACE,YAAI,CAAC,SAAS,MAAM;AAClB,iBAAO,QAAQ,OACb,IAAI,MAAM,uCAAuC,IAAI,IAAI,CAAC;QAE9D;AACA,eAAO,QAAQ,QACb,4CACE,SAAS,MACT,MACA,CAAC,cACD,WAAW,CACZ,EAEA,KAAK,CAAC,SAAS,iCAAiC,UAAU,IAAI,CAAC,EAC/D,KAAK,CAAC,UAAU,EAAE,KAAI,EAAG;IAChC;EACF;AAEA,QAAM,WAAW,CAIf,MACA,UACA;;;IAIA,uCAAuC,MAAM,UAAU,MAAM,EAC1D,KAAK,CAAC,EAAE,KAAK,QAAO,MAAO,WAAW,KAAK,OAAO,CAAC,EACnD,KAAK,CAAC,aACL,yCACE,MACA,UACA,QACA,QAAQ,CACT;;AAOP,QAAM,gBAAgB,CACpB,MACA,UACA,QACA,mBACmDK,WAAA,MAAA,QAAA,QAAA,aAAA;;AACnD,UAAM,aAAa;AAEnB,UAAM,aAAc,MAAM,SAAS,MAAM,UAAU,UAAU;AAI7D,UAAM,SAAS,mBAAc,QAAd,mBAAc,SAAd,iBAAkB;AACjC,QAAI,gBAAgB;AAClB,aAAO,KAAK,KAAK,GAAG,WAAW,IAAI;AACnC,UAAI,WAAW,SAAS,OAAO,SAAS,WAAW,QAAQ,OAAO,OAAO;AAEvE,eAAO,QAAQ,WAAW;MAC5B;IACF;AAGA,UACEF,MAAA,WAAW,gBAAU,QAAAA,QAAA,SAAA,SAAAA,IAAE,WACvBC,MAAA,WAAW,gBAAU,QAAAA,QAAA,SAAA,SAAAA,IAAE,SAAQ,OAAO,KAAK,QAC3C;AACA,aAAO;IACT;AAEA,QACE,WAAW,KAAK,SAAS,MACvB,CAAC,CAAC,OAAO,SAAS,OAAO,KAAK,SAAS,OAAO,WAC9C,KAAA,OAAO,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE,eACnB;AACA,UAAI,WAAW,YAAY;AACzB,mBAAW,WAAW,QAAQ;MAChC,OAAO;AACL,mBAAW,aAAa,EAAE,MAAM,GAAG,SAAS,GAAE;MAChD;AACA,aAAO,cAAc,MAAM,UAAU,YAAY,MAAM;IACzD;AAEA,WAAO;EACT,CAAC;AAED,QAAM,oBAAoB,CAAC,aAAoB;AAC7C,UAAM,SAAS,UAAU,UAAU,KAAK,CAAC,MAAM,EAAE,SAAS,QAAQ;AAClE,QAAI,CAAC,QAAQ;AACX,aAAO,QAAQ,QAAQ,KAAK;IAC9B;AACA,WAAO,wBAAwB,MAAM,EAAE,KAAK,CAAC,eAC3C,WAAW,IAAI,CAAC,WAAW,OAAO,QAAQ,EAAE,SAAS,IAAI,CAAC;EAE9D;AAEA,QAAM,EAAE,YAAY,WAAW,YAAW,IAAK,0BAAkB;IAC/D;IACA,eAAe;IACf;IACA;IACA,UAASD,MAAA,cAAc,aAAO,QAAAA,QAAA,SAAAA,MAAI;GACnC;AACD,kBAAe,mBAAmB,CAAC,mBACjC,4CACE,gBACA,MACA,CAAC,cACD,WAAW,CACZ;AAGH,SAAO;IACL,SAAS,CAAC,UAAU,WAAW,SAAS,UAAU,UAAU,MAAM;IAClE,QAAQ,CAAC,UAAU,WAAW,SAAS,SAAS,UAAU,MAAM;IAEhE,SAAS,CAAC,UAAU;;;MAGlB,kBAAkB,QAAQ,EAAE,KAAK,CAAC,WAAU;;AAE1C,YAAI,QAAQ;AACV,iBAAO,cAAc,UAAU,UAAU;YACvC,YAAY;;cAEV,UAASA,MAAA,OAAO,SAAG,QAAAA,QAAA,SAAA,SAAAA,IAAE;cACrB,MAAM;;YAER,QAAQ,EAAE,IAAI,OAAO,IAAG;YACxB,MAAM,EAAE,OAAO,IAAI,OAAO,MAAK;WAChC,EAAE,KAAK,CAAC,EAAE,KAAI,OAAQ,EAAE,KAAI,EAAG;QAClC;AAGA,eAAO,QAAQ,IACb,OAAO,IAAI,IAAI,CAAC,OAAM;AACpB,gBAAMH,YAAW,yBAAyB,IAAI,GAAG,SAAQ,CAAE;AAC3D,cAAIA,WAAU;AACZ,mBAAO,QAAQ,QAAQ,EAAE,MAAMA,UAAQ,CAAE;UAC3C;AACA,iBAAO,SAAS,SAAS,UAAU,EAAE,GAAE,CAAE;QAG3C,CAAC,CAAC,EACF,KAAK,CAAC,eAAe,EAAE,MAAM,UAAU,IAAI,CAAC,EAAE,KAAI,MAAO,IAAI,EAAC,EAAG;MACrE,CAAC;;IACH,kBAAkB,CAAC,UAAU,WAC3B,SAAS,oBAAoB,UAAU,MAAM;IAC/C,QAAQ,CAAC,UAAU,WAAW,SAAS,QAAQ,UAAU,MAAM;IAC/D,YAAY,CAAC,UAAU,WACrB,QAAQ,IACN,OAAO,IAAI,IAAI,CAAC,OACd,SAAS,QAAQ,UAAQ,OAAA,OAAA,OAAA,OAAA,CAAA,GAAO,MAAM,GAAA,EAAE,IAAI,cAAc,EAAE,GAAE,EAAE,CAAA,CAAA,CAAG,CACpE,EACD,KAAK,OAAO,EAAE,MAAM,CAAA,EAAE,EAAG;IAC7B,QAAQ,CAAC,UAAU,WAAW,SAAS,QAAQ,UAAU,MAAM;IAC/D,QAAQ,CAAC,UAAU,WAAW,SAAS,QAAQ,UAAU,MAAM;IAC/D,YAAY,CAAC,UAAU,WACrB,QAAQ,IACN,OAAO,IAAI,IAAI,CAAC,OAAO,SAAS,QAAQ,UAAU,EAAE,GAAE,CAAE,CAAC,CAAC,EAC1D,KAAK,OAAO,EAAE,MAAM,CAAA,EAAE,EAAG;IAC7B,YAAY,CAAC,YAAY,IAAI,UAAU,CAAA,MACrC,WAAU,EAAG,KAAK,CAAC,EAAE,KAAI,MAAM;AAC7B,UAAI,KAAK,aAAa,KAAK,UAAU,SAAS,GAAG;AAC/C,oBAAS,OAAA,OAAA,OAAA,OAAA,CAAA,GAAQ,IAAI,GAAA,EAAE,WAAW,KAAK,UAAS,CAAA;MAClD;AAEA,aAAO,EAAE,KAAI;IACf,CAAC;IACH;IACA;;AAEJ;AAEA,IAAA,uBAAe;;;A0BjzBf,IAAAM,iBAAkB;;;ACSlB,IAAM,iBAAiB,CAAC,WACtB,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,WAAW,UAAU,KAAI,MAAM,QAAQ,UAAU,MAAM,IAAI;AAOpE,IAAM,yBAAyB,CAAC,WAAoB;AAClD,MAAI,CAAC,OAAO,QAAQ;AAClB,WAAO;EACT;AAEA,QAAM,QAAQ,OAAO,OAAO,KAC1B,CAAC,gBACC,eAAe,YAAY,EAAE,MAAM,wBAAwB;AAG/D,SAAO,QAAQ,MAAM,OAAO;AAC9B;AAKA,IAAM,eAAe,CAAC,UAAgB;AACpC,UAAQ,eAAe,MAAM,EAAE,GAAG;IAChC,KAAK;AACH,aAAO,eAAe,MAAM,KAAK,MAC/B,6CACE,eACA;IACN,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;EACF;AAEA,MAAI,MAAM,aAAa,QAAQ,MAAM,mBAAmB,GAAG;AACzD,WAAO;EACT;AAEA,UAAQ,eAAe,MAAM,KAAK,GAAG;IACnC,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO;EACX;AACF;AAEA,IAAM,sBAAsB,CAAC,UAAoB;;AAC/C,MAAI,GAACC,MAAA,MAAM,UAAI,QAAAA,QAAA,SAAA,SAAAA,IAAG,CAAC,IAAG;AACpB,WAAO;EACT;AAEA,QAAM,UAAU,MAAM,KAAK,CAAC;AAC5B,QAAM,eAAe,OAAO,KAAK,OAAO,EAAE,KAAK,CAAC,QAC9C,IAAI,SAAS,YAAY,CAAC;AAE5B,MAAI,CAAC,cAAc;AACjB,WAAO;EACT;AACA,QAAM,OAAO,aAAa,UAAU,GAAG,aAAa,QAAQ,GAAG,CAAC;AAEhE,QAAM,aAA+B,QAAQ,YAAY,EAAE,OACzD,CAAC,oBAAsC,cAAwB;;AAC7D,WAAA,CAAC,UAAU,GAAG,IAAI,eAAe,KAAK,CAAC,UAAU,GAAG,IAAI,UAAU,IAC9D,qBACD,OAAA,OAAA,OAAA,OAAA,CAAA,GACM,kBAAkB,GAAA,EACrB,EAACA,MAAC,UAAU,GAAG,IAAI,eAAe,EAAkB,CAAC,OAAC,QAAAA,QAAA,SAAA,SAAAA,IACpD,QAAQ,CACC,IAAGC,MAAC,UAAU,GAAG,IAAI,UAAU,EAAkB,CAAC,OAAC,QAAAA,QAAA,SAAA,SAAAA,IAC5D,QAAQ,EACT,CAAA;KAET,CAAA,CAAE;AAEJ,MAAI,OAAO,KAAK,UAAU,EAAE,WAAW,GAAG;AACxC,WAAO;EACT;AAEA,SAAO;AACT;AAEc,SAAP,iBAA+B;AACpC,SAAO;IACL;IACA;IACA;IACA;IACA;;AAEJ;;;;;;;;;;;;;;AD/FA,IAAM,sBAAsB,eAAc;AAE1C,IAAM,aAAa,CAACC,QASE;MATF,EAClB,YACA,SAAAC,UACA,cAAAC,gBAAe,qBAAoB;IACjC;IACA,SAASD,aAAO,QAAPA,aAAO,SAAPA,WAAW;GACrB,GACD,gBAAgB,sBAAsB,oBAAmB,IAAAD,KACtD,QAAKG,SAAAH,KARU,CAAA,cAAA,WAAA,gBAAA,gBAAA,CASnB;AAAsB,SACrB,eAAAI,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,cAAcF,eACd,gBAAgB,oBAAmB,GAC/B,KAAK,CAAA;;AAIb,IAAA,qBAAe;;;AE3Bf,IAAM,YAAY,CAAC,KAAU,UAA6B,CAAA,MAAM;AAC9D,MAAI,EAAE,QAAO,IAAK;AAClB,MAAI,CAAC,SAAS;AACZ,cAAU,CAAA;EACZ;AACA,YAAU,OAAO,YAAY,aAAa,QAAO,IAAK;AACtD,YAAU,IAAI,QAAQ,OAAO;AAE7B,SAAO,cAAW,UAAU,KAAG,OAAA,OAAA,OAAA,OAAA,CAAA,GAAO,OAAO,GAAA,EAAE,QAAO,CAAA,CAAA;AACxD;AAEA,IAAMG,iBAKF;EACF,YAAY;EACZ,wBAAwB;EACxB,SAAS;;AAGX,SAASC,cACP,eAA+C;;AAE/C,QAAM,EACJ,cAAc,EACZ,SACA,QACA,SACA,kBACA,QACA,YACA,QACA,QAAQ,UACR,WAAU,GAEZ,YACA,eACA,YACA,uBAAsB,IACvB,OAAA,OAAA,OAAA,OAAA,CAAA,GACID,cAAa,GACb,aAAa;AAElB,QAAM,gBAAgB,IAAI,IAAI,YAAY,OAAO,SAAS,IAAI;AAC9D,QAAME,WAAiC,cAAc,UAClD,OAAA,OAAA,EACG,KAAK,MACL,KAAK,MACL,UAAU,cAAa,GACnB,cAAc,YAAY,OAAO,CAAA,IAAK,cAAc,OAAQ,IAElE;AAEJ,QAAM,EAAE,YAAY,WAAW,YAAW,IAAK,0BAAkB;IAC/D;IACA;IACA;IACA;IACA,UAASC,MAAA,cAAc,aAAO,QAAAA,QAAA,SAAAA,MAAI;GACnC;AAED,SAAO;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ;IACR;IACA;IACA,WAAW,CAAC,aAAa,aAAY;AACnC,WAAID,aAAO,QAAPA,aAAO,SAAA,SAAPA,SAAS,SAAQ,MAAM;AACzB,eAAO,QAAQ,QAAQ,EAAE,MAAM,KAAI,CAAE;MACvC;AAEA,aAAO,UAAU,aAAa,QAAQ;IACxC;IACA;;AAEJ;AAEA,IAAAE,wBAAeH;;;AC/Ff,IAAAI,iBAAkB;;;ACYlB,IAAMC,0BAAyB,CAAC,WAAoB;;AAClD,MAAI,GAACC,MAAA,OAAO,YAAM,QAAAA,QAAA,SAAA,SAAAA,IAAG,CAAC,IAAG;AACvB,WAAO;EACT;AAEA,MAAI,OAAO,OAAO,KAAK,CAAC,gBAAgB,YAAY,SAAS,IAAI,GAAG;AAClE,WAAO;EACT;AAEA,SAAO,OAAO,OAAO,CAAC,EAAE;AAC1B;AAKA,IAAMC,gBAAe,CAAC,UAAgB;AACpC,UAAQ,MAAM,MAAM;IAClB,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO;EACX;AACF;AAEA,IAAMC,uBAAsB,MAAM;AAEpB,SAAPC,kBAA+B;AACpC,SAAO;IACL,wBAAAJ;IACA;IACA;IACA,cAAAE;IACA,qBAAAC;;AAEJ;;;;;;;;;;;;;;ADzDA,IAAM,wBAAwBE,gBAAc;AAE5C,IAAM,eAAe,CAACC,QAYE;MAZF,EACpB,YACA,eACA,SAAAC,UACA,cAAAC,gBAAeC,sBAAoB;IACjC,cAAc,yBAAiB,UAAU;IACzC;IACA;IACA,SAASF,aAAO,QAAPA,aAAO,SAAPA,WAAW;GACrB,GACD,gBAAgB,sBAAsB,sBAAqB,IAAAD,KACxD,QAAKI,SAAAJ,KAXY,CAAA,cAAA,iBAAA,WAAA,gBAAA,gBAAA,CAYrB;AAAwB,SACvB,eAAAK,QAAA,cAAC,sBAAY,OAAA,OAAA,EACX,cAAcH,eACd,gBAAgB,oBAAmB,GAC/B,KAAK,CAAA;;AAIb,IAAA,uBAAe;",
  "names": ["isPlainObject", "getIntrospectionQuery", "Kind", "OperationTypeNode", "DirectiveLocation", "TokenKind", "escape", "instanceOf", "parse", "enumValue", "TypeKind", "document", "document", "getType", "document", "require_validate", "document", "BreakingChangeType", "DangerousChangeType", "global", "undefined", "setImmediate", "resolve", "resolve", "self", "resolve", "jsonld", "self", "get", "self", "document", "resolved", "require_NQuads", "process", "validKeys", "id", "key", "rval", "key", "val", "types", "node", "datatype", "subframe", "subject", "id", "rval", "ctx", "types", "type", "jsonld", "jsonld", "require_lodash", "Symbol", "Map", "string", "get", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "dataProvider", "import_react", "_a", "schemaAnalyzer", "React", "_a", "__rest", "schemaAnalyzer", "React", "import_react", "_a", "__rest", "React", "schemaAnalyzer", "React", "_a", "__rest", "_b", "import_react", "import_react", "schemaAnalyzer", "_a", "schemaAnalyzer", "__rest", "_b", "filter", "page", "perPage", "sort", "enableGetChoices", "rest", "React", "parse", "isPlainObject", "_a", "schemaAnalyzer", "__rest", "React", "import_react", "mercure", "document", "mercure", "apiSchema", "__awaiter", "_a", "_b", "import_react", "dataProvider", "document", "import_react", "React", "_a", "schemaAnalyzer", "__rest", "import_react", "import_react", "import_lodash", "lodashIsPlainObject", "schemaAnalyzer", "__awaiter", "_a", "_b", "getOverrideCode", "_a", "schemaAnalyzer", "__rest", "React", "import_react", "getOverrideCode", "_a", "schemaAnalyzer", "__rest", "React", "import_react", "getOverrideCode", "_a", "schemaAnalyzer", "__rest", "React", "_a", "schemaAnalyzer", "__rest", "_b", "React", "import_react", "React", "getOverrideCode", "_a", "__rest", "React", "import_react", "import_react", "import_react", "React", "Error", "_a", "__rest", "React", "ExpandMoreIcon", "RefreshIcon", "HistoryIcon", "import_react", "import_react", "import_react", "React", "AppBar", "_a", "__rest", "React", "React", "import_react", "React", "_a", "schemaAnalyzer", "dataProvider", "defaultTheme", "darkTheme", "__rest", "React", "import_react", "import_lodash", "required", "Resource", "import_lodash", "import_lodash", "get", "required", "get", "jsonld", "removeTrailingSlash", "Resource", "obj", "resolve", "obj", "missingRefs", "resolve", "import_lodash", "import_inflection", "getType", "inflection", "getType_default", "isRef", "removeTrailingSlash", "_a", "_b", "getType_default", "inflection", "Resource", "document", "get", "removeTrailingSlash", "import_lodash", "import_inflection", "import_jsonld", "_a", "jsonld", "_b", "_a", "isPlainObject", "lodashIsPlainObject", "document", "mercure", "findFile", "_a", "_b", "__awaiter", "import_react", "_a", "_b", "_a", "mercure", "dataProvider", "__rest", "React", "defaultParams", "dataProvider", "mercure", "_a", "dataProvider_default", "import_react", "getFieldNameFromSchema", "_a", "getFieldType", "getSubmissionErrors", "schemaAnalyzer", "schemaAnalyzer", "_a", "mercure", "dataProvider", "dataProvider_default", "__rest", "React"]
}
