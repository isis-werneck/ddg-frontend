import {
  IconButton_default,
  InputAdornment_default,
  TextField_default,
  Typography_default
} from "./chunk-JTBHIBOX.js";
import {
  styled_default
} from "./chunk-HFPPQGHU.js";
import "./chunk-276SZO74.js";
import {
  require_jsx_runtime
} from "./chunk-CRNJR6QK.js";
import "./chunk-CFMGK5OC.js";
import "./chunk-QZVMM6GT.js";
import {
  require_react
} from "./chunk-ZMLY2J2T.js";
import {
  __toESM
} from "./chunk-4B2QHNJT.js";

// node_modules/mui-file-input/dist/mui-file-input.es.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var Z = [
  "B",
  "kB",
  "MB",
  "GB",
  "TB",
  "PB",
  "EB",
  "ZB",
  "YB"
];
var _ = [
  "B",
  "KiB",
  "MiB",
  "GiB",
  "TiB",
  "PiB",
  "EiB",
  "ZiB",
  "YiB"
];
var j = [
  "b",
  "kbit",
  "Mbit",
  "Gbit",
  "Tbit",
  "Pbit",
  "Ebit",
  "Zbit",
  "Ybit"
];
var O = [
  "b",
  "kibit",
  "Mibit",
  "Gibit",
  "Tibit",
  "Pibit",
  "Eibit",
  "Zibit",
  "Yibit"
];
var F = (t, i, e) => {
  let n = t;
  return typeof i == "string" || Array.isArray(i) ? n = t.toLocaleString(i, e) : (i === true || e !== void 0) && (n = t.toLocaleString(void 0, e)), n;
};
function A(t, i) {
  if (!Number.isFinite(t))
    throw new TypeError(`Expected a finite number, got ${typeof t}: ${t}`);
  i = {
    bits: false,
    binary: false,
    space: true,
    ...i
  };
  const e = i.bits ? i.binary ? O : j : i.binary ? _ : Z, n = i.space ? " " : "";
  if (i.signed && t === 0)
    return ` 0${n}${e[0]}`;
  const r = t < 0, c = r ? "-" : i.signed ? "+" : "";
  r && (t = -t);
  let l;
  if (i.minimumFractionDigits !== void 0 && (l = { minimumFractionDigits: i.minimumFractionDigits }), i.maximumFractionDigits !== void 0 && (l = { maximumFractionDigits: i.maximumFractionDigits, ...l }), t < 1) {
    const f = F(t, i.locale, l);
    return c + f + n + e[0];
  }
  const u = Math.min(Math.floor(i.binary ? Math.log(t) / Math.log(1024) : Math.log10(t) / 3), e.length - 1);
  t /= (i.binary ? 1024 : 1e3) ** u, l || (t = t.toPrecision(3));
  const g = F(Number(t), i.locale, l), d = e[u];
  return c + g + n + d;
}
var W = styled_default("label")`
  position: relative;
  flex-grow: 1;

  input {
    opacity: 0 !important;
  }

  & > span {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 2;
    display: flex;
    align-items: center;
  }

  span.MuiFileInput-placeholder {
    color: gray;
  }
`;
var H = styled_default("div")`
  display: flex;
  width: 100%;

  & > span {
    display: block;
  }

  & > span:first-of-type {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
  }

  & > span:last-of-type {
    flex-shrink: 0;
    display: block;
  }
`;
var M = {
  Label: W,
  Filename: H
};
var K = ({ text: t, isPlaceholder: i, placeholder: e, ...n }, r) => (0, import_jsx_runtime.jsxs)(M.Label, { children: [
  (0, import_jsx_runtime.jsx)("input", { ...n, ref: r }),
  t ? (0, import_jsx_runtime.jsx)(
    "span",
    {
      "aria-placeholder": e,
      className: i ? "MuiFileInput-placeholder" : "",
      children: typeof t == "string" ? t : (0, import_jsx_runtime.jsxs)(M.Filename, { children: [
        (0, import_jsx_runtime.jsx)("span", { children: t.filename }),
        (0, import_jsx_runtime.jsxs)("span", { children: [
          ".",
          t.extension
        ] })
      ] })
    }
  ) : null
] });
var V = import_react.default.forwardRef(K);
function q(t) {
  return t.length > 0;
}
function J(t) {
  return t.reduce((i, e) => i + e.size, 0);
}
function B(t) {
  return typeof window < "u" && t instanceof File;
}
function Q(t) {
  return Array.from(t);
}
function X(t) {
  var _a;
  const e = (B(t) ? t.name : ((_a = t[0]) == null ? void 0 : _a.name) || "").split("."), n = e.pop();
  return {
    filename: e.join("."),
    extension: n
  };
}
var tt = typeof window < "u" ? import_react.default.useLayoutEffect : import_react.default.useEffect;
var at = import_react.default.forwardRef(
  (t, i) => {
    var _a;
    const {
      value: e,
      onChange: n,
      disabled: r,
      getInputText: c,
      getSizeText: l,
      placeholder: u,
      hideSizeText: g,
      inputProps: d,
      InputProps: f,
      multiple: I,
      className: P,
      clearIconButtonProps: S = {},
      ...E
    } = t, { className: w = "", ...v } = S, m = import_react.default.useRef(null), { startAdornment: C, ...z } = f || {}, L = I || (d == null ? void 0 : d.multiple) || ((_a = f == null ? void 0 : f.inputProps) == null ? void 0 : _a.multiple) || false, T = () => {
      m.current && (m.current.value = "");
    }, D = (o) => {
      const x = o.target.files, y = x ? Q(x) : [];
      I ? (n == null ? void 0 : n(y), y.length === 0 && T()) : (n == null ? void 0 : n(y[0] || null), y[0] || T());
    }, $ = (o) => {
      o.preventDefault(), !r && (n == null ? void 0 : n(I ? [] : null));
    }, a = Array.isArray(e) ? q(e) : B(e);
    tt(() => {
      const o = m.current;
      o && !a && (o.value = "");
    }, [a]);
    const k = () => e === null || Array.isArray(e) && e.length === 0 ? u || "" : typeof c == "function" && e !== void 0 ? c(e) : e && a ? Array.isArray(e) && e.length > 1 ? `${e.length} files` : X(e) : "", Y = () => {
      if (typeof l == "function" && e !== void 0)
        return l(e);
      if (a) {
        if (Array.isArray(e)) {
          const o = J(e);
          return A(o);
        }
        if (B(e))
          return A(e.size);
      }
      return "";
    };
    return (0, import_jsx_runtime.jsx)(
      TextField_default,
      {
        ref: i,
        type: "file",
        disabled: r,
        onChange: D,
        className: `MuiFileInput-TextField ${P || ""}`,
        InputProps: {
          startAdornment: (0, import_jsx_runtime.jsx)(InputAdornment_default, { position: "start", children: C }),
          endAdornment: (0, import_jsx_runtime.jsxs)(
            InputAdornment_default,
            {
              position: "end",
              style: { visibility: a ? "visible" : "hidden" },
              children: [
                g ? null : (0, import_jsx_runtime.jsx)(
                  Typography_default,
                  {
                    variant: "caption",
                    mr: "2px",
                    lineHeight: 1,
                    className: "MuiFileInput-Typography-size-text",
                    children: Y()
                  }
                ),
                (0, import_jsx_runtime.jsx)(
                  IconButton_default,
                  {
                    "aria-label": "Clear",
                    title: "Clear",
                    size: "small",
                    disabled: r,
                    className: `${w} MuiFileInput-ClearIconButton`,
                    onClick: $,
                    ...v
                  }
                )
              ]
            }
          ),
          ...z,
          inputProps: {
            text: k(),
            multiple: L,
            ref: m,
            isPlaceholder: !a,
            placeholder: u,
            ...d,
            ...f == null ? void 0 : f.inputProps
          },
          // @ts-expect-error
          inputComponent: V
        },
        ...E
      }
    );
  }
);
export {
  at as MuiFileInput
};
//# sourceMappingURL=mui-file-input.js.map
